/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.cartera.presentation.swing.jinternalframes;


import java.sql.Time;


import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.cartera.util.ClienteConstantesFunciones;
import com.bydan.erp.cartera.util.ClienteParameterReturnGeneral;
//import com.bydan.erp.cartera.util.ClienteParameterGeneral;
//import com.bydan.erp.cartera.presentation.report.source.ClienteBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.cartera.resources.reportes.AuxiliarReportes;


import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.sris.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.puntoventa.business.logic.*;
import com.bydan.erp.activosfijos.business.logic.*;
import com.bydan.erp.importaciones.business.logic.*;
import com.bydan.erp.produccion.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.cartera.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.*;
import com.bydan.erp.activosfijos.presentation.swing.jinternalframes.*;
import com.bydan.erp.importaciones.presentation.swing.jinternalframes.*;
import com.bydan.erp.produccion.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.sris.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.activosfijos.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.importaciones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.produccion.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.sris.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.puntoventa.business.entity.*;
import com.bydan.erp.activosfijos.business.entity.*;
import com.bydan.erp.importaciones.business.entity.*;
import com.bydan.erp.produccion.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.sris.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.puntoventa.util.*;
import com.bydan.erp.activosfijos.util.*;
import com.bydan.erp.importaciones.util.*;
import com.bydan.erp.produccion.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.sris.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.puntoventa.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.activosfijos.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.importaciones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.produccion.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ClienteBeanSwingJInternalFrame extends ClienteJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ClienteBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Cliente> clienteValidator = new ClassValidator<Cliente>(Cliente.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Cliente cliente;	
	public Cliente clienteAux;
	public Cliente clienteAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Cliente clienteTotales;
	public Long idClienteActual;
	public Long iIdNuevoCliente=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboTipoIdentificacion="";

	public List<TipoIdentificacion> tipoidentificacionsForeignKey;

	public List<TipoIdentificacion> gettipoidentificacionsForeignKey() {
		return tipoidentificacionsForeignKey;
	}

	public void settipoidentificacionsForeignKey(List<TipoIdentificacion> tipoidentificacionsForeignKey) {
		this.tipoidentificacionsForeignKey = tipoidentificacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoIdentificacion tipoidentificacionForeignKey;

	public TipoIdentificacion gettipoidentificacionForeignKey() {
		return tipoidentificacionForeignKey;
	}

	public void settipoidentificacionForeignKey(TipoIdentificacion tipoidentificacionForeignKey) {
		this.tipoidentificacionForeignKey = tipoidentificacionForeignKey;
	}

	public String sFinalQueryComboGrupoCliente="";

	public List<GrupoCliente> grupoclientesForeignKey;

	public List<GrupoCliente> getgrupoclientesForeignKey() {
		return grupoclientesForeignKey;
	}

	public void setgrupoclientesForeignKey(List<GrupoCliente> grupoclientesForeignKey) {
		this.grupoclientesForeignKey = grupoclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public GrupoCliente grupoclienteForeignKey;

	public GrupoCliente getgrupoclienteForeignKey() {
		return grupoclienteForeignKey;
	}

	public void setgrupoclienteForeignKey(GrupoCliente grupoclienteForeignKey) {
		this.grupoclienteForeignKey = grupoclienteForeignKey;
	}

	public String sFinalQueryComboTituloCliente="";

	public List<TituloCliente> tituloclientesForeignKey;

	public List<TituloCliente> gettituloclientesForeignKey() {
		return tituloclientesForeignKey;
	}

	public void settituloclientesForeignKey(List<TituloCliente> tituloclientesForeignKey) {
		this.tituloclientesForeignKey = tituloclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TituloCliente tituloclienteForeignKey;

	public TituloCliente gettituloclienteForeignKey() {
		return tituloclienteForeignKey;
	}

	public void settituloclienteForeignKey(TituloCliente tituloclienteForeignKey) {
		this.tituloclienteForeignKey = tituloclienteForeignKey;
	}

	public String sFinalQueryComboAreaCr="";

	public List<AreaCr> areacrsForeignKey;

	public List<AreaCr> getareacrsForeignKey() {
		return areacrsForeignKey;
	}

	public void setareacrsForeignKey(List<AreaCr> areacrsForeignKey) {
		this.areacrsForeignKey = areacrsForeignKey;
	}

	//OBJETO FK ACTUAL
	public AreaCr areacrForeignKey;

	public AreaCr getareacrForeignKey() {
		return areacrForeignKey;
	}

	public void setareacrForeignKey(AreaCr areacrForeignKey) {
		this.areacrForeignKey = areacrForeignKey;
	}

	public String sFinalQueryComboEstadoCliente="";

	public List<EstadoCliente> estadoclientesForeignKey;

	public List<EstadoCliente> getestadoclientesForeignKey() {
		return estadoclientesForeignKey;
	}

	public void setestadoclientesForeignKey(List<EstadoCliente> estadoclientesForeignKey) {
		this.estadoclientesForeignKey = estadoclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoCliente estadoclienteForeignKey;

	public EstadoCliente getestadoclienteForeignKey() {
		return estadoclienteForeignKey;
	}

	public void setestadoclienteForeignKey(EstadoCliente estadoclienteForeignKey) {
		this.estadoclienteForeignKey = estadoclienteForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboRegion="";

	public List<Region> regionsForeignKey;

	public List<Region> getregionsForeignKey() {
		return regionsForeignKey;
	}

	public void setregionsForeignKey(List<Region> regionsForeignKey) {
		this.regionsForeignKey = regionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Region regionForeignKey;

	public Region getregionForeignKey() {
		return regionForeignKey;
	}

	public void setregionForeignKey(Region regionForeignKey) {
		this.regionForeignKey = regionForeignKey;
	}

	public String sFinalQueryComboProvincia="";

	public List<Provincia> provinciasForeignKey;

	public List<Provincia> getprovinciasForeignKey() {
		return provinciasForeignKey;
	}

	public void setprovinciasForeignKey(List<Provincia> provinciasForeignKey) {
		this.provinciasForeignKey = provinciasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Provincia provinciaForeignKey;

	public Provincia getprovinciaForeignKey() {
		return provinciaForeignKey;
	}

	public void setprovinciaForeignKey(Provincia provinciaForeignKey) {
		this.provinciaForeignKey = provinciaForeignKey;
	}

	public String sFinalQueryComboCiudad="";

	public List<Ciudad> ciudadsForeignKey;

	public List<Ciudad> getciudadsForeignKey() {
		return ciudadsForeignKey;
	}

	public void setciudadsForeignKey(List<Ciudad> ciudadsForeignKey) {
		this.ciudadsForeignKey = ciudadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadForeignKey;

	public Ciudad getciudadForeignKey() {
		return ciudadForeignKey;
	}

	public void setciudadForeignKey(Ciudad ciudadForeignKey) {
		this.ciudadForeignKey = ciudadForeignKey;
	}

	public String sFinalQueryComboZona="";

	public List<Zona> zonasForeignKey;

	public List<Zona> getzonasForeignKey() {
		return zonasForeignKey;
	}

	public void setzonasForeignKey(List<Zona> zonasForeignKey) {
		this.zonasForeignKey = zonasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Zona zonaForeignKey;

	public Zona getzonaForeignKey() {
		return zonaForeignKey;
	}

	public void setzonaForeignKey(Zona zonaForeignKey) {
		this.zonaForeignKey = zonaForeignKey;
	}

	public String sFinalQueryComboPaisNacionalidad="";

	public List<Pais> paisnacionalidadsForeignKey;

	public List<Pais> getpaisnacionalidadsForeignKey() {
		return paisnacionalidadsForeignKey;
	}

	public void setpaisnacionalidadsForeignKey(List<Pais> paisnacionalidadsForeignKey) {
		this.paisnacionalidadsForeignKey = paisnacionalidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisnacionalidadForeignKey;

	public Pais getpaisnacionalidadForeignKey() {
		return paisnacionalidadForeignKey;
	}

	public void setpaisnacionalidadForeignKey(Pais paisnacionalidadForeignKey) {
		this.paisnacionalidadForeignKey = paisnacionalidadForeignKey;
	}

	public String sFinalQueryComboTipoCargoLabo="";

	public List<TipoCargoLabo> tipocargolabosForeignKey;

	public List<TipoCargoLabo> gettipocargolabosForeignKey() {
		return tipocargolabosForeignKey;
	}

	public void settipocargolabosForeignKey(List<TipoCargoLabo> tipocargolabosForeignKey) {
		this.tipocargolabosForeignKey = tipocargolabosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCargoLabo tipocargolaboForeignKey;

	public TipoCargoLabo gettipocargolaboForeignKey() {
		return tipocargolaboForeignKey;
	}

	public void settipocargolaboForeignKey(TipoCargoLabo tipocargolaboForeignKey) {
		this.tipocargolaboForeignKey = tipocargolaboForeignKey;
	}

	public String sFinalQueryComboTipoNivelEdu="";

	public List<TipoNivelEdu> tiponiveledusForeignKey;

	public List<TipoNivelEdu> gettiponiveledusForeignKey() {
		return tiponiveledusForeignKey;
	}

	public void settiponiveledusForeignKey(List<TipoNivelEdu> tiponiveledusForeignKey) {
		this.tiponiveledusForeignKey = tiponiveledusForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoNivelEdu tiponiveleduForeignKey;

	public TipoNivelEdu gettiponiveleduForeignKey() {
		return tiponiveleduForeignKey;
	}

	public void settiponiveleduForeignKey(TipoNivelEdu tiponiveleduForeignKey) {
		this.tiponiveleduForeignKey = tiponiveleduForeignKey;
	}

	public String sFinalQueryComboProfesion="";

	public List<Profesion> profesionsForeignKey;

	public List<Profesion> getprofesionsForeignKey() {
		return profesionsForeignKey;
	}

	public void setprofesionsForeignKey(List<Profesion> profesionsForeignKey) {
		this.profesionsForeignKey = profesionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Profesion profesionForeignKey;

	public Profesion getprofesionForeignKey() {
		return profesionForeignKey;
	}

	public void setprofesionForeignKey(Profesion profesionForeignKey) {
		this.profesionForeignKey = profesionForeignKey;
	}

	public String sFinalQueryComboTipoGenero="";

	public List<TipoGenero> tipogenerosForeignKey;

	public List<TipoGenero> gettipogenerosForeignKey() {
		return tipogenerosForeignKey;
	}

	public void settipogenerosForeignKey(List<TipoGenero> tipogenerosForeignKey) {
		this.tipogenerosForeignKey = tipogenerosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGenero tipogeneroForeignKey;

	public TipoGenero gettipogeneroForeignKey() {
		return tipogeneroForeignKey;
	}

	public void settipogeneroForeignKey(TipoGenero tipogeneroForeignKey) {
		this.tipogeneroForeignKey = tipogeneroForeignKey;
	}

	public String sFinalQueryComboEstadoCivil="";

	public List<EstadoCivil> estadocivilsForeignKey;

	public List<EstadoCivil> getestadocivilsForeignKey() {
		return estadocivilsForeignKey;
	}

	public void setestadocivilsForeignKey(List<EstadoCivil> estadocivilsForeignKey) {
		this.estadocivilsForeignKey = estadocivilsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoCivil estadocivilForeignKey;

	public EstadoCivil getestadocivilForeignKey() {
		return estadocivilForeignKey;
	}

	public void setestadocivilForeignKey(EstadoCivil estadocivilForeignKey) {
		this.estadocivilForeignKey = estadocivilForeignKey;
	}

	public String sFinalQueryComboEstadoLegal="";

	public List<EstadoLegal> estadolegalsForeignKey;

	public List<EstadoLegal> getestadolegalsForeignKey() {
		return estadolegalsForeignKey;
	}

	public void setestadolegalsForeignKey(List<EstadoLegal> estadolegalsForeignKey) {
		this.estadolegalsForeignKey = estadolegalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoLegal estadolegalForeignKey;

	public EstadoLegal getestadolegalForeignKey() {
		return estadolegalForeignKey;
	}

	public void setestadolegalForeignKey(EstadoLegal estadolegalForeignKey) {
		this.estadolegalForeignKey = estadolegalForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboRuta="";

	public List<Ruta> rutasForeignKey;

	public List<Ruta> getrutasForeignKey() {
		return rutasForeignKey;
	}

	public void setrutasForeignKey(List<Ruta> rutasForeignKey) {
		this.rutasForeignKey = rutasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ruta rutaForeignKey;

	public Ruta getrutaForeignKey() {
		return rutaForeignKey;
	}

	public void setrutaForeignKey(Ruta rutaForeignKey) {
		this.rutaForeignKey = rutaForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboCentroActividad="";

	public List<CentroActividad> centroactividadsForeignKey;

	public List<CentroActividad> getcentroactividadsForeignKey() {
		return centroactividadsForeignKey;
	}

	public void setcentroactividadsForeignKey(List<CentroActividad> centroactividadsForeignKey) {
		this.centroactividadsForeignKey = centroactividadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroActividad centroactividadForeignKey;

	public CentroActividad getcentroactividadForeignKey() {
		return centroactividadForeignKey;
	}

	public void setcentroactividadForeignKey(CentroActividad centroactividadForeignKey) {
		this.centroactividadForeignKey = centroactividadForeignKey;
	}

	public String sFinalQueryComboTipoGarantiaEmpresa="";

	public List<TipoGarantiaEmpresa> tipogarantiaempresasForeignKey;

	public List<TipoGarantiaEmpresa> gettipogarantiaempresasForeignKey() {
		return tipogarantiaempresasForeignKey;
	}

	public void settipogarantiaempresasForeignKey(List<TipoGarantiaEmpresa> tipogarantiaempresasForeignKey) {
		this.tipogarantiaempresasForeignKey = tipogarantiaempresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGarantiaEmpresa tipogarantiaempresaForeignKey;

	public TipoGarantiaEmpresa gettipogarantiaempresaForeignKey() {
		return tipogarantiaempresaForeignKey;
	}

	public void settipogarantiaempresaForeignKey(TipoGarantiaEmpresa tipogarantiaempresaForeignKey) {
		this.tipogarantiaempresaForeignKey = tipogarantiaempresaForeignKey;
	}

	public String sFinalQueryComboCateTipoAfiliacion="";

	public List<CateTipoAfiliacion> catetipoafiliacionsForeignKey;

	public List<CateTipoAfiliacion> getcatetipoafiliacionsForeignKey() {
		return catetipoafiliacionsForeignKey;
	}

	public void setcatetipoafiliacionsForeignKey(List<CateTipoAfiliacion> catetipoafiliacionsForeignKey) {
		this.catetipoafiliacionsForeignKey = catetipoafiliacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CateTipoAfiliacion catetipoafiliacionForeignKey;

	public CateTipoAfiliacion getcatetipoafiliacionForeignKey() {
		return catetipoafiliacionForeignKey;
	}

	public void setcatetipoafiliacionForeignKey(CateTipoAfiliacion catetipoafiliacionForeignKey) {
		this.catetipoafiliacionForeignKey = catetipoafiliacionForeignKey;
	}

	public String sFinalQueryComboDia="";

	public List<Dia> diasForeignKey;

	public List<Dia> getdiasForeignKey() {
		return diasForeignKey;
	}

	public void setdiasForeignKey(List<Dia> diasForeignKey) {
		this.diasForeignKey = diasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Dia diaForeignKey;

	public Dia getdiaForeignKey() {
		return diaForeignKey;
	}

	public void setdiaForeignKey(Dia diaForeignKey) {
		this.diaForeignKey = diaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboTipoPrecio="";

	public List<TipoPrecio> tipopreciosForeignKey;

	public List<TipoPrecio> gettipopreciosForeignKey() {
		return tipopreciosForeignKey;
	}

	public void settipopreciosForeignKey(List<TipoPrecio> tipopreciosForeignKey) {
		this.tipopreciosForeignKey = tipopreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPrecio tipoprecioForeignKey;

	public TipoPrecio gettipoprecioForeignKey() {
		return tipoprecioForeignKey;
	}

	public void settipoprecioForeignKey(TipoPrecio tipoprecioForeignKey) {
		this.tipoprecioForeignKey = tipoprecioForeignKey;
	}

	public String sFinalQueryComboTipoListaPrecio="";

	public List<TipoListaPrecio> tipolistapreciosForeignKey;

	public List<TipoListaPrecio> gettipolistapreciosForeignKey() {
		return tipolistapreciosForeignKey;
	}

	public void settipolistapreciosForeignKey(List<TipoListaPrecio> tipolistapreciosForeignKey) {
		this.tipolistapreciosForeignKey = tipolistapreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoListaPrecio tipolistaprecioForeignKey;

	public TipoListaPrecio gettipolistaprecioForeignKey() {
		return tipolistaprecioForeignKey;
	}

	public void settipolistaprecioForeignKey(TipoListaPrecio tipolistaprecioForeignKey) {
		this.tipolistaprecioForeignKey = tipolistaprecioForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	
	

	public Boolean isTienePermisosInformacionLaboral=false;

	public Boolean getIsTienePermisosInformacionLaboral() {
		return isTienePermisosInformacionLaboral;
	}

	public void setIsTienePermisosInformacionLaboral(Boolean isTienePermisosInformacionLaboral) {
		this.isTienePermisosInformacionLaboral= isTienePermisosInformacionLaboral;
	}


	public Boolean isTienePermisosTransportista=false;

	public Boolean getIsTienePermisosTransportista() {
		return isTienePermisosTransportista;
	}

	public void setIsTienePermisosTransportista(Boolean isTienePermisosTransportista) {
		this.isTienePermisosTransportista= isTienePermisosTransportista;
	}


	public Boolean isTienePermisosNovedad=false;

	public Boolean getIsTienePermisosNovedad() {
		return isTienePermisosNovedad;
	}

	public void setIsTienePermisosNovedad(Boolean isTienePermisosNovedad) {
		this.isTienePermisosNovedad= isTienePermisosNovedad;
	}


	public Boolean isTienePermisosPoliticasCliente=false;

	public Boolean getIsTienePermisosPoliticasCliente() {
		return isTienePermisosPoliticasCliente;
	}

	public void setIsTienePermisosPoliticasCliente(Boolean isTienePermisosPoliticasCliente) {
		this.isTienePermisosPoliticasCliente= isTienePermisosPoliticasCliente;
	}


	public Boolean isTienePermisosReferenciaPersonal=false;

	public Boolean getIsTienePermisosReferenciaPersonal() {
		return isTienePermisosReferenciaPersonal;
	}

	public void setIsTienePermisosReferenciaPersonal(Boolean isTienePermisosReferenciaPersonal) {
		this.isTienePermisosReferenciaPersonal= isTienePermisosReferenciaPersonal;
	}


	public Boolean isTienePermisosBalanceGeneralCliente=false;

	public Boolean getIsTienePermisosBalanceGeneralCliente() {
		return isTienePermisosBalanceGeneralCliente;
	}

	public void setIsTienePermisosBalanceGeneralCliente(Boolean isTienePermisosBalanceGeneralCliente) {
		this.isTienePermisosBalanceGeneralCliente= isTienePermisosBalanceGeneralCliente;
	}


	public Boolean isTienePermisosPoliticaCliente=false;

	public Boolean getIsTienePermisosPoliticaCliente() {
		return isTienePermisosPoliticaCliente;
	}

	public void setIsTienePermisosPoliticaCliente(Boolean isTienePermisosPoliticaCliente) {
		this.isTienePermisosPoliticaCliente= isTienePermisosPoliticaCliente;
	}


	public Boolean isTienePermisosVehiculoCliente=false;

	public Boolean getIsTienePermisosVehiculoCliente() {
		return isTienePermisosVehiculoCliente;
	}

	public void setIsTienePermisosVehiculoCliente(Boolean isTienePermisosVehiculoCliente) {
		this.isTienePermisosVehiculoCliente= isTienePermisosVehiculoCliente;
	}


	public Boolean isTienePermisosResponsable=false;

	public Boolean getIsTienePermisosResponsable() {
		return isTienePermisosResponsable;
	}

	public void setIsTienePermisosResponsable(Boolean isTienePermisosResponsable) {
		this.isTienePermisosResponsable= isTienePermisosResponsable;
	}


	public Boolean isTienePermisosInformacionFinanciera=false;

	public Boolean getIsTienePermisosInformacionFinanciera() {
		return isTienePermisosInformacionFinanciera;
	}

	public void setIsTienePermisosInformacionFinanciera(Boolean isTienePermisosInformacionFinanciera) {
		this.isTienePermisosInformacionFinanciera= isTienePermisosInformacionFinanciera;
	}


	public Boolean isTienePermisosConsignatario=false;

	public Boolean getIsTienePermisosConsignatario() {
		return isTienePermisosConsignatario;
	}

	public void setIsTienePermisosConsignatario(Boolean isTienePermisosConsignatario) {
		this.isTienePermisosConsignatario= isTienePermisosConsignatario;
	}


	public Boolean isTienePermisosClienteImagen=false;

	public Boolean getIsTienePermisosClienteImagen() {
		return isTienePermisosClienteImagen;
	}

	public void setIsTienePermisosClienteImagen(Boolean isTienePermisosClienteImagen) {
		this.isTienePermisosClienteImagen= isTienePermisosClienteImagen;
	}


	public Boolean isTienePermisosGarantiaCliente=false;

	public Boolean getIsTienePermisosGarantiaCliente() {
		return isTienePermisosGarantiaCliente;
	}

	public void setIsTienePermisosGarantiaCliente(Boolean isTienePermisosGarantiaCliente) {
		this.isTienePermisosGarantiaCliente= isTienePermisosGarantiaCliente;
	}


	public Boolean isTienePermisosInformacionEconomica=false;

	public Boolean getIsTienePermisosInformacionEconomica() {
		return isTienePermisosInformacionEconomica;
	}

	public void setIsTienePermisosInformacionEconomica(Boolean isTienePermisosInformacionEconomica) {
		this.isTienePermisosInformacionEconomica= isTienePermisosInformacionEconomica;
	}


	public Boolean isTienePermisosReferenciaComercial=false;

	public Boolean getIsTienePermisosReferenciaComercial() {
		return isTienePermisosReferenciaComercial;
	}

	public void setIsTienePermisosReferenciaComercial(Boolean isTienePermisosReferenciaComercial) {
		this.isTienePermisosReferenciaComercial= isTienePermisosReferenciaComercial;
	}


	public Boolean isTienePermisosBien=false;

	public Boolean getIsTienePermisosBien() {
		return isTienePermisosBien;
	}

	public void setIsTienePermisosBien(Boolean isTienePermisosBien) {
		this.isTienePermisosBien= isTienePermisosBien;
	}


	public Boolean isTienePermisosProveedorProducto=false;

	public Boolean getIsTienePermisosProveedorProducto() {
		return isTienePermisosProveedorProducto;
	}

	public void setIsTienePermisosProveedorProducto(Boolean isTienePermisosProveedorProducto) {
		this.isTienePermisosProveedorProducto= isTienePermisosProveedorProducto;
	}


	public Boolean isTienePermisosServicioCliente=false;

	public Boolean getIsTienePermisosServicioCliente() {
		return isTienePermisosServicioCliente;
	}

	public void setIsTienePermisosServicioCliente(Boolean isTienePermisosServicioCliente) {
		this.isTienePermisosServicioCliente= isTienePermisosServicioCliente;
	}


	public Boolean isTienePermisosContactoCliente=false;

	public Boolean getIsTienePermisosContactoCliente() {
		return isTienePermisosContactoCliente;
	}

	public void setIsTienePermisosContactoCliente(Boolean isTienePermisosContactoCliente) {
		this.isTienePermisosContactoCliente= isTienePermisosContactoCliente;
	}


	public Boolean isTienePermisosDatoConstitucion=false;

	public Boolean getIsTienePermisosDatoConstitucion() {
		return isTienePermisosDatoConstitucion;
	}

	public void setIsTienePermisosDatoConstitucion(Boolean isTienePermisosDatoConstitucion) {
		this.isTienePermisosDatoConstitucion= isTienePermisosDatoConstitucion;
	}


	public Boolean isTienePermisosClienteCoa=false;

	public Boolean getIsTienePermisosClienteCoa() {
		return isTienePermisosClienteCoa;
	}

	public void setIsTienePermisosClienteCoa(Boolean isTienePermisosClienteCoa) {
		this.isTienePermisosClienteCoa= isTienePermisosClienteCoa;
	}


	public Boolean isTienePermisosHobbyCliente=false;

	public Boolean getIsTienePermisosHobbyCliente() {
		return isTienePermisosHobbyCliente;
	}

	public void setIsTienePermisosHobbyCliente(Boolean isTienePermisosHobbyCliente) {
		this.isTienePermisosHobbyCliente= isTienePermisosHobbyCliente;
	}


	public Boolean isTienePermisosCargaFamiliar=false;

	public Boolean getIsTienePermisosCargaFamiliar() {
		return isTienePermisosCargaFamiliar;
	}

	public void setIsTienePermisosCargaFamiliar(Boolean isTienePermisosCargaFamiliar) {
		this.isTienePermisosCargaFamiliar= isTienePermisosCargaFamiliar;
	}


	public Boolean isTienePermisosEMail=false;

	public Boolean getIsTienePermisosEMail() {
		return isTienePermisosEMail;
	}

	public void setIsTienePermisosEMail(Boolean isTienePermisosEMail) {
		this.isTienePermisosEMail= isTienePermisosEMail;
	}


	public Boolean isTienePermisosConyuge=false;

	public Boolean getIsTienePermisosConyuge() {
		return isTienePermisosConyuge;
	}

	public void setIsTienePermisosConyuge(Boolean isTienePermisosConyuge) {
		this.isTienePermisosConyuge= isTienePermisosConyuge;
	}


	public Boolean isTienePermisosCuentaPorCobrar=false;

	public Boolean getIsTienePermisosCuentaPorCobrar() {
		return isTienePermisosCuentaPorCobrar;
	}

	public void setIsTienePermisosCuentaPorCobrar(Boolean isTienePermisosCuentaPorCobrar) {
		this.isTienePermisosCuentaPorCobrar= isTienePermisosCuentaPorCobrar;
	}


	public Boolean isTienePermisosFirmaCliente=false;

	public Boolean getIsTienePermisosFirmaCliente() {
		return isTienePermisosFirmaCliente;
	}

	public void setIsTienePermisosFirmaCliente(Boolean isTienePermisosFirmaCliente) {
		this.isTienePermisosFirmaCliente= isTienePermisosFirmaCliente;
	}


	public Boolean isTienePermisosRepresentanteLegal=false;

	public Boolean getIsTienePermisosRepresentanteLegal() {
		return isTienePermisosRepresentanteLegal;
	}

	public void setIsTienePermisosRepresentanteLegal(Boolean isTienePermisosRepresentanteLegal) {
		this.isTienePermisosRepresentanteLegal= isTienePermisosRepresentanteLegal;
	}


	public Boolean isTienePermisosTelefono=false;

	public Boolean getIsTienePermisosTelefono() {
		return isTienePermisosTelefono;
	}

	public void setIsTienePermisosTelefono(Boolean isTienePermisosTelefono) {
		this.isTienePermisosTelefono= isTienePermisosTelefono;
	}


	public Boolean isTienePermisosNegocioCliente=false;

	public Boolean getIsTienePermisosNegocioCliente() {
		return isTienePermisosNegocioCliente;
	}

	public void setIsTienePermisosNegocioCliente(Boolean isTienePermisosNegocioCliente) {
		this.isTienePermisosNegocioCliente= isTienePermisosNegocioCliente;
	}


	public Boolean isTienePermisosReferenciaBancaria=false;

	public Boolean getIsTienePermisosReferenciaBancaria() {
		return isTienePermisosReferenciaBancaria;
	}

	public void setIsTienePermisosReferenciaBancaria(Boolean isTienePermisosReferenciaBancaria) {
		this.isTienePermisosReferenciaBancaria= isTienePermisosReferenciaBancaria;
	}


	public Boolean isTienePermisosMonto=false;

	public Boolean getIsTienePermisosMonto() {
		return isTienePermisosMonto;
	}

	public void setIsTienePermisosMonto(Boolean isTienePermisosMonto) {
		this.isTienePermisosMonto= isTienePermisosMonto;
	}


	public Boolean isTienePermisosClienteArchivo=false;

	public Boolean getIsTienePermisosClienteArchivo() {
		return isTienePermisosClienteArchivo;
	}

	public void setIsTienePermisosClienteArchivo(Boolean isTienePermisosClienteArchivo) {
		this.isTienePermisosClienteArchivo= isTienePermisosClienteArchivo;
	}


	public Boolean isTienePermisosActividadEconomica=false;

	public Boolean getIsTienePermisosActividadEconomica() {
		return isTienePermisosActividadEconomica;
	}

	public void setIsTienePermisosActividadEconomica(Boolean isTienePermisosActividadEconomica) {
		this.isTienePermisosActividadEconomica= isTienePermisosActividadEconomica;
	}


	public Boolean isTienePermisosDireccion=false;

	public Boolean getIsTienePermisosDireccion() {
		return isTienePermisosDireccion;
	}

	public void setIsTienePermisosDireccion(Boolean isTienePermisosDireccion) {
		this.isTienePermisosDireccion= isTienePermisosDireccion;
	}


	public Boolean isTienePermisosChequePostFechado=false;

	public Boolean getIsTienePermisosChequePostFechado() {
		return isTienePermisosChequePostFechado;
	}

	public void setIsTienePermisosChequePostFechado(Boolean isTienePermisosChequePostFechado) {
		this.isTienePermisosChequePostFechado= isTienePermisosChequePostFechado;
	}


	public Boolean isTienePermisosSubCliente=false;

	public Boolean getIsTienePermisosSubCliente() {
		return isTienePermisosSubCliente;
	}

	public void setIsTienePermisosSubCliente(Boolean isTienePermisosSubCliente) {
		this.isTienePermisosSubCliente= isTienePermisosSubCliente;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoCliente;
	public Boolean isPermisoNuevoCliente;
	public Boolean isPermisoActualizarCliente;
	public Boolean isPermisoActualizarOriginalCliente;
	public Boolean isPermisoEliminarCliente;
	public Boolean isPermisoGuardarCambiosCliente;
	public Boolean isPermisoConsultaCliente;
	public Boolean isPermisoBusquedaCliente;
	public Boolean isPermisoReporteCliente;
	public Boolean isPermisoPaginacionMedioCliente;
	public Boolean isPermisoPaginacionAltoCliente;
	public Boolean isPermisoPaginacionTodoCliente;
	public Boolean isPermisoCopiarCliente;
	public Boolean isPermisoVerFormCliente;
	public Boolean isPermisoDuplicarCliente;
	public Boolean isPermisoOrdenCliente;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ClienteParameterReturnGeneral clienteReturnGeneral;
	public ClienteParameterReturnGeneral clienteParameterGeneral;
	
	

	public ContactoClienteLogic contactoclienteLogic=null;

	public ContactoClienteLogic getContactoClienteLogic() {
		return contactoclienteLogic;
	}

	public void setContactoClienteLogic(ContactoClienteLogic contactoclienteLogic) {
		this.contactoclienteLogic = contactoclienteLogic;
	}


	public BienLogic bienLogic=null;

	public BienLogic getBienLogic() {
		return bienLogic;
	}

	public void setBienLogic(BienLogic bienLogic) {
		this.bienLogic = bienLogic;
	}


	public CargaFamiliarLogic cargafamiliarLogic=null;

	public CargaFamiliarLogic getCargaFamiliarLogic() {
		return cargafamiliarLogic;
	}

	public void setCargaFamiliarLogic(CargaFamiliarLogic cargafamiliarLogic) {
		this.cargafamiliarLogic = cargafamiliarLogic;
	}


	public ChequePostFechadoLogic chequepostfechadoLogic=null;

	public ChequePostFechadoLogic getChequePostFechadoLogic() {
		return chequepostfechadoLogic;
	}

	public void setChequePostFechadoLogic(ChequePostFechadoLogic chequepostfechadoLogic) {
		this.chequepostfechadoLogic = chequepostfechadoLogic;
	}


	public EMailLogic emailLogic=null;

	public EMailLogic getEMailLogic() {
		return emailLogic;
	}

	public void setEMailLogic(EMailLogic emailLogic) {
		this.emailLogic = emailLogic;
	}


	public ReferenciaPersonalLogic referenciapersonalLogic=null;

	public ReferenciaPersonalLogic getReferenciaPersonalLogic() {
		return referenciapersonalLogic;
	}

	public void setReferenciaPersonalLogic(ReferenciaPersonalLogic referenciapersonalLogic) {
		this.referenciapersonalLogic = referenciapersonalLogic;
	}


	public GarantiaClienteLogic garantiaclienteLogic=null;

	public GarantiaClienteLogic getGarantiaClienteLogic() {
		return garantiaclienteLogic;
	}

	public void setGarantiaClienteLogic(GarantiaClienteLogic garantiaclienteLogic) {
		this.garantiaclienteLogic = garantiaclienteLogic;
	}


	public ClienteArchivoLogic clientearchivoLogic=null;

	public ClienteArchivoLogic getClienteArchivoLogic() {
		return clientearchivoLogic;
	}

	public void setClienteArchivoLogic(ClienteArchivoLogic clientearchivoLogic) {
		this.clientearchivoLogic = clientearchivoLogic;
	}


	public PoliticasClienteLogic politicasclienteLogic=null;

	public PoliticasClienteLogic getPoliticasClienteLogic() {
		return politicasclienteLogic;
	}

	public void setPoliticasClienteLogic(PoliticasClienteLogic politicasclienteLogic) {
		this.politicasclienteLogic = politicasclienteLogic;
	}


	public FirmaClienteLogic firmaclienteLogic=null;

	public FirmaClienteLogic getFirmaClienteLogic() {
		return firmaclienteLogic;
	}

	public void setFirmaClienteLogic(FirmaClienteLogic firmaclienteLogic) {
		this.firmaclienteLogic = firmaclienteLogic;
	}


	public ReferenciaComercialLogic referenciacomercialLogic=null;

	public ReferenciaComercialLogic getReferenciaComercialLogic() {
		return referenciacomercialLogic;
	}

	public void setReferenciaComercialLogic(ReferenciaComercialLogic referenciacomercialLogic) {
		this.referenciacomercialLogic = referenciacomercialLogic;
	}


	public NovedadLogic novedadLogic=null;

	public NovedadLogic getNovedadLogic() {
		return novedadLogic;
	}

	public void setNovedadLogic(NovedadLogic novedadLogic) {
		this.novedadLogic = novedadLogic;
	}


	public InformacionLaboralLogic informacionlaboralLogic=null;

	public InformacionLaboralLogic getInformacionLaboralLogic() {
		return informacionlaboralLogic;
	}

	public void setInformacionLaboralLogic(InformacionLaboralLogic informacionlaboralLogic) {
		this.informacionlaboralLogic = informacionlaboralLogic;
	}


	public InformacionFinancieraLogic informacionfinancieraLogic=null;

	public InformacionFinancieraLogic getInformacionFinancieraLogic() {
		return informacionfinancieraLogic;
	}

	public void setInformacionFinancieraLogic(InformacionFinancieraLogic informacionfinancieraLogic) {
		this.informacionfinancieraLogic = informacionfinancieraLogic;
	}


	public TelefonoLogic telefonoLogic=null;

	public TelefonoLogic getTelefonoLogic() {
		return telefonoLogic;
	}

	public void setTelefonoLogic(TelefonoLogic telefonoLogic) {
		this.telefonoLogic = telefonoLogic;
	}


	public CuentaPorCobrarLogic cuentaporcobrarLogic=null;

	public CuentaPorCobrarLogic getCuentaPorCobrarLogic() {
		return cuentaporcobrarLogic;
	}

	public void setCuentaPorCobrarLogic(CuentaPorCobrarLogic cuentaporcobrarLogic) {
		this.cuentaporcobrarLogic = cuentaporcobrarLogic;
	}


	public ResponsableLogic responsableLogic=null;

	public ResponsableLogic getResponsableLogic() {
		return responsableLogic;
	}

	public void setResponsableLogic(ResponsableLogic responsableLogic) {
		this.responsableLogic = responsableLogic;
	}


	public TransportistaLogic transportistaLogic=null;

	public TransportistaLogic getTransportistaLogic() {
		return transportistaLogic;
	}

	public void setTransportistaLogic(TransportistaLogic transportistaLogic) {
		this.transportistaLogic = transportistaLogic;
	}


	public PoliticaClienteLogic politicaclienteLogic=null;

	public PoliticaClienteLogic getPoliticaClienteLogic() {
		return politicaclienteLogic;
	}

	public void setPoliticaClienteLogic(PoliticaClienteLogic politicaclienteLogic) {
		this.politicaclienteLogic = politicaclienteLogic;
	}


	public ConyugeLogic conyugeLogic=null;

	public ConyugeLogic getConyugeLogic() {
		return conyugeLogic;
	}

	public void setConyugeLogic(ConyugeLogic conyugeLogic) {
		this.conyugeLogic = conyugeLogic;
	}


	public ReferenciaBancariaLogic referenciabancariaLogic=null;

	public ReferenciaBancariaLogic getReferenciaBancariaLogic() {
		return referenciabancariaLogic;
	}

	public void setReferenciaBancariaLogic(ReferenciaBancariaLogic referenciabancariaLogic) {
		this.referenciabancariaLogic = referenciabancariaLogic;
	}


	public BalanceGeneralClienteLogic balancegeneralclienteLogic=null;

	public BalanceGeneralClienteLogic getBalanceGeneralClienteLogic() {
		return balancegeneralclienteLogic;
	}

	public void setBalanceGeneralClienteLogic(BalanceGeneralClienteLogic balancegeneralclienteLogic) {
		this.balancegeneralclienteLogic = balancegeneralclienteLogic;
	}


	public DatoConstitucionLogic datoconstitucionLogic=null;

	public DatoConstitucionLogic getDatoConstitucionLogic() {
		return datoconstitucionLogic;
	}

	public void setDatoConstitucionLogic(DatoConstitucionLogic datoconstitucionLogic) {
		this.datoconstitucionLogic = datoconstitucionLogic;
	}


	public ActividadEconomicaLogic actividadeconomicaLogic=null;

	public ActividadEconomicaLogic getActividadEconomicaLogic() {
		return actividadeconomicaLogic;
	}

	public void setActividadEconomicaLogic(ActividadEconomicaLogic actividadeconomicaLogic) {
		this.actividadeconomicaLogic = actividadeconomicaLogic;
	}


	public ProveedorProductoLogic proveedorproductoLogic=null;

	public ProveedorProductoLogic getProveedorProductoLogic() {
		return proveedorproductoLogic;
	}

	public void setProveedorProductoLogic(ProveedorProductoLogic proveedorproductoLogic) {
		this.proveedorproductoLogic = proveedorproductoLogic;
	}


	public ConsignatarioLogic consignatarioLogic=null;

	public ConsignatarioLogic getConsignatarioLogic() {
		return consignatarioLogic;
	}

	public void setConsignatarioLogic(ConsignatarioLogic consignatarioLogic) {
		this.consignatarioLogic = consignatarioLogic;
	}


	public HobbyClienteLogic hobbyclienteLogic=null;

	public HobbyClienteLogic getHobbyClienteLogic() {
		return hobbyclienteLogic;
	}

	public void setHobbyClienteLogic(HobbyClienteLogic hobbyclienteLogic) {
		this.hobbyclienteLogic = hobbyclienteLogic;
	}


	public RepresentanteLegalLogic representantelegalLogic=null;

	public RepresentanteLegalLogic getRepresentanteLegalLogic() {
		return representantelegalLogic;
	}

	public void setRepresentanteLegalLogic(RepresentanteLegalLogic representantelegalLogic) {
		this.representantelegalLogic = representantelegalLogic;
	}


	public ClienteCoaLogic clientecoaLogic=null;

	public ClienteCoaLogic getClienteCoaLogic() {
		return clientecoaLogic;
	}

	public void setClienteCoaLogic(ClienteCoaLogic clientecoaLogic) {
		this.clientecoaLogic = clientecoaLogic;
	}


	public DireccionLogic direccionLogic=null;

	public DireccionLogic getDireccionLogic() {
		return direccionLogic;
	}

	public void setDireccionLogic(DireccionLogic direccionLogic) {
		this.direccionLogic = direccionLogic;
	}


	public ClienteImagenLogic clienteimagenLogic=null;

	public ClienteImagenLogic getClienteImagenLogic() {
		return clienteimagenLogic;
	}

	public void setClienteImagenLogic(ClienteImagenLogic clienteimagenLogic) {
		this.clienteimagenLogic = clienteimagenLogic;
	}


	public SubClienteLogic subclienteLogic=null;

	public SubClienteLogic getSubClienteLogic() {
		return subclienteLogic;
	}

	public void setSubClienteLogic(SubClienteLogic subclienteLogic) {
		this.subclienteLogic = subclienteLogic;
	}


	public ServicioClienteLogic servicioclienteLogic=null;

	public ServicioClienteLogic getServicioClienteLogic() {
		return servicioclienteLogic;
	}

	public void setServicioClienteLogic(ServicioClienteLogic servicioclienteLogic) {
		this.servicioclienteLogic = servicioclienteLogic;
	}


	public InformacionEconomicaLogic informacioneconomicaLogic=null;

	public InformacionEconomicaLogic getInformacionEconomicaLogic() {
		return informacioneconomicaLogic;
	}

	public void setInformacionEconomicaLogic(InformacionEconomicaLogic informacioneconomicaLogic) {
		this.informacioneconomicaLogic = informacioneconomicaLogic;
	}


	public VehiculoClienteLogic vehiculoclienteLogic=null;

	public VehiculoClienteLogic getVehiculoClienteLogic() {
		return vehiculoclienteLogic;
	}

	public void setVehiculoClienteLogic(VehiculoClienteLogic vehiculoclienteLogic) {
		this.vehiculoclienteLogic = vehiculoclienteLogic;
	}


	public NegocioClienteLogic negocioclienteLogic=null;

	public NegocioClienteLogic getNegocioClienteLogic() {
		return negocioclienteLogic;
	}

	public void setNegocioClienteLogic(NegocioClienteLogic negocioclienteLogic) {
		this.negocioclienteLogic = negocioclienteLogic;
	}


	public MontoLogic montoLogic=null;

	public MontoLogic getMontoLogic() {
		return montoLogic;
	}

	public void setMontoLogic(MontoLogic montoLogic) {
		this.montoLogic = montoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoCliente=false;
	public Boolean esParaAccionDesdeFormularioCliente=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ClienteSessionBeanAdditional clienteSessionBeanAdditional=null;
	
	public ClienteSessionBeanAdditional getClienteSessionBeanAdditional() {
		return this.clienteSessionBeanAdditional;
	}
	
	public void setClienteSessionBeanAdditional(ClienteSessionBeanAdditional clienteSessionBeanAdditional) {
		try {
			this.clienteSessionBeanAdditional=clienteSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ClienteBeanSwingJInternalFrameAdditional clienteBeanSwingJInternalFrameAdditional=null;
	//public class ClienteBeanSwingJInternalFrame
	
	public ClienteBeanSwingJInternalFrameAdditional getClienteBeanSwingJInternalFrameAdditional() {
		return this.clienteBeanSwingJInternalFrameAdditional;
	}
	
	public void setClienteBeanSwingJInternalFrameAdditional(ClienteBeanSwingJInternalFrameAdditional clienteBeanSwingJInternalFrameAdditional) {
		try {
			this.clienteBeanSwingJInternalFrameAdditional=clienteBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ClienteLogic clienteLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Cliente clienteBean;
	public ClienteConstantesFunciones clienteConstantesFunciones;
	//public ClienteParameterReturnGeneral clienteReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public TipoIdentificacionLogic tipoidentificacionLogic;
	public GrupoClienteLogic grupoclienteLogic;
	public TituloClienteLogic tituloclienteLogic;
	public AreaCrLogic areacrLogic;
	public EstadoClienteLogic estadoclienteLogic;
	public PaisLogic paisLogic;
	public RegionLogic regionLogic;
	public ProvinciaLogic provinciaLogic;
	public CiudadLogic ciudadLogic;
	public ZonaLogic zonaLogic;
	public PaisLogic paisnacionalidadLogic;
	public TipoCargoLaboLogic tipocargolaboLogic;
	public TipoNivelEduLogic tiponiveleduLogic;
	public ProfesionLogic profesionLogic;
	public TipoGeneroLogic tipogeneroLogic;
	public EstadoCivilLogic estadocivilLogic;
	public EstadoLegalLogic estadolegalLogic;
	public CuentaContableLogic cuentacontableLogic;
	public RutaLogic rutaLogic;
	public VendedorLogic vendedorLogic;
	public CentroActividadLogic centroactividadLogic;
	public TipoGarantiaEmpresaLogic tipogarantiaempresaLogic;
	public CateTipoAfiliacionLogic catetipoafiliacionLogic;
	public DiaLogic diaLogic;
	public EmpleadoLogic empleadoLogic;
	public TipoPrecioLogic tipoprecioLogic;
	public TipoListaPrecioLogic tipolistaprecioLogic;
	
	//PARAMETROS
	
	
	//public List<Cliente> clientes;	
	//public List<Cliente> clientesEliminados;
	//public List<Cliente> clientesAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoCliente=false;
	public Boolean isVisibilidadCeldaDuplicarCliente=true;
	public Boolean isVisibilidadCeldaCopiarCliente=true;
	public Boolean isVisibilidadCeldaVerFormCliente=true;
	public Boolean isVisibilidadCeldaOrdenCliente=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesCliente=false;
	public Boolean isVisibilidadCeldaModificarCliente=false;
	public Boolean isVisibilidadCeldaActualizarCliente=false;
	public Boolean isVisibilidadCeldaEliminarCliente=false;
	public Boolean isVisibilidadCeldaCancelarCliente=false;
	public Boolean isVisibilidadCeldaGuardarCliente=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosCliente=false;	
	
	
	public Boolean isVisibilidadBusquedaPorIdentificacion=false;
	public Boolean isVisibilidadBusquedaPorNombreComercial=false;
	public Boolean isVisibilidadBusquedaPorNombreCompleto=false;
	public Boolean isVisibilidadFK_IdAreaCr=false;
	public Boolean isVisibilidadFK_IdCateTipoAfiliacion=false;
	public Boolean isVisibilidadFK_IdCentroActividad=false;
	public Boolean isVisibilidadFK_IdCiudad=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdDia=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoCivil=false;
	public Boolean isVisibilidadFK_IdEstadoCliente=false;
	public Boolean isVisibilidadFK_IdEstadoLegal=false;
	public Boolean isVisibilidadFK_IdGrupoCliente=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdPaisNacionalad=false;
	public Boolean isVisibilidadFK_IdProfesion=false;
	public Boolean isVisibilidadFK_IdProvincia=false;
	public Boolean isVisibilidadFK_IdRegion=false;
	public Boolean isVisibilidadFK_IdRuta=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCargoLabo=false;
	public Boolean isVisibilidadFK_IdTipoGarantiaEmpresa=false;
	public Boolean isVisibilidadFK_IdTipoGenero=false;
	public Boolean isVisibilidadFK_IdTipoIdentificacion=false;
	public Boolean isVisibilidadFK_IdTipoListaPrecio=false;
	public Boolean isVisibilidadFK_IdTipoNivelEdu=false;
	public Boolean isVisibilidadFK_IdTipoPrecio=false;
	public Boolean isVisibilidadFK_IdTituloCliente=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	public Boolean isVisibilidadFK_IdZona=false;
	
	public Long getiIdNuevoCliente() {
		return this.iIdNuevoCliente;
	}

	public void setiIdNuevoCliente(Long iIdNuevoCliente) {
		this.iIdNuevoCliente = iIdNuevoCliente;
	}
	
	public Long getidClienteActual() {
		return this.idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual = idClienteActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Cliente getcliente() {
		return this.cliente;
	}

	public void setcliente(Cliente cliente) {
		this.cliente = cliente;
	}
	
	public Cliente getclienteAux() {
		return this.clienteAux;
	}

	public void setclienteAux(Cliente clienteAux) {
		this.clienteAux = clienteAux;
	}				
	
	public Cliente getclienteAnterior() {
		return this.clienteAnterior;
	}

	public void setclienteAnterior(Cliente clienteAnterior) {
		this.clienteAnterior = clienteAnterior;
	}	
	
	public Cliente getclienteTotales() {
		return this.clienteTotales;
	}

	public void setclienteTotales(Cliente clienteTotales) {
		this.clienteTotales = clienteTotales;
	}	
	
	public Cliente getclienteBean() {
		return this.clienteBean;
	}

	public void setclienteBean(Cliente clienteBean) {
		this.clienteBean = clienteBean;
	}	
	
	public ClienteParameterReturnGeneral getclienteReturnGeneral() {
		return this.clienteReturnGeneral;
	}

	public void setclienteReturnGeneral(ClienteParameterReturnGeneral clienteReturnGeneral) {
		this.clienteReturnGeneral = clienteReturnGeneral;
	}	
	
	
	public String identificacionBusquedaPorIdentificacion="";

	public String getidentificacionBusquedaPorIdentificacion() {
		return this.identificacionBusquedaPorIdentificacion;
	}

	public void setidentificacionBusquedaPorIdentificacion(String identificacionBusquedaPorIdentificacion) {
		this.identificacionBusquedaPorIdentificacion = identificacionBusquedaPorIdentificacion;
	}

	public String nombre_comercialBusquedaPorNombreComercial="";

	public String getnombre_comercialBusquedaPorNombreComercial() {
		return this.nombre_comercialBusquedaPorNombreComercial;
	}

	public void setnombre_comercialBusquedaPorNombreComercial(String nombre_comercialBusquedaPorNombreComercial) {
		this.nombre_comercialBusquedaPorNombreComercial = nombre_comercialBusquedaPorNombreComercial;
	}

	public String nombre_completoBusquedaPorNombreCompleto="";

	public String getnombre_completoBusquedaPorNombreCompleto() {
		return this.nombre_completoBusquedaPorNombreCompleto;
	}

	public void setnombre_completoBusquedaPorNombreCompleto(String nombre_completoBusquedaPorNombreCompleto) {
		this.nombre_completoBusquedaPorNombreCompleto = nombre_completoBusquedaPorNombreCompleto;
	}

	public Long id_area_crFK_IdAreaCr=-1L;

	public Long getid_area_crFK_IdAreaCr() {
		return this.id_area_crFK_IdAreaCr;
	}

	public void setid_area_crFK_IdAreaCr(Long id_area_crFK_IdAreaCr) {
		this.id_area_crFK_IdAreaCr = id_area_crFK_IdAreaCr;
	}

	public Long id_cate_tipo_afiliacionFK_IdCateTipoAfiliacion=-1L;

	public Long getid_cate_tipo_afiliacionFK_IdCateTipoAfiliacion() {
		return this.id_cate_tipo_afiliacionFK_IdCateTipoAfiliacion;
	}

	public void setid_cate_tipo_afiliacionFK_IdCateTipoAfiliacion(Long id_cate_tipo_afiliacionFK_IdCateTipoAfiliacion) {
		this.id_cate_tipo_afiliacionFK_IdCateTipoAfiliacion = id_cate_tipo_afiliacionFK_IdCateTipoAfiliacion;
	}

	public Long id_centro_actividadFK_IdCentroActividad=null;

	public Long getid_centro_actividadFK_IdCentroActividad() {
		return this.id_centro_actividadFK_IdCentroActividad;
	}

	public void setid_centro_actividadFK_IdCentroActividad(Long id_centro_actividadFK_IdCentroActividad) {
		this.id_centro_actividadFK_IdCentroActividad = id_centro_actividadFK_IdCentroActividad;
	}

	public Long id_ciudadFK_IdCiudad=-1L;

	public Long getid_ciudadFK_IdCiudad() {
		return this.id_ciudadFK_IdCiudad;
	}

	public void setid_ciudadFK_IdCiudad(Long id_ciudadFK_IdCiudad) {
		this.id_ciudadFK_IdCiudad = id_ciudadFK_IdCiudad;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=-1L;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_diaFK_IdDia=-1L;

	public Long getid_diaFK_IdDia() {
		return this.id_diaFK_IdDia;
	}

	public void setid_diaFK_IdDia(Long id_diaFK_IdDia) {
		this.id_diaFK_IdDia = id_diaFK_IdDia;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_civilFK_IdEstadoCivil=-1L;

	public Long getid_estado_civilFK_IdEstadoCivil() {
		return this.id_estado_civilFK_IdEstadoCivil;
	}

	public void setid_estado_civilFK_IdEstadoCivil(Long id_estado_civilFK_IdEstadoCivil) {
		this.id_estado_civilFK_IdEstadoCivil = id_estado_civilFK_IdEstadoCivil;
	}

	public Long id_estado_clienteFK_IdEstadoCliente=-1L;

	public Long getid_estado_clienteFK_IdEstadoCliente() {
		return this.id_estado_clienteFK_IdEstadoCliente;
	}

	public void setid_estado_clienteFK_IdEstadoCliente(Long id_estado_clienteFK_IdEstadoCliente) {
		this.id_estado_clienteFK_IdEstadoCliente = id_estado_clienteFK_IdEstadoCliente;
	}

	public Long id_estado_legalFK_IdEstadoLegal=-1L;

	public Long getid_estado_legalFK_IdEstadoLegal() {
		return this.id_estado_legalFK_IdEstadoLegal;
	}

	public void setid_estado_legalFK_IdEstadoLegal(Long id_estado_legalFK_IdEstadoLegal) {
		this.id_estado_legalFK_IdEstadoLegal = id_estado_legalFK_IdEstadoLegal;
	}

	public Long id_grupo_clienteFK_IdGrupoCliente=-1L;

	public Long getid_grupo_clienteFK_IdGrupoCliente() {
		return this.id_grupo_clienteFK_IdGrupoCliente;
	}

	public void setid_grupo_clienteFK_IdGrupoCliente(Long id_grupo_clienteFK_IdGrupoCliente) {
		this.id_grupo_clienteFK_IdGrupoCliente = id_grupo_clienteFK_IdGrupoCliente;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_pais_nacionalidadFK_IdPaisNacionalad=-1L;

	public Long getid_pais_nacionalidadFK_IdPaisNacionalad() {
		return this.id_pais_nacionalidadFK_IdPaisNacionalad;
	}

	public void setid_pais_nacionalidadFK_IdPaisNacionalad(Long id_pais_nacionalidadFK_IdPaisNacionalad) {
		this.id_pais_nacionalidadFK_IdPaisNacionalad = id_pais_nacionalidadFK_IdPaisNacionalad;
	}

	public Long id_profesionFK_IdProfesion=-1L;

	public Long getid_profesionFK_IdProfesion() {
		return this.id_profesionFK_IdProfesion;
	}

	public void setid_profesionFK_IdProfesion(Long id_profesionFK_IdProfesion) {
		this.id_profesionFK_IdProfesion = id_profesionFK_IdProfesion;
	}

	public Long id_provinciaFK_IdProvincia=-1L;

	public Long getid_provinciaFK_IdProvincia() {
		return this.id_provinciaFK_IdProvincia;
	}

	public void setid_provinciaFK_IdProvincia(Long id_provinciaFK_IdProvincia) {
		this.id_provinciaFK_IdProvincia = id_provinciaFK_IdProvincia;
	}

	public Long id_regionFK_IdRegion=-1L;

	public Long getid_regionFK_IdRegion() {
		return this.id_regionFK_IdRegion;
	}

	public void setid_regionFK_IdRegion(Long id_regionFK_IdRegion) {
		this.id_regionFK_IdRegion = id_regionFK_IdRegion;
	}

	public Long id_rutaFK_IdRuta=-1L;

	public Long getid_rutaFK_IdRuta() {
		return this.id_rutaFK_IdRuta;
	}

	public void setid_rutaFK_IdRuta(Long id_rutaFK_IdRuta) {
		this.id_rutaFK_IdRuta = id_rutaFK_IdRuta;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cargo_laboFK_IdTipoCargoLabo=-1L;

	public Long getid_tipo_cargo_laboFK_IdTipoCargoLabo() {
		return this.id_tipo_cargo_laboFK_IdTipoCargoLabo;
	}

	public void setid_tipo_cargo_laboFK_IdTipoCargoLabo(Long id_tipo_cargo_laboFK_IdTipoCargoLabo) {
		this.id_tipo_cargo_laboFK_IdTipoCargoLabo = id_tipo_cargo_laboFK_IdTipoCargoLabo;
	}

	public Long id_tipo_garantia_empresaFK_IdTipoGarantiaEmpresa=-1L;

	public Long getid_tipo_garantia_empresaFK_IdTipoGarantiaEmpresa() {
		return this.id_tipo_garantia_empresaFK_IdTipoGarantiaEmpresa;
	}

	public void setid_tipo_garantia_empresaFK_IdTipoGarantiaEmpresa(Long id_tipo_garantia_empresaFK_IdTipoGarantiaEmpresa) {
		this.id_tipo_garantia_empresaFK_IdTipoGarantiaEmpresa = id_tipo_garantia_empresaFK_IdTipoGarantiaEmpresa;
	}

	public Long id_tipo_generoFK_IdTipoGenero=-1L;

	public Long getid_tipo_generoFK_IdTipoGenero() {
		return this.id_tipo_generoFK_IdTipoGenero;
	}

	public void setid_tipo_generoFK_IdTipoGenero(Long id_tipo_generoFK_IdTipoGenero) {
		this.id_tipo_generoFK_IdTipoGenero = id_tipo_generoFK_IdTipoGenero;
	}

	public Long id_tipo_identificacionFK_IdTipoIdentificacion=-1L;

	public Long getid_tipo_identificacionFK_IdTipoIdentificacion() {
		return this.id_tipo_identificacionFK_IdTipoIdentificacion;
	}

	public void setid_tipo_identificacionFK_IdTipoIdentificacion(Long id_tipo_identificacionFK_IdTipoIdentificacion) {
		this.id_tipo_identificacionFK_IdTipoIdentificacion = id_tipo_identificacionFK_IdTipoIdentificacion;
	}

	public Long id_tipo_lista_precioFK_IdTipoListaPrecio=-1L;

	public Long getid_tipo_lista_precioFK_IdTipoListaPrecio() {
		return this.id_tipo_lista_precioFK_IdTipoListaPrecio;
	}

	public void setid_tipo_lista_precioFK_IdTipoListaPrecio(Long id_tipo_lista_precioFK_IdTipoListaPrecio) {
		this.id_tipo_lista_precioFK_IdTipoListaPrecio = id_tipo_lista_precioFK_IdTipoListaPrecio;
	}

	public Long id_tipo_nivel_eduFK_IdTipoNivelEdu=-1L;

	public Long getid_tipo_nivel_eduFK_IdTipoNivelEdu() {
		return this.id_tipo_nivel_eduFK_IdTipoNivelEdu;
	}

	public void setid_tipo_nivel_eduFK_IdTipoNivelEdu(Long id_tipo_nivel_eduFK_IdTipoNivelEdu) {
		this.id_tipo_nivel_eduFK_IdTipoNivelEdu = id_tipo_nivel_eduFK_IdTipoNivelEdu;
	}

	public Long id_tipo_precioFK_IdTipoPrecio=-1L;

	public Long getid_tipo_precioFK_IdTipoPrecio() {
		return this.id_tipo_precioFK_IdTipoPrecio;
	}

	public void setid_tipo_precioFK_IdTipoPrecio(Long id_tipo_precioFK_IdTipoPrecio) {
		this.id_tipo_precioFK_IdTipoPrecio = id_tipo_precioFK_IdTipoPrecio;
	}

	public Long id_titulo_clienteFK_IdTituloCliente=-1L;

	public Long getid_titulo_clienteFK_IdTituloCliente() {
		return this.id_titulo_clienteFK_IdTituloCliente;
	}

	public void setid_titulo_clienteFK_IdTituloCliente(Long id_titulo_clienteFK_IdTituloCliente) {
		this.id_titulo_clienteFK_IdTituloCliente = id_titulo_clienteFK_IdTituloCliente;
	}

	public Long id_vendedorFK_IdVendedor=-1L;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

	public Long id_zonaFK_IdZona=-1L;

	public Long getid_zonaFK_IdZona() {
		return this.id_zonaFK_IdZona;
	}

	public void setid_zonaFK_IdZona(Long id_zonaFK_IdZona) {
		this.id_zonaFK_IdZona = id_zonaFK_IdZona;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ClienteLogic getClienteLogic()	{		
		return clienteLogic;
	}

	public void setClienteLogic(ClienteLogic clienteLogic) {
		this.clienteLogic = clienteLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoCliente() {
		return isEsNuevoCliente;
	}

	public void setIsEsNuevoCliente(Boolean isEsNuevoCliente) {
		this.isEsNuevoCliente = isEsNuevoCliente;
	}

	public Boolean getEsParaAccionDesdeFormularioCliente() {
		return esParaAccionDesdeFormularioCliente;
	}
	
	public void setEsParaAccionDesdeFormularioCliente(Boolean esParaAccionDesdeFormularioCliente) {
		this.esParaAccionDesdeFormularioCliente = esParaAccionDesdeFormularioCliente;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(clienteSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(clienteSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoIdentificacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoIdentificacionLogic tipoidentificacionLogic=new TipoIdentificacionLogic();

			//tipoidentificacionLogic.getTipoIdentificacionDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoidentificacionLogic.getTipoIdentificacionDataAccess().setIsForForeingKeyData(true);

					tipoidentificacionLogic.getTodosTipoIdentificacionsWithConnection(sFinalQuery,new Pagination());

					this.tipoidentificacionsForeignKey=tipoidentificacionLogic.getTipoIdentificacions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoIdentificacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoidentificacionLogic.getEntityWithConnection(clienteSessionBean.getlidTipoIdentificacionActual());
					this.tipoidentificacionsForeignKey.add(tipoidentificacionLogic.getTipoIdentificacion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosGrupoClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.grupoclientesForeignKey=new ArrayList<GrupoCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			GrupoClienteLogic grupoclienteLogic=new GrupoClienteLogic();

			//grupoclienteLogic.getGrupoClienteDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionGrupoCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//grupoclienteLogic.getGrupoClienteDataAccess().setIsForForeingKeyData(true);

					grupoclienteLogic.getTodosGrupoClientesWithConnection(sFinalQuery,new Pagination());

					this.grupoclientesForeignKey=grupoclienteLogic.getGrupoClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaGrupoCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					grupoclienteLogic.getEntityWithConnection(clienteSessionBean.getlidGrupoClienteActual());
					this.grupoclientesForeignKey.add(grupoclienteLogic.getGrupoCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTituloClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tituloclientesForeignKey=new ArrayList<TituloCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TituloClienteLogic tituloclienteLogic=new TituloClienteLogic();

			//tituloclienteLogic.getTituloClienteDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTituloCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tituloclienteLogic.getTituloClienteDataAccess().setIsForForeingKeyData(true);

					tituloclienteLogic.getTodosTituloClientesWithConnection(sFinalQuery,new Pagination());

					this.tituloclientesForeignKey=tituloclienteLogic.getTituloClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTituloCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tituloclienteLogic.getEntityWithConnection(clienteSessionBean.getlidTituloClienteActual());
					this.tituloclientesForeignKey.add(tituloclienteLogic.getTituloCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAreaCrsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.areacrsForeignKey=new ArrayList<AreaCr>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AreaCrLogic areacrLogic=new AreaCrLogic();

			//areacrLogic.getAreaCrDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionAreaCr()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//areacrLogic.getAreaCrDataAccess().setIsForForeingKeyData(true);

					areacrLogic.getTodosAreaCrsWithConnection(sFinalQuery,new Pagination());

					this.areacrsForeignKey=areacrLogic.getAreaCrs();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAreaCr(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					areacrLogic.getEntityWithConnection(clienteSessionBean.getlidAreaCrActual());
					this.areacrsForeignKey.add(areacrLogic.getAreaCr());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoclientesForeignKey=new ArrayList<EstadoCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoClienteLogic estadoclienteLogic=new EstadoClienteLogic();

			//estadoclienteLogic.getEstadoClienteDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoclienteLogic.getEstadoClienteDataAccess().setIsForForeingKeyData(true);

					estadoclienteLogic.getTodosEstadoClientesWithConnection(sFinalQuery,new Pagination());

					this.estadoclientesForeignKey=estadoclienteLogic.getEstadoClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoclienteLogic.getEntityWithConnection(clienteSessionBean.getlidEstadoClienteActual());
					this.estadoclientesForeignKey.add(estadoclienteLogic.getEstadoCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(clienteSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosRegionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.regionsForeignKey=new ArrayList<Region>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			RegionLogic regionLogic=new RegionLogic();

			//regionLogic.getRegionDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionRegion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//regionLogic.getRegionDataAccess().setIsForForeingKeyData(true);

					regionLogic.getTodosRegionsWithConnection(sFinalQuery,new Pagination());

					this.regionsForeignKey=regionLogic.getRegions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaRegion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					regionLogic.getEntityWithConnection(clienteSessionBean.getlidRegionActual());
					this.regionsForeignKey.add(regionLogic.getRegion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProvinciasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.provinciasForeignKey=new ArrayList<Provincia>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProvinciaLogic provinciaLogic=new ProvinciaLogic();

			//provinciaLogic.getProvinciaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//provinciaLogic.getProvinciaDataAccess().setIsForForeingKeyData(true);

					provinciaLogic.getTodosProvinciasWithConnection(sFinalQuery,new Pagination());

					this.provinciasForeignKey=provinciaLogic.getProvincias();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProvincia(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					provinciaLogic.getEntityWithConnection(clienteSessionBean.getlidProvinciaActual());
					this.provinciasForeignKey.add(provinciaLogic.getProvincia());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadsForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadsForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(clienteSessionBean.getlidCiudadActual());
					this.ciudadsForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosZonasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.zonasForeignKey=new ArrayList<Zona>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ZonaLogic zonaLogic=new ZonaLogic();

			//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

					zonaLogic.getTodosZonasWithConnection(sFinalQuery,new Pagination());

					this.zonasForeignKey=zonaLogic.getZonas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaZona(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					zonaLogic.getEntityWithConnection(clienteSessionBean.getlidZonaActual());
					this.zonasForeignKey.add(zonaLogic.getZona());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaisNacionalidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paisnacionalidadsForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisnacionalidadLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paisnacionalidadsForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPaisNacionalidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(clienteSessionBean.getlidPaisNacionalidadActual());
					this.paisnacionalidadsForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCargoLabosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocargolabosForeignKey=new ArrayList<TipoCargoLabo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCargoLaboLogic tipocargolaboLogic=new TipoCargoLaboLogic();

			//tipocargolaboLogic.getTipoCargoLaboDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoCargoLabo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocargolaboLogic.getTipoCargoLaboDataAccess().setIsForForeingKeyData(true);

					tipocargolaboLogic.getTodosTipoCargoLabosWithConnection(sFinalQuery,new Pagination());

					this.tipocargolabosForeignKey=tipocargolaboLogic.getTipoCargoLabos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCargoLabo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocargolaboLogic.getEntityWithConnection(clienteSessionBean.getlidTipoCargoLaboActual());
					this.tipocargolabosForeignKey.add(tipocargolaboLogic.getTipoCargoLabo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoNivelEdusForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoNivelEduLogic tiponiveleduLogic=new TipoNivelEduLogic();

			//tiponiveleduLogic.getTipoNivelEduDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiponiveleduLogic.getTipoNivelEduDataAccess().setIsForForeingKeyData(true);

					tiponiveleduLogic.getTodosTipoNivelEdusWithConnection(sFinalQuery,new Pagination());

					this.tiponiveledusForeignKey=tiponiveleduLogic.getTipoNivelEdus();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoNivelEdu(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiponiveleduLogic.getEntityWithConnection(clienteSessionBean.getlidTipoNivelEduActual());
					this.tiponiveledusForeignKey.add(tiponiveleduLogic.getTipoNivelEdu());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProfesionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.profesionsForeignKey=new ArrayList<Profesion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProfesionLogic profesionLogic=new ProfesionLogic();

			//profesionLogic.getProfesionDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionProfesion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//profesionLogic.getProfesionDataAccess().setIsForForeingKeyData(true);

					profesionLogic.getTodosProfesionsWithConnection(sFinalQuery,new Pagination());

					this.profesionsForeignKey=profesionLogic.getProfesions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProfesion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					profesionLogic.getEntityWithConnection(clienteSessionBean.getlidProfesionActual());
					this.profesionsForeignKey.add(profesionLogic.getProfesion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGenerosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGeneroLogic tipogeneroLogic=new TipoGeneroLogic();

			//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

					tipogeneroLogic.getTodosTipoGenerosWithConnection(sFinalQuery,new Pagination());

					this.tipogenerosForeignKey=tipogeneroLogic.getTipoGeneros();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGenero(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogeneroLogic.getEntityWithConnection(clienteSessionBean.getlidTipoGeneroActual());
					this.tipogenerosForeignKey.add(tipogeneroLogic.getTipoGenero());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoCivilsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoCivilLogic estadocivilLogic=new EstadoCivilLogic();

			//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

					estadocivilLogic.getTodosEstadoCivilsWithConnection(sFinalQuery,new Pagination());

					this.estadocivilsForeignKey=estadocivilLogic.getEstadoCivils();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoCivil(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadocivilLogic.getEntityWithConnection(clienteSessionBean.getlidEstadoCivilActual());
					this.estadocivilsForeignKey.add(estadocivilLogic.getEstadoCivil());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoLegalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadolegalsForeignKey=new ArrayList<EstadoLegal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoLegalLogic estadolegalLogic=new EstadoLegalLogic();

			//estadolegalLogic.getEstadoLegalDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadolegalLogic.getEstadoLegalDataAccess().setIsForForeingKeyData(true);

					estadolegalLogic.getTodosEstadoLegalsWithConnection(sFinalQuery,new Pagination());

					this.estadolegalsForeignKey=estadolegalLogic.getEstadoLegals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoLegal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadolegalLogic.getEntityWithConnection(clienteSessionBean.getlidEstadoLegalActual());
					this.estadolegalsForeignKey.add(estadolegalLogic.getEstadoLegal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(clienteSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosRutasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.rutasForeignKey=new ArrayList<Ruta>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			RutaLogic rutaLogic=new RutaLogic();

			//rutaLogic.getRutaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionRuta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//rutaLogic.getRutaDataAccess().setIsForForeingKeyData(true);

					rutaLogic.getTodosRutasWithConnection(sFinalQuery,new Pagination());

					this.rutasForeignKey=rutaLogic.getRutas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaRuta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					rutaLogic.getEntityWithConnection(clienteSessionBean.getlidRutaActual());
					this.rutasForeignKey.add(rutaLogic.getRuta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(clienteSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroActividadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centroactividadsForeignKey=new ArrayList<CentroActividad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroActividadLogic centroactividadLogic=new CentroActividadLogic();

			//centroactividadLogic.getCentroActividadDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centroactividadLogic.getCentroActividadDataAccess().setIsForForeingKeyData(true);

					centroactividadLogic.getTodosCentroActividadsWithConnection(sFinalQuery,new Pagination());

					this.centroactividadsForeignKey=centroactividadLogic.getCentroActividads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroActividad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centroactividadLogic.getEntityWithConnection(clienteSessionBean.getlidCentroActividadActual());
					this.centroactividadsForeignKey.add(centroactividadLogic.getCentroActividad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGarantiaEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogarantiaempresasForeignKey=new ArrayList<TipoGarantiaEmpresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGarantiaEmpresaLogic tipogarantiaempresaLogic=new TipoGarantiaEmpresaLogic();

			//tipogarantiaempresaLogic.getTipoGarantiaEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGarantiaEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogarantiaempresaLogic.getTipoGarantiaEmpresaDataAccess().setIsForForeingKeyData(true);

					tipogarantiaempresaLogic.getTodosTipoGarantiaEmpresasWithConnection(sFinalQuery,new Pagination());

					this.tipogarantiaempresasForeignKey=tipogarantiaempresaLogic.getTipoGarantiaEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGarantiaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogarantiaempresaLogic.getEntityWithConnection(clienteSessionBean.getlidTipoGarantiaEmpresaActual());
					this.tipogarantiaempresasForeignKey.add(tipogarantiaempresaLogic.getTipoGarantiaEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCateTipoAfiliacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.catetipoafiliacionsForeignKey=new ArrayList<CateTipoAfiliacion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CateTipoAfiliacionLogic catetipoafiliacionLogic=new CateTipoAfiliacionLogic();

			//catetipoafiliacionLogic.getCateTipoAfiliacionDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCateTipoAfiliacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//catetipoafiliacionLogic.getCateTipoAfiliacionDataAccess().setIsForForeingKeyData(true);

					catetipoafiliacionLogic.getTodosCateTipoAfiliacionsWithConnection(sFinalQuery,new Pagination());

					this.catetipoafiliacionsForeignKey=catetipoafiliacionLogic.getCateTipoAfiliacions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCateTipoAfiliacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					catetipoafiliacionLogic.getEntityWithConnection(clienteSessionBean.getlidCateTipoAfiliacionActual());
					this.catetipoafiliacionsForeignKey.add(catetipoafiliacionLogic.getCateTipoAfiliacion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosDiasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.diasForeignKey=new ArrayList<Dia>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			DiaLogic diaLogic=new DiaLogic();

			//diaLogic.getDiaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionDia()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//diaLogic.getDiaDataAccess().setIsForForeingKeyData(true);

					diaLogic.getTodosDiasWithConnection(sFinalQuery,new Pagination());

					this.diasForeignKey=diaLogic.getDias();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaDia(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					diaLogic.getEntityWithConnection(clienteSessionBean.getlidDiaActual());
					this.diasForeignKey.add(diaLogic.getDia());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(clienteSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPrecioLogic tipoprecioLogic=new TipoPrecioLogic();

			//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

					tipoprecioLogic.getTodosTipoPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipopreciosForeignKey=tipoprecioLogic.getTipoPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getEntityWithConnection(clienteSessionBean.getlidTipoPrecioActual());
					this.tipopreciosForeignKey.add(tipoprecioLogic.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoListaPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipolistapreciosForeignKey=new ArrayList<TipoListaPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoListaPrecioLogic tipolistaprecioLogic=new TipoListaPrecioLogic();

			//tipolistaprecioLogic.getTipoListaPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoListaPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipolistaprecioLogic.getTipoListaPrecioDataAccess().setIsForForeingKeyData(true);

					tipolistaprecioLogic.getTodosTipoListaPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipolistapreciosForeignKey=tipolistaprecioLogic.getTipoListaPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoListaPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipolistaprecioLogic.getEntityWithConnection(clienteSessionBean.getlidTipoListaPrecioActual());
					this.tipolistapreciosForeignKey.add(tipolistaprecioLogic.getTipoListaPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaCliente.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaClienteGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaClienteGenerico!=null && jComboBoxid_empresaClienteGenerico.getItemCount()>0) {
					jComboBoxid_empresaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalCliente.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalClienteGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalClienteGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalClienteGenerico!=null && jComboBoxid_sucursalClienteGenerico.getItemCount()>0) {
					jComboBoxid_sucursalClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoIdentificacionForeignKey(Long idTipoIdentificacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoidentificacionTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTipoIdentificacion(tipoidentificacionTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setSelectedItem(tipoidentificacionTemp);
					}
				} else {
					//jComboBoxid_tipo_identificacionCliente.setSelectedItem(tipoidentificacionTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoIdentificacionForeignKeyDescripcion(Long idTipoIdentificacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}


			sDescripcion=TipoIdentificacionConstantesFunciones.getTipoIdentificacionDescripcion(tipoidentificacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoIdentificacionForeignKeyGenerico(Long idTipoIdentificacionSeleccionado,JComboBox jComboBoxid_tipo_identificacionClienteGenerico)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}

			if(tipoidentificacionTemp!=null) {
				jComboBoxid_tipo_identificacionClienteGenerico.setSelectedItem(tipoidentificacionTemp);
			} else {
				if(jComboBoxid_tipo_identificacionClienteGenerico!=null && jComboBoxid_tipo_identificacionClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_identificacionClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualGrupoClienteForeignKey(Long idGrupoClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			GrupoCliente  grupoclienteTemp=null;

			for(GrupoCliente grupoclienteAux:grupoclientesForeignKey) {
				if(grupoclienteAux.getId()!=null && grupoclienteAux.getId().equals(idGrupoClienteSeleccionado)) {
					grupoclienteTemp=grupoclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(grupoclienteTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setGrupoCliente(grupoclienteTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setSelectedItem(grupoclienteTemp);
					}
				} else {
					//jComboBoxid_grupo_clienteCliente.setSelectedItem(grupoclienteTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdGrupoCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(grupoclienteTemp!=null && jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente!=null) {
						jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.setSelectedItem(grupoclienteTemp);
					} else {
						if(jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente!=null) {
							//jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.setSelectedItem(grupoclienteTemp);
							if(jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.getItemCount()>0) {
								jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualGrupoClienteForeignKeyDescripcion(Long idGrupoClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			GrupoCliente  grupoclienteTemp=null;

			for(GrupoCliente grupoclienteAux:grupoclientesForeignKey) {
				if(grupoclienteAux.getId()!=null && grupoclienteAux.getId().equals(idGrupoClienteSeleccionado)) {
					grupoclienteTemp=grupoclienteAux;
					break;
				}
			}


			sDescripcion=GrupoClienteConstantesFunciones.getGrupoClienteDescripcion(grupoclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualGrupoClienteForeignKeyGenerico(Long idGrupoClienteSeleccionado,JComboBox jComboBoxid_grupo_clienteClienteGenerico)throws Exception
	{
		try
		{
			GrupoCliente  grupoclienteTemp=null;

			for(GrupoCliente grupoclienteAux:grupoclientesForeignKey) {
				if(grupoclienteAux.getId()!=null && grupoclienteAux.getId().equals(idGrupoClienteSeleccionado)) {
					grupoclienteTemp=grupoclienteAux;
					break;
				}
			}

			if(grupoclienteTemp!=null) {
				jComboBoxid_grupo_clienteClienteGenerico.setSelectedItem(grupoclienteTemp);
			} else {
				if(jComboBoxid_grupo_clienteClienteGenerico!=null && jComboBoxid_grupo_clienteClienteGenerico.getItemCount()>0) {
					jComboBoxid_grupo_clienteClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTituloClienteForeignKey(Long idTituloClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TituloCliente  tituloclienteTemp=null;

			for(TituloCliente tituloclienteAux:tituloclientesForeignKey) {
				if(tituloclienteAux.getId()!=null && tituloclienteAux.getId().equals(idTituloClienteSeleccionado)) {
					tituloclienteTemp=tituloclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tituloclienteTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTituloCliente(tituloclienteTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setSelectedItem(tituloclienteTemp);
					}
				} else {
					//jComboBoxid_titulo_clienteCliente.setSelectedItem(tituloclienteTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTituloCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(tituloclienteTemp!=null && jComboBoxid_titulo_clienteFK_IdTituloClienteCliente!=null) {
						jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.setSelectedItem(tituloclienteTemp);
					} else {
						if(jComboBoxid_titulo_clienteFK_IdTituloClienteCliente!=null) {
							//jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.setSelectedItem(tituloclienteTemp);
							if(jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.getItemCount()>0) {
								jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTituloClienteForeignKeyDescripcion(Long idTituloClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TituloCliente  tituloclienteTemp=null;

			for(TituloCliente tituloclienteAux:tituloclientesForeignKey) {
				if(tituloclienteAux.getId()!=null && tituloclienteAux.getId().equals(idTituloClienteSeleccionado)) {
					tituloclienteTemp=tituloclienteAux;
					break;
				}
			}


			sDescripcion=TituloClienteConstantesFunciones.getTituloClienteDescripcion(tituloclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTituloClienteForeignKeyGenerico(Long idTituloClienteSeleccionado,JComboBox jComboBoxid_titulo_clienteClienteGenerico)throws Exception
	{
		try
		{
			TituloCliente  tituloclienteTemp=null;

			for(TituloCliente tituloclienteAux:tituloclientesForeignKey) {
				if(tituloclienteAux.getId()!=null && tituloclienteAux.getId().equals(idTituloClienteSeleccionado)) {
					tituloclienteTemp=tituloclienteAux;
					break;
				}
			}

			if(tituloclienteTemp!=null) {
				jComboBoxid_titulo_clienteClienteGenerico.setSelectedItem(tituloclienteTemp);
			} else {
				if(jComboBoxid_titulo_clienteClienteGenerico!=null && jComboBoxid_titulo_clienteClienteGenerico.getItemCount()>0) {
					jComboBoxid_titulo_clienteClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAreaCrForeignKey(Long idAreaCrSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AreaCr  areacrTemp=null;

			for(AreaCr areacrAux:areacrsForeignKey) {
				if(areacrAux.getId()!=null && areacrAux.getId().equals(idAreaCrSeleccionado)) {
					areacrTemp=areacrAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(areacrTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setAreaCr(areacrTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setSelectedItem(areacrTemp);
					}
				} else {
					//jComboBoxid_area_crCliente.setSelectedItem(areacrTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAreaCrForeignKeyDescripcion(Long idAreaCrSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AreaCr  areacrTemp=null;

			for(AreaCr areacrAux:areacrsForeignKey) {
				if(areacrAux.getId()!=null && areacrAux.getId().equals(idAreaCrSeleccionado)) {
					areacrTemp=areacrAux;
					break;
				}
			}


			sDescripcion=AreaCrConstantesFunciones.getAreaCrDescripcion(areacrTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAreaCrForeignKeyGenerico(Long idAreaCrSeleccionado,JComboBox jComboBoxid_area_crClienteGenerico)throws Exception
	{
		try
		{
			AreaCr  areacrTemp=null;

			for(AreaCr areacrAux:areacrsForeignKey) {
				if(areacrAux.getId()!=null && areacrAux.getId().equals(idAreaCrSeleccionado)) {
					areacrTemp=areacrAux;
					break;
				}
			}

			if(areacrTemp!=null) {
				jComboBoxid_area_crClienteGenerico.setSelectedItem(areacrTemp);
			} else {
				if(jComboBoxid_area_crClienteGenerico!=null && jComboBoxid_area_crClienteGenerico.getItemCount()>0) {
					jComboBoxid_area_crClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoClienteForeignKey(Long idEstadoClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoCliente  estadoclienteTemp=null;

			for(EstadoCliente estadoclienteAux:estadoclientesForeignKey) {
				if(estadoclienteAux.getId()!=null && estadoclienteAux.getId().equals(idEstadoClienteSeleccionado)) {
					estadoclienteTemp=estadoclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoclienteTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setEstadoCliente(estadoclienteTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setSelectedItem(estadoclienteTemp);
					}
				} else {
					//jComboBoxid_estado_clienteCliente.setSelectedItem(estadoclienteTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadoclienteTemp!=null && jComboBoxid_estado_clienteFK_IdEstadoClienteCliente!=null) {
						jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.setSelectedItem(estadoclienteTemp);
					} else {
						if(jComboBoxid_estado_clienteFK_IdEstadoClienteCliente!=null) {
							//jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.setSelectedItem(estadoclienteTemp);
							if(jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.getItemCount()>0) {
								jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoClienteForeignKeyDescripcion(Long idEstadoClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoCliente  estadoclienteTemp=null;

			for(EstadoCliente estadoclienteAux:estadoclientesForeignKey) {
				if(estadoclienteAux.getId()!=null && estadoclienteAux.getId().equals(idEstadoClienteSeleccionado)) {
					estadoclienteTemp=estadoclienteAux;
					break;
				}
			}


			sDescripcion=EstadoClienteConstantesFunciones.getEstadoClienteDescripcion(estadoclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoClienteForeignKeyGenerico(Long idEstadoClienteSeleccionado,JComboBox jComboBoxid_estado_clienteClienteGenerico)throws Exception
	{
		try
		{
			EstadoCliente  estadoclienteTemp=null;

			for(EstadoCliente estadoclienteAux:estadoclientesForeignKey) {
				if(estadoclienteAux.getId()!=null && estadoclienteAux.getId().equals(idEstadoClienteSeleccionado)) {
					estadoclienteTemp=estadoclienteAux;
					break;
				}
			}

			if(estadoclienteTemp!=null) {
				jComboBoxid_estado_clienteClienteGenerico.setSelectedItem(estadoclienteTemp);
			} else {
				if(jComboBoxid_estado_clienteClienteGenerico!=null && jComboBoxid_estado_clienteClienteGenerico.getItemCount()>0) {
					jComboBoxid_estado_clienteClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisCliente.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisClienteGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisClienteGenerico!=null && jComboBoxid_paisClienteGenerico.getItemCount()>0) {
					jComboBoxid_paisClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualRegionForeignKey(Long idRegionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Region  regionTemp=null;

			for(Region regionAux:regionsForeignKey) {
				if(regionAux.getId()!=null && regionAux.getId().equals(idRegionSeleccionado)) {
					regionTemp=regionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(regionTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setRegion(regionTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setSelectedItem(regionTemp);
					}
				} else {
					//jComboBoxid_regionCliente.setSelectedItem(regionTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualRegionForeignKeyDescripcion(Long idRegionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Region  regionTemp=null;

			for(Region regionAux:regionsForeignKey) {
				if(regionAux.getId()!=null && regionAux.getId().equals(idRegionSeleccionado)) {
					regionTemp=regionAux;
					break;
				}
			}


			sDescripcion=RegionConstantesFunciones.getRegionDescripcion(regionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualRegionForeignKeyGenerico(Long idRegionSeleccionado,JComboBox jComboBoxid_regionClienteGenerico)throws Exception
	{
		try
		{
			Region  regionTemp=null;

			for(Region regionAux:regionsForeignKey) {
				if(regionAux.getId()!=null && regionAux.getId().equals(idRegionSeleccionado)) {
					regionTemp=regionAux;
					break;
				}
			}

			if(regionTemp!=null) {
				jComboBoxid_regionClienteGenerico.setSelectedItem(regionTemp);
			} else {
				if(jComboBoxid_regionClienteGenerico!=null && jComboBoxid_regionClienteGenerico.getItemCount()>0) {
					jComboBoxid_regionClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProvinciaForeignKey(Long idProvinciaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(provinciaTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setProvincia(provinciaTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setSelectedItem(provinciaTemp);
					}
				} else {
					//jComboBoxid_provinciaCliente.setSelectedItem(provinciaTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProvinciaForeignKeyDescripcion(Long idProvinciaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}


			sDescripcion=ProvinciaConstantesFunciones.getProvinciaDescripcion(provinciaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProvinciaForeignKeyGenerico(Long idProvinciaSeleccionado,JComboBox jComboBoxid_provinciaClienteGenerico)throws Exception
	{
		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}

			if(provinciaTemp!=null) {
				jComboBoxid_provinciaClienteGenerico.setSelectedItem(provinciaTemp);
			} else {
				if(jComboBoxid_provinciaClienteGenerico!=null && jComboBoxid_provinciaClienteGenerico.getItemCount()>0) {
					jComboBoxid_provinciaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadForeignKey(Long idCiudadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setCiudad(ciudadTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setSelectedItem(ciudadTemp);
					}
				} else {
					//jComboBoxid_ciudadCliente.setSelectedItem(ciudadTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadForeignKeyDescripcion(Long idCiudadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadForeignKeyGenerico(Long idCiudadSeleccionado,JComboBox jComboBoxid_ciudadClienteGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(ciudadTemp!=null) {
				jComboBoxid_ciudadClienteGenerico.setSelectedItem(ciudadTemp);
			} else {
				if(jComboBoxid_ciudadClienteGenerico!=null && jComboBoxid_ciudadClienteGenerico.getItemCount()>0) {
					jComboBoxid_ciudadClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualZonaForeignKey(Long idZonaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(zonaTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setZona(zonaTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setSelectedItem(zonaTemp);
					}
				} else {
					//jComboBoxid_zonaCliente.setSelectedItem(zonaTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){
					if(zonaTemp!=null && jComboBoxid_zonaFK_IdZonaCliente!=null) {
						jComboBoxid_zonaFK_IdZonaCliente.setSelectedItem(zonaTemp);
					} else {
						if(jComboBoxid_zonaFK_IdZonaCliente!=null) {
							//jComboBoxid_zonaFK_IdZonaCliente.setSelectedItem(zonaTemp);
							if(jComboBoxid_zonaFK_IdZonaCliente.getItemCount()>0) {
								jComboBoxid_zonaFK_IdZonaCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualZonaForeignKeyDescripcion(Long idZonaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}


			sDescripcion=ZonaConstantesFunciones.getZonaDescripcion(zonaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualZonaForeignKeyGenerico(Long idZonaSeleccionado,JComboBox jComboBoxid_zonaClienteGenerico)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(zonaTemp!=null) {
				jComboBoxid_zonaClienteGenerico.setSelectedItem(zonaTemp);
			} else {
				if(jComboBoxid_zonaClienteGenerico!=null && jComboBoxid_zonaClienteGenerico.getItemCount()>0) {
					jComboBoxid_zonaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisNacionalidadForeignKey(Long idPaisNacionalidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisnacionalidadTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setPaisNacionalidad(paisnacionalidadTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setSelectedItem(paisnacionalidadTemp);
					}
				} else {
					//jComboBoxid_pais_nacionalidadCliente.setSelectedItem(paisnacionalidadTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisNacionalidadForeignKeyDescripcion(Long idPaisNacionalidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisnacionalidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisNacionalidadForeignKeyGenerico(Long idPaisNacionalidadSeleccionado,JComboBox jComboBoxid_pais_nacionalidadClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}

			if(paisnacionalidadTemp!=null) {
				jComboBoxid_pais_nacionalidadClienteGenerico.setSelectedItem(paisnacionalidadTemp);
			} else {
				if(jComboBoxid_pais_nacionalidadClienteGenerico!=null && jComboBoxid_pais_nacionalidadClienteGenerico.getItemCount()>0) {
					jComboBoxid_pais_nacionalidadClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCargoLaboForeignKey(Long idTipoCargoLaboSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCargoLabo  tipocargolaboTemp=null;

			for(TipoCargoLabo tipocargolaboAux:tipocargolabosForeignKey) {
				if(tipocargolaboAux.getId()!=null && tipocargolaboAux.getId().equals(idTipoCargoLaboSeleccionado)) {
					tipocargolaboTemp=tipocargolaboAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocargolaboTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTipoCargoLabo(tipocargolaboTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setSelectedItem(tipocargolaboTemp);
					}
				} else {
					//jComboBoxid_tipo_cargo_laboCliente.setSelectedItem(tipocargolaboTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCargoLaboForeignKeyDescripcion(Long idTipoCargoLaboSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCargoLabo  tipocargolaboTemp=null;

			for(TipoCargoLabo tipocargolaboAux:tipocargolabosForeignKey) {
				if(tipocargolaboAux.getId()!=null && tipocargolaboAux.getId().equals(idTipoCargoLaboSeleccionado)) {
					tipocargolaboTemp=tipocargolaboAux;
					break;
				}
			}


			sDescripcion=TipoCargoLaboConstantesFunciones.getTipoCargoLaboDescripcion(tipocargolaboTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCargoLaboForeignKeyGenerico(Long idTipoCargoLaboSeleccionado,JComboBox jComboBoxid_tipo_cargo_laboClienteGenerico)throws Exception
	{
		try
		{
			TipoCargoLabo  tipocargolaboTemp=null;

			for(TipoCargoLabo tipocargolaboAux:tipocargolabosForeignKey) {
				if(tipocargolaboAux.getId()!=null && tipocargolaboAux.getId().equals(idTipoCargoLaboSeleccionado)) {
					tipocargolaboTemp=tipocargolaboAux;
					break;
				}
			}

			if(tipocargolaboTemp!=null) {
				jComboBoxid_tipo_cargo_laboClienteGenerico.setSelectedItem(tipocargolaboTemp);
			} else {
				if(jComboBoxid_tipo_cargo_laboClienteGenerico!=null && jComboBoxid_tipo_cargo_laboClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cargo_laboClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoNivelEduForeignKey(Long idTipoNivelEduSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiponiveleduTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTipoNivelEdu(tiponiveleduTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setSelectedItem(tiponiveleduTemp);
					}
				} else {
					//jComboBoxid_tipo_nivel_eduCliente.setSelectedItem(tiponiveleduTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoNivelEduForeignKeyDescripcion(Long idTipoNivelEduSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}


			sDescripcion=TipoNivelEduConstantesFunciones.getTipoNivelEduDescripcion(tiponiveleduTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoNivelEduForeignKeyGenerico(Long idTipoNivelEduSeleccionado,JComboBox jComboBoxid_tipo_nivel_eduClienteGenerico)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}

			if(tiponiveleduTemp!=null) {
				jComboBoxid_tipo_nivel_eduClienteGenerico.setSelectedItem(tiponiveleduTemp);
			} else {
				if(jComboBoxid_tipo_nivel_eduClienteGenerico!=null && jComboBoxid_tipo_nivel_eduClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_nivel_eduClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProfesionForeignKey(Long idProfesionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Profesion  profesionTemp=null;

			for(Profesion profesionAux:profesionsForeignKey) {
				if(profesionAux.getId()!=null && profesionAux.getId().equals(idProfesionSeleccionado)) {
					profesionTemp=profesionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(profesionTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setProfesion(profesionTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setSelectedItem(profesionTemp);
					}
				} else {
					//jComboBoxid_profesionCliente.setSelectedItem(profesionTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProfesionForeignKeyDescripcion(Long idProfesionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Profesion  profesionTemp=null;

			for(Profesion profesionAux:profesionsForeignKey) {
				if(profesionAux.getId()!=null && profesionAux.getId().equals(idProfesionSeleccionado)) {
					profesionTemp=profesionAux;
					break;
				}
			}


			sDescripcion=ProfesionConstantesFunciones.getProfesionDescripcion(profesionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProfesionForeignKeyGenerico(Long idProfesionSeleccionado,JComboBox jComboBoxid_profesionClienteGenerico)throws Exception
	{
		try
		{
			Profesion  profesionTemp=null;

			for(Profesion profesionAux:profesionsForeignKey) {
				if(profesionAux.getId()!=null && profesionAux.getId().equals(idProfesionSeleccionado)) {
					profesionTemp=profesionAux;
					break;
				}
			}

			if(profesionTemp!=null) {
				jComboBoxid_profesionClienteGenerico.setSelectedItem(profesionTemp);
			} else {
				if(jComboBoxid_profesionClienteGenerico!=null && jComboBoxid_profesionClienteGenerico.getItemCount()>0) {
					jComboBoxid_profesionClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGeneroForeignKey(Long idTipoGeneroSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogeneroTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTipoGenero(tipogeneroTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setSelectedItem(tipogeneroTemp);
					}
				} else {
					//jComboBoxid_tipo_generoCliente.setSelectedItem(tipogeneroTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGeneroForeignKeyDescripcion(Long idTipoGeneroSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}


			sDescripcion=TipoGeneroConstantesFunciones.getTipoGeneroDescripcion(tipogeneroTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGeneroForeignKeyGenerico(Long idTipoGeneroSeleccionado,JComboBox jComboBoxid_tipo_generoClienteGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(tipogeneroTemp!=null) {
				jComboBoxid_tipo_generoClienteGenerico.setSelectedItem(tipogeneroTemp);
			} else {
				if(jComboBoxid_tipo_generoClienteGenerico!=null && jComboBoxid_tipo_generoClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_generoClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoCivilForeignKey(Long idEstadoCivilSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadocivilTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setEstadoCivil(estadocivilTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setSelectedItem(estadocivilTemp);
					}
				} else {
					//jComboBoxid_estado_civilCliente.setSelectedItem(estadocivilTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoCivilForeignKeyDescripcion(Long idEstadoCivilSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}


			sDescripcion=EstadoCivilConstantesFunciones.getEstadoCivilDescripcion(estadocivilTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoCivilForeignKeyGenerico(Long idEstadoCivilSeleccionado,JComboBox jComboBoxid_estado_civilClienteGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(estadocivilTemp!=null) {
				jComboBoxid_estado_civilClienteGenerico.setSelectedItem(estadocivilTemp);
			} else {
				if(jComboBoxid_estado_civilClienteGenerico!=null && jComboBoxid_estado_civilClienteGenerico.getItemCount()>0) {
					jComboBoxid_estado_civilClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoLegalForeignKey(Long idEstadoLegalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadolegalTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setEstadoLegal(estadolegalTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setSelectedItem(estadolegalTemp);
					}
				} else {
					//jComboBoxid_estado_legalCliente.setSelectedItem(estadolegalTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoLegal") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadolegalTemp!=null && jComboBoxid_estado_legalFK_IdEstadoLegalCliente!=null) {
						jComboBoxid_estado_legalFK_IdEstadoLegalCliente.setSelectedItem(estadolegalTemp);
					} else {
						if(jComboBoxid_estado_legalFK_IdEstadoLegalCliente!=null) {
							//jComboBoxid_estado_legalFK_IdEstadoLegalCliente.setSelectedItem(estadolegalTemp);
							if(jComboBoxid_estado_legalFK_IdEstadoLegalCliente.getItemCount()>0) {
								jComboBoxid_estado_legalFK_IdEstadoLegalCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoLegalForeignKeyDescripcion(Long idEstadoLegalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}


			sDescripcion=EstadoLegalConstantesFunciones.getEstadoLegalDescripcion(estadolegalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoLegalForeignKeyGenerico(Long idEstadoLegalSeleccionado,JComboBox jComboBoxid_estado_legalClienteGenerico)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}

			if(estadolegalTemp!=null) {
				jComboBoxid_estado_legalClienteGenerico.setSelectedItem(estadolegalTemp);
			} else {
				if(jComboBoxid_estado_legalClienteGenerico!=null && jComboBoxid_estado_legalClienteGenerico.getItemCount()>0) {
					jComboBoxid_estado_legalClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableCliente.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableClienteGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableClienteGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableClienteGenerico!=null && jComboBoxid_cuenta_contableClienteGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualRutaForeignKey(Long idRutaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ruta  rutaTemp=null;

			for(Ruta rutaAux:rutasForeignKey) {
				if(rutaAux.getId()!=null && rutaAux.getId().equals(idRutaSeleccionado)) {
					rutaTemp=rutaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(rutaTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setRuta(rutaTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setSelectedItem(rutaTemp);
					}
				} else {
					//jComboBoxid_rutaCliente.setSelectedItem(rutaTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdRuta") || sFormularioTipoBusqueda.equals("Todos")){
					if(rutaTemp!=null && jComboBoxid_rutaFK_IdRutaCliente!=null) {
						jComboBoxid_rutaFK_IdRutaCliente.setSelectedItem(rutaTemp);
					} else {
						if(jComboBoxid_rutaFK_IdRutaCliente!=null) {
							//jComboBoxid_rutaFK_IdRutaCliente.setSelectedItem(rutaTemp);
							if(jComboBoxid_rutaFK_IdRutaCliente.getItemCount()>0) {
								jComboBoxid_rutaFK_IdRutaCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualRutaForeignKeyDescripcion(Long idRutaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ruta  rutaTemp=null;

			for(Ruta rutaAux:rutasForeignKey) {
				if(rutaAux.getId()!=null && rutaAux.getId().equals(idRutaSeleccionado)) {
					rutaTemp=rutaAux;
					break;
				}
			}


			sDescripcion=RutaConstantesFunciones.getRutaDescripcion(rutaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualRutaForeignKeyGenerico(Long idRutaSeleccionado,JComboBox jComboBoxid_rutaClienteGenerico)throws Exception
	{
		try
		{
			Ruta  rutaTemp=null;

			for(Ruta rutaAux:rutasForeignKey) {
				if(rutaAux.getId()!=null && rutaAux.getId().equals(idRutaSeleccionado)) {
					rutaTemp=rutaAux;
					break;
				}
			}

			if(rutaTemp!=null) {
				jComboBoxid_rutaClienteGenerico.setSelectedItem(rutaTemp);
			} else {
				if(jComboBoxid_rutaClienteGenerico!=null && jComboBoxid_rutaClienteGenerico.getItemCount()>0) {
					jComboBoxid_rutaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorCliente.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorCliente!=null) {
						jComboBoxid_vendedorFK_IdVendedorCliente.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorCliente!=null) {
							//jComboBoxid_vendedorFK_IdVendedorCliente.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorCliente.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorClienteGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorClienteGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorClienteGenerico!=null && jComboBoxid_vendedorClienteGenerico.getItemCount()>0) {
					jComboBoxid_vendedorClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroActividadForeignKey(Long idCentroActividadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centroactividadTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setCentroActividad(centroactividadTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setSelectedItem(centroactividadTemp);
					}
				} else {
					//jComboBoxid_centro_actividadCliente.setSelectedItem(centroactividadTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroActividadForeignKeyDescripcion(Long idCentroActividadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}


			sDescripcion=CentroActividadConstantesFunciones.getCentroActividadDescripcion(centroactividadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroActividadForeignKeyGenerico(Long idCentroActividadSeleccionado,JComboBox jComboBoxid_centro_actividadClienteGenerico)throws Exception
	{
		try
		{
			CentroActividad  centroactividadTemp=null;

			for(CentroActividad centroactividadAux:centroactividadsForeignKey) {
				if(centroactividadAux.getId()!=null && centroactividadAux.getId().equals(idCentroActividadSeleccionado)) {
					centroactividadTemp=centroactividadAux;
					break;
				}
			}

			if(centroactividadTemp!=null) {
				jComboBoxid_centro_actividadClienteGenerico.setSelectedItem(centroactividadTemp);
			} else {
				if(jComboBoxid_centro_actividadClienteGenerico!=null && jComboBoxid_centro_actividadClienteGenerico.getItemCount()>0) {
					jComboBoxid_centro_actividadClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGarantiaEmpresaForeignKey(Long idTipoGarantiaEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGarantiaEmpresa  tipogarantiaempresaTemp=null;

			for(TipoGarantiaEmpresa tipogarantiaempresaAux:tipogarantiaempresasForeignKey) {
				if(tipogarantiaempresaAux.getId()!=null && tipogarantiaempresaAux.getId().equals(idTipoGarantiaEmpresaSeleccionado)) {
					tipogarantiaempresaTemp=tipogarantiaempresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogarantiaempresaTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTipoGarantiaEmpresa(tipogarantiaempresaTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setSelectedItem(tipogarantiaempresaTemp);
					}
				} else {
					//jComboBoxid_tipo_garantia_empresaCliente.setSelectedItem(tipogarantiaempresaTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGarantiaEmpresaForeignKeyDescripcion(Long idTipoGarantiaEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGarantiaEmpresa  tipogarantiaempresaTemp=null;

			for(TipoGarantiaEmpresa tipogarantiaempresaAux:tipogarantiaempresasForeignKey) {
				if(tipogarantiaempresaAux.getId()!=null && tipogarantiaempresaAux.getId().equals(idTipoGarantiaEmpresaSeleccionado)) {
					tipogarantiaempresaTemp=tipogarantiaempresaAux;
					break;
				}
			}


			sDescripcion=TipoGarantiaEmpresaConstantesFunciones.getTipoGarantiaEmpresaDescripcion(tipogarantiaempresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGarantiaEmpresaForeignKeyGenerico(Long idTipoGarantiaEmpresaSeleccionado,JComboBox jComboBoxid_tipo_garantia_empresaClienteGenerico)throws Exception
	{
		try
		{
			TipoGarantiaEmpresa  tipogarantiaempresaTemp=null;

			for(TipoGarantiaEmpresa tipogarantiaempresaAux:tipogarantiaempresasForeignKey) {
				if(tipogarantiaempresaAux.getId()!=null && tipogarantiaempresaAux.getId().equals(idTipoGarantiaEmpresaSeleccionado)) {
					tipogarantiaempresaTemp=tipogarantiaempresaAux;
					break;
				}
			}

			if(tipogarantiaempresaTemp!=null) {
				jComboBoxid_tipo_garantia_empresaClienteGenerico.setSelectedItem(tipogarantiaempresaTemp);
			} else {
				if(jComboBoxid_tipo_garantia_empresaClienteGenerico!=null && jComboBoxid_tipo_garantia_empresaClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_garantia_empresaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCateTipoAfiliacionForeignKey(Long idCateTipoAfiliacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CateTipoAfiliacion  catetipoafiliacionTemp=null;

			for(CateTipoAfiliacion catetipoafiliacionAux:catetipoafiliacionsForeignKey) {
				if(catetipoafiliacionAux.getId()!=null && catetipoafiliacionAux.getId().equals(idCateTipoAfiliacionSeleccionado)) {
					catetipoafiliacionTemp=catetipoafiliacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(catetipoafiliacionTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setCateTipoAfiliacion(catetipoafiliacionTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setSelectedItem(catetipoafiliacionTemp);
					}
				} else {
					//jComboBoxid_cate_tipo_afiliacionCliente.setSelectedItem(catetipoafiliacionTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCateTipoAfiliacionForeignKeyDescripcion(Long idCateTipoAfiliacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CateTipoAfiliacion  catetipoafiliacionTemp=null;

			for(CateTipoAfiliacion catetipoafiliacionAux:catetipoafiliacionsForeignKey) {
				if(catetipoafiliacionAux.getId()!=null && catetipoafiliacionAux.getId().equals(idCateTipoAfiliacionSeleccionado)) {
					catetipoafiliacionTemp=catetipoafiliacionAux;
					break;
				}
			}


			sDescripcion=CateTipoAfiliacionConstantesFunciones.getCateTipoAfiliacionDescripcion(catetipoafiliacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCateTipoAfiliacionForeignKeyGenerico(Long idCateTipoAfiliacionSeleccionado,JComboBox jComboBoxid_cate_tipo_afiliacionClienteGenerico)throws Exception
	{
		try
		{
			CateTipoAfiliacion  catetipoafiliacionTemp=null;

			for(CateTipoAfiliacion catetipoafiliacionAux:catetipoafiliacionsForeignKey) {
				if(catetipoafiliacionAux.getId()!=null && catetipoafiliacionAux.getId().equals(idCateTipoAfiliacionSeleccionado)) {
					catetipoafiliacionTemp=catetipoafiliacionAux;
					break;
				}
			}

			if(catetipoafiliacionTemp!=null) {
				jComboBoxid_cate_tipo_afiliacionClienteGenerico.setSelectedItem(catetipoafiliacionTemp);
			} else {
				if(jComboBoxid_cate_tipo_afiliacionClienteGenerico!=null && jComboBoxid_cate_tipo_afiliacionClienteGenerico.getItemCount()>0) {
					jComboBoxid_cate_tipo_afiliacionClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualDiaForeignKey(Long idDiaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Dia  diaTemp=null;

			for(Dia diaAux:diasForeignKey) {
				if(diaAux.getId()!=null && diaAux.getId().equals(idDiaSeleccionado)) {
					diaTemp=diaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(diaTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setDia(diaTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setSelectedItem(diaTemp);
					}
				} else {
					//jComboBoxid_diaCliente.setSelectedItem(diaTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualDiaForeignKeyDescripcion(Long idDiaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Dia  diaTemp=null;

			for(Dia diaAux:diasForeignKey) {
				if(diaAux.getId()!=null && diaAux.getId().equals(idDiaSeleccionado)) {
					diaTemp=diaAux;
					break;
				}
			}


			sDescripcion=DiaConstantesFunciones.getDiaDescripcion(diaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualDiaForeignKeyGenerico(Long idDiaSeleccionado,JComboBox jComboBoxid_diaClienteGenerico)throws Exception
	{
		try
		{
			Dia  diaTemp=null;

			for(Dia diaAux:diasForeignKey) {
				if(diaAux.getId()!=null && diaAux.getId().equals(idDiaSeleccionado)) {
					diaTemp=diaAux;
					break;
				}
			}

			if(diaTemp!=null) {
				jComboBoxid_diaClienteGenerico.setSelectedItem(diaTemp);
			} else {
				if(jComboBoxid_diaClienteGenerico!=null && jComboBoxid_diaClienteGenerico.getItemCount()>0) {
					jComboBoxid_diaClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoCliente.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoClienteGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoClienteGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoClienteGenerico!=null && jComboBoxid_empleadoClienteGenerico.getItemCount()>0) {
					jComboBoxid_empleadoClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPrecioForeignKey(Long idTipoPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprecioTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTipoPrecio(tipoprecioTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setSelectedItem(tipoprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_precioCliente.setSelectedItem(tipoprecioTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprecioTemp!=null && jComboBoxid_tipo_precioFK_IdTipoPrecioCliente!=null) {
						jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.setSelectedItem(tipoprecioTemp);
					} else {
						if(jComboBoxid_tipo_precioFK_IdTipoPrecioCliente!=null) {
							//jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.setSelectedItem(tipoprecioTemp);
							if(jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.getItemCount()>0) {
								jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPrecioForeignKeyDescripcion(Long idTipoPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}


			sDescripcion=TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPrecioForeignKeyGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxid_tipo_precioClienteGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(tipoprecioTemp!=null) {
				jComboBoxid_tipo_precioClienteGenerico.setSelectedItem(tipoprecioTemp);
			} else {
				if(jComboBoxid_tipo_precioClienteGenerico!=null && jComboBoxid_tipo_precioClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_precioClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoListaPrecioForeignKey(Long idTipoListaPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoListaPrecio  tipolistaprecioTemp=null;

			for(TipoListaPrecio tipolistaprecioAux:tipolistapreciosForeignKey) {
				if(tipolistaprecioAux.getId()!=null && tipolistaprecioAux.getId().equals(idTipoListaPrecioSeleccionado)) {
					tipolistaprecioTemp=tipolistaprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipolistaprecioTemp!=null) {

					if(this.cliente!=null) {
						this.cliente.setTipoListaPrecio(tipolistaprecioTemp);
					}

					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setSelectedItem(tipolistaprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_lista_precioCliente.setSelectedItem(tipolistaprecioTemp);
					if(this.jInternalFrameDetalleFormCliente!=null) {
						if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoListaPrecioForeignKeyDescripcion(Long idTipoListaPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoListaPrecio  tipolistaprecioTemp=null;

			for(TipoListaPrecio tipolistaprecioAux:tipolistapreciosForeignKey) {
				if(tipolistaprecioAux.getId()!=null && tipolistaprecioAux.getId().equals(idTipoListaPrecioSeleccionado)) {
					tipolistaprecioTemp=tipolistaprecioAux;
					break;
				}
			}


			sDescripcion=TipoListaPrecioConstantesFunciones.getTipoListaPrecioDescripcion(tipolistaprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoListaPrecioForeignKeyGenerico(Long idTipoListaPrecioSeleccionado,JComboBox jComboBoxid_tipo_lista_precioClienteGenerico)throws Exception
	{
		try
		{
			TipoListaPrecio  tipolistaprecioTemp=null;

			for(TipoListaPrecio tipolistaprecioAux:tipolistapreciosForeignKey) {
				if(tipolistaprecioAux.getId()!=null && tipolistaprecioAux.getId().equals(idTipoListaPrecioSeleccionado)) {
					tipolistaprecioTemp=tipolistaprecioAux;
					break;
				}
			}

			if(tipolistaprecioTemp!=null) {
				jComboBoxid_tipo_lista_precioClienteGenerico.setSelectedItem(tipolistaprecioTemp);
			} else {
				if(jComboBoxid_tipo_lista_precioClienteGenerico!=null && jComboBoxid_tipo_lista_precioClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_lista_precioClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Cliente cliente,JComboBox jComboBoxid_empresaClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaClienteGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaClienteGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				cliente.setid_empresa(empresaAux.getId());
				cliente.setempresa_descripcion(ClienteConstantesFunciones.getEmpresaDescripcion(empresaAux));
				cliente.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Cliente cliente,JComboBox jComboBoxid_sucursalClienteGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalClienteGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalClienteGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				cliente.setid_sucursal(sucursalAux.getId());
				cliente.setsucursal_descripcion(ClienteConstantesFunciones.getSucursalDescripcion(sucursalAux));
				cliente.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoIdentificacionForeignKey(Cliente cliente,JComboBox jComboBoxid_tipo_identificacionClienteGenerico)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionAux=new TipoIdentificacion();

			if(jComboBoxid_tipo_identificacionClienteGenerico==null) {
				tipoidentificacionAux=(TipoIdentificacion)this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.getSelectedItem();
			} else {
				tipoidentificacionAux=(TipoIdentificacion)jComboBoxid_tipo_identificacionClienteGenerico.getSelectedItem();
			}

			if(tipoidentificacionAux!=null && tipoidentificacionAux.getId()!=null) {
				cliente.setid_tipo_identificacion(tipoidentificacionAux.getId());
				cliente.settipoidentificacion_descripcion(ClienteConstantesFunciones.getTipoIdentificacionDescripcion(tipoidentificacionAux));
				cliente.setTipoIdentificacion(tipoidentificacionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarGrupoClienteForeignKey(Cliente cliente,JComboBox jComboBoxid_grupo_clienteClienteGenerico)throws Exception
	{
		try
		{
			GrupoCliente  grupoclienteAux=new GrupoCliente();

			if(jComboBoxid_grupo_clienteClienteGenerico==null) {
				grupoclienteAux=(GrupoCliente)this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.getSelectedItem();
			} else {
				grupoclienteAux=(GrupoCliente)jComboBoxid_grupo_clienteClienteGenerico.getSelectedItem();
			}

			if(grupoclienteAux!=null && grupoclienteAux.getId()!=null) {
				cliente.setid_grupo_cliente(grupoclienteAux.getId());
				cliente.setgrupocliente_descripcion(ClienteConstantesFunciones.getGrupoClienteDescripcion(grupoclienteAux));
				cliente.setGrupoCliente(grupoclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTituloClienteForeignKey(Cliente cliente,JComboBox jComboBoxid_titulo_clienteClienteGenerico)throws Exception
	{
		try
		{
			TituloCliente  tituloclienteAux=new TituloCliente();

			if(jComboBoxid_titulo_clienteClienteGenerico==null) {
				tituloclienteAux=(TituloCliente)this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.getSelectedItem();
			} else {
				tituloclienteAux=(TituloCliente)jComboBoxid_titulo_clienteClienteGenerico.getSelectedItem();
			}

			if(tituloclienteAux!=null && tituloclienteAux.getId()!=null) {
				cliente.setid_titulo_cliente(tituloclienteAux.getId());
				cliente.settitulocliente_descripcion(ClienteConstantesFunciones.getTituloClienteDescripcion(tituloclienteAux));
				cliente.setTituloCliente(tituloclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAreaCrForeignKey(Cliente cliente,JComboBox jComboBoxid_area_crClienteGenerico)throws Exception
	{
		try
		{
			AreaCr  areacrAux=new AreaCr();

			if(jComboBoxid_area_crClienteGenerico==null) {
				areacrAux=(AreaCr)this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.getSelectedItem();
			} else {
				areacrAux=(AreaCr)jComboBoxid_area_crClienteGenerico.getSelectedItem();
			}

			if(areacrAux!=null && areacrAux.getId()!=null) {
				cliente.setid_area_cr(areacrAux.getId());
				cliente.setareacr_descripcion(ClienteConstantesFunciones.getAreaCrDescripcion(areacrAux));
				cliente.setAreaCr(areacrAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoClienteForeignKey(Cliente cliente,JComboBox jComboBoxid_estado_clienteClienteGenerico)throws Exception
	{
		try
		{
			EstadoCliente  estadoclienteAux=new EstadoCliente();

			if(jComboBoxid_estado_clienteClienteGenerico==null) {
				estadoclienteAux=(EstadoCliente)this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.getSelectedItem();
			} else {
				estadoclienteAux=(EstadoCliente)jComboBoxid_estado_clienteClienteGenerico.getSelectedItem();
			}

			if(estadoclienteAux!=null && estadoclienteAux.getId()!=null) {
				cliente.setid_estado_cliente(estadoclienteAux.getId());
				cliente.setestadocliente_descripcion(ClienteConstantesFunciones.getEstadoClienteDescripcion(estadoclienteAux));
				cliente.setEstadoCliente(estadoclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(Cliente cliente,JComboBox jComboBoxid_paisClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisClienteGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisClienteGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				cliente.setid_pais(paisAux.getId());
				cliente.setpais_descripcion(ClienteConstantesFunciones.getPaisDescripcion(paisAux));
				cliente.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarRegionForeignKey(Cliente cliente,JComboBox jComboBoxid_regionClienteGenerico)throws Exception
	{
		try
		{
			Region  regionAux=new Region();

			if(jComboBoxid_regionClienteGenerico==null) {
				regionAux=(Region)this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.getSelectedItem();
			} else {
				regionAux=(Region)jComboBoxid_regionClienteGenerico.getSelectedItem();
			}

			if(regionAux!=null && regionAux.getId()!=null) {
				cliente.setid_region(regionAux.getId());
				cliente.setregion_descripcion(ClienteConstantesFunciones.getRegionDescripcion(regionAux));
				cliente.setRegion(regionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProvinciaForeignKey(Cliente cliente,JComboBox jComboBoxid_provinciaClienteGenerico)throws Exception
	{
		try
		{
			Provincia  provinciaAux=new Provincia();

			if(jComboBoxid_provinciaClienteGenerico==null) {
				provinciaAux=(Provincia)this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.getSelectedItem();
			} else {
				provinciaAux=(Provincia)jComboBoxid_provinciaClienteGenerico.getSelectedItem();
			}

			if(provinciaAux!=null && provinciaAux.getId()!=null) {
				cliente.setid_provincia(provinciaAux.getId());
				cliente.setprovincia_descripcion(ClienteConstantesFunciones.getProvinciaDescripcion(provinciaAux));
				cliente.setProvincia(provinciaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadForeignKey(Cliente cliente,JComboBox jComboBoxid_ciudadClienteGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudadClienteGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudadClienteGenerico.getSelectedItem();
			}

			if(ciudadAux!=null && ciudadAux.getId()!=null) {
				cliente.setid_ciudad(ciudadAux.getId());
				cliente.setciudad_descripcion(ClienteConstantesFunciones.getCiudadDescripcion(ciudadAux));
				cliente.setCiudad(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarZonaForeignKey(Cliente cliente,JComboBox jComboBoxid_zonaClienteGenerico)throws Exception
	{
		try
		{
			Zona  zonaAux=new Zona();

			if(jComboBoxid_zonaClienteGenerico==null) {
				zonaAux=(Zona)this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.getSelectedItem();
			} else {
				zonaAux=(Zona)jComboBoxid_zonaClienteGenerico.getSelectedItem();
			}

			if(zonaAux!=null && zonaAux.getId()!=null) {
				cliente.setid_zona(zonaAux.getId());
				cliente.setzona_descripcion(ClienteConstantesFunciones.getZonaDescripcion(zonaAux));
				cliente.setZona(zonaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisNacionalidadForeignKey(Cliente cliente,JComboBox jComboBoxid_pais_nacionalidadClienteGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_pais_nacionalidadClienteGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_pais_nacionalidadClienteGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				cliente.setid_pais_nacionalidad(paisAux.getId());
				cliente.setpaisnacionalidad_descripcion(ClienteConstantesFunciones.getPaisNacionalidadDescripcion(paisAux));
				cliente.setPaisNacionalidad(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCargoLaboForeignKey(Cliente cliente,JComboBox jComboBoxid_tipo_cargo_laboClienteGenerico)throws Exception
	{
		try
		{
			TipoCargoLabo  tipocargolaboAux=new TipoCargoLabo();

			if(jComboBoxid_tipo_cargo_laboClienteGenerico==null) {
				tipocargolaboAux=(TipoCargoLabo)this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.getSelectedItem();
			} else {
				tipocargolaboAux=(TipoCargoLabo)jComboBoxid_tipo_cargo_laboClienteGenerico.getSelectedItem();
			}

			if(tipocargolaboAux!=null && tipocargolaboAux.getId()!=null) {
				cliente.setid_tipo_cargo_labo(tipocargolaboAux.getId());
				cliente.settipocargolabo_descripcion(ClienteConstantesFunciones.getTipoCargoLaboDescripcion(tipocargolaboAux));
				cliente.setTipoCargoLabo(tipocargolaboAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoNivelEduForeignKey(Cliente cliente,JComboBox jComboBoxid_tipo_nivel_eduClienteGenerico)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduAux=new TipoNivelEdu();

			if(jComboBoxid_tipo_nivel_eduClienteGenerico==null) {
				tiponiveleduAux=(TipoNivelEdu)this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.getSelectedItem();
			} else {
				tiponiveleduAux=(TipoNivelEdu)jComboBoxid_tipo_nivel_eduClienteGenerico.getSelectedItem();
			}

			if(tiponiveleduAux!=null && tiponiveleduAux.getId()!=null) {
				cliente.setid_tipo_nivel_edu(tiponiveleduAux.getId());
				cliente.settiponiveledu_descripcion(ClienteConstantesFunciones.getTipoNivelEduDescripcion(tiponiveleduAux));
				cliente.setTipoNivelEdu(tiponiveleduAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProfesionForeignKey(Cliente cliente,JComboBox jComboBoxid_profesionClienteGenerico)throws Exception
	{
		try
		{
			Profesion  profesionAux=new Profesion();

			if(jComboBoxid_profesionClienteGenerico==null) {
				profesionAux=(Profesion)this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.getSelectedItem();
			} else {
				profesionAux=(Profesion)jComboBoxid_profesionClienteGenerico.getSelectedItem();
			}

			if(profesionAux!=null && profesionAux.getId()!=null) {
				cliente.setid_profesion(profesionAux.getId());
				cliente.setprofesion_descripcion(ClienteConstantesFunciones.getProfesionDescripcion(profesionAux));
				cliente.setProfesion(profesionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGeneroForeignKey(Cliente cliente,JComboBox jComboBoxid_tipo_generoClienteGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroAux=new TipoGenero();

			if(jComboBoxid_tipo_generoClienteGenerico==null) {
				tipogeneroAux=(TipoGenero)this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.getSelectedItem();
			} else {
				tipogeneroAux=(TipoGenero)jComboBoxid_tipo_generoClienteGenerico.getSelectedItem();
			}

			if(tipogeneroAux!=null && tipogeneroAux.getId()!=null) {
				cliente.setid_tipo_genero(tipogeneroAux.getId());
				cliente.settipogenero_descripcion(ClienteConstantesFunciones.getTipoGeneroDescripcion(tipogeneroAux));
				cliente.setTipoGenero(tipogeneroAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoCivilForeignKey(Cliente cliente,JComboBox jComboBoxid_estado_civilClienteGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilAux=new EstadoCivil();

			if(jComboBoxid_estado_civilClienteGenerico==null) {
				estadocivilAux=(EstadoCivil)this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.getSelectedItem();
			} else {
				estadocivilAux=(EstadoCivil)jComboBoxid_estado_civilClienteGenerico.getSelectedItem();
			}

			if(estadocivilAux!=null && estadocivilAux.getId()!=null) {
				cliente.setid_estado_civil(estadocivilAux.getId());
				cliente.setestadocivil_descripcion(ClienteConstantesFunciones.getEstadoCivilDescripcion(estadocivilAux));
				cliente.setEstadoCivil(estadocivilAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoLegalForeignKey(Cliente cliente,JComboBox jComboBoxid_estado_legalClienteGenerico)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalAux=new EstadoLegal();

			if(jComboBoxid_estado_legalClienteGenerico==null) {
				estadolegalAux=(EstadoLegal)this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.getSelectedItem();
			} else {
				estadolegalAux=(EstadoLegal)jComboBoxid_estado_legalClienteGenerico.getSelectedItem();
			}

			if(estadolegalAux!=null && estadolegalAux.getId()!=null) {
				cliente.setid_estado_legal(estadolegalAux.getId());
				cliente.setestadolegal_descripcion(ClienteConstantesFunciones.getEstadoLegalDescripcion(estadolegalAux));
				cliente.setEstadoLegal(estadolegalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(Cliente cliente,JComboBox jComboBoxid_cuenta_contableClienteGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableClienteGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableClienteGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				cliente.setid_cuenta_contable(cuentacontableAux.getId());
				cliente.setcuentacontable_descripcion(ClienteConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				cliente.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarRutaForeignKey(Cliente cliente,JComboBox jComboBoxid_rutaClienteGenerico)throws Exception
	{
		try
		{
			Ruta  rutaAux=new Ruta();

			if(jComboBoxid_rutaClienteGenerico==null) {
				rutaAux=(Ruta)this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.getSelectedItem();
			} else {
				rutaAux=(Ruta)jComboBoxid_rutaClienteGenerico.getSelectedItem();
			}

			if(rutaAux!=null && rutaAux.getId()!=null) {
				cliente.setid_ruta(rutaAux.getId());
				cliente.setruta_descripcion(ClienteConstantesFunciones.getRutaDescripcion(rutaAux));
				cliente.setRuta(rutaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(Cliente cliente,JComboBox jComboBoxid_vendedorClienteGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorClienteGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorClienteGenerico.getSelectedItem();
			}

			if(vendedorAux!=null && vendedorAux.getId()!=null) {
				cliente.setid_vendedor(vendedorAux.getId());
				cliente.setvendedor_descripcion(ClienteConstantesFunciones.getVendedorDescripcion(vendedorAux));
				cliente.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroActividadForeignKey(Cliente cliente,JComboBox jComboBoxid_centro_actividadClienteGenerico)throws Exception
	{
		try
		{
			CentroActividad  centroactividadAux=new CentroActividad();

			if(jComboBoxid_centro_actividadClienteGenerico==null) {
				centroactividadAux=(CentroActividad)this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.getSelectedItem();
			} else {
				centroactividadAux=(CentroActividad)jComboBoxid_centro_actividadClienteGenerico.getSelectedItem();
			}

			if(centroactividadAux!=null) {
				cliente.setid_centro_actividad(centroactividadAux.getId());
				cliente.setcentroactividad_descripcion(ClienteConstantesFunciones.getCentroActividadDescripcion(centroactividadAux));
				cliente.setCentroActividad(centroactividadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGarantiaEmpresaForeignKey(Cliente cliente,JComboBox jComboBoxid_tipo_garantia_empresaClienteGenerico)throws Exception
	{
		try
		{
			TipoGarantiaEmpresa  tipogarantiaempresaAux=new TipoGarantiaEmpresa();

			if(jComboBoxid_tipo_garantia_empresaClienteGenerico==null) {
				tipogarantiaempresaAux=(TipoGarantiaEmpresa)this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.getSelectedItem();
			} else {
				tipogarantiaempresaAux=(TipoGarantiaEmpresa)jComboBoxid_tipo_garantia_empresaClienteGenerico.getSelectedItem();
			}

			if(tipogarantiaempresaAux!=null && tipogarantiaempresaAux.getId()!=null) {
				cliente.setid_tipo_garantia_empresa(tipogarantiaempresaAux.getId());
				cliente.settipogarantiaempresa_descripcion(ClienteConstantesFunciones.getTipoGarantiaEmpresaDescripcion(tipogarantiaempresaAux));
				cliente.setTipoGarantiaEmpresa(tipogarantiaempresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCateTipoAfiliacionForeignKey(Cliente cliente,JComboBox jComboBoxid_cate_tipo_afiliacionClienteGenerico)throws Exception
	{
		try
		{
			CateTipoAfiliacion  catetipoafiliacionAux=new CateTipoAfiliacion();

			if(jComboBoxid_cate_tipo_afiliacionClienteGenerico==null) {
				catetipoafiliacionAux=(CateTipoAfiliacion)this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.getSelectedItem();
			} else {
				catetipoafiliacionAux=(CateTipoAfiliacion)jComboBoxid_cate_tipo_afiliacionClienteGenerico.getSelectedItem();
			}

			if(catetipoafiliacionAux!=null && catetipoafiliacionAux.getId()!=null) {
				cliente.setid_cate_tipo_afiliacion(catetipoafiliacionAux.getId());
				cliente.setcatetipoafiliacion_descripcion(ClienteConstantesFunciones.getCateTipoAfiliacionDescripcion(catetipoafiliacionAux));
				cliente.setCateTipoAfiliacion(catetipoafiliacionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarDiaForeignKey(Cliente cliente,JComboBox jComboBoxid_diaClienteGenerico)throws Exception
	{
		try
		{
			Dia  diaAux=new Dia();

			if(jComboBoxid_diaClienteGenerico==null) {
				diaAux=(Dia)this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.getSelectedItem();
			} else {
				diaAux=(Dia)jComboBoxid_diaClienteGenerico.getSelectedItem();
			}

			if(diaAux!=null && diaAux.getId()!=null) {
				cliente.setid_dia(diaAux.getId());
				cliente.setdia_descripcion(ClienteConstantesFunciones.getDiaDescripcion(diaAux));
				cliente.setDia(diaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(Cliente cliente,JComboBox jComboBoxid_empleadoClienteGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoClienteGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoClienteGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				cliente.setid_empleado(empleadoAux.getId());
				cliente.setempleado_descripcion(ClienteConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				cliente.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPrecioForeignKey(Cliente cliente,JComboBox jComboBoxid_tipo_precioClienteGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioAux=new TipoPrecio();

			if(jComboBoxid_tipo_precioClienteGenerico==null) {
				tipoprecioAux=(TipoPrecio)this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.getSelectedItem();
			} else {
				tipoprecioAux=(TipoPrecio)jComboBoxid_tipo_precioClienteGenerico.getSelectedItem();
			}

			if(tipoprecioAux!=null && tipoprecioAux.getId()!=null) {
				cliente.setid_tipo_precio(tipoprecioAux.getId());
				cliente.settipoprecio_descripcion(ClienteConstantesFunciones.getTipoPrecioDescripcion(tipoprecioAux));
				cliente.setTipoPrecio(tipoprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoListaPrecioForeignKey(Cliente cliente,JComboBox jComboBoxid_tipo_lista_precioClienteGenerico)throws Exception
	{
		try
		{
			TipoListaPrecio  tipolistaprecioAux=new TipoListaPrecio();

			if(jComboBoxid_tipo_lista_precioClienteGenerico==null) {
				tipolistaprecioAux=(TipoListaPrecio)this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.getSelectedItem();
			} else {
				tipolistaprecioAux=(TipoListaPrecio)jComboBoxid_tipo_lista_precioClienteGenerico.getSelectedItem();
			}

			if(tipolistaprecioAux!=null && tipolistaprecioAux.getId()!=null) {
				cliente.setid_tipo_lista_precio(tipolistaprecioAux.getId());
				cliente.settipolistaprecio_descripcion(ClienteConstantesFunciones.getTipoListaPrecioDescripcion(tipolistaprecioAux));
				cliente.setTipoListaPrecio(tipolistaprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoIdentificacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoIdentificacion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.removeAllItems();

							for(TipoIdentificacion tipoidentificacion:this.tipoidentificacionsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.addItem(tipoidentificacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameGrupoClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingGrupoCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.removeAllItems();

							for(GrupoCliente grupocliente:this.grupoclientesForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.addItem(grupocliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdGrupoCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.removeAllItems();

							for(GrupoCliente grupocliente:this.grupoclientesForeignKey) {
								this.jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.addItem(grupocliente);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTituloClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTituloCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.removeAllItems();

							for(TituloCliente titulocliente:this.tituloclientesForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.addItem(titulocliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTituloCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.removeAllItems();

							for(TituloCliente titulocliente:this.tituloclientesForeignKey) {
								this.jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.addItem(titulocliente);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAreaCrsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAreaCr=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.removeAllItems();

							for(AreaCr areacr:this.areacrsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.addItem(areacr);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.removeAllItems();

							for(EstadoCliente estadocliente:this.estadoclientesForeignKey) {
								if(estadocliente.getes_defecto()) {
									this.clienteBean.setid_estado_cliente(estadocliente.getId());
								}

								this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.addItem(estadocliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.removeAllItems();

							for(EstadoCliente estadocliente:this.estadoclientesForeignKey) {
								this.jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.addItem(estadocliente);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameRegionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingRegion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.removeAllItems();

							for(Region region:this.regionsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.addItem(region);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProvinciasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProvincia=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.removeAllItems();

							for(Provincia provincia:this.provinciasForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.addItem(provincia);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.addItem(ciudad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameZonasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingZona=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.addItem(zona);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_zonaFK_IdZonaCliente.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jComboBoxid_zonaFK_IdZonaCliente.addItem(zona);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaisNacionalidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.removeAllItems();

							for(Pais paisnacionalidad:this.paisnacionalidadsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.addItem(paisnacionalidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCargoLabosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCargoLabo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.removeAllItems();

							for(TipoCargoLabo tipocargolabo:this.tipocargolabosForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.addItem(tipocargolabo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoNivelEdusForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoNivelEdu=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.removeAllItems();

							for(TipoNivelEdu tiponiveledu:this.tiponiveledusForeignKey) {
								if(tiponiveledu.getes_defecto()) {
									this.clienteBean.setid_tipo_nivel_edu(tiponiveledu.getId());
								}

								this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.addItem(tiponiveledu);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProfesionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProfesion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.removeAllItems();

							for(Profesion profesion:this.profesionsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.addItem(profesion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGenerosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGenero=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.removeAllItems();

							for(TipoGenero tipogenero:this.tipogenerosForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.addItem(tipogenero);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoCivilsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoCivil=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.removeAllItems();

							for(EstadoCivil estadocivil:this.estadocivilsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.addItem(estadocivil);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoLegalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoLegal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.removeAllItems();

							for(EstadoLegal estadolegal:this.estadolegalsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.addItem(estadolegal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoLegal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalCliente.removeAllItems();

							for(EstadoLegal estadolegal:this.estadolegalsForeignKey) {
								this.jComboBoxid_estado_legalFK_IdEstadoLegalCliente.addItem(estadolegal);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameRutasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingRuta=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.removeAllItems();

							for(Ruta ruta:this.rutasForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.addItem(ruta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdRuta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_rutaFK_IdRutaCliente.removeAllItems();

							for(Ruta ruta:this.rutasForeignKey) {
								this.jComboBoxid_rutaFK_IdRutaCliente.addItem(ruta);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorCliente.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorCliente.addItem(vendedor);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroActividadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroActividad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.removeAllItems();

							for(CentroActividad centroactividad:this.centroactividadsForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.addItem(centroactividad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGarantiaEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGarantiaEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.removeAllItems();

							for(TipoGarantiaEmpresa tipogarantiaempresa:this.tipogarantiaempresasForeignKey) {
								if(tipogarantiaempresa.getes_defecto()) {
									this.clienteBean.setid_tipo_garantia_empresa(tipogarantiaempresa.getId());
								}

								this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.addItem(tipogarantiaempresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCateTipoAfiliacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCateTipoAfiliacion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.removeAllItems();

							for(CateTipoAfiliacion catetipoafiliacion:this.catetipoafiliacionsForeignKey) {
								if(catetipoafiliacion.getes_defecto()) {
									this.clienteBean.setid_cate_tipo_afiliacion(catetipoafiliacion.getId());
								}

								this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.addItem(catetipoafiliacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameDiasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingDia=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.removeAllItems();

							for(Dia dia:this.diasForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.addItem(dia);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.addItem(tipoprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.addItem(tipoprecio);
							}
						}

						if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoListaPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoListaPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) { 
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.removeAllItems();

							for(TipoListaPrecio tipolistaprecio:this.tipolistapreciosForeignKey) {
								this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.addItem(tipolistaprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormCliente!=null) { 
					}

					if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoIdentificacionForeignKey(TipoIdentificacion tipoidentificacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setSelectedItem(tipoidentificacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameGrupoClienteForeignKey(GrupoCliente grupocliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setSelectedItem(grupocliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.setSelectedItem(grupocliente);
						} else {
							this.jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTituloClienteForeignKey(TituloCliente titulocliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setSelectedItem(titulocliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.setSelectedItem(titulocliente);
						} else {
							this.jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAreaCrForeignKey(AreaCr areacr,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setSelectedItem(areacr);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoClienteForeignKey(EstadoCliente estadocliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setSelectedItem(estadocliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.setSelectedItem(estadocliente);
						} else {
							this.jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameRegionForeignKey(Region region,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setSelectedItem(region);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProvinciaForeignKey(Provincia provincia,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setSelectedItem(provincia);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadForeignKey(Ciudad ciudad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setSelectedItem(ciudad);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameZonaForeignKey(Zona zona,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setSelectedItem(zona);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_zonaFK_IdZonaCliente.setSelectedItem(zona);
						} else {
							this.jComboBoxid_zonaFK_IdZonaCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisNacionalidadForeignKey(Pais paisnacionalidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setSelectedItem(paisnacionalidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCargoLaboForeignKey(TipoCargoLabo tipocargolabo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setSelectedItem(tipocargolabo);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoNivelEduForeignKey(TipoNivelEdu tiponiveledu,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setSelectedItem(tiponiveledu);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProfesionForeignKey(Profesion profesion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setSelectedItem(profesion);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGeneroForeignKey(TipoGenero tipogenero,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setSelectedItem(tipogenero);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoCivilForeignKey(EstadoCivil estadocivil,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setSelectedItem(estadocivil);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoLegalForeignKey(EstadoLegal estadolegal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setSelectedItem(estadolegal);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalCliente.setSelectedItem(estadolegal);
						} else {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameRutaForeignKey(Ruta ruta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setSelectedItem(ruta);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_rutaFK_IdRutaCliente.setSelectedItem(ruta);
						} else {
							this.jComboBoxid_rutaFK_IdRutaCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorCliente.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroActividadForeignKey(CentroActividad centroactividad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setSelectedItem(centroactividad);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGarantiaEmpresaForeignKey(TipoGarantiaEmpresa tipogarantiaempresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setSelectedItem(tipogarantiaempresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCateTipoAfiliacionForeignKey(CateTipoAfiliacion catetipoafiliacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setSelectedItem(catetipoafiliacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameDiaForeignKey(Dia dia,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setSelectedItem(dia);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPrecioForeignKey(TipoPrecio tipoprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setSelectedItem(tipoprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.setSelectedItem(tipoprecio);
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoListaPrecioForeignKey(TipoListaPrecio tipolistaprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setSelectedItem(tipolistaprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormCliente!=null) {
							this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesCliente() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ClienteConstantesFunciones.refrescarForeignKeysDescripcionesCliente(this.clienteLogic.getClientes());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ClienteConstantesFunciones.refrescarForeignKeysDescripcionesCliente(this.clientes);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(TipoIdentificacion.class));
		classes.add(new Classe(GrupoCliente.class));
		classes.add(new Classe(TituloCliente.class));
		classes.add(new Classe(AreaCr.class));
		classes.add(new Classe(EstadoCliente.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Region.class));
		classes.add(new Classe(Provincia.class));
		classes.add(new Classe(Ciudad.class));
		classes.add(new Classe(Zona.class));
		classes.add(new Classe(TipoCargoLabo.class));
		classes.add(new Classe(TipoNivelEdu.class));
		classes.add(new Classe(Profesion.class));
		classes.add(new Classe(TipoGenero.class));
		classes.add(new Classe(EstadoCivil.class));
		classes.add(new Classe(EstadoLegal.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(Ruta.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(CentroActividad.class));
		classes.add(new Classe(TipoGarantiaEmpresa.class));
		classes.add(new Classe(CateTipoAfiliacion.class));
		classes.add(new Classe(Dia.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(TipoPrecio.class));
		classes.add(new Classe(TipoListaPrecio.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//clienteLogic.setClientes(this.clientes);
			clienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ClienteParameterReturnGeneral getClienteParameterGeneral() {
		return this.clienteParameterGeneral;
	}
	
	public void setClienteParameterGeneral(ClienteParameterReturnGeneral clienteParameterGeneral) {
		this.clienteParameterGeneral = clienteParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoCliente() {
		return isPermisoTodoCliente;
	}

	public void setIsPermisoTodoCliente(Boolean isPermisoTodoCliente) {
		this.isPermisoTodoCliente = isPermisoTodoCliente;
	}

	public Boolean getIsPermisoNuevoCliente() {
		return isPermisoNuevoCliente;
	}

	public void setIsPermisoNuevoCliente(Boolean isPermisoNuevoCliente) {
		this.isPermisoNuevoCliente = isPermisoNuevoCliente;
	}

	public Boolean getIsPermisoActualizarCliente() {
		return isPermisoActualizarCliente;
	}

	public void setIsPermisoActualizarCliente(Boolean isPermisoActualizarCliente) {
		this.isPermisoActualizarCliente = isPermisoActualizarCliente;
	}

	public Boolean getIsPermisoEliminarCliente() {
		return isPermisoEliminarCliente;
	}

	public void setIsPermisoEliminarCliente(Boolean isPermisoEliminarCliente) {
		this.isPermisoEliminarCliente = isPermisoEliminarCliente;
	}

	public Boolean getIsPermisoGuardarCambiosCliente() {
		return isPermisoGuardarCambiosCliente;
	}

	public void setIsPermisoGuardarCambiosCliente(Boolean isPermisoGuardarCambiosCliente) {
		this.isPermisoGuardarCambiosCliente = isPermisoGuardarCambiosCliente;
	}
	
	public Boolean getIsPermisoConsultaCliente() {
		return isPermisoConsultaCliente;
	}

	public void setIsPermisoConsultaCliente(Boolean isPermisoConsultaCliente) {
		this.isPermisoConsultaCliente = isPermisoConsultaCliente;
	}

	public Boolean getIsPermisoBusquedaCliente() {
		return isPermisoBusquedaCliente;
	}

	public void setIsPermisoBusquedaCliente(Boolean isPermisoBusquedaCliente) {
		this.isPermisoBusquedaCliente = isPermisoBusquedaCliente;
	}

	public Boolean getIsPermisoReporteCliente() {
		return isPermisoReporteCliente;
	}

	public void setIsPermisoReporteCliente(Boolean isPermisoReporteCliente) {
		this.isPermisoReporteCliente = isPermisoReporteCliente;
	}
	
	public Boolean getIsPermisoPaginacionMedioCliente() {
		return isPermisoPaginacionMedioCliente;
	}

	public void setIsPermisoPaginacionMedioCliente(Boolean isPermisoPaginacionMedioCliente) {
		this.isPermisoPaginacionMedioCliente = isPermisoPaginacionMedioCliente;
	}
	
	public Boolean getIsPermisoPaginacionTodoCliente() {
		return isPermisoPaginacionTodoCliente;
	}

	public void setIsPermisoPaginacionTodoCliente(Boolean isPermisoPaginacionTodoCliente) {
		this.isPermisoPaginacionTodoCliente = isPermisoPaginacionTodoCliente;
	}
	
	public Boolean getIsPermisoPaginacionAltoCliente() {
		return isPermisoPaginacionAltoCliente;
	}

	public void setIsPermisoPaginacionAltoCliente(Boolean isPermisoPaginacionAltoCliente) {
		this.isPermisoPaginacionAltoCliente = isPermisoPaginacionAltoCliente;
	}
	
	public Boolean getIsPermisoCopiarCliente() {
		return isPermisoCopiarCliente;
	}

	public void setIsPermisoCopiarCliente(Boolean isPermisoCopiarCliente) {
		this.isPermisoCopiarCliente = isPermisoCopiarCliente;
	}
	
	public Boolean getIsPermisoVerFormCliente() {
		return isPermisoVerFormCliente;
	}

	public void setIsPermisoVerFormCliente(Boolean isPermisoVerFormCliente) {
		this.isPermisoVerFormCliente = isPermisoVerFormCliente;
	}
	
	public Boolean getIsPermisoDuplicarCliente() {
		return isPermisoDuplicarCliente;
	}

	public void setIsPermisoDuplicarCliente(Boolean isPermisoDuplicarCliente) {
		this.isPermisoDuplicarCliente = isPermisoDuplicarCliente;
	}
	
	public Boolean getIsPermisoOrdenCliente() {
		return isPermisoOrdenCliente;
	}

	public void setIsPermisoOrdenCliente(Boolean isPermisoOrdenCliente) {
		this.isPermisoOrdenCliente = isPermisoOrdenCliente;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoCliente() {
		return isVisibilidadCeldaNuevoCliente;
	}

	public void setIsVisibilidadCeldaNuevoCliente(Boolean isVisibilidadCeldaNuevoCliente) {
		this.isVisibilidadCeldaNuevoCliente = isVisibilidadCeldaNuevoCliente;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarCliente() {
		return isVisibilidadCeldaDuplicarCliente;
	}

	public void setIsVisibilidadCeldaDuplicarCliente(Boolean isVisibilidadCeldaDuplicarCliente) {
		this.isVisibilidadCeldaDuplicarCliente = isVisibilidadCeldaDuplicarCliente;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarCliente() {
		return isVisibilidadCeldaCopiarCliente;
	}

	public void setIsVisibilidadCeldaCopiarCliente(Boolean isVisibilidadCeldaCopiarCliente) {
		this.isVisibilidadCeldaCopiarCliente = isVisibilidadCeldaCopiarCliente;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormCliente() {
		return isVisibilidadCeldaVerFormCliente;
	}

	public void setIsVisibilidadCeldaVerFormCliente(Boolean isVisibilidadCeldaVerFormCliente) {
		this.isVisibilidadCeldaVerFormCliente = isVisibilidadCeldaVerFormCliente;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenCliente() {
		return isVisibilidadCeldaOrdenCliente;
	}

	public void setIsVisibilidadCeldaOrdenCliente(Boolean isVisibilidadCeldaOrdenCliente) {
		this.isVisibilidadCeldaOrdenCliente = isVisibilidadCeldaOrdenCliente;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesCliente() {
		return isVisibilidadCeldaNuevoRelacionesCliente;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesCliente(Boolean isVisibilidadCeldaNuevoRelacionesCliente) {
		this.isVisibilidadCeldaNuevoRelacionesCliente = isVisibilidadCeldaNuevoRelacionesCliente;
	}
	
	public Boolean getIsVisibilidadCeldaModificarCliente() {
		return isVisibilidadCeldaModificarCliente;
	}

	public void setIsVisibilidadCeldaModificarCliente(Boolean isVisibilidadCeldaModificarCliente) {
		this.isVisibilidadCeldaModificarCliente = isVisibilidadCeldaModificarCliente;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarCliente() {
		return isVisibilidadCeldaActualizarCliente;
	}

	public void setIsVisibilidadCeldaActualizarCliente(Boolean isVisibilidadCeldaActualizarCliente) {
		this.isVisibilidadCeldaActualizarCliente = isVisibilidadCeldaActualizarCliente;
	}

	public Boolean getIsVisibilidadCeldaEliminarCliente() {
		return isVisibilidadCeldaEliminarCliente;
	}

	public void setIsVisibilidadCeldaEliminarCliente(Boolean isVisibilidadCeldaEliminarCliente) {
		this.isVisibilidadCeldaEliminarCliente = isVisibilidadCeldaEliminarCliente;
	}

	public Boolean getIsVisibilidadCeldaCancelarCliente() {
		return isVisibilidadCeldaCancelarCliente;
	}

	public void setIsVisibilidadCeldaCancelarCliente(Boolean isVisibilidadCeldaCancelarCliente) {
		this.isVisibilidadCeldaCancelarCliente = isVisibilidadCeldaCancelarCliente;
	}

	public Boolean getIsVisibilidadCeldaGuardarCliente() {
		return isVisibilidadCeldaGuardarCliente;
	}

	public void setIsVisibilidadCeldaGuardarCliente(Boolean isVisibilidadCeldaGuardarCliente) {
		this.isVisibilidadCeldaGuardarCliente = isVisibilidadCeldaGuardarCliente;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosCliente() {
		return isVisibilidadCeldaGuardarCambiosCliente;
	}

	public void setIsVisibilidadCeldaGuardarCambiosCliente(Boolean isVisibilidadCeldaGuardarCambiosCliente) {
		this.isVisibilidadCeldaGuardarCambiosCliente = isVisibilidadCeldaGuardarCambiosCliente;
	}
		
	public ClienteSessionBean getclienteSessionBean() {
		return this.clienteSessionBean;
	}
	
	public void setclienteSessionBean(ClienteSessionBean clienteSessionBean) {
		this.clienteSessionBean=clienteSessionBean;
	}
	
	
	public Boolean getisVisibilidadBusquedaPorIdentificacion() {
		return this.isVisibilidadBusquedaPorIdentificacion;
	}

	public void setisVisibilidadBusquedaPorIdentificacion(Boolean isVisibilidadBusquedaPorIdentificacion) {
		this.isVisibilidadBusquedaPorIdentificacion=isVisibilidadBusquedaPorIdentificacion;
	}

	public Boolean getisVisibilidadBusquedaPorNombreComercial() {
		return this.isVisibilidadBusquedaPorNombreComercial;
	}

	public void setisVisibilidadBusquedaPorNombreComercial(Boolean isVisibilidadBusquedaPorNombreComercial) {
		this.isVisibilidadBusquedaPorNombreComercial=isVisibilidadBusquedaPorNombreComercial;
	}

	public Boolean getisVisibilidadBusquedaPorNombreCompleto() {
		return this.isVisibilidadBusquedaPorNombreCompleto;
	}

	public void setisVisibilidadBusquedaPorNombreCompleto(Boolean isVisibilidadBusquedaPorNombreCompleto) {
		this.isVisibilidadBusquedaPorNombreCompleto=isVisibilidadBusquedaPorNombreCompleto;
	}

	public Boolean getisVisibilidadFK_IdAreaCr() {
		return this.isVisibilidadFK_IdAreaCr;
	}

	public void setisVisibilidadFK_IdAreaCr(Boolean isVisibilidadFK_IdAreaCr) {
		this.isVisibilidadFK_IdAreaCr=isVisibilidadFK_IdAreaCr;
	}

	public Boolean getisVisibilidadFK_IdCateTipoAfiliacion() {
		return this.isVisibilidadFK_IdCateTipoAfiliacion;
	}

	public void setisVisibilidadFK_IdCateTipoAfiliacion(Boolean isVisibilidadFK_IdCateTipoAfiliacion) {
		this.isVisibilidadFK_IdCateTipoAfiliacion=isVisibilidadFK_IdCateTipoAfiliacion;
	}

	public Boolean getisVisibilidadFK_IdCentroActividad() {
		return this.isVisibilidadFK_IdCentroActividad;
	}

	public void setisVisibilidadFK_IdCentroActividad(Boolean isVisibilidadFK_IdCentroActividad) {
		this.isVisibilidadFK_IdCentroActividad=isVisibilidadFK_IdCentroActividad;
	}

	public Boolean getisVisibilidadFK_IdCiudad() {
		return this.isVisibilidadFK_IdCiudad;
	}

	public void setisVisibilidadFK_IdCiudad(Boolean isVisibilidadFK_IdCiudad) {
		this.isVisibilidadFK_IdCiudad=isVisibilidadFK_IdCiudad;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdDia() {
		return this.isVisibilidadFK_IdDia;
	}

	public void setisVisibilidadFK_IdDia(Boolean isVisibilidadFK_IdDia) {
		this.isVisibilidadFK_IdDia=isVisibilidadFK_IdDia;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoCivil() {
		return this.isVisibilidadFK_IdEstadoCivil;
	}

	public void setisVisibilidadFK_IdEstadoCivil(Boolean isVisibilidadFK_IdEstadoCivil) {
		this.isVisibilidadFK_IdEstadoCivil=isVisibilidadFK_IdEstadoCivil;
	}

	public Boolean getisVisibilidadFK_IdEstadoCliente() {
		return this.isVisibilidadFK_IdEstadoCliente;
	}

	public void setisVisibilidadFK_IdEstadoCliente(Boolean isVisibilidadFK_IdEstadoCliente) {
		this.isVisibilidadFK_IdEstadoCliente=isVisibilidadFK_IdEstadoCliente;
	}

	public Boolean getisVisibilidadFK_IdEstadoLegal() {
		return this.isVisibilidadFK_IdEstadoLegal;
	}

	public void setisVisibilidadFK_IdEstadoLegal(Boolean isVisibilidadFK_IdEstadoLegal) {
		this.isVisibilidadFK_IdEstadoLegal=isVisibilidadFK_IdEstadoLegal;
	}

	public Boolean getisVisibilidadFK_IdGrupoCliente() {
		return this.isVisibilidadFK_IdGrupoCliente;
	}

	public void setisVisibilidadFK_IdGrupoCliente(Boolean isVisibilidadFK_IdGrupoCliente) {
		this.isVisibilidadFK_IdGrupoCliente=isVisibilidadFK_IdGrupoCliente;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdPaisNacionalad() {
		return this.isVisibilidadFK_IdPaisNacionalad;
	}

	public void setisVisibilidadFK_IdPaisNacionalad(Boolean isVisibilidadFK_IdPaisNacionalad) {
		this.isVisibilidadFK_IdPaisNacionalad=isVisibilidadFK_IdPaisNacionalad;
	}

	public Boolean getisVisibilidadFK_IdProfesion() {
		return this.isVisibilidadFK_IdProfesion;
	}

	public void setisVisibilidadFK_IdProfesion(Boolean isVisibilidadFK_IdProfesion) {
		this.isVisibilidadFK_IdProfesion=isVisibilidadFK_IdProfesion;
	}

	public Boolean getisVisibilidadFK_IdProvincia() {
		return this.isVisibilidadFK_IdProvincia;
	}

	public void setisVisibilidadFK_IdProvincia(Boolean isVisibilidadFK_IdProvincia) {
		this.isVisibilidadFK_IdProvincia=isVisibilidadFK_IdProvincia;
	}

	public Boolean getisVisibilidadFK_IdRegion() {
		return this.isVisibilidadFK_IdRegion;
	}

	public void setisVisibilidadFK_IdRegion(Boolean isVisibilidadFK_IdRegion) {
		this.isVisibilidadFK_IdRegion=isVisibilidadFK_IdRegion;
	}

	public Boolean getisVisibilidadFK_IdRuta() {
		return this.isVisibilidadFK_IdRuta;
	}

	public void setisVisibilidadFK_IdRuta(Boolean isVisibilidadFK_IdRuta) {
		this.isVisibilidadFK_IdRuta=isVisibilidadFK_IdRuta;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCargoLabo() {
		return this.isVisibilidadFK_IdTipoCargoLabo;
	}

	public void setisVisibilidadFK_IdTipoCargoLabo(Boolean isVisibilidadFK_IdTipoCargoLabo) {
		this.isVisibilidadFK_IdTipoCargoLabo=isVisibilidadFK_IdTipoCargoLabo;
	}

	public Boolean getisVisibilidadFK_IdTipoGarantiaEmpresa() {
		return this.isVisibilidadFK_IdTipoGarantiaEmpresa;
	}

	public void setisVisibilidadFK_IdTipoGarantiaEmpresa(Boolean isVisibilidadFK_IdTipoGarantiaEmpresa) {
		this.isVisibilidadFK_IdTipoGarantiaEmpresa=isVisibilidadFK_IdTipoGarantiaEmpresa;
	}

	public Boolean getisVisibilidadFK_IdTipoGenero() {
		return this.isVisibilidadFK_IdTipoGenero;
	}

	public void setisVisibilidadFK_IdTipoGenero(Boolean isVisibilidadFK_IdTipoGenero) {
		this.isVisibilidadFK_IdTipoGenero=isVisibilidadFK_IdTipoGenero;
	}

	public Boolean getisVisibilidadFK_IdTipoIdentificacion() {
		return this.isVisibilidadFK_IdTipoIdentificacion;
	}

	public void setisVisibilidadFK_IdTipoIdentificacion(Boolean isVisibilidadFK_IdTipoIdentificacion) {
		this.isVisibilidadFK_IdTipoIdentificacion=isVisibilidadFK_IdTipoIdentificacion;
	}

	public Boolean getisVisibilidadFK_IdTipoListaPrecio() {
		return this.isVisibilidadFK_IdTipoListaPrecio;
	}

	public void setisVisibilidadFK_IdTipoListaPrecio(Boolean isVisibilidadFK_IdTipoListaPrecio) {
		this.isVisibilidadFK_IdTipoListaPrecio=isVisibilidadFK_IdTipoListaPrecio;
	}

	public Boolean getisVisibilidadFK_IdTipoNivelEdu() {
		return this.isVisibilidadFK_IdTipoNivelEdu;
	}

	public void setisVisibilidadFK_IdTipoNivelEdu(Boolean isVisibilidadFK_IdTipoNivelEdu) {
		this.isVisibilidadFK_IdTipoNivelEdu=isVisibilidadFK_IdTipoNivelEdu;
	}

	public Boolean getisVisibilidadFK_IdTipoPrecio() {
		return this.isVisibilidadFK_IdTipoPrecio;
	}

	public void setisVisibilidadFK_IdTipoPrecio(Boolean isVisibilidadFK_IdTipoPrecio) {
		this.isVisibilidadFK_IdTipoPrecio=isVisibilidadFK_IdTipoPrecio;
	}

	public Boolean getisVisibilidadFK_IdTituloCliente() {
		return this.isVisibilidadFK_IdTituloCliente;
	}

	public void setisVisibilidadFK_IdTituloCliente(Boolean isVisibilidadFK_IdTituloCliente) {
		this.isVisibilidadFK_IdTituloCliente=isVisibilidadFK_IdTituloCliente;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	public Boolean getisVisibilidadFK_IdZona() {
		return this.isVisibilidadFK_IdZona;
	}

	public void setisVisibilidadFK_IdZona(Boolean isVisibilidadFK_IdZona) {
		this.isVisibilidadFK_IdZona=isVisibilidadFK_IdZona;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysCliente(Cliente cliente)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(cliente,null);
				this.setActualParaGuardarSucursalForeignKey(cliente,null);
				this.setActualParaGuardarTipoIdentificacionForeignKey(cliente,null);
				this.setActualParaGuardarGrupoClienteForeignKey(cliente,null);
				this.setActualParaGuardarTituloClienteForeignKey(cliente,null);
				this.setActualParaGuardarAreaCrForeignKey(cliente,null);
				this.setActualParaGuardarEstadoClienteForeignKey(cliente,null);
				this.setActualParaGuardarPaisForeignKey(cliente,null);
				this.setActualParaGuardarRegionForeignKey(cliente,null);
				this.setActualParaGuardarProvinciaForeignKey(cliente,null);
				this.setActualParaGuardarCiudadForeignKey(cliente,null);
				this.setActualParaGuardarZonaForeignKey(cliente,null);
				this.setActualParaGuardarPaisNacionalidadForeignKey(cliente,null);
				this.setActualParaGuardarTipoCargoLaboForeignKey(cliente,null);
				this.setActualParaGuardarTipoNivelEduForeignKey(cliente,null);
				this.setActualParaGuardarProfesionForeignKey(cliente,null);
				this.setActualParaGuardarTipoGeneroForeignKey(cliente,null);
				this.setActualParaGuardarEstadoCivilForeignKey(cliente,null);
				this.setActualParaGuardarEstadoLegalForeignKey(cliente,null);
				this.setActualParaGuardarCuentaContableForeignKey(cliente,null);
				this.setActualParaGuardarRutaForeignKey(cliente,null);
				this.setActualParaGuardarVendedorForeignKey(cliente,null);
				this.setActualParaGuardarCentroActividadForeignKey(cliente,null);
				this.setActualParaGuardarTipoGarantiaEmpresaForeignKey(cliente,null);
				this.setActualParaGuardarCateTipoAfiliacionForeignKey(cliente,null);
				this.setActualParaGuardarDiaForeignKey(cliente,null);
				this.setActualParaGuardarEmpleadoForeignKey(cliente,null);
				this.setActualParaGuardarTipoPrecioForeignKey(cliente,null);
				this.setActualParaGuardarTipoListaPrecioForeignKey(cliente,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Cliente cliente,Cliente clienteAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalCliente(cliente);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		clienteAux.setId(cliente.getId());
		clienteAux.setVersionRow(cliente.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessCliente();
		
			int intSelectedRow = this.jTableDatosCliente.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = clienteValidator.getInvalidValues(this.cliente);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			clienteLogic.setDatosCliente(datosCliente);
			clienteLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				clienteAux=new  Cliente();
				
				clienteAux.setIsNew(true);
				clienteAux.setIsChanged(true);
				
				clienteAux.setClienteOriginal(this.cliente);
				
				clienteAux.setId(this.cliente.getId());	
				clienteAux.setVersionRow(this.cliente.getVersionRow());	
				clienteAux.setid_empresa(this.cliente.getid_empresa());	
				clienteAux.setid_sucursal(this.cliente.getid_sucursal());	
				clienteAux.setcodigo(this.cliente.getcodigo());	
				clienteAux.setid_tipo_identificacion(this.cliente.getid_tipo_identificacion());	
				clienteAux.setidentificacion(this.cliente.getidentificacion());	
				clienteAux.setruc(this.cliente.getruc());	
				clienteAux.setnombre(this.cliente.getnombre());	
				clienteAux.setapellido(this.cliente.getapellido());	
				clienteAux.setnombre_completo(this.cliente.getnombre_completo());	
				clienteAux.setnombre_comercial(this.cliente.getnombre_comercial());	
				clienteAux.settelefono(this.cliente.gettelefono());	
				clienteAux.setdireccion(this.cliente.getdireccion());	
				clienteAux.setes_prove(this.cliente.getes_prove());	
				clienteAux.setid_grupo_cliente(this.cliente.getid_grupo_cliente());	
				clienteAux.setid_titulo_cliente(this.cliente.getid_titulo_cliente());	
				clienteAux.setid_area_cr(this.cliente.getid_area_cr());	
				clienteAux.setid_estado_cliente(this.cliente.getid_estado_cliente());	
				clienteAux.setobservacion(this.cliente.getobservacion());	
				clienteAux.setid_pais(this.cliente.getid_pais());	
				clienteAux.setid_region(this.cliente.getid_region());	
				clienteAux.setid_provincia(this.cliente.getid_provincia());	
				clienteAux.setid_ciudad(this.cliente.getid_ciudad());	
				clienteAux.setid_zona(this.cliente.getid_zona());	
				clienteAux.setid_pais_nacionalidad(this.cliente.getid_pais_nacionalidad());	
				clienteAux.setid_tipo_cargo_labo(this.cliente.getid_tipo_cargo_labo());	
				clienteAux.setid_tipo_nivel_edu(this.cliente.getid_tipo_nivel_edu());	
				clienteAux.setid_profesion(this.cliente.getid_profesion());	
				clienteAux.setid_tipo_genero(this.cliente.getid_tipo_genero());	
				clienteAux.setid_estado_civil(this.cliente.getid_estado_civil());	
				clienteAux.setid_estado_legal(this.cliente.getid_estado_legal());	
				clienteAux.setfecha_nacimiento(this.cliente.getfecha_nacimiento());	
				clienteAux.setpath_imagen_firma(this.cliente.getpath_imagen_firma());	
				clienteAux.setcontacto(this.cliente.getcontacto());	
				clienteAux.setid_cuenta_contable(this.cliente.getid_cuenta_contable());	
				clienteAux.setid_ruta(this.cliente.getid_ruta());	
				clienteAux.setid_vendedor(this.cliente.getid_vendedor());	
				clienteAux.setid_centro_actividad(this.cliente.getid_centro_actividad());	
				clienteAux.setrepresentante(this.cliente.getrepresentante());	
				clienteAux.setid_tipo_garantia_empresa(this.cliente.getid_tipo_garantia_empresa());	
				clienteAux.setnombre_garantia(this.cliente.getnombre_garantia());	
				clienteAux.setvalor_garantia(this.cliente.getvalor_garantia());	
				clienteAux.setid_cate_tipo_afiliacion(this.cliente.getid_cate_tipo_afiliacion());	
				clienteAux.setnumero_carga(this.cliente.getnumero_carga());	
				clienteAux.setcredito_usado(this.cliente.getcredito_usado());	
				clienteAux.setlimite_credito(this.cliente.getlimite_credito());	
				clienteAux.setcredito_disponible(this.cliente.getcredito_disponible());	
				clienteAux.settotal_documentos(this.cliente.gettotal_documentos());	
				clienteAux.setfecha_ultima_factura(this.cliente.getfecha_ultima_factura());	
				clienteAux.setdescuento(this.cliente.getdescuento());	
				clienteAux.setid_dia(this.cliente.getid_dia());	
				clienteAux.sethora_pago(this.cliente.gethora_pago());	
				clienteAux.setid_empleado(this.cliente.getid_empleado());	
				clienteAux.setcobranzas(this.cliente.getcobranzas());	
				clienteAux.setmotivo(this.cliente.getmotivo());	
				clienteAux.setpreferencia(this.cliente.getpreferencia());	
				clienteAux.setcon_separacion_bienes(this.cliente.getcon_separacion_bienes());	
				clienteAux.setid_tipo_precio(this.cliente.getid_tipo_precio());	
				clienteAux.setid_tipo_lista_precio(this.cliente.getid_tipo_lista_precio());	
				clienteAux.setdetalle_estado(this.cliente.getdetalle_estado());	
				clienteAux.setes_contribuyente_especial(this.cliente.getes_contribuyente_especial());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.clienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.clienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(clienteAux,clienteLogic.getClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteAux,clientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.clienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.clienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.saveClientes();//WithConnection
						//clienteLogic.getSetVersionRowClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.cliente,clienteAux);
					
					this.refrescarForeignKeysDescripcionesCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.clienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals().addAll(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralsEliminados);
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas().addAll(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistasEliminados);
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads().addAll(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes().addAll(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals().addAll(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalsEliminados);
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes().addAll(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientesEliminados);
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes().addAll(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes().addAll(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables().addAll(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsablesEliminados);
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras().addAll(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancierasEliminados);
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios().addAll(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatariosEliminados);
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens().addAll(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagensEliminados);
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes().addAll(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas().addAll(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials().addAll(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialsEliminados);
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens().addAll(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biensEliminados);
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos().addAll(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes().addAll(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions().addAll(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionsEliminados);
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas().addAll(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoasEliminados);
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes().addAll(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientesEliminados);
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars().addAll(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarsEliminados);
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails().addAll(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailsEliminados);
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuges().addAll(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugesEliminados);
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars().addAll(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarsEliminados);
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes().addAll(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals().addAll(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalsEliminados);
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos().addAll(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonosEliminados);
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes().addAll(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias().addAll(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariasEliminados);
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos().addAll(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montosEliminados);
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos().addAll(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivosEliminados);
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas().addAll(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions().addAll(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionsEliminados);
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados().addAll(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadosEliminados);
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes().addAll(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaborals.addAll(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralsEliminados);
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistas.addAll(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistasEliminados);
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedads.addAll(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientes.addAll(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonals.addAll(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalsEliminados);
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientes.addAll(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientesEliminados);
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientes.addAll(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientes.addAll(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsables.addAll(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsablesEliminados);
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieras.addAll(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancierasEliminados);
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarios.addAll(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatariosEliminados);
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagens.addAll(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagensEliminados);
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientes.addAll(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicas.addAll(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercials.addAll(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialsEliminados);
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biens.addAll(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biensEliminados);
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductos.addAll(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientes.addAll(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucions.addAll(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionsEliminados);
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoas.addAll(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoasEliminados);
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientes.addAll(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientesEliminados);
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliars.addAll(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarsEliminados);
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emails.addAll(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailsEliminados);
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyuges.addAll(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugesEliminados);
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrars.addAll(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarsEliminados);
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientes.addAll(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegals.addAll(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalsEliminados);
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonos.addAll(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonosEliminados);
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientes.addAll(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancarias.addAll(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariasEliminados);
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montos.addAll(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montosEliminados);
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivos.addAll(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivosEliminados);
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicas.addAll(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccions.addAll(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionsEliminados);
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechados.addAll(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadosEliminados);
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientes.addAll(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientesEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								clienteLogic.saveClienteRelaciones(clienteAux,this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes(),this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens(),this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars(),this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados(),this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails(),this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals(),this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes(),this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos(),this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasCliente(),this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes(),this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials(),this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads(),this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals(),this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras(),this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos(),this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars(),this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables(),this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas(),this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes(),this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuge(),this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias(),this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes(),this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions(),this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas(),this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos(),this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios(),this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes(),this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals(),this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas(),this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions(),this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens(),this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes(),this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas(),this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes(),this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes(),this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());//WithConnection
								//clienteLogic.getSetVersionRowClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.cliente,clienteAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.setInformacionLaborals(new ArrayList<InformacionLaboral>());
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.setTransportistas(new ArrayList<Transportista>());
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(new ArrayList<Novedad>());
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(new ArrayList<PoliticasCliente>());
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.setReferenciaPersonals(new ArrayList<ReferenciaPersonal>());
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.setBalanceGeneralClientes(new ArrayList<BalanceGeneralCliente>());
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.setPoliticaClientes(new ArrayList<PoliticaCliente>());
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.setVehiculoClientes(new ArrayList<VehiculoCliente>());
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.setResponsables(new ArrayList<Responsable>());
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.setInformacionFinancieras(new ArrayList<InformacionFinanciera>());
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.setConsignatarios(new ArrayList<Consignatario>());
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.setClienteImagens(new ArrayList<ClienteImagen>());
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.setGarantiaClientes(new ArrayList<GarantiaCliente>());
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.setInformacionEconomicas(new ArrayList<InformacionEconomica>());
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.setReferenciaComercials(new ArrayList<ReferenciaComercial>());
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.setBiens(new ArrayList<Bien>());
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(new ArrayList<ProveedorProducto>());
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.setContactoClientes(new ArrayList<ContactoCliente>());
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.setDatoConstitucions(new ArrayList<DatoConstitucion>());
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.setClienteCoas(new ArrayList<ClienteCoa>());
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.setHobbyClientes(new ArrayList<HobbyCliente>());
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.setCargaFamiliars(new ArrayList<CargaFamiliar>());
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.setEMails(new ArrayList<EMail>());
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.setConyuges(new ArrayList<Conyuge>());
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.setCuentaPorCobrars(new ArrayList<CuentaPorCobrar>());
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.setFirmaClientes(new ArrayList<FirmaCliente>());
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.setRepresentanteLegals(new ArrayList<RepresentanteLegal>());
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.setTelefonos(new ArrayList<Telefono>());
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.setReferenciaBancarias(new ArrayList<ReferenciaBancaria>());
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.setMontos(new ArrayList<Monto>());
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.setClienteArchivos(new ArrayList<ClienteArchivo>());
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.setActividadEconomicas(new ArrayList<ActividadEconomica>());
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.setDireccions(new ArrayList<Direccion>());
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.setChequePostFechados(new ArrayList<ChequePostFechado>());
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaborals= new ArrayList<InformacionLaboral>();
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistas= new ArrayList<Transportista>();
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedads= new ArrayList<Novedad>();
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientes= new ArrayList<PoliticasCliente>();
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonals= new ArrayList<ReferenciaPersonal>();
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientes= new ArrayList<BalanceGeneralCliente>();
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientes= new ArrayList<PoliticaCliente>();
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientes= new ArrayList<VehiculoCliente>();
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsables= new ArrayList<Responsable>();
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieras= new ArrayList<InformacionFinanciera>();
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarios= new ArrayList<Consignatario>();
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagens= new ArrayList<ClienteImagen>();
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientes= new ArrayList<GarantiaCliente>();
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicas= new ArrayList<InformacionEconomica>();
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercials= new ArrayList<ReferenciaComercial>();
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biens= new ArrayList<Bien>();
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductos= new ArrayList<ProveedorProducto>();
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientes= new ArrayList<ContactoCliente>();
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucions= new ArrayList<DatoConstitucion>();
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoas= new ArrayList<ClienteCoa>();
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientes= new ArrayList<HobbyCliente>();
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliars= new ArrayList<CargaFamiliar>();
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emails= new ArrayList<EMail>();
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyuges= new ArrayList<Conyuge>();
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrars= new ArrayList<CuentaPorCobrar>();
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientes= new ArrayList<FirmaCliente>();
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegals= new ArrayList<RepresentanteLegal>();
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonos= new ArrayList<Telefono>();
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientes= new ArrayList<NegocioCliente>();
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancarias= new ArrayList<ReferenciaBancaria>();
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montos= new ArrayList<Monto>();
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivos= new ArrayList<ClienteArchivo>();
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicas= new ArrayList<ActividadEconomica>();
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccions= new ArrayList<Direccion>();
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechados= new ArrayList<ChequePostFechado>();
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientes= new ArrayList<SubCliente>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setContactoClientes(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes());

							if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setBiens(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens());

							if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setCargaFamiliars(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars());

							if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setChequePostFechados(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados());

							if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setEMails(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails());

							if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaPersonals(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals());

							if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setGarantiaClientes(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes());

							if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteArchivos(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos());

							if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setPoliticasCliente(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasCliente());

							if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setFirmaClientes(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes());

							if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaComercials(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials());

							if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setNovedads(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());

							if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionLaborals(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals());

							if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionFinancieras(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras());

							if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setTelefonos(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos());

							if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setCuentaPorCobrars(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars());

							if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setResponsables(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables());

							if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setTransportistas(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas());

							if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setPoliticaClientes(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes());

							if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setConyuge(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuge());

							if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaBancarias(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias());

							if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setBalanceGeneralClientes(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes());

							if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setDatoConstitucions(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions());

							if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setActividadEconomicas(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas());

							if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setProveedorProductos(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());

							if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setConsignatarios(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios());

							if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setHobbyClientes(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes());

							if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setRepresentanteLegals(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals());

							if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteCoas(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas());

							if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setDireccions(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions());

							if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteImagens(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens());

							if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setSubClientes(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes());

							if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setServicioClientes(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionEconomicas(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas());

							if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setVehiculoClientes(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes());

							if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setNegocioClientes(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes());

							if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setMontos(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.clienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.clienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(clienteAux,clienteLogic.getClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(clienteAux,clientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.cliente,clienteAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				clienteAux=new  Cliente();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.clienteSessionBean.getEsGuardarRelacionado() 
					|| (this.clienteSessionBean.getEsGuardarRelacionado() && this.cliente.getId()>=0)) {
						
					clienteAux.setIsNew(false);
				}
				
				clienteAux.setIsDeleted(false);
			
				clienteAux.setId(this.cliente.getId());	
				clienteAux.setVersionRow(this.cliente.getVersionRow());	
				clienteAux.setid_empresa(this.cliente.getid_empresa());	
				clienteAux.setid_sucursal(this.cliente.getid_sucursal());	
				clienteAux.setcodigo(this.cliente.getcodigo());	
				clienteAux.setid_tipo_identificacion(this.cliente.getid_tipo_identificacion());	
				clienteAux.setidentificacion(this.cliente.getidentificacion());	
				clienteAux.setruc(this.cliente.getruc());	
				clienteAux.setnombre(this.cliente.getnombre());	
				clienteAux.setapellido(this.cliente.getapellido());	
				clienteAux.setnombre_completo(this.cliente.getnombre_completo());	
				clienteAux.setnombre_comercial(this.cliente.getnombre_comercial());	
				clienteAux.settelefono(this.cliente.gettelefono());	
				clienteAux.setdireccion(this.cliente.getdireccion());	
				clienteAux.setes_prove(this.cliente.getes_prove());	
				clienteAux.setid_grupo_cliente(this.cliente.getid_grupo_cliente());	
				clienteAux.setid_titulo_cliente(this.cliente.getid_titulo_cliente());	
				clienteAux.setid_area_cr(this.cliente.getid_area_cr());	
				clienteAux.setid_estado_cliente(this.cliente.getid_estado_cliente());	
				clienteAux.setobservacion(this.cliente.getobservacion());	
				clienteAux.setid_pais(this.cliente.getid_pais());	
				clienteAux.setid_region(this.cliente.getid_region());	
				clienteAux.setid_provincia(this.cliente.getid_provincia());	
				clienteAux.setid_ciudad(this.cliente.getid_ciudad());	
				clienteAux.setid_zona(this.cliente.getid_zona());	
				clienteAux.setid_pais_nacionalidad(this.cliente.getid_pais_nacionalidad());	
				clienteAux.setid_tipo_cargo_labo(this.cliente.getid_tipo_cargo_labo());	
				clienteAux.setid_tipo_nivel_edu(this.cliente.getid_tipo_nivel_edu());	
				clienteAux.setid_profesion(this.cliente.getid_profesion());	
				clienteAux.setid_tipo_genero(this.cliente.getid_tipo_genero());	
				clienteAux.setid_estado_civil(this.cliente.getid_estado_civil());	
				clienteAux.setid_estado_legal(this.cliente.getid_estado_legal());	
				clienteAux.setfecha_nacimiento(this.cliente.getfecha_nacimiento());	
				clienteAux.setpath_imagen_firma(this.cliente.getpath_imagen_firma());	
				clienteAux.setcontacto(this.cliente.getcontacto());	
				clienteAux.setid_cuenta_contable(this.cliente.getid_cuenta_contable());	
				clienteAux.setid_ruta(this.cliente.getid_ruta());	
				clienteAux.setid_vendedor(this.cliente.getid_vendedor());	
				clienteAux.setid_centro_actividad(this.cliente.getid_centro_actividad());	
				clienteAux.setrepresentante(this.cliente.getrepresentante());	
				clienteAux.setid_tipo_garantia_empresa(this.cliente.getid_tipo_garantia_empresa());	
				clienteAux.setnombre_garantia(this.cliente.getnombre_garantia());	
				clienteAux.setvalor_garantia(this.cliente.getvalor_garantia());	
				clienteAux.setid_cate_tipo_afiliacion(this.cliente.getid_cate_tipo_afiliacion());	
				clienteAux.setnumero_carga(this.cliente.getnumero_carga());	
				clienteAux.setcredito_usado(this.cliente.getcredito_usado());	
				clienteAux.setlimite_credito(this.cliente.getlimite_credito());	
				clienteAux.setcredito_disponible(this.cliente.getcredito_disponible());	
				clienteAux.settotal_documentos(this.cliente.gettotal_documentos());	
				clienteAux.setfecha_ultima_factura(this.cliente.getfecha_ultima_factura());	
				clienteAux.setdescuento(this.cliente.getdescuento());	
				clienteAux.setid_dia(this.cliente.getid_dia());	
				clienteAux.sethora_pago(this.cliente.gethora_pago());	
				clienteAux.setid_empleado(this.cliente.getid_empleado());	
				clienteAux.setcobranzas(this.cliente.getcobranzas());	
				clienteAux.setmotivo(this.cliente.getmotivo());	
				clienteAux.setpreferencia(this.cliente.getpreferencia());	
				clienteAux.setcon_separacion_bienes(this.cliente.getcon_separacion_bienes());	
				clienteAux.setid_tipo_precio(this.cliente.getid_tipo_precio());	
				clienteAux.setid_tipo_lista_precio(this.cliente.getid_tipo_lista_precio());	
				clienteAux.setdetalle_estado(this.cliente.getdetalle_estado());	
				clienteAux.setes_contribuyente_especial(this.cliente.getes_contribuyente_especial());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(clienteAux,clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteAux,clientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.clienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.clienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.saveClientes();//WithConnection
						//clienteLogic.getSetVersionRowClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.cliente,clienteAux);
					
					this.refrescarForeignKeysDescripcionesCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.clienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals().addAll(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralsEliminados);
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas().addAll(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistasEliminados);
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads().addAll(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes().addAll(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals().addAll(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalsEliminados);
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes().addAll(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientesEliminados);
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes().addAll(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes().addAll(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables().addAll(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsablesEliminados);
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras().addAll(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancierasEliminados);
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios().addAll(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatariosEliminados);
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens().addAll(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagensEliminados);
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes().addAll(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas().addAll(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials().addAll(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialsEliminados);
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens().addAll(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biensEliminados);
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos().addAll(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes().addAll(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions().addAll(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionsEliminados);
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas().addAll(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoasEliminados);
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes().addAll(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientesEliminados);
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars().addAll(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarsEliminados);
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails().addAll(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailsEliminados);
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuges().addAll(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugesEliminados);
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars().addAll(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarsEliminados);
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes().addAll(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals().addAll(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalsEliminados);
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos().addAll(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonosEliminados);
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes().addAll(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias().addAll(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariasEliminados);
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos().addAll(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montosEliminados);
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos().addAll(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivosEliminados);
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas().addAll(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions().addAll(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionsEliminados);
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados().addAll(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadosEliminados);
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes().addAll(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaborals.addAll(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralsEliminados);
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistas.addAll(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistasEliminados);
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedads.addAll(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientes.addAll(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonals.addAll(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalsEliminados);
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientes.addAll(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientesEliminados);
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientes.addAll(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientes.addAll(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsables.addAll(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsablesEliminados);
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieras.addAll(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancierasEliminados);
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarios.addAll(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatariosEliminados);
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagens.addAll(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagensEliminados);
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientes.addAll(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicas.addAll(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercials.addAll(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialsEliminados);
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biens.addAll(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biensEliminados);
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductos.addAll(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientes.addAll(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucions.addAll(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionsEliminados);
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoas.addAll(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoasEliminados);
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientes.addAll(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientesEliminados);
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliars.addAll(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarsEliminados);
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emails.addAll(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailsEliminados);
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyuges.addAll(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugesEliminados);
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrars.addAll(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarsEliminados);
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientes.addAll(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegals.addAll(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalsEliminados);
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonos.addAll(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonosEliminados);
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientes.addAll(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancarias.addAll(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariasEliminados);
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montos.addAll(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montosEliminados);
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivos.addAll(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivosEliminados);
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicas.addAll(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccions.addAll(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionsEliminados);
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechados.addAll(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadosEliminados);
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientes.addAll(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientesEliminados);
						}
						//ARCHITECTURE
						
						if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								clienteLogic.saveClienteRelaciones(clienteAux,this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes(),this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens(),this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars(),this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados(),this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails(),this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals(),this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes(),this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos(),this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasCliente(),this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes(),this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials(),this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads(),this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals(),this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras(),this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos(),this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars(),this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables(),this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas(),this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes(),this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuge(),this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias(),this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes(),this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions(),this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas(),this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos(),this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios(),this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes(),this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals(),this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas(),this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions(),this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens(),this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes(),this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas(),this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes(),this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes(),this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());//WithConnection
								//clienteLogic.getSetVersionRowClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.cliente,clienteAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.setInformacionLaborals(new ArrayList<InformacionLaboral>());
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.setTransportistas(new ArrayList<Transportista>());
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(new ArrayList<Novedad>());
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(new ArrayList<PoliticasCliente>());
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.setReferenciaPersonals(new ArrayList<ReferenciaPersonal>());
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.setBalanceGeneralClientes(new ArrayList<BalanceGeneralCliente>());
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.setPoliticaClientes(new ArrayList<PoliticaCliente>());
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.setVehiculoClientes(new ArrayList<VehiculoCliente>());
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.setResponsables(new ArrayList<Responsable>());
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.setInformacionFinancieras(new ArrayList<InformacionFinanciera>());
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.setConsignatarios(new ArrayList<Consignatario>());
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.setClienteImagens(new ArrayList<ClienteImagen>());
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.setGarantiaClientes(new ArrayList<GarantiaCliente>());
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.setInformacionEconomicas(new ArrayList<InformacionEconomica>());
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.setReferenciaComercials(new ArrayList<ReferenciaComercial>());
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.setBiens(new ArrayList<Bien>());
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(new ArrayList<ProveedorProducto>());
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.setContactoClientes(new ArrayList<ContactoCliente>());
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.setDatoConstitucions(new ArrayList<DatoConstitucion>());
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.setClienteCoas(new ArrayList<ClienteCoa>());
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.setHobbyClientes(new ArrayList<HobbyCliente>());
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.setCargaFamiliars(new ArrayList<CargaFamiliar>());
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.setEMails(new ArrayList<EMail>());
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.setConyuges(new ArrayList<Conyuge>());
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.setCuentaPorCobrars(new ArrayList<CuentaPorCobrar>());
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.setFirmaClientes(new ArrayList<FirmaCliente>());
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.setRepresentanteLegals(new ArrayList<RepresentanteLegal>());
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.setTelefonos(new ArrayList<Telefono>());
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.setReferenciaBancarias(new ArrayList<ReferenciaBancaria>());
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.setMontos(new ArrayList<Monto>());
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.setClienteArchivos(new ArrayList<ClienteArchivo>());
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.setActividadEconomicas(new ArrayList<ActividadEconomica>());
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.setDireccions(new ArrayList<Direccion>());
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.setChequePostFechados(new ArrayList<ChequePostFechado>());
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaborals= new ArrayList<InformacionLaboral>();
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistas= new ArrayList<Transportista>();
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedads= new ArrayList<Novedad>();
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientes= new ArrayList<PoliticasCliente>();
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonals= new ArrayList<ReferenciaPersonal>();
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientes= new ArrayList<BalanceGeneralCliente>();
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientes= new ArrayList<PoliticaCliente>();
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientes= new ArrayList<VehiculoCliente>();
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsables= new ArrayList<Responsable>();
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieras= new ArrayList<InformacionFinanciera>();
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarios= new ArrayList<Consignatario>();
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagens= new ArrayList<ClienteImagen>();
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientes= new ArrayList<GarantiaCliente>();
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicas= new ArrayList<InformacionEconomica>();
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercials= new ArrayList<ReferenciaComercial>();
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biens= new ArrayList<Bien>();
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductos= new ArrayList<ProveedorProducto>();
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientes= new ArrayList<ContactoCliente>();
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucions= new ArrayList<DatoConstitucion>();
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoas= new ArrayList<ClienteCoa>();
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientes= new ArrayList<HobbyCliente>();
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliars= new ArrayList<CargaFamiliar>();
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emails= new ArrayList<EMail>();
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyuges= new ArrayList<Conyuge>();
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrars= new ArrayList<CuentaPorCobrar>();
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientes= new ArrayList<FirmaCliente>();
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegals= new ArrayList<RepresentanteLegal>();
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonos= new ArrayList<Telefono>();
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientes= new ArrayList<NegocioCliente>();
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancarias= new ArrayList<ReferenciaBancaria>();
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montos= new ArrayList<Monto>();
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivos= new ArrayList<ClienteArchivo>();
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicas= new ArrayList<ActividadEconomica>();
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccions= new ArrayList<Direccion>();
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechados= new ArrayList<ChequePostFechado>();
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientes= new ArrayList<SubCliente>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setContactoClientes(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes());

							if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setBiens(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens());

							if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setCargaFamiliars(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars());

							if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setChequePostFechados(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados());

							if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setEMails(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails());

							if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaPersonals(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals());

							if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setGarantiaClientes(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes());

							if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteArchivos(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos());

							if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setPoliticasCliente(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasCliente());

							if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setFirmaClientes(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes());

							if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaComercials(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials());

							if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setNovedads(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());

							if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionLaborals(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals());

							if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionFinancieras(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras());

							if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setTelefonos(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos());

							if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setCuentaPorCobrars(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars());

							if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setResponsables(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables());

							if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setTransportistas(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas());

							if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setPoliticaClientes(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes());

							if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setConyuge(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuge());

							if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaBancarias(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias());

							if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setBalanceGeneralClientes(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes());

							if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setDatoConstitucions(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions());

							if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setActividadEconomicas(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas());

							if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setProveedorProductos(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());

							if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setConsignatarios(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios());

							if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setHobbyClientes(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes());

							if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setRepresentanteLegals(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals());

							if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteCoas(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas());

							if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setDireccions(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions());

							if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteImagens(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens());

							if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setSubClientes(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes());

							if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setServicioClientes(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionEconomicas(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas());

							if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setVehiculoClientes(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes());

							if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setNegocioClientes(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes());

							if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setMontos(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.clienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.clienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(clienteAux,clienteLogic.getClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(clienteAux,clientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.cliente,clienteAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				clienteAux=new  Cliente();
				
				clienteAux.setIsNew(false);
				clienteAux.setIsChanged(false);
				
				clienteAux.setIsDeleted(true);
				
				clienteAux.setId(this.cliente.getId());	
				clienteAux.setVersionRow(this.cliente.getVersionRow());	
				clienteAux.setid_empresa(this.cliente.getid_empresa());	
				clienteAux.setid_sucursal(this.cliente.getid_sucursal());	
				clienteAux.setcodigo(this.cliente.getcodigo());	
				clienteAux.setid_tipo_identificacion(this.cliente.getid_tipo_identificacion());	
				clienteAux.setidentificacion(this.cliente.getidentificacion());	
				clienteAux.setruc(this.cliente.getruc());	
				clienteAux.setnombre(this.cliente.getnombre());	
				clienteAux.setapellido(this.cliente.getapellido());	
				clienteAux.setnombre_completo(this.cliente.getnombre_completo());	
				clienteAux.setnombre_comercial(this.cliente.getnombre_comercial());	
				clienteAux.settelefono(this.cliente.gettelefono());	
				clienteAux.setdireccion(this.cliente.getdireccion());	
				clienteAux.setes_prove(this.cliente.getes_prove());	
				clienteAux.setid_grupo_cliente(this.cliente.getid_grupo_cliente());	
				clienteAux.setid_titulo_cliente(this.cliente.getid_titulo_cliente());	
				clienteAux.setid_area_cr(this.cliente.getid_area_cr());	
				clienteAux.setid_estado_cliente(this.cliente.getid_estado_cliente());	
				clienteAux.setobservacion(this.cliente.getobservacion());	
				clienteAux.setid_pais(this.cliente.getid_pais());	
				clienteAux.setid_region(this.cliente.getid_region());	
				clienteAux.setid_provincia(this.cliente.getid_provincia());	
				clienteAux.setid_ciudad(this.cliente.getid_ciudad());	
				clienteAux.setid_zona(this.cliente.getid_zona());	
				clienteAux.setid_pais_nacionalidad(this.cliente.getid_pais_nacionalidad());	
				clienteAux.setid_tipo_cargo_labo(this.cliente.getid_tipo_cargo_labo());	
				clienteAux.setid_tipo_nivel_edu(this.cliente.getid_tipo_nivel_edu());	
				clienteAux.setid_profesion(this.cliente.getid_profesion());	
				clienteAux.setid_tipo_genero(this.cliente.getid_tipo_genero());	
				clienteAux.setid_estado_civil(this.cliente.getid_estado_civil());	
				clienteAux.setid_estado_legal(this.cliente.getid_estado_legal());	
				clienteAux.setfecha_nacimiento(this.cliente.getfecha_nacimiento());	
				clienteAux.setpath_imagen_firma(this.cliente.getpath_imagen_firma());	
				clienteAux.setcontacto(this.cliente.getcontacto());	
				clienteAux.setid_cuenta_contable(this.cliente.getid_cuenta_contable());	
				clienteAux.setid_ruta(this.cliente.getid_ruta());	
				clienteAux.setid_vendedor(this.cliente.getid_vendedor());	
				clienteAux.setid_centro_actividad(this.cliente.getid_centro_actividad());	
				clienteAux.setrepresentante(this.cliente.getrepresentante());	
				clienteAux.setid_tipo_garantia_empresa(this.cliente.getid_tipo_garantia_empresa());	
				clienteAux.setnombre_garantia(this.cliente.getnombre_garantia());	
				clienteAux.setvalor_garantia(this.cliente.getvalor_garantia());	
				clienteAux.setid_cate_tipo_afiliacion(this.cliente.getid_cate_tipo_afiliacion());	
				clienteAux.setnumero_carga(this.cliente.getnumero_carga());	
				clienteAux.setcredito_usado(this.cliente.getcredito_usado());	
				clienteAux.setlimite_credito(this.cliente.getlimite_credito());	
				clienteAux.setcredito_disponible(this.cliente.getcredito_disponible());	
				clienteAux.settotal_documentos(this.cliente.gettotal_documentos());	
				clienteAux.setfecha_ultima_factura(this.cliente.getfecha_ultima_factura());	
				clienteAux.setdescuento(this.cliente.getdescuento());	
				clienteAux.setid_dia(this.cliente.getid_dia());	
				clienteAux.sethora_pago(this.cliente.gethora_pago());	
				clienteAux.setid_empleado(this.cliente.getid_empleado());	
				clienteAux.setcobranzas(this.cliente.getcobranzas());	
				clienteAux.setmotivo(this.cliente.getmotivo());	
				clienteAux.setpreferencia(this.cliente.getpreferencia());	
				clienteAux.setcon_separacion_bienes(this.cliente.getcon_separacion_bienes());	
				clienteAux.setid_tipo_precio(this.cliente.getid_tipo_precio());	
				clienteAux.setid_tipo_lista_precio(this.cliente.getid_tipo_lista_precio());	
				clienteAux.setdetalle_estado(this.cliente.getdetalle_estado());	
				clienteAux.setes_contribuyente_especial(this.cliente.getes_contribuyente_especial());	
				
				if(this.clienteSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.clienteAux.getId()>=0) {	
						this.clientesEliminados.add(clienteAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(clienteAux,clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteAux,clientes);
				}
				//ARCHITECTURE
				
				//ELIMINAR ARCHIVOS
				//Funciones.eliminarArchivo(servletContext.getRealPath(this.cliente.getpath_imagen_firma()));	
				
				if(!isGuardarCambiosEnLote && !this.clienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.clienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.saveClientes();//WithConnection
						//clienteLogic.getSetVersionRowClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.clienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals().addAll(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralsEliminados);
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas().addAll(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistasEliminados);
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads().addAll(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasClientes().addAll(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals().addAll(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalsEliminados);
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes().addAll(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientesEliminados);
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes().addAll(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes().addAll(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables().addAll(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsablesEliminados);
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras().addAll(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancierasEliminados);
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios().addAll(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatariosEliminados);
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens().addAll(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagensEliminados);
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes().addAll(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas().addAll(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials().addAll(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialsEliminados);
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens().addAll(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biensEliminados);
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos().addAll(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes().addAll(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes().addAll(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions().addAll(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionsEliminados);
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas().addAll(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoasEliminados);
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes().addAll(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientesEliminados);
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars().addAll(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarsEliminados);
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails().addAll(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailsEliminados);
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuges().addAll(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugesEliminados);
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars().addAll(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarsEliminados);
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes().addAll(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals().addAll(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalsEliminados);
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos().addAll(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonosEliminados);
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes().addAll(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias().addAll(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariasEliminados);
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos().addAll(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montosEliminados);
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos().addAll(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivosEliminados);
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas().addAll(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions().addAll(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionsEliminados);
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados().addAll(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadosEliminados);
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes().addAll(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaborals.addAll(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralsEliminados);
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistas.addAll(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistasEliminados);
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedads.addAll(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadsEliminados);
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientes.addAll(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonals.addAll(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalsEliminados);
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientes.addAll(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientesEliminados);
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientes.addAll(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientes.addAll(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsables.addAll(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsablesEliminados);
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieras.addAll(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancierasEliminados);
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarios.addAll(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatariosEliminados);
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagens.addAll(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagensEliminados);
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientes.addAll(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicas.addAll(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercials.addAll(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialsEliminados);
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biens.addAll(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biensEliminados);
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductos.addAll(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductosEliminados);
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientes.addAll(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientes.addAll(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientesEliminados);
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucions.addAll(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionsEliminados);
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoas.addAll(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoasEliminados);
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientes.addAll(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientesEliminados);
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliars.addAll(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarsEliminados);
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emails.addAll(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailsEliminados);
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyuges.addAll(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugesEliminados);
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrars.addAll(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarsEliminados);
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientes.addAll(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientesEliminados);
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegals.addAll(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalsEliminados);
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonos.addAll(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonosEliminados);
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientes.addAll(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientesEliminados);
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancarias.addAll(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariasEliminados);
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montos.addAll(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montosEliminados);
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivos.addAll(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivosEliminados);
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicas.addAll(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicasEliminados);
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccions.addAll(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionsEliminados);
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechados.addAll(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadosEliminados);
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientes.addAll(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientesEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detaformapagoBeanSwingJInternalFrame.jInternalFrameDetalleFormDetaFormaPago.bancoformapagoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.facturaBeanSwingJInternalFrame.jInternalFrameDetalleFormFactura.detallefacturaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.pedidoBeanSwingJInternalFrame.jInternalFrameDetalleFormPedido.detallepedidoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jInternalFrameDetalleFormResponsable.notacreditosoliBeanSwingJInternalFrame.jInternalFrameDetalleFormNotaCreditoSoli.detanotacreditosoliBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.terminoproformaBeanSwingJInternalFrame.jInternalFrameDetalleFormTerminoProforma.detalleterminoproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.proformaBeanSwingJInternalFrame.jInternalFrameDetalleFormProforma.detalleproformaBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.consignacionBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jInternalFrameDetalleFormConsignatario.pedidoexporBeanSwingJInternalFrame.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								clienteLogic.saveClienteRelaciones(clienteAux,this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes(),this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens(),this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars(),this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados(),this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails(),this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals(),this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes(),this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos(),this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasCliente(),this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes(),this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials(),this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads(),this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals(),this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras(),this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos(),this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars(),this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables(),this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas(),this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes(),this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuge(),this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias(),this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes(),this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions(),this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas(),this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos(),this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios(),this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes(),this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals(),this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas(),this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions(),this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens(),this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes(),this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes(),this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas(),this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes(),this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes(),this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());//WithConnection
								//clienteLogic.getSetVersionRowClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.setInformacionLaborals(new ArrayList<InformacionLaboral>());
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.setTransportistas(new ArrayList<Transportista>());
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(new ArrayList<Novedad>());
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasClientes(new ArrayList<PoliticasCliente>());
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.setReferenciaPersonals(new ArrayList<ReferenciaPersonal>());
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.setBalanceGeneralClientes(new ArrayList<BalanceGeneralCliente>());
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.setPoliticaClientes(new ArrayList<PoliticaCliente>());
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.setVehiculoClientes(new ArrayList<VehiculoCliente>());
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.setResponsables(new ArrayList<Responsable>());
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.setInformacionFinancieras(new ArrayList<InformacionFinanciera>());
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.setConsignatarios(new ArrayList<Consignatario>());
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.setClienteImagens(new ArrayList<ClienteImagen>());
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.setGarantiaClientes(new ArrayList<GarantiaCliente>());
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.setInformacionEconomicas(new ArrayList<InformacionEconomica>());
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.setReferenciaComercials(new ArrayList<ReferenciaComercial>());
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.setBiens(new ArrayList<Bien>());
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(new ArrayList<ProveedorProducto>());
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(new ArrayList<ServicioCliente>());
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.setContactoClientes(new ArrayList<ContactoCliente>());
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.setDatoConstitucions(new ArrayList<DatoConstitucion>());
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.setClienteCoas(new ArrayList<ClienteCoa>());
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.setHobbyClientes(new ArrayList<HobbyCliente>());
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.setCargaFamiliars(new ArrayList<CargaFamiliar>());
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.setEMails(new ArrayList<EMail>());
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.setConyuges(new ArrayList<Conyuge>());
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.setCuentaPorCobrars(new ArrayList<CuentaPorCobrar>());
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.setFirmaClientes(new ArrayList<FirmaCliente>());
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.setRepresentanteLegals(new ArrayList<RepresentanteLegal>());
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.setTelefonos(new ArrayList<Telefono>());
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.setReferenciaBancarias(new ArrayList<ReferenciaBancaria>());
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.setMontos(new ArrayList<Monto>());
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.setClienteArchivos(new ArrayList<ClienteArchivo>());
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.setActividadEconomicas(new ArrayList<ActividadEconomica>());
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.setDireccions(new ArrayList<Direccion>());
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.setChequePostFechados(new ArrayList<ChequePostFechado>());
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.setSubClientes(new ArrayList<SubCliente>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaborals= new ArrayList<InformacionLaboral>();
							this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistas= new ArrayList<Transportista>();
							this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedads= new ArrayList<Novedad>();
							this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclientes= new ArrayList<PoliticasCliente>();
							this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonals= new ArrayList<ReferenciaPersonal>();
							this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientes= new ArrayList<BalanceGeneralCliente>();
							this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientes= new ArrayList<PoliticaCliente>();
							this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientes= new ArrayList<VehiculoCliente>();
							this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsables= new ArrayList<Responsable>();
							this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieras= new ArrayList<InformacionFinanciera>();
							this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarios= new ArrayList<Consignatario>();
							this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagens= new ArrayList<ClienteImagen>();
							this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientes= new ArrayList<GarantiaCliente>();
							this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicas= new ArrayList<InformacionEconomica>();
							this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercials= new ArrayList<ReferenciaComercial>();
							this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biens= new ArrayList<Bien>();
							this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductos= new ArrayList<ProveedorProducto>();
							this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientes= new ArrayList<ServicioCliente>();
							this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientes= new ArrayList<ContactoCliente>();
							this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucions= new ArrayList<DatoConstitucion>();
							this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoas= new ArrayList<ClienteCoa>();
							this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientes= new ArrayList<HobbyCliente>();
							this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliars= new ArrayList<CargaFamiliar>();
							this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emails= new ArrayList<EMail>();
							this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyuges= new ArrayList<Conyuge>();
							this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrars= new ArrayList<CuentaPorCobrar>();
							this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientes= new ArrayList<FirmaCliente>();
							this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegals= new ArrayList<RepresentanteLegal>();
							this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonos= new ArrayList<Telefono>();
							this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientes= new ArrayList<NegocioCliente>();
							this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancarias= new ArrayList<ReferenciaBancaria>();
							this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montos= new ArrayList<Monto>();
							this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivos= new ArrayList<ClienteArchivo>();
							this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicas= new ArrayList<ActividadEconomica>();
							this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccions= new ArrayList<Direccion>();
							this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechados= new ArrayList<ChequePostFechado>();
							this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientes= new ArrayList<SubCliente>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setContactoClientes(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes());

							if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setBiens(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens());

							if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setCargaFamiliars(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars());

							if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setChequePostFechados(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados());

							if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setEMails(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails());

							if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaPersonals(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals());

							if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setGarantiaClientes(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes());

							if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteArchivos(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos());

							if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setPoliticasCliente(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasCliente());

							if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setFirmaClientes(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes());

							if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaComercials(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials());

							if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setNovedads(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());

							if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionLaborals(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals());

							if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionFinancieras(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras());

							if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setTelefonos(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos());

							if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setCuentaPorCobrars(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars());

							if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setResponsables(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables());

							if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setTransportistas(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas());

							if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setPoliticaClientes(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes());

							if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setConyuge(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuge());

							if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setReferenciaBancarias(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias());

							if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setBalanceGeneralClientes(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes());

							if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setDatoConstitucions(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions());

							if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setActividadEconomicas(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas());

							if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setProveedorProductos(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());

							if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setConsignatarios(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios());

							if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setHobbyClientes(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes());

							if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setRepresentanteLegals(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals());

							if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteCoas(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas());

							if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setDireccions(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions());

							if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setClienteImagens(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens());

							if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setSubClientes(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes());

							if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setServicioClientes(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());

							if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setInformacionEconomicas(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas());

							if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setVehiculoClientes(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes());

							if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setNegocioClientes(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes());

							if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.quitarFilaTotales();}
							clienteAux.setMontos(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.clienteSessionBean.getEstaModoGuardarRelaciones() 
								|| this.clienteSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(clienteAux,clienteLogic.getClientes());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(clienteAux,clientes);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getClientes().addAll(this.clientesEliminados);
					
					clienteLogic.saveClientes();//WithConnection
					//clienteLogic.getSetVersionRowClientes();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesCliente();
				
				this.clientesEliminados= new ArrayList<Cliente>();		
			}
			
			if(this.clienteSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Cliente GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.cliente=clienteAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessCliente();
      	}
		
	}	
	
	public void actualizarRelaciones(Cliente clienteLocal) throws Exception {
		
		if(this.clienteSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				clienteLocal.setContactoClientes(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes());
				clienteLocal.setBiens(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens());
				clienteLocal.setCargaFamiliars(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars());
				clienteLocal.setChequePostFechados(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados());
				clienteLocal.setEMails(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails());
				clienteLocal.setReferenciaPersonals(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals());
				clienteLocal.setGarantiaClientes(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes());
				clienteLocal.setClienteArchivos(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos());
				clienteLocal.setFirmaClientes(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes());
				clienteLocal.setReferenciaComercials(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials());
				clienteLocal.setNovedads(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());
				clienteLocal.setInformacionLaborals(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals());
				clienteLocal.setInformacionFinancieras(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras());
				clienteLocal.setTelefonos(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos());
				clienteLocal.setCuentaPorCobrars(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars());
				clienteLocal.setResponsables(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables());
				clienteLocal.setTransportistas(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas());
				clienteLocal.setPoliticaClientes(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes());
				clienteLocal.setReferenciaBancarias(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias());
				clienteLocal.setBalanceGeneralClientes(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes());
				clienteLocal.setDatoConstitucions(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions());
				clienteLocal.setActividadEconomicas(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas());
				clienteLocal.setProveedorProductos(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());
				clienteLocal.setConsignatarios(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios());
				clienteLocal.setHobbyClientes(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes());
				clienteLocal.setRepresentanteLegals(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals());
				clienteLocal.setClienteCoas(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas());
				clienteLocal.setDireccions(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions());
				clienteLocal.setClienteImagens(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens());
				clienteLocal.setSubClientes(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes());
				clienteLocal.setServicioClientes(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());
				clienteLocal.setInformacionEconomicas(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas());
				clienteLocal.setVehiculoClientes(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes());
				clienteLocal.setNegocioClientes(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes());
				clienteLocal.setMontos(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());
			
			} else {
			
				clienteLocal.setContactoClientes(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclientes);
				clienteLocal.setBiens(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.biens);
				clienteLocal.setCargaFamiliars(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliars);
				clienteLocal.setChequePostFechados(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechados);
				clienteLocal.setEMails(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emails);
				clienteLocal.setReferenciaPersonals(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonals);
				clienteLocal.setGarantiaClientes(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclientes);
				clienteLocal.setClienteArchivos(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivos);
				clienteLocal.setFirmaClientes(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclientes);
				clienteLocal.setReferenciaComercials(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercials);
				clienteLocal.setNovedads(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedads);
				clienteLocal.setInformacionLaborals(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaborals);
				clienteLocal.setInformacionFinancieras(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieras);
				clienteLocal.setTelefonos(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonos);
				clienteLocal.setCuentaPorCobrars(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrars);
				clienteLocal.setResponsables(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsables);
				clienteLocal.setTransportistas(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistas);
				clienteLocal.setPoliticaClientes(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclientes);
				clienteLocal.setReferenciaBancarias(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancarias);
				clienteLocal.setBalanceGeneralClientes(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclientes);
				clienteLocal.setDatoConstitucions(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucions);
				clienteLocal.setActividadEconomicas(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicas);
				clienteLocal.setProveedorProductos(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductos);
				clienteLocal.setConsignatarios(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarios);
				clienteLocal.setHobbyClientes(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclientes);
				clienteLocal.setRepresentanteLegals(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegals);
				clienteLocal.setClienteCoas(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoas);
				clienteLocal.setDireccions(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccions);
				clienteLocal.setClienteImagens(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagens);
				clienteLocal.setSubClientes(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclientes);
				clienteLocal.setServicioClientes(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclientes);
				clienteLocal.setInformacionEconomicas(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicas);
				clienteLocal.setVehiculoClientes(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclientes);
				clienteLocal.setNegocioClientes(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclientes);
				clienteLocal.setMontos(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montos);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Cliente clienteLocal) throws Exception {	
		if(this.clienteSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				clienteLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				clienteLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoIdentificacionDetalleFormJInternalFrame.class)) {
				TipoIdentificacionBeanSwingJInternalFrame tipoidentificacionBeanSwingJInternalFrameLocal=(TipoIdentificacionBeanSwingJInternalFrame) ((TipoIdentificacionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoidentificacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoIdentificacion(tipoidentificacionBeanSwingJInternalFrameLocal.gettipoidentificacion(),true);
				tipoidentificacionBeanSwingJInternalFrameLocal.actualizarLista(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion,this.tipoidentificacionsForeignKey);

				tipoidentificacionBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion);

				clienteLocal.setTipoIdentificacion(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion);

				this.addItemDefectoCombosForeignKeyTipoIdentificacion();
				this.cargarCombosFrameTipoIdentificacionsForeignKey("Formulario");
				this.setActualTipoIdentificacionForeignKey(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(GrupoClienteDetalleFormJInternalFrame.class)) {
				GrupoClienteBeanSwingJInternalFrame grupoclienteBeanSwingJInternalFrameLocal=(GrupoClienteBeanSwingJInternalFrame) ((GrupoClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				grupoclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoGrupoCliente(grupoclienteBeanSwingJInternalFrameLocal.getgrupocliente(),true);
				grupoclienteBeanSwingJInternalFrameLocal.actualizarLista(grupoclienteBeanSwingJInternalFrameLocal.grupocliente,this.grupoclientesForeignKey);

				grupoclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(grupoclienteBeanSwingJInternalFrameLocal.grupocliente);

				clienteLocal.setGrupoCliente(grupoclienteBeanSwingJInternalFrameLocal.grupocliente);

				this.addItemDefectoCombosForeignKeyGrupoCliente();
				this.cargarCombosFrameGrupoClientesForeignKey("Formulario");
				this.setActualGrupoClienteForeignKey(grupoclienteBeanSwingJInternalFrameLocal.grupocliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TituloClienteDetalleFormJInternalFrame.class)) {
				TituloClienteBeanSwingJInternalFrame tituloclienteBeanSwingJInternalFrameLocal=(TituloClienteBeanSwingJInternalFrame) ((TituloClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tituloclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTituloCliente(tituloclienteBeanSwingJInternalFrameLocal.gettitulocliente(),true);
				tituloclienteBeanSwingJInternalFrameLocal.actualizarLista(tituloclienteBeanSwingJInternalFrameLocal.titulocliente,this.tituloclientesForeignKey);

				tituloclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(tituloclienteBeanSwingJInternalFrameLocal.titulocliente);

				clienteLocal.setTituloCliente(tituloclienteBeanSwingJInternalFrameLocal.titulocliente);

				this.addItemDefectoCombosForeignKeyTituloCliente();
				this.cargarCombosFrameTituloClientesForeignKey("Formulario");
				this.setActualTituloClienteForeignKey(tituloclienteBeanSwingJInternalFrameLocal.titulocliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AreaCrDetalleFormJInternalFrame.class)) {
				AreaCrBeanSwingJInternalFrame areacrBeanSwingJInternalFrameLocal=(AreaCrBeanSwingJInternalFrame) ((AreaCrDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				areacrBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAreaCr(areacrBeanSwingJInternalFrameLocal.getareacr(),true);
				areacrBeanSwingJInternalFrameLocal.actualizarLista(areacrBeanSwingJInternalFrameLocal.areacr,this.areacrsForeignKey);

				areacrBeanSwingJInternalFrameLocal.actualizarRelaciones(areacrBeanSwingJInternalFrameLocal.areacr);

				clienteLocal.setAreaCr(areacrBeanSwingJInternalFrameLocal.areacr);

				this.addItemDefectoCombosForeignKeyAreaCr();
				this.cargarCombosFrameAreaCrsForeignKey("Formulario");
				this.setActualAreaCrForeignKey(areacrBeanSwingJInternalFrameLocal.areacr.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoClienteDetalleFormJInternalFrame.class)) {
				EstadoClienteBeanSwingJInternalFrame estadoclienteBeanSwingJInternalFrameLocal=(EstadoClienteBeanSwingJInternalFrame) ((EstadoClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoCliente(estadoclienteBeanSwingJInternalFrameLocal.getestadocliente(),true);
				estadoclienteBeanSwingJInternalFrameLocal.actualizarLista(estadoclienteBeanSwingJInternalFrameLocal.estadocliente,this.estadoclientesForeignKey);

				estadoclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoclienteBeanSwingJInternalFrameLocal.estadocliente);

				clienteLocal.setEstadoCliente(estadoclienteBeanSwingJInternalFrameLocal.estadocliente);

				this.addItemDefectoCombosForeignKeyEstadoCliente();
				this.cargarCombosFrameEstadoClientesForeignKey("Formulario");
				this.setActualEstadoClienteForeignKey(estadoclienteBeanSwingJInternalFrameLocal.estadocliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				clienteLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(RegionDetalleFormJInternalFrame.class)) {
				RegionBeanSwingJInternalFrame regionBeanSwingJInternalFrameLocal=(RegionBeanSwingJInternalFrame) ((RegionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				regionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoRegion(regionBeanSwingJInternalFrameLocal.getregion(),true);
				regionBeanSwingJInternalFrameLocal.actualizarLista(regionBeanSwingJInternalFrameLocal.region,this.regionsForeignKey);

				regionBeanSwingJInternalFrameLocal.actualizarRelaciones(regionBeanSwingJInternalFrameLocal.region);

				clienteLocal.setRegion(regionBeanSwingJInternalFrameLocal.region);

				this.addItemDefectoCombosForeignKeyRegion();
				this.cargarCombosFrameRegionsForeignKey("Formulario");
				this.setActualRegionForeignKey(regionBeanSwingJInternalFrameLocal.region.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProvinciaDetalleFormJInternalFrame.class)) {
				ProvinciaBeanSwingJInternalFrame provinciaBeanSwingJInternalFrameLocal=(ProvinciaBeanSwingJInternalFrame) ((ProvinciaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				provinciaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProvincia(provinciaBeanSwingJInternalFrameLocal.getprovincia(),true);
				provinciaBeanSwingJInternalFrameLocal.actualizarLista(provinciaBeanSwingJInternalFrameLocal.provincia,this.provinciasForeignKey);

				provinciaBeanSwingJInternalFrameLocal.actualizarRelaciones(provinciaBeanSwingJInternalFrameLocal.provincia);

				clienteLocal.setProvincia(provinciaBeanSwingJInternalFrameLocal.provincia);

				this.addItemDefectoCombosForeignKeyProvincia();
				this.cargarCombosFrameProvinciasForeignKey("Formulario");
				this.setActualProvinciaForeignKey(provinciaBeanSwingJInternalFrameLocal.provincia.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadBeanSwingJInternalFrameLocal.actualizarLista(ciudadBeanSwingJInternalFrameLocal.ciudad,this.ciudadsForeignKey);

				ciudadBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadBeanSwingJInternalFrameLocal.ciudad);

				clienteLocal.setCiudad(ciudadBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey("Formulario");
				this.setActualCiudadForeignKey(ciudadBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ZonaDetalleFormJInternalFrame.class)) {
				ZonaBeanSwingJInternalFrame zonaBeanSwingJInternalFrameLocal=(ZonaBeanSwingJInternalFrame) ((ZonaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				zonaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoZona(zonaBeanSwingJInternalFrameLocal.getzona(),true);
				zonaBeanSwingJInternalFrameLocal.actualizarLista(zonaBeanSwingJInternalFrameLocal.zona,this.zonasForeignKey);

				zonaBeanSwingJInternalFrameLocal.actualizarRelaciones(zonaBeanSwingJInternalFrameLocal.zona);

				clienteLocal.setZona(zonaBeanSwingJInternalFrameLocal.zona);

				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey("Formulario");
				this.setActualZonaForeignKey(zonaBeanSwingJInternalFrameLocal.zona.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisnacionalidadBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisnacionalidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisnacionalidadBeanSwingJInternalFrameLocal.getpais(),true);
				paisnacionalidadBeanSwingJInternalFrameLocal.actualizarLista(paisnacionalidadBeanSwingJInternalFrameLocal.pais,this.paisnacionalidadsForeignKey);

				paisnacionalidadBeanSwingJInternalFrameLocal.actualizarRelaciones(paisnacionalidadBeanSwingJInternalFrameLocal.pais);

				clienteLocal.setPaisNacionalidad(paisnacionalidadBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPaisNacionalidad();
				this.cargarCombosFramePaisNacionalidadsForeignKey("Formulario");
				this.setActualPaisNacionalidadForeignKey(paisnacionalidadBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCargoLaboDetalleFormJInternalFrame.class)) {
				TipoCargoLaboBeanSwingJInternalFrame tipocargolaboBeanSwingJInternalFrameLocal=(TipoCargoLaboBeanSwingJInternalFrame) ((TipoCargoLaboDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocargolaboBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCargoLabo(tipocargolaboBeanSwingJInternalFrameLocal.gettipocargolabo(),true);
				tipocargolaboBeanSwingJInternalFrameLocal.actualizarLista(tipocargolaboBeanSwingJInternalFrameLocal.tipocargolabo,this.tipocargolabosForeignKey);

				tipocargolaboBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocargolaboBeanSwingJInternalFrameLocal.tipocargolabo);

				clienteLocal.setTipoCargoLabo(tipocargolaboBeanSwingJInternalFrameLocal.tipocargolabo);

				this.addItemDefectoCombosForeignKeyTipoCargoLabo();
				this.cargarCombosFrameTipoCargoLabosForeignKey("Formulario");
				this.setActualTipoCargoLaboForeignKey(tipocargolaboBeanSwingJInternalFrameLocal.tipocargolabo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoNivelEduDetalleFormJInternalFrame.class)) {
				TipoNivelEduBeanSwingJInternalFrame tiponiveleduBeanSwingJInternalFrameLocal=(TipoNivelEduBeanSwingJInternalFrame) ((TipoNivelEduDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiponiveleduBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoNivelEdu(tiponiveleduBeanSwingJInternalFrameLocal.gettiponiveledu(),true);
				tiponiveleduBeanSwingJInternalFrameLocal.actualizarLista(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu,this.tiponiveledusForeignKey);

				tiponiveleduBeanSwingJInternalFrameLocal.actualizarRelaciones(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu);

				clienteLocal.setTipoNivelEdu(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu);

				this.addItemDefectoCombosForeignKeyTipoNivelEdu();
				this.cargarCombosFrameTipoNivelEdusForeignKey("Formulario");
				this.setActualTipoNivelEduForeignKey(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProfesionDetalleFormJInternalFrame.class)) {
				ProfesionBeanSwingJInternalFrame profesionBeanSwingJInternalFrameLocal=(ProfesionBeanSwingJInternalFrame) ((ProfesionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				profesionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProfesion(profesionBeanSwingJInternalFrameLocal.getprofesion(),true);
				profesionBeanSwingJInternalFrameLocal.actualizarLista(profesionBeanSwingJInternalFrameLocal.profesion,this.profesionsForeignKey);

				profesionBeanSwingJInternalFrameLocal.actualizarRelaciones(profesionBeanSwingJInternalFrameLocal.profesion);

				clienteLocal.setProfesion(profesionBeanSwingJInternalFrameLocal.profesion);

				this.addItemDefectoCombosForeignKeyProfesion();
				this.cargarCombosFrameProfesionsForeignKey("Formulario");
				this.setActualProfesionForeignKey(profesionBeanSwingJInternalFrameLocal.profesion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGeneroDetalleFormJInternalFrame.class)) {
				TipoGeneroBeanSwingJInternalFrame tipogeneroBeanSwingJInternalFrameLocal=(TipoGeneroBeanSwingJInternalFrame) ((TipoGeneroDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogeneroBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.gettipogenero(),true);
				tipogeneroBeanSwingJInternalFrameLocal.actualizarLista(tipogeneroBeanSwingJInternalFrameLocal.tipogenero,this.tipogenerosForeignKey);

				tipogeneroBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				clienteLocal.setTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey("Formulario");
				this.setActualTipoGeneroForeignKey(tipogeneroBeanSwingJInternalFrameLocal.tipogenero.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoCivilDetalleFormJInternalFrame.class)) {
				EstadoCivilBeanSwingJInternalFrame estadocivilBeanSwingJInternalFrameLocal=(EstadoCivilBeanSwingJInternalFrame) ((EstadoCivilDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadocivilBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.getestadocivil(),true);
				estadocivilBeanSwingJInternalFrameLocal.actualizarLista(estadocivilBeanSwingJInternalFrameLocal.estadocivil,this.estadocivilsForeignKey);

				estadocivilBeanSwingJInternalFrameLocal.actualizarRelaciones(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				clienteLocal.setEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey("Formulario");
				this.setActualEstadoCivilForeignKey(estadocivilBeanSwingJInternalFrameLocal.estadocivil.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoLegalDetalleFormJInternalFrame.class)) {
				EstadoLegalBeanSwingJInternalFrame estadolegalBeanSwingJInternalFrameLocal=(EstadoLegalBeanSwingJInternalFrame) ((EstadoLegalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadolegalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoLegal(estadolegalBeanSwingJInternalFrameLocal.getestadolegal(),true);
				estadolegalBeanSwingJInternalFrameLocal.actualizarLista(estadolegalBeanSwingJInternalFrameLocal.estadolegal,this.estadolegalsForeignKey);

				estadolegalBeanSwingJInternalFrameLocal.actualizarRelaciones(estadolegalBeanSwingJInternalFrameLocal.estadolegal);

				clienteLocal.setEstadoLegal(estadolegalBeanSwingJInternalFrameLocal.estadolegal);

				this.addItemDefectoCombosForeignKeyEstadoLegal();
				this.cargarCombosFrameEstadoLegalsForeignKey("Formulario");
				this.setActualEstadoLegalForeignKey(estadolegalBeanSwingJInternalFrameLocal.estadolegal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				clienteLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(RutaDetalleFormJInternalFrame.class)) {
				RutaBeanSwingJInternalFrame rutaBeanSwingJInternalFrameLocal=(RutaBeanSwingJInternalFrame) ((RutaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				rutaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoRuta(rutaBeanSwingJInternalFrameLocal.getruta(),true);
				rutaBeanSwingJInternalFrameLocal.actualizarLista(rutaBeanSwingJInternalFrameLocal.ruta,this.rutasForeignKey);

				rutaBeanSwingJInternalFrameLocal.actualizarRelaciones(rutaBeanSwingJInternalFrameLocal.ruta);

				clienteLocal.setRuta(rutaBeanSwingJInternalFrameLocal.ruta);

				this.addItemDefectoCombosForeignKeyRuta();
				this.cargarCombosFrameRutasForeignKey("Formulario");
				this.setActualRutaForeignKey(rutaBeanSwingJInternalFrameLocal.ruta.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				clienteLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroActividadDetalleFormJInternalFrame.class)) {
				CentroActividadBeanSwingJInternalFrame centroactividadBeanSwingJInternalFrameLocal=(CentroActividadBeanSwingJInternalFrame) ((CentroActividadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centroactividadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroActividad(centroactividadBeanSwingJInternalFrameLocal.getcentroactividad(),true);
				centroactividadBeanSwingJInternalFrameLocal.actualizarLista(centroactividadBeanSwingJInternalFrameLocal.centroactividad,this.centroactividadsForeignKey);

				centroactividadBeanSwingJInternalFrameLocal.actualizarRelaciones(centroactividadBeanSwingJInternalFrameLocal.centroactividad);

				clienteLocal.setCentroActividad(centroactividadBeanSwingJInternalFrameLocal.centroactividad);

				this.addItemDefectoCombosForeignKeyCentroActividad();
				this.cargarCombosFrameCentroActividadsForeignKey("Formulario");
				this.setActualCentroActividadForeignKey(centroactividadBeanSwingJInternalFrameLocal.centroactividad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGarantiaEmpresaDetalleFormJInternalFrame.class)) {
				TipoGarantiaEmpresaBeanSwingJInternalFrame tipogarantiaempresaBeanSwingJInternalFrameLocal=(TipoGarantiaEmpresaBeanSwingJInternalFrame) ((TipoGarantiaEmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogarantiaempresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGarantiaEmpresa(tipogarantiaempresaBeanSwingJInternalFrameLocal.gettipogarantiaempresa(),true);
				tipogarantiaempresaBeanSwingJInternalFrameLocal.actualizarLista(tipogarantiaempresaBeanSwingJInternalFrameLocal.tipogarantiaempresa,this.tipogarantiaempresasForeignKey);

				tipogarantiaempresaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogarantiaempresaBeanSwingJInternalFrameLocal.tipogarantiaempresa);

				clienteLocal.setTipoGarantiaEmpresa(tipogarantiaempresaBeanSwingJInternalFrameLocal.tipogarantiaempresa);

				this.addItemDefectoCombosForeignKeyTipoGarantiaEmpresa();
				this.cargarCombosFrameTipoGarantiaEmpresasForeignKey("Formulario");
				this.setActualTipoGarantiaEmpresaForeignKey(tipogarantiaempresaBeanSwingJInternalFrameLocal.tipogarantiaempresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CateTipoAfiliacionDetalleFormJInternalFrame.class)) {
				CateTipoAfiliacionBeanSwingJInternalFrame catetipoafiliacionBeanSwingJInternalFrameLocal=(CateTipoAfiliacionBeanSwingJInternalFrame) ((CateTipoAfiliacionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				catetipoafiliacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCateTipoAfiliacion(catetipoafiliacionBeanSwingJInternalFrameLocal.getcatetipoafiliacion(),true);
				catetipoafiliacionBeanSwingJInternalFrameLocal.actualizarLista(catetipoafiliacionBeanSwingJInternalFrameLocal.catetipoafiliacion,this.catetipoafiliacionsForeignKey);

				catetipoafiliacionBeanSwingJInternalFrameLocal.actualizarRelaciones(catetipoafiliacionBeanSwingJInternalFrameLocal.catetipoafiliacion);

				clienteLocal.setCateTipoAfiliacion(catetipoafiliacionBeanSwingJInternalFrameLocal.catetipoafiliacion);

				this.addItemDefectoCombosForeignKeyCateTipoAfiliacion();
				this.cargarCombosFrameCateTipoAfiliacionsForeignKey("Formulario");
				this.setActualCateTipoAfiliacionForeignKey(catetipoafiliacionBeanSwingJInternalFrameLocal.catetipoafiliacion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(DiaDetalleFormJInternalFrame.class)) {
				DiaBeanSwingJInternalFrame diaBeanSwingJInternalFrameLocal=(DiaBeanSwingJInternalFrame) ((DiaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				diaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoDia(diaBeanSwingJInternalFrameLocal.getdia(),true);
				diaBeanSwingJInternalFrameLocal.actualizarLista(diaBeanSwingJInternalFrameLocal.dia,this.diasForeignKey);

				diaBeanSwingJInternalFrameLocal.actualizarRelaciones(diaBeanSwingJInternalFrameLocal.dia);

				clienteLocal.setDia(diaBeanSwingJInternalFrameLocal.dia);

				this.addItemDefectoCombosForeignKeyDia();
				this.cargarCombosFrameDiasForeignKey("Formulario");
				this.setActualDiaForeignKey(diaBeanSwingJInternalFrameLocal.dia.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				clienteLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPrecioDetalleFormJInternalFrame.class)) {
				TipoPrecioBeanSwingJInternalFrame tipoprecioBeanSwingJInternalFrameLocal=(TipoPrecioBeanSwingJInternalFrame) ((TipoPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.gettipoprecio(),true);
				tipoprecioBeanSwingJInternalFrameLocal.actualizarLista(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio,this.tipopreciosForeignKey);

				tipoprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				clienteLocal.setTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey("Formulario");
				this.setActualTipoPrecioForeignKey(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoListaPrecioDetalleFormJInternalFrame.class)) {
				TipoListaPrecioBeanSwingJInternalFrame tipolistaprecioBeanSwingJInternalFrameLocal=(TipoListaPrecioBeanSwingJInternalFrame) ((TipoListaPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipolistaprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoListaPrecio(tipolistaprecioBeanSwingJInternalFrameLocal.gettipolistaprecio(),true);
				tipolistaprecioBeanSwingJInternalFrameLocal.actualizarLista(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio,this.tipolistapreciosForeignKey);

				tipolistaprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio);

				clienteLocal.setTipoListaPrecio(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio);

				this.addItemDefectoCombosForeignKeyTipoListaPrecio();
				this.cargarCombosFrameTipoListaPreciosForeignKey("Formulario");
				this.setActualTipoListaPrecioForeignKey(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarClienteActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosCliente.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = clienteValidator.getInvalidValues(this.cliente);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Cliente cliente,List<Cliente> clientes) throws Exception {
		try	{		
			ClienteConstantesFunciones.actualizarLista(cliente,clientes,this.clienteSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Cliente cliente,List<Cliente> clientes) throws Exception {
		try	{			
			ClienteConstantesFunciones.actualizarSelectedLista(cliente,clientes);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Cliente> clientesLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				clientesLocal=this.clienteLogic.getClientes();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				clientesLocal=this.clientes;
			}
			//ARCHITECTURE
		
			for(Cliente clienteLocal:clientesLocal) {
				if(this.permiteMantenimiento(clienteLocal) && clienteLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ClienteConstantesFunciones.getClienteLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_empresaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_sucursalCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcodigoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTIPOIDENTIFICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_identificacionCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDENTIFICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelidentificacionCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelrucCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombreCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.APELLIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelapellidoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.NOMBRECOMPLETO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombre_completoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.NOMBRECOMERCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombre_comercialCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeltelefonoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeldireccionCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.ESPROVE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeles_proveCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDGRUPOCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_grupo_clienteCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTITULOCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_titulo_clienteCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDAREACR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_area_crCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDESTADOCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_estado_clienteCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.OBSERVACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelobservacionCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_paisCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDREGION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_regionCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDPROVINCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_provinciaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDCIUDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_ciudadCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDZONA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_zonaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDPAISNACIONALIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_pais_nacionalidadCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTIPOCARGOLABO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_cargo_laboCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTIPONIVELEDU)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_nivel_eduCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDPROFESION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_profesionCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTIPOGENERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_generoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDESTADOCIVIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_estado_civilCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDESTADOLEGAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_estado_legalCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.FECHANACIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelfecha_nacimientoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.PATHIMAGENFIRMA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelpath_imagen_firmaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.CONTACTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcontactoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_cuenta_contableCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDRUTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_rutaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_vendedorCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDCENTROACTIVIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_centro_actividadCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.REPRESENTANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelrepresentanteCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTIPOGARANTIAEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_garantia_empresaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.NOMBREGARANTIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombre_garantiaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.VALORGARANTIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelvalor_garantiaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDCATETIPOAFILIACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_cate_tipo_afiliacionCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.NUMEROCARGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnumero_cargaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.CREDITOUSADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcredito_usadoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.LIMITECREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabellimite_creditoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.CREDITODISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcredito_disponibleCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.TOTALDOCUMENTOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeltotal_documentosCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.FECHAULTIMAFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelfecha_ultima_facturaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeldescuentoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDDIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_diaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.HORAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelhora_pagoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_empleadoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.COBRANZAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcobranzasCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.MOTIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelmotivoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.PREFERENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelpreferenciaCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.CONSEPARACIONBIENES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcon_separacion_bienesCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTIPOPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_precioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.IDTIPOLISTAPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_lista_precioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.DETALLEESTADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeldetalle_estadoCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteConstantesFunciones.ESCONTRIBUYENTEESPECIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeles_contribuyente_especialCliente,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_empresaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_sucursalCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelcodigoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_identificacionCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelidentificacionCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelrucCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelnombreCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelapellidoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelnombre_completoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelnombre_comercialCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabeltelefonoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabeldireccionCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabeles_proveCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_grupo_clienteCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_titulo_clienteCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_area_crCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_estado_clienteCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelobservacionCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_paisCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_regionCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_provinciaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_ciudadCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_zonaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_pais_nacionalidadCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_cargo_laboCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_nivel_eduCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_profesionCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_generoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_estado_civilCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_estado_legalCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelfecha_nacimientoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelpath_imagen_firmaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelcontactoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_cuenta_contableCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_rutaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_vendedorCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_centro_actividadCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelrepresentanteCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_garantia_empresaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelnombre_garantiaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelvalor_garantiaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_cate_tipo_afiliacionCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelnumero_cargaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelcredito_usadoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabellimite_creditoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelcredito_disponibleCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabeltotal_documentosCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelfecha_ultima_facturaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabeldescuentoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_diaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelhora_pagoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_empleadoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelcobranzasCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelmotivoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelpreferenciaCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelcon_separacion_bienesCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_precioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabelid_tipo_lista_precioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabeldetalle_estadoCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormCliente.jLabeles_contribuyente_especialCliente,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("ContactoCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.getcontactocliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Bien")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.getbien().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("CargaFamiliar")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.getcargafamiliar().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ChequePostFechado")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.getchequepostfechado().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("EMail")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.getemail().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ReferenciaPersonal")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.getreferenciapersonal().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("GarantiaCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.getgarantiacliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ClienteArchivo")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.getclientearchivo().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("PoliticasCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.getpoliticascliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("FirmaCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.getfirmacliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ReferenciaComercial")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.getreferenciacomercial().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Novedad")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.getnovedad().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("InformacionLaboral")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.getinformacionlaboral().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("InformacionFinanciera")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.getinformacionfinanciera().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Telefono")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.gettelefono().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("CuentaPorCobrar")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.getcuentaporcobrar().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Responsable")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.getresponsable().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Transportista")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.gettransportista().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("PoliticaCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.getpoliticacliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Conyuge")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.getconyuge().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ReferenciaBancaria")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.getreferenciabancaria().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("BalanceGeneralCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.getbalancegeneralcliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("DatoConstitucion")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.getdatoconstitucion().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ActividadEconomica")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.getactividadeconomica().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ProveedorProducto")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.getproveedorproducto().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Consignatario")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.getconsignatario().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("HobbyCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.gethobbycliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("RepresentanteLegal")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.getrepresentantelegal().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ClienteCoa")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.getclientecoa().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Direccion")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.getdireccion().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ClienteImagen")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.getclienteimagen().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("SubCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.getsubcliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("ServicioCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.getserviciocliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("InformacionEconomica")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.getinformacioneconomica().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("VehiculoCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.getvehiculocliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("NegocioCliente")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.getnegociocliente().setCliente(this.cliente);
			}

			return;
		}
		 else  if(sTipo.equals("Monto")) {
			if(this.cliente==null) {
				this.cliente= new Cliente();
			}

			if(this.clienteSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoCliente
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.getmonto().setCliente(this.cliente);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoCliente--;	
		
		
		this.clienteAux=new Cliente();
		
		this.clienteAux.setId(this.iIdNuevoCliente);
		this.clienteAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.clienteLogic.getClientes().add(this.clienteAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.clientes.add(this.clienteAux);
		}
		//ARCHITECTURE
		
		this.cliente=this.clienteAux;
		
		if(ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioCliente(this.cliente);
			this.setVariablesObjetoActualToFormularioForeignKeyCliente(this.cliente);
		}
				
		//this.setDefaultControlesCliente();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyCliente();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyCliente();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyCliente();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualCliente(this.clienteBean,this.cliente,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ClienteConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.clienteSessionBean.getConGuardarRelaciones()) {
			classes=ClienteConstantesFunciones.getClassesRelationshipsOfCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.clienteReturnGeneral=clienteLogic.procesarEventosClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.clienteLogic.getClientes(),this.cliente,this.clienteParameterGeneral,this.isEsNuevoCliente,classes);//this.clienteLogic.getCliente()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanCliente(this.clienteReturnGeneral,this.clienteBean,false);
		
		if(this.clienteReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyCliente(this.clienteReturnGeneral.getCliente());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioCliente(this.clienteReturnGeneral.getCliente());
		}
		
		if(this.clienteReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioCliente(this.clienteReturnGeneral.getCliente(),classes);//this.clienteBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualCliente(this.cliente,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyCliente();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyCliente();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ClienteBeanSwingJInternalFrameAdditional.RecargarFormCliente(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingCliente(false);
						
			if(clienteSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.getEsGuardarRelacionado() && InformacionLaboralJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonInformacionLaboralActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaSessionBean.getEsGuardarRelacionado() && TransportistaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTransportistaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadSessionBean.getEsGuardarRelacionado() && NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNovedadActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getEsGuardarRelacionado() && PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticasClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.getEsGuardarRelacionado() && ReferenciaPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaPersonalActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.getEsGuardarRelacionado() && BalanceGeneralClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBalanceGeneralClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.getEsGuardarRelacionado() && PoliticaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticaClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.getEsGuardarRelacionado() && VehiculoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonVehiculoClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableSessionBean.getEsGuardarRelacionado() && ResponsableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonResponsableActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.getEsGuardarRelacionado() && InformacionFinancieraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonInformacionFinancieraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.getEsGuardarRelacionado() && ConsignatarioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConsignatarioActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.getEsGuardarRelacionado() && ClienteImagenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteImagenActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.getEsGuardarRelacionado() && GarantiaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGarantiaClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.getEsGuardarRelacionado() && InformacionEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonInformacionEconomicaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.getEsGuardarRelacionado() && ReferenciaComercialJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaComercialActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienSessionBean.getEsGuardarRelacionado() && BienJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBienActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getEsGuardarRelacionado() && ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProveedorProductoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado() && ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.getEsGuardarRelacionado() && ContactoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonContactoClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.getEsGuardarRelacionado() && DatoConstitucionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDatoConstitucionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.getEsGuardarRelacionado() && ClienteCoaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteCoaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.getEsGuardarRelacionado() && HobbyClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHobbyClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.getEsGuardarRelacionado() && CargaFamiliarJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCargaFamiliarActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailSessionBean.getEsGuardarRelacionado() && EMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEMailActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeSessionBean.getEsGuardarRelacionado() && ConyugeJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConyugeActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.getEsGuardarRelacionado() && CuentaPorCobrarJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCuentaPorCobrarActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.getEsGuardarRelacionado() && FirmaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFirmaClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.getEsGuardarRelacionado() && RepresentanteLegalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRepresentanteLegalActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoSessionBean.getEsGuardarRelacionado() && TelefonoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTelefonoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.getEsGuardarRelacionado() && NegocioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNegocioClienteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.getEsGuardarRelacionado() && ReferenciaBancariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaBancariaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoSessionBean.getEsGuardarRelacionado() && MontoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMontoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.getEsGuardarRelacionado() && ClienteArchivoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteArchivoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.getEsGuardarRelacionado() && ActividadEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonActividadEconomicaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionSessionBean.getEsGuardarRelacionado() && DireccionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDireccionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.getEsGuardarRelacionado() && ChequePostFechadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonChequePostFechadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteSessionBean.getEsGuardarRelacionado() && SubClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSubClienteActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(ClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualCliente();
			}
			
			this.actualizarVisualTableDatosCliente();
			
			this.jTableDatosCliente.setRowSelectionInterval(this.getIndiceNuevoCliente(), this.getIndiceNuevoCliente());
			
			this.seleccionarFilaTablaClienteActual();
						
			this.actualizarEstadoCeldasBotonesCliente("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesCliente(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarcodigoCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activaridentificacionCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarrucCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarnombreCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarapellidoCliente);//
		this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarnombre_completoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarnombre_comercialCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activartelefonoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activardireccionCliente);
		this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activares_proveCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarobservacionCliente);
		this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarfecha_nacimientoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarpath_imagen_firmaCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarcontactoCliente);
		this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarrepresentanteCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarnombre_garantiaCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarvalor_garantiaCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarnumero_cargaCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarcredito_usadoCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarlimite_creditoCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarcredito_disponibleCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activartotal_documentosCliente);
		this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarfecha_ultima_facturaCliente);
		this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activardescuentoCliente);
		this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarhora_pagoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarcobranzasCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarmotivoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarpreferenciaCliente);
		this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarcon_separacion_bienesCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activardetalle_estadoCliente);
		this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activares_contribuyente_especialCliente);	
		//
		this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_empresaCliente);//
		this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_sucursalCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_tipo_identificacionCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_grupo_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_titulo_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_area_crCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_estado_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_paisCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_regionCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_provinciaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_ciudadCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_zonaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_pais_nacionalidadCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_tipo_cargo_laboCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_tipo_nivel_eduCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_profesionCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_tipo_generoCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_estado_civilCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_estado_legalCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_cuenta_contableCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_rutaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_vendedorCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_centro_actividadCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_tipo_garantia_empresaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_cate_tipo_afiliacionCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_diaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_empleadoCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_tipo_precioCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setEnabled(isHabilitar && this.clienteConstantesFunciones.activarid_tipo_lista_precioCliente);
	};
	
	public void setDefaultControlesCliente() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoCliente(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.clienteSessionBean.setConGuardarRelaciones(true);			
			this.clienteSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.clienteSessionBean.setConGuardarRelaciones(false);			
			this.clienteSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoCliente() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Cliente clienteAux:this.clienteLogic.getClientes()) {
				if(clienteAux.getId().equals(this.iIdNuevoCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Cliente clienteAux:this.clientes) {
				if(clienteAux.getId().equals(this.iIdNuevoCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualCliente(Cliente cliente,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Cliente clienteAux:this.clienteLogic.getClientes()) {
				if(clienteAux.getId().equals(cliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Cliente clienteAux:this.clientes) {
				if(clienteAux.getId().equals(cliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalCliente(Cliente clienteOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Cliente clienteAux:this.clienteLogic.getClientes()) {
				if(clienteAux.getClienteOriginal().getId().equals(clienteOriginal.getId())) {
					existe=true;
					clienteOriginal.setId(clienteAux.getId());
					clienteOriginal.setVersionRow(clienteAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Cliente clienteAux:this.clientes) {
				if(clienteAux.getClienteOriginal().getId().equals(clienteOriginal.getId())) {
					existe=true;
					clienteOriginal.setId(clienteAux.getId());
					clienteOriginal.setVersionRow(clienteAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosCliente(Boolean esParaCancelar) throws Exception {
		clientesAux=new ArrayList<Cliente>();
		clienteAux=new Cliente();
		
		if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Cliente clienteAux:this.clienteLogic.getClientes()) {
					if(clienteAux.getId()<0) {
						clientesAux.add(clienteAux);
					}		
				}
				this.iIdNuevoCliente=0L;
				this.clienteLogic.getClientes().removeAll(clientesAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Cliente clienteAux:this.clientes) {
					if(clienteAux.getId()<0) {
						clientesAux.add(clienteAux);
					}		
				}
				this.iIdNuevoCliente=0L;
				this.clientes.removeAll(clientesAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoCliente 
					&& this.clienteLogic.getClientes().size()>0
					) {
					clienteAux=this.clienteLogic.getClientes().get(this.clienteLogic.getClientes().size() - 1);
				
					if(clienteAux.getId()<0) {
						this.clienteLogic.getClientes().remove(clienteAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoCliente && this.clientes.size()>0) {
					clienteAux=this.clientes.get(this.clientes.size() - 1);
				
					if(clienteAux.getId()<0) {
						this.clientes.remove(clienteAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoCliente(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(cliente.getId()<0) {
				this.clienteLogic.getClientes().remove(this.cliente);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(cliente.getId()<0) {
				this.clientes.remove(this.cliente);
			}
		}			
	}
	
	public void setEstadosInicialesCliente(List<Cliente> clientesAux) throws Exception {
		ClienteConstantesFunciones.setEstadosInicialesCliente(clientesAux);
	}
	
	public void setEstadosInicialesCliente(Cliente clienteAux) throws Exception {
		ClienteConstantesFunciones.setEstadosInicialesCliente(clienteAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarClienteActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarClienteActual()) {
				if(!this.isEsNuevoCliente) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoCliente=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarClienteActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Cliente ?", "MANTENIMIENTO DE Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Cliente cliente) throws Exception {
		ClienteConstantesFunciones.seleccionarAsignar(this.cliente,cliente);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarCliente=this.isPermisoActualizarOriginalCliente;
			
			
			this.seleccionarAsignar(cliente);
			
			

			idCuentaContableActual=cliente.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ClienteConstantesFunciones.quitarEspaciosCliente(this.cliente,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.clienteSessionBean.setsFuncionBusquedaRapida(this.clienteSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoCliente) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosCliente(esParaCancelar);				
				this.cancelarNuevoCliente(esParaCancelar);								
			}
			
			this.cliente=new Cliente();
			
			this.inicializarCliente();
			
			this.actualizarEstadoCeldasBotonesCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarCliente() throws Exception {
		try {
			ClienteConstantesFunciones.inicializarCliente(this.cliente);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.clienteLogic.getClientes().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteClientes(String sAccionBusqueda,List<Cliente> clientesParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Cliente"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ClienteMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ClienteMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Cliente"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Clientes");		
		parameters.put("busquedapor", ClienteConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(InformacionLaboral.class));
			classes.add(new Classe(Transportista.class));
			classes.add(new Classe(Novedad.class));
			classes.add(new Classe(PoliticasCliente.class));
			classes.add(new Classe(ReferenciaPersonal.class));
			classes.add(new Classe(BalanceGeneralCliente.class));
			classes.add(new Classe(PoliticaCliente.class));
			classes.add(new Classe(VehiculoCliente.class));
			classes.add(new Classe(Responsable.class));
			classes.add(new Classe(InformacionFinanciera.class));
			classes.add(new Classe(Consignatario.class));
			classes.add(new Classe(ClienteImagen.class));
			classes.add(new Classe(GarantiaCliente.class));
			classes.add(new Classe(InformacionEconomica.class));
			classes.add(new Classe(ReferenciaComercial.class));
			classes.add(new Classe(Bien.class));
			classes.add(new Classe(ProveedorProducto.class));
			classes.add(new Classe(ServicioCliente.class));
			classes.add(new Classe(ContactoCliente.class));
			classes.add(new Classe(DatoConstitucion.class));
			classes.add(new Classe(ClienteCoa.class));
			classes.add(new Classe(HobbyCliente.class));
			classes.add(new Classe(CargaFamiliar.class));
			classes.add(new Classe(EMail.class));
			classes.add(new Classe(Conyuge.class));
			classes.add(new Classe(CuentaPorCobrar.class));
			classes.add(new Classe(FirmaCliente.class));
			classes.add(new Classe(RepresentanteLegal.class));
			classes.add(new Classe(Telefono.class));
			classes.add(new Classe(NegocioCliente.class));
			classes.add(new Classe(ReferenciaBancaria.class));
			classes.add(new Classe(Monto.class));
			classes.add(new Classe(ClienteArchivo.class));
			classes.add(new Classe(ActividadEconomica.class));
			classes.add(new Classe(Direccion.class));
			classes.add(new Classe(ChequePostFechado.class));
			classes.add(new Classe(SubCliente.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					ClienteLogic clienteLogicAuxiliar=new ClienteLogic();
					clienteLogicAuxiliar.setDatosCliente(clienteLogic.getDatosCliente());				
					clienteLogicAuxiliar.setClientes(clientesParaReportes);
					
					clienteLogicAuxiliar.cargarRelacionesLoteForeignKeyClienteWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					clientesParaReportes=clienteLogicAuxiliar.getClientes();
					
					//clienteLogic.getNewConnexionToDeep();
					
					//for (Cliente cliente:clientesParaReportes) {
					//	clienteLogic.deepLoad(cliente, false, DeepLoadType.INCLUDE, classes);
					//}						
					//clienteLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//clienteLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileInformacionLaboral = AuxiliarReportes.class.getResourceAsStream("InformacionLaboralDetalleRelacionesDesign.jasper");
			parameters.put("subreport_informacionlaboral", reportFileInformacionLaboral);

			InputStream reportFileTransportista = AuxiliarReportes.class.getResourceAsStream("TransportistaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_transportista", reportFileTransportista);

			InputStream reportFileNovedad = AuxiliarReportes.class.getResourceAsStream("NovedadDetalleRelacionesDesign.jasper");
			parameters.put("subreport_novedad", reportFileNovedad);

			InputStream reportFilePoliticasCliente = AuxiliarReportes.class.getResourceAsStream("PoliticasClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_politicascliente", reportFilePoliticasCliente);

			InputStream reportFileReferenciaPersonal = AuxiliarReportes.class.getResourceAsStream("ReferenciaPersonalDetalleRelacionesDesign.jasper");
			parameters.put("subreport_referenciapersonal", reportFileReferenciaPersonal);

			InputStream reportFileBalanceGeneralCliente = AuxiliarReportes.class.getResourceAsStream("BalanceGeneralClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_balancegeneralcliente", reportFileBalanceGeneralCliente);

			InputStream reportFilePoliticaCliente = AuxiliarReportes.class.getResourceAsStream("PoliticaClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_politicacliente", reportFilePoliticaCliente);

			InputStream reportFileVehiculoCliente = AuxiliarReportes.class.getResourceAsStream("VehiculoClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_vehiculocliente", reportFileVehiculoCliente);

			InputStream reportFileResponsable = AuxiliarReportes.class.getResourceAsStream("ResponsableDetalleRelacionesDesign.jasper");
			parameters.put("subreport_responsable", reportFileResponsable);

			InputStream reportFileInformacionFinanciera = AuxiliarReportes.class.getResourceAsStream("InformacionFinancieraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_informacionfinanciera", reportFileInformacionFinanciera);

			InputStream reportFileConsignatario = AuxiliarReportes.class.getResourceAsStream("ConsignatarioDetalleRelacionesDesign.jasper");
			parameters.put("subreport_consignatario", reportFileConsignatario);

			InputStream reportFileClienteImagen = AuxiliarReportes.class.getResourceAsStream("ClienteImagenDetalleRelacionesDesign.jasper");
			parameters.put("subreport_clienteimagen", reportFileClienteImagen);

			InputStream reportFileGarantiaCliente = AuxiliarReportes.class.getResourceAsStream("GarantiaClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_garantiacliente", reportFileGarantiaCliente);

			InputStream reportFileInformacionEconomica = AuxiliarReportes.class.getResourceAsStream("InformacionEconomicaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_informacioneconomica", reportFileInformacionEconomica);

			InputStream reportFileReferenciaComercial = AuxiliarReportes.class.getResourceAsStream("ReferenciaComercialDetalleRelacionesDesign.jasper");
			parameters.put("subreport_referenciacomercial", reportFileReferenciaComercial);

			InputStream reportFileBien = AuxiliarReportes.class.getResourceAsStream("BienDetalleRelacionesDesign.jasper");
			parameters.put("subreport_bien", reportFileBien);

			InputStream reportFileProveedorProducto = AuxiliarReportes.class.getResourceAsStream("ProveedorProductoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_proveedorproducto", reportFileProveedorProducto);

			InputStream reportFileServicioCliente = AuxiliarReportes.class.getResourceAsStream("ServicioClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_serviciocliente", reportFileServicioCliente);

			InputStream reportFileContactoCliente = AuxiliarReportes.class.getResourceAsStream("ContactoClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_contactocliente", reportFileContactoCliente);

			InputStream reportFileDatoConstitucion = AuxiliarReportes.class.getResourceAsStream("DatoConstitucionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_datoconstitucion", reportFileDatoConstitucion);

			InputStream reportFileClienteCoa = AuxiliarReportes.class.getResourceAsStream("ClienteCoaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_clientecoa", reportFileClienteCoa);

			InputStream reportFileHobbyCliente = AuxiliarReportes.class.getResourceAsStream("HobbyClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_hobbycliente", reportFileHobbyCliente);

			InputStream reportFileCargaFamiliar = AuxiliarReportes.class.getResourceAsStream("CargaFamiliarDetalleRelacionesDesign.jasper");
			parameters.put("subreport_cargafamiliar", reportFileCargaFamiliar);

			InputStream reportFileEMail = AuxiliarReportes.class.getResourceAsStream("EMailDetalleRelacionesDesign.jasper");
			parameters.put("subreport_email", reportFileEMail);

			InputStream reportFileConyuge = AuxiliarReportes.class.getResourceAsStream("ConyugeDetalleRelacionesDesign.jasper");
			parameters.put("subreport_conyuge", reportFileConyuge);

			InputStream reportFileCuentaPorCobrar = AuxiliarReportes.class.getResourceAsStream("CuentaPorCobrarDetalleRelacionesDesign.jasper");
			parameters.put("subreport_cuentaporcobrar", reportFileCuentaPorCobrar);

			InputStream reportFileFirmaCliente = AuxiliarReportes.class.getResourceAsStream("FirmaClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_firmacliente", reportFileFirmaCliente);

			InputStream reportFileRepresentanteLegal = AuxiliarReportes.class.getResourceAsStream("RepresentanteLegalDetalleRelacionesDesign.jasper");
			parameters.put("subreport_representantelegal", reportFileRepresentanteLegal);

			InputStream reportFileTelefono = AuxiliarReportes.class.getResourceAsStream("TelefonoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_telefono", reportFileTelefono);

			InputStream reportFileNegocioCliente = AuxiliarReportes.class.getResourceAsStream("NegocioClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_negociocliente", reportFileNegocioCliente);

			InputStream reportFileReferenciaBancaria = AuxiliarReportes.class.getResourceAsStream("ReferenciaBancariaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_referenciabancaria", reportFileReferenciaBancaria);

			InputStream reportFileMonto = AuxiliarReportes.class.getResourceAsStream("MontoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_monto", reportFileMonto);

			InputStream reportFileClienteArchivo = AuxiliarReportes.class.getResourceAsStream("ClienteArchivoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_clientearchivo", reportFileClienteArchivo);

			InputStream reportFileActividadEconomica = AuxiliarReportes.class.getResourceAsStream("ActividadEconomicaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_actividadeconomica", reportFileActividadEconomica);

			InputStream reportFileDireccion = AuxiliarReportes.class.getResourceAsStream("DireccionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_direccion", reportFileDireccion);

			InputStream reportFileChequePostFechado = AuxiliarReportes.class.getResourceAsStream("ChequePostFechadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_chequepostfechado", reportFileChequePostFechado);

			InputStream reportFileSubCliente = AuxiliarReportes.class.getResourceAsStream("SubClienteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_subcliente", reportFileSubCliente);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceCliente=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ClienteConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ClienteConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceCliente=new JRBeanArrayDataSource(ClienteJInternalFrame.TraerClienteBeans(clientesParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceCliente);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ClienteConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ClienteConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ClienteBean.TraerClienteBeans(clientesParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteClientes(sAccionBusqueda,sTipoArchivoReporte,clientesParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalClientes(sAccionBusqueda,sTipoArchivoReporte,clientesParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoClienteActionPerformed(null);
					//this.generarExcelReporteClientes(sAccionBusqueda,sTipoArchivoReporte,clientesParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalClientes(sAccionBusqueda,sTipoArchivoReporte,clientesParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesClientes(sAccionBusqueda,sTipoArchivoReporte,clientesParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesClientes(sAccionBusqueda,sTipoArchivoReporte,clientesParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<Cliente> clientesParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"cliente";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Clientes");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderCliente("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Cliente cliente : clientesParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ClienteConstantesFunciones.generarExcelReporteDataCliente("NORMAL",row,workbook,cliente,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderCliente(String sTipo,Row row,Workbook workbook) {
		
		ClienteConstantesFunciones.generarExcelReporteHeaderCliente(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<Cliente> clientesParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"cliente_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Clientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Cliente cliente : clientesParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ClienteConstantesFunciones.getClienteDescripcion(cliente));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettipoidentificacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDENTIFICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDENTIFICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getidentificacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_APELLIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_APELLIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getapellido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getnombre_completo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getnombre_comercial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_ESPROVE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_ESPROVE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(cliente.getes_prove()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getgrupocliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettitulocliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDAREACR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDAREACR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getareacr_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getestadocliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_OBSERVACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_OBSERVACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getobservacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDREGION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDREGION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getregion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDPROVINCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPROVINCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getprovincia_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDCIUDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCIUDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getciudad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDZONA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDZONA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getzona_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getpaisnacionalidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettipocargolabo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettiponiveledu_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDPROFESION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPROFESION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getprofesion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTIPOGENERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOGENERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettipogenero_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDESTADOCIVIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOCIVIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getestadocivil_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDESTADOLEGAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOLEGAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getestadolegal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_FECHANACIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_FECHANACIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getfecha_nacimiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getpath_imagen_firma());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_CONTACTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_CONTACTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcontacto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDRUTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDRUTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getruta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcentroactividad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_REPRESENTANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_REPRESENTANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getrepresentante());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettipogarantiaempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_NOMBREGARANTIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBREGARANTIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getnombre_garantia());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_VALORGARANTIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_VALORGARANTIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getvalor_garantia());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcatetipoafiliacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_NUMEROCARGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_NUMEROCARGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getnumero_carga());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_CREDITOUSADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_CREDITOUSADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcredito_usado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_LIMITECREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_LIMITECREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getlimite_credito());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcredito_disponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettotal_documentos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getfecha_ultima_factura());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDDIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDDIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getdia_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_HORAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_HORAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gethora_pago());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_COBRANZAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_COBRANZAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getcobranzas());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_MOTIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_MOTIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getmotivo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_PREFERENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_PREFERENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getpreferencia());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(cliente.getcon_separacion_bienes()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTIPOPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettipoprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.gettipolistaprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_DETALLEESTADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_DETALLEESTADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(cliente.getdetalle_estado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(cliente.getes_contribuyente_especial()));


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<Cliente> clientesParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Cliente> clientesRespaldo=null;
		
		classes=ClienteConstantesFunciones.getClassesRelationshipsOfCliente(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.clienteLogic.setDatosCliente(this.datosCliente);
		this.clienteLogic.setDatosDeep(this.datosDeep);
		this.clienteLogic.setIsConDeep(true);
		
		clientesRespaldo=this.clienteLogic.getClientes();
		
		this.clienteLogic.setClientes(clientesParaReportes);	
		this.clienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		clientesParaReportes=this.clienteLogic.getClientes();
		this.clienteLogic.setClientes(clientesRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"cliente_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Clientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderCliente("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Cliente cliente : clientesParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderCliente("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ClienteConstantesFunciones.generarExcelReporteDataCliente("NORMAL",row,workbook,cliente,cellStyleDataAux);
		
			
			


				//ContactoCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ContactoClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getContactoClientes()!=null && cliente.getContactoClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ContactoClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ContactoClienteConstantesFunciones.generarExcelReporteHeaderContactoCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getContactoClientes()!=null) {
					i2=0;
					for(ContactoCliente contactocliente : cliente.getContactoClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ContactoClienteConstantesFunciones.generarExcelReporteDataContactoCliente("RELACIONADO",row,workbook,contactocliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Bien
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(BienConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getBiens()!=null && cliente.getBiens().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(BienConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					BienConstantesFunciones.generarExcelReporteHeaderBien("RELACIONADO",row,workbook);
				}

				if(cliente.getBiens()!=null) {
					i2=0;
					for(Bien bien : cliente.getBiens()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						BienConstantesFunciones.generarExcelReporteDataBien("RELACIONADO",row,workbook,bien,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//CargaFamiliar
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CargaFamiliarConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getCargaFamiliars()!=null && cliente.getCargaFamiliars().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CargaFamiliarConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CargaFamiliarConstantesFunciones.generarExcelReporteHeaderCargaFamiliar("RELACIONADO",row,workbook);
				}

				if(cliente.getCargaFamiliars()!=null) {
					i2=0;
					for(CargaFamiliar cargafamiliar : cliente.getCargaFamiliars()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CargaFamiliarConstantesFunciones.generarExcelReporteDataCargaFamiliar("RELACIONADO",row,workbook,cargafamiliar,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ChequePostFechado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ChequePostFechadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getChequePostFechados()!=null && cliente.getChequePostFechados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ChequePostFechadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ChequePostFechadoConstantesFunciones.generarExcelReporteHeaderChequePostFechado("RELACIONADO",row,workbook);
				}

				if(cliente.getChequePostFechados()!=null) {
					i2=0;
					for(ChequePostFechado chequepostfechado : cliente.getChequePostFechados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ChequePostFechadoConstantesFunciones.generarExcelReporteDataChequePostFechado("RELACIONADO",row,workbook,chequepostfechado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EMail
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EMailConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getEMails()!=null && cliente.getEMails().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EMailConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EMailConstantesFunciones.generarExcelReporteHeaderEMail("RELACIONADO",row,workbook);
				}

				if(cliente.getEMails()!=null) {
					i2=0;
					for(EMail email : cliente.getEMails()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EMailConstantesFunciones.generarExcelReporteDataEMail("RELACIONADO",row,workbook,email,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ReferenciaPersonal
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ReferenciaPersonalConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getReferenciaPersonals()!=null && cliente.getReferenciaPersonals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ReferenciaPersonalConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ReferenciaPersonalConstantesFunciones.generarExcelReporteHeaderReferenciaPersonal("RELACIONADO",row,workbook);
				}

				if(cliente.getReferenciaPersonals()!=null) {
					i2=0;
					for(ReferenciaPersonal referenciapersonal : cliente.getReferenciaPersonals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ReferenciaPersonalConstantesFunciones.generarExcelReporteDataReferenciaPersonal("RELACIONADO",row,workbook,referenciapersonal,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//GarantiaCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(GarantiaClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getGarantiaClientes()!=null && cliente.getGarantiaClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(GarantiaClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					GarantiaClienteConstantesFunciones.generarExcelReporteHeaderGarantiaCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getGarantiaClientes()!=null) {
					i2=0;
					for(GarantiaCliente garantiacliente : cliente.getGarantiaClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						GarantiaClienteConstantesFunciones.generarExcelReporteDataGarantiaCliente("RELACIONADO",row,workbook,garantiacliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ClienteArchivo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ClienteArchivoConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getClienteArchivos()!=null && cliente.getClienteArchivos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ClienteArchivoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ClienteArchivoConstantesFunciones.generarExcelReporteHeaderClienteArchivo("RELACIONADO",row,workbook);
				}

				if(cliente.getClienteArchivos()!=null) {
					i2=0;
					for(ClienteArchivo clientearchivo : cliente.getClienteArchivos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ClienteArchivoConstantesFunciones.generarExcelReporteDataClienteArchivo("RELACIONADO",row,workbook,clientearchivo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PoliticasCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getPoliticasCliente()!=null) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PoliticasClienteConstantesFunciones.generarExcelReporteHeaderPoliticasCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getPoliticasCliente()!=null) {
					i2=0;
					PoliticasCliente politicascliente=cliente.getPoliticasCliente();
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PoliticasClienteConstantesFunciones.generarExcelReporteDataPoliticasCliente("RELACIONADO",row,workbook,politicascliente,cellStyleDataAuxHijo);
						i2++;
					}
				
			}


				//FirmaCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FirmaClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getFirmaClientes()!=null && cliente.getFirmaClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FirmaClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FirmaClienteConstantesFunciones.generarExcelReporteHeaderFirmaCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getFirmaClientes()!=null) {
					i2=0;
					for(FirmaCliente firmacliente : cliente.getFirmaClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FirmaClienteConstantesFunciones.generarExcelReporteDataFirmaCliente("RELACIONADO",row,workbook,firmacliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ReferenciaComercial
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ReferenciaComercialConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getReferenciaComercials()!=null && cliente.getReferenciaComercials().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ReferenciaComercialConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ReferenciaComercialConstantesFunciones.generarExcelReporteHeaderReferenciaComercial("RELACIONADO",row,workbook);
				}

				if(cliente.getReferenciaComercials()!=null) {
					i2=0;
					for(ReferenciaComercial referenciacomercial : cliente.getReferenciaComercials()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ReferenciaComercialConstantesFunciones.generarExcelReporteDataReferenciaComercial("RELACIONADO",row,workbook,referenciacomercial,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Novedad
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(NovedadConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getNovedads()!=null && cliente.getNovedads().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(NovedadConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					NovedadConstantesFunciones.generarExcelReporteHeaderNovedad("RELACIONADO",row,workbook);
				}

				if(cliente.getNovedads()!=null) {
					i2=0;
					for(Novedad novedad : cliente.getNovedads()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						NovedadConstantesFunciones.generarExcelReporteDataNovedad("RELACIONADO",row,workbook,novedad,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//InformacionLaboral
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(InformacionLaboralConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getInformacionLaborals()!=null && cliente.getInformacionLaborals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(InformacionLaboralConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					InformacionLaboralConstantesFunciones.generarExcelReporteHeaderInformacionLaboral("RELACIONADO",row,workbook);
				}

				if(cliente.getInformacionLaborals()!=null) {
					i2=0;
					for(InformacionLaboral informacionlaboral : cliente.getInformacionLaborals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						InformacionLaboralConstantesFunciones.generarExcelReporteDataInformacionLaboral("RELACIONADO",row,workbook,informacionlaboral,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//InformacionFinanciera
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(InformacionFinancieraConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getInformacionFinancieras()!=null && cliente.getInformacionFinancieras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(InformacionFinancieraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					InformacionFinancieraConstantesFunciones.generarExcelReporteHeaderInformacionFinanciera("RELACIONADO",row,workbook);
				}

				if(cliente.getInformacionFinancieras()!=null) {
					i2=0;
					for(InformacionFinanciera informacionfinanciera : cliente.getInformacionFinancieras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						InformacionFinancieraConstantesFunciones.generarExcelReporteDataInformacionFinanciera("RELACIONADO",row,workbook,informacionfinanciera,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Telefono
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(TelefonoConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getTelefonos()!=null && cliente.getTelefonos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(TelefonoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					TelefonoConstantesFunciones.generarExcelReporteHeaderTelefono("RELACIONADO",row,workbook);
				}

				if(cliente.getTelefonos()!=null) {
					i2=0;
					for(Telefono telefono : cliente.getTelefonos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						TelefonoConstantesFunciones.generarExcelReporteDataTelefono("RELACIONADO",row,workbook,telefono,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//CuentaPorCobrar
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CuentaPorCobrarConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getCuentaPorCobrars()!=null && cliente.getCuentaPorCobrars().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CuentaPorCobrarConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CuentaPorCobrarConstantesFunciones.generarExcelReporteHeaderCuentaPorCobrar("RELACIONADO",row,workbook);
				}

				if(cliente.getCuentaPorCobrars()!=null) {
					i2=0;
					for(CuentaPorCobrar cuentaporcobrar : cliente.getCuentaPorCobrars()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CuentaPorCobrarConstantesFunciones.generarExcelReporteDataCuentaPorCobrar("RELACIONADO",row,workbook,cuentaporcobrar,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Responsable
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ResponsableConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getResponsables()!=null && cliente.getResponsables().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ResponsableConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ResponsableConstantesFunciones.generarExcelReporteHeaderResponsable("RELACIONADO",row,workbook);
				}

				if(cliente.getResponsables()!=null) {
					i2=0;
					for(Responsable responsable : cliente.getResponsables()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ResponsableConstantesFunciones.generarExcelReporteDataResponsable("RELACIONADO",row,workbook,responsable,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Transportista
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(TransportistaConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getTransportistas()!=null && cliente.getTransportistas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(TransportistaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					TransportistaConstantesFunciones.generarExcelReporteHeaderTransportista("RELACIONADO",row,workbook);
				}

				if(cliente.getTransportistas()!=null) {
					i2=0;
					for(Transportista transportista : cliente.getTransportistas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						TransportistaConstantesFunciones.generarExcelReporteDataTransportista("RELACIONADO",row,workbook,transportista,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PoliticaCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PoliticaClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getPoliticaClientes()!=null && cliente.getPoliticaClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PoliticaClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PoliticaClienteConstantesFunciones.generarExcelReporteHeaderPoliticaCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getPoliticaClientes()!=null) {
					i2=0;
					for(PoliticaCliente politicacliente : cliente.getPoliticaClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PoliticaClienteConstantesFunciones.generarExcelReporteDataPoliticaCliente("RELACIONADO",row,workbook,politicacliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Conyuge
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ConyugeConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getConyuge()!=null) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ConyugeConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ConyugeConstantesFunciones.generarExcelReporteHeaderConyuge("RELACIONADO",row,workbook);
				}

				if(cliente.getConyuge()!=null) {
					i2=0;
					Conyuge conyuge=cliente.getConyuge();
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ConyugeConstantesFunciones.generarExcelReporteDataConyuge("RELACIONADO",row,workbook,conyuge,cellStyleDataAuxHijo);
						i2++;
					}
				
			}


				//ReferenciaBancaria
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ReferenciaBancariaConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getReferenciaBancarias()!=null && cliente.getReferenciaBancarias().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ReferenciaBancariaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ReferenciaBancariaConstantesFunciones.generarExcelReporteHeaderReferenciaBancaria("RELACIONADO",row,workbook);
				}

				if(cliente.getReferenciaBancarias()!=null) {
					i2=0;
					for(ReferenciaBancaria referenciabancaria : cliente.getReferenciaBancarias()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ReferenciaBancariaConstantesFunciones.generarExcelReporteDataReferenciaBancaria("RELACIONADO",row,workbook,referenciabancaria,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//BalanceGeneralCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(BalanceGeneralClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getBalanceGeneralClientes()!=null && cliente.getBalanceGeneralClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(BalanceGeneralClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					BalanceGeneralClienteConstantesFunciones.generarExcelReporteHeaderBalanceGeneralCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getBalanceGeneralClientes()!=null) {
					i2=0;
					for(BalanceGeneralCliente balancegeneralcliente : cliente.getBalanceGeneralClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						BalanceGeneralClienteConstantesFunciones.generarExcelReporteDataBalanceGeneralCliente("RELACIONADO",row,workbook,balancegeneralcliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DatoConstitucion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DatoConstitucionConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getDatoConstitucions()!=null && cliente.getDatoConstitucions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DatoConstitucionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DatoConstitucionConstantesFunciones.generarExcelReporteHeaderDatoConstitucion("RELACIONADO",row,workbook);
				}

				if(cliente.getDatoConstitucions()!=null) {
					i2=0;
					for(DatoConstitucion datoconstitucion : cliente.getDatoConstitucions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DatoConstitucionConstantesFunciones.generarExcelReporteDataDatoConstitucion("RELACIONADO",row,workbook,datoconstitucion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ActividadEconomica
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ActividadEconomicaConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getActividadEconomicas()!=null && cliente.getActividadEconomicas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ActividadEconomicaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ActividadEconomicaConstantesFunciones.generarExcelReporteHeaderActividadEconomica("RELACIONADO",row,workbook);
				}

				if(cliente.getActividadEconomicas()!=null) {
					i2=0;
					for(ActividadEconomica actividadeconomica : cliente.getActividadEconomicas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ActividadEconomicaConstantesFunciones.generarExcelReporteDataActividadEconomica("RELACIONADO",row,workbook,actividadeconomica,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProveedorProducto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getProveedorProductos()!=null && cliente.getProveedorProductos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProveedorProductoConstantesFunciones.generarExcelReporteHeaderProveedorProducto("RELACIONADO",row,workbook);
				}

				if(cliente.getProveedorProductos()!=null) {
					i2=0;
					for(ProveedorProducto proveedorproducto : cliente.getProveedorProductos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProveedorProductoConstantesFunciones.generarExcelReporteDataProveedorProducto("RELACIONADO",row,workbook,proveedorproducto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Consignatario
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ConsignatarioConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getConsignatarios()!=null && cliente.getConsignatarios().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ConsignatarioConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ConsignatarioConstantesFunciones.generarExcelReporteHeaderConsignatario("RELACIONADO",row,workbook);
				}

				if(cliente.getConsignatarios()!=null) {
					i2=0;
					for(Consignatario consignatario : cliente.getConsignatarios()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ConsignatarioConstantesFunciones.generarExcelReporteDataConsignatario("RELACIONADO",row,workbook,consignatario,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//HobbyCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(HobbyClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getHobbyClientes()!=null && cliente.getHobbyClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(HobbyClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					HobbyClienteConstantesFunciones.generarExcelReporteHeaderHobbyCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getHobbyClientes()!=null) {
					i2=0;
					for(HobbyCliente hobbycliente : cliente.getHobbyClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						HobbyClienteConstantesFunciones.generarExcelReporteDataHobbyCliente("RELACIONADO",row,workbook,hobbycliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RepresentanteLegal
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RepresentanteLegalConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getRepresentanteLegals()!=null && cliente.getRepresentanteLegals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RepresentanteLegalConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RepresentanteLegalConstantesFunciones.generarExcelReporteHeaderRepresentanteLegal("RELACIONADO",row,workbook);
				}

				if(cliente.getRepresentanteLegals()!=null) {
					i2=0;
					for(RepresentanteLegal representantelegal : cliente.getRepresentanteLegals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RepresentanteLegalConstantesFunciones.generarExcelReporteDataRepresentanteLegal("RELACIONADO",row,workbook,representantelegal,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ClienteCoa
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ClienteCoaConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getClienteCoas()!=null && cliente.getClienteCoas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ClienteCoaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ClienteCoaConstantesFunciones.generarExcelReporteHeaderClienteCoa("RELACIONADO",row,workbook);
				}

				if(cliente.getClienteCoas()!=null) {
					i2=0;
					for(ClienteCoa clientecoa : cliente.getClienteCoas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ClienteCoaConstantesFunciones.generarExcelReporteDataClienteCoa("RELACIONADO",row,workbook,clientecoa,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Direccion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DireccionConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getDireccions()!=null && cliente.getDireccions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DireccionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DireccionConstantesFunciones.generarExcelReporteHeaderDireccion("RELACIONADO",row,workbook);
				}

				if(cliente.getDireccions()!=null) {
					i2=0;
					for(Direccion direccion : cliente.getDireccions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DireccionConstantesFunciones.generarExcelReporteDataDireccion("RELACIONADO",row,workbook,direccion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ClienteImagen
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ClienteImagenConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getClienteImagens()!=null && cliente.getClienteImagens().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ClienteImagenConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ClienteImagenConstantesFunciones.generarExcelReporteHeaderClienteImagen("RELACIONADO",row,workbook);
				}

				if(cliente.getClienteImagens()!=null) {
					i2=0;
					for(ClienteImagen clienteimagen : cliente.getClienteImagens()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ClienteImagenConstantesFunciones.generarExcelReporteDataClienteImagen("RELACIONADO",row,workbook,clienteimagen,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//SubCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(SubClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getSubClientes()!=null && cliente.getSubClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(SubClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					SubClienteConstantesFunciones.generarExcelReporteHeaderSubCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getSubClientes()!=null) {
					i2=0;
					for(SubCliente subcliente : cliente.getSubClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						SubClienteConstantesFunciones.generarExcelReporteDataSubCliente("RELACIONADO",row,workbook,subcliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ServicioCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ServicioClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getServicioClientes()!=null && cliente.getServicioClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ServicioClienteConstantesFunciones.generarExcelReporteHeaderServicioCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getServicioClientes()!=null) {
					i2=0;
					for(ServicioCliente serviciocliente : cliente.getServicioClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ServicioClienteConstantesFunciones.generarExcelReporteDataServicioCliente("RELACIONADO",row,workbook,serviciocliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//InformacionEconomica
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(InformacionEconomicaConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getInformacionEconomicas()!=null && cliente.getInformacionEconomicas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(InformacionEconomicaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					InformacionEconomicaConstantesFunciones.generarExcelReporteHeaderInformacionEconomica("RELACIONADO",row,workbook);
				}

				if(cliente.getInformacionEconomicas()!=null) {
					i2=0;
					for(InformacionEconomica informacioneconomica : cliente.getInformacionEconomicas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						InformacionEconomicaConstantesFunciones.generarExcelReporteDataInformacionEconomica("RELACIONADO",row,workbook,informacioneconomica,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//VehiculoCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(VehiculoClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getVehiculoClientes()!=null && cliente.getVehiculoClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(VehiculoClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					VehiculoClienteConstantesFunciones.generarExcelReporteHeaderVehiculoCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getVehiculoClientes()!=null) {
					i2=0;
					for(VehiculoCliente vehiculocliente : cliente.getVehiculoClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						VehiculoClienteConstantesFunciones.generarExcelReporteDataVehiculoCliente("RELACIONADO",row,workbook,vehiculocliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//NegocioCliente
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(NegocioClienteConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getNegocioClientes()!=null && cliente.getNegocioClientes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(NegocioClienteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					NegocioClienteConstantesFunciones.generarExcelReporteHeaderNegocioCliente("RELACIONADO",row,workbook);
				}

				if(cliente.getNegocioClientes()!=null) {
					i2=0;
					for(NegocioCliente negociocliente : cliente.getNegocioClientes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						NegocioClienteConstantesFunciones.generarExcelReporteDataNegocioCliente("RELACIONADO",row,workbook,negociocliente,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Monto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(MontoConstantesFunciones.SCLASSWEBTITULO))) {

				if(cliente.getMontos()!=null && cliente.getMontos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(MontoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					MontoConstantesFunciones.generarExcelReporteHeaderMonto("RELACIONADO",row,workbook);
				}

				if(cliente.getMontos()!=null) {
					i2=0;
					for(Monto monto : cliente.getMontos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						MontoConstantesFunciones.generarExcelReporteDataMonto("RELACIONADO",row,workbook,monto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ClienteConstantesFunciones.getClienteDescripcion(cliente));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoCliente.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCliente.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessCliente() throws Exception {		
		this.startProcessCliente(true);
	}
	
	public void startProcessCliente(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasCliente ,this.jPanelParametrosReportesCliente, this.jScrollPanelDatosCliente,this.jPanelPaginacionCliente, this.jScrollPanelDatosEdicionCliente, this.jPanelAccionesCliente,this.jPanelAccionesFormularioCliente,this.jmenuBarCliente,this.jmenuBarDetalleCliente,this.jTtoolBarCliente,this.jTtoolBarDetalleCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasCliente=this.jTabbedPaneBusquedasCliente; 
		
		final JPanel jPanelParametrosReportesCliente=this.jPanelParametrosReportesCliente;
		//final JScrollPane jScrollPanelDatosCliente=this.jScrollPanelDatosCliente;
		final JTable jTableDatosCliente=this.jTableDatosCliente;		
		final JPanel jPanelPaginacionCliente=this.jPanelPaginacionCliente;
		//final JScrollPane jScrollPanelDatosEdicionCliente=this.jScrollPanelDatosEdicionCliente;
		final JPanel jPanelAccionesCliente=this.jPanelAccionesCliente;
		
		JPanel jPanelCamposAuxiliarCliente=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarCliente=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
			jPanelCamposAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jPanelCamposCliente;
			jPanelAccionesFormularioAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jPanelAccionesFormularioCliente;
		}
		
		final JPanel jPanelCamposCliente=jPanelCamposAuxiliarCliente;
		final JPanel jPanelAccionesFormularioCliente=jPanelAccionesFormularioAuxiliarCliente;
		
		
		final JMenuBar jmenuBarCliente=this.jmenuBarCliente;
		final JToolBar jTtoolBarCliente=this.jTtoolBarCliente;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarCliente=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
			jmenuBarDetalleAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jmenuBarDetalleCliente;
			jTtoolBarDetalleAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jTtoolBarDetalleCliente;
		}
		
		final JMenuBar jmenuBarDetalleCliente=jmenuBarDetalleAuxiliarCliente;
		final JToolBar jTtoolBarDetalleCliente=jTtoolBarDetalleAuxiliarCliente;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesCliente;
			processRunnable.jTableDatos=jTableDatosCliente;
			processRunnable.jPanelCampos=jPanelCamposCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionCliente;
			processRunnable.jPanelAcciones=jPanelAccionesCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioCliente;
			
			
			processRunnable.jmenuBar=jmenuBarCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleCliente;
			processRunnable.jTtoolBar=jTtoolBarCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasCliente ,jPanelParametrosReportesCliente,jTableDatosCliente, /*jScrollPanelDatosCliente,*/jPanelCamposCliente,jPanelPaginacionCliente, /*jScrollPanelDatosEdicionCliente,*/ jPanelAccionesCliente,jPanelAccionesFormularioCliente,jmenuBarCliente,jmenuBarDetalleCliente,jTtoolBarCliente,jTtoolBarDetalleCliente);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasCliente ,jPanelParametrosReportesCliente, jScrollPanelDatosCliente,jPanelPaginacionCliente, jScrollPanelDatosEdicionCliente, jPanelAccionesCliente,jPanelAccionesFormularioCliente,jmenuBarCliente,jmenuBarDetalleCliente,jTtoolBarCliente,jTtoolBarDetalleCliente);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessCliente() {// throws Exception 
		this.finishProcessCliente(true);
	}
	
	public void finishProcessCliente(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasCliente ,this.jPanelParametrosReportesCliente, this.jScrollPanelDatosCliente,this.jPanelPaginacionCliente, this.jScrollPanelDatosEdicionCliente, this.jPanelAccionesCliente,this.jPanelAccionesFormularioCliente,this.jmenuBarCliente,this.jmenuBarDetalleCliente,this.jTtoolBarCliente,this.jTtoolBarDetalleCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasCliente=this.jTabbedPaneBusquedasCliente; 
		
		final JPanel jPanelParametrosReportesCliente=this.jPanelParametrosReportesCliente;
		//final JScrollPane jScrollPanelDatosCliente=this.jScrollPanelDatosCliente;
		final JTable jTableDatosCliente=this.jTableDatosCliente;		
		final JPanel jPanelPaginacionCliente=this.jPanelPaginacionCliente;
		//final JScrollPane jScrollPanelDatosEdicionCliente=this.jScrollPanelDatosEdicionCliente;
		final JPanel jPanelAccionesCliente=this.jPanelAccionesCliente;
		
		JPanel jPanelCamposAuxiliarCliente=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarCliente=new JPanel();
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
			jPanelCamposAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jPanelCamposCliente;
			jPanelAccionesFormularioAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jPanelAccionesFormularioCliente;
		}
		
		final JPanel jPanelCamposCliente=jPanelCamposAuxiliarCliente;
		final JPanel jPanelAccionesFormularioCliente=jPanelAccionesFormularioAuxiliarCliente;
		
		
		final JMenuBar jmenuBarCliente=this.jmenuBarCliente;		
		final JToolBar jTtoolBarCliente=this.jTtoolBarCliente;
				
		JMenuBar jmenuBarDetalleAuxiliarCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarCliente=new JToolBar();
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
			jmenuBarDetalleAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jmenuBarDetalleCliente;
			jTtoolBarDetalleAuxiliarCliente=this.jInternalFrameDetalleFormCliente.jTtoolBarDetalleCliente;		
		}
		
		final JMenuBar jmenuBarDetalleCliente=jmenuBarDetalleAuxiliarCliente;
		final JToolBar jTtoolBarDetalleCliente=jTtoolBarDetalleAuxiliarCliente;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesCliente;
			processRunnable.jTableDatos=jTableDatosCliente;
			processRunnable.jPanelCampos=jPanelCamposCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionCliente;
			processRunnable.jPanelAcciones=jPanelAccionesCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioCliente;
			
			
			processRunnable.jmenuBar=jmenuBarCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleCliente;
			processRunnable.jTtoolBar=jTtoolBarCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasCliente ,jPanelParametrosReportesCliente, jTableDatosCliente,/*jScrollPanelDatosCliente,*/jPanelCamposCliente,jPanelPaginacionCliente, /*jScrollPanelDatosEdicionCliente,*/ jPanelAccionesCliente,jPanelAccionesFormularioCliente,jmenuBarCliente,jmenuBarDetalleCliente,jTtoolBarCliente,jTtoolBarDetalleCliente));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesCliente(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarCliente(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuCliente(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleCliente,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleCliente,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.clienteConstantesFunciones.getsFinalQueryCliente();
		String  finalQueryPaginacionTodos=this.clienteConstantesFunciones.getsFinalQueryCliente();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ClienteConstantesFunciones.getArrayColumnasGlobalesNoCliente(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.clientesEliminados= new ArrayList<Cliente>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessCliente();
		
				///*ClienteSessionBean*/this.clienteSessionBean=new ClienteSessionBean();
			
			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ClienteConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ClienteConstantesFunciones.getClassesForeignKeysOfCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/cliente."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			clientesAux= new ArrayList<Cliente>();
			
				
			clienteLogic.setDatosCliente(this.datosCliente);
			clienteLogic.setDatosDeep(this.datosDeep);
			clienteLogic.setIsConDeep(true);
			
			
			clienteLogic.getClienteDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					clienteLogic.getTodosClientes(finalQueryGlobal,pagination);
					
					//clienteLogic.getTodosClientesWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(clienteLogic.getClientes()==null|| clienteLogic.getClientes().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							clientesAux= new ArrayList<Cliente>();
							clientesAux.addAll(clienteLogic.getClientes());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux= new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							clienteLogic.getTodosClientes(finalQueryGlobal+"",this.pagination);												
							
							//clienteLogic.getTodosClientesWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteClientes("Todos",clienteLogic.getClientes() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							clienteLogic.setClientes(new ArrayList<Cliente>());					
							clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idCliente=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idCliente=this.idActual;
				
				} else if(this.idClienteActual!=null && this.idClienteActual!=0L) {
					idCliente=idClienteActual;
				}
				
					
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndicePorId(idCliente);
				
				this.clientes=new ArrayList<Cliente>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					clienteLogic.getEntity(idCliente);
					
					//clienteLogic.getEntityWithConnection(idCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.setClientes(new ArrayList<Cliente>());
					clienteLogic.getClientes().add(clienteLogic.getCliente());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clientes=new ArrayList<Cliente>();
					this.clientes.add(cliente);
				}
				
				if(clienteLogic.getCliente()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("BusquedaPorIdentificacion")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesBusquedaPorIdentificacion(finalQueryGlobal,pagination,identificacionBusquedaPorIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesBusquedaPorIdentificacion(finalQueryGlobal,pagination,identificacionBusquedaPorIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorIdentificacion(identificacionBusquedaPorIdentificacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("BusquedaPorIdentificacion",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("BusquedaPorIdentificacion",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorNombreComercial")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreComercial(nombre_comercialBusquedaPorNombreComercial);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesBusquedaPorNombreComercial(finalQueryGlobal,pagination,nombre_comercialBusquedaPorNombreComercial);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreComercial(nombre_comercialBusquedaPorNombreComercial);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreComercial(nombre_comercialBusquedaPorNombreComercial);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesBusquedaPorNombreComercial(finalQueryGlobal,pagination,nombre_comercialBusquedaPorNombreComercial);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreComercial(nombre_comercialBusquedaPorNombreComercial);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreComercial(nombre_comercialBusquedaPorNombreComercial);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("BusquedaPorNombreComercial",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("BusquedaPorNombreComercial",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("BusquedaPorNombreCompleto")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesBusquedaPorNombreCompleto(finalQueryGlobal,pagination,nombre_completoBusquedaPorNombreCompleto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesBusquedaPorNombreCompleto(finalQueryGlobal,pagination,nombre_completoBusquedaPorNombreCompleto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceBusquedaPorNombreCompleto(nombre_completoBusquedaPorNombreCompleto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("BusquedaPorNombreCompleto",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("BusquedaPorNombreCompleto",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdEmpresa",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdEmpresa",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoCliente")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCliente(id_estado_clienteFK_IdEstadoCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdEstadoCliente(finalQueryGlobal,pagination,id_estado_clienteFK_IdEstadoCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCliente(id_estado_clienteFK_IdEstadoCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCliente(id_estado_clienteFK_IdEstadoCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdEstadoCliente(finalQueryGlobal,pagination,id_estado_clienteFK_IdEstadoCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCliente(id_estado_clienteFK_IdEstadoCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoCliente(id_estado_clienteFK_IdEstadoCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdEstadoCliente",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdEstadoCliente",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoLegal")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdEstadoLegal(finalQueryGlobal,pagination,id_estado_legalFK_IdEstadoLegal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdEstadoLegal(finalQueryGlobal,pagination,id_estado_legalFK_IdEstadoLegal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdEstadoLegal",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdEstadoLegal",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdGrupoCliente")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdGrupoCliente(id_grupo_clienteFK_IdGrupoCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdGrupoCliente(finalQueryGlobal,pagination,id_grupo_clienteFK_IdGrupoCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdGrupoCliente(id_grupo_clienteFK_IdGrupoCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdGrupoCliente(id_grupo_clienteFK_IdGrupoCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdGrupoCliente(finalQueryGlobal,pagination,id_grupo_clienteFK_IdGrupoCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdGrupoCliente(id_grupo_clienteFK_IdGrupoCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdGrupoCliente(id_grupo_clienteFK_IdGrupoCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdGrupoCliente",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdGrupoCliente",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdRuta")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdRuta(finalQueryGlobal,pagination,id_rutaFK_IdRuta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdRuta(finalQueryGlobal,pagination,id_rutaFK_IdRuta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdRuta",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdRuta",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdSucursal",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdSucursal",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPrecio")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdTipoPrecio",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdTipoPrecio",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTituloCliente")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTituloCliente(id_titulo_clienteFK_IdTituloCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdTituloCliente(finalQueryGlobal,pagination,id_titulo_clienteFK_IdTituloCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTituloCliente(id_titulo_clienteFK_IdTituloCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTituloCliente(id_titulo_clienteFK_IdTituloCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdTituloCliente(finalQueryGlobal,pagination,id_titulo_clienteFK_IdTituloCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTituloCliente(id_titulo_clienteFK_IdTituloCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdTituloCliente(id_titulo_clienteFK_IdTituloCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdTituloCliente",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdTituloCliente",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdVendedor",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdVendedor",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdZona")) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteLogic.getClientesFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteLogic.getClientes()==null||clienteLogic.getClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clientes==null|| clientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clientesAux=new ArrayList<Cliente>();
						clientesAux.addAll(clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientesAux=new ArrayList<Cliente>();
							clientesAux.addAll(clientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteLogic.getClientesFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClientes("FK_IdZona",clienteLogic.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClientes("FK_IdZona",clientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteLogic.setClientes(new ArrayList<Cliente>());
						clienteLogic.getClientes().addAll(clientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clientes=new ArrayList<Cliente>();
							clientes.addAll(clientesAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesCliente();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessCliente();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=clienteLogic.getClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=clientes.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=clienteLogic.getClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=clientes.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Cliente cliente) {
		Boolean permite=true;
		
		if(this.cliente.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ClienteConstantesFunciones.getOrderByListaCliente();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ClienteConstantesFunciones.getOrderByListaCliente();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Cliente cliente:clienteLogic.getClientes()) {
				if(cliente.getsType().equals(Constantes2.S_TOTALES)) {
					clienteTotales=cliente;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Cliente cliente:this.clientes) {
				if(cliente.getsType().equals(Constantes2.S_TOTALES)) {
					clienteTotales=cliente;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.clienteAux=new Cliente();
			this.clienteAux.setsType(Constantes2.S_TOTALES);
			this.clienteAux.setIsNew(false);
			this.clienteAux.setIsChanged(false);
			this.clienteAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ClienteConstantesFunciones.TotalizarValoresFilaCliente(this.clienteLogic.getClientes(),this.clienteAux);
				
				this.clienteLogic.getClientes().add(this.clienteAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ClienteConstantesFunciones.TotalizarValoresFilaCliente(this.clientes,this.clienteAux);
				
				this.clientes.add(this.clienteAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		clienteTotales=new Cliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.clienteLogic.getClientes().remove(clienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.clientes.remove(clienteTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		clienteTotales=new Cliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Cliente cliente:clienteLogic.getClientes()) {
				if(cliente.getsType().equals(Constantes2.S_TOTALES)) {
					clienteTotales=cliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ClienteConstantesFunciones.TotalizarValoresFilaCliente(this.clienteLogic.getClientes(),clienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Cliente cliente:this.clientes) {
				if(cliente.getsType().equals(Constantes2.S_TOTALES)) {
					clienteTotales=cliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ClienteConstantesFunciones.TotalizarValoresFilaCliente(this.clientes,clienteTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getClientesBusquedaPorIdentificacion()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorIdentificacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesBusquedaPorNombreComercial()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombreComercial";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesBusquedaPorNombreCompleto()throws Exception {
		try {
			sAccionBusqueda="BusquedaPorNombreCompleto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdAreaCr()throws Exception {
		try {
			sAccionBusqueda="FK_IdAreaCr";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdCateTipoAfiliacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdCateTipoAfiliacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdCentroActividad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroActividad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdCiudad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdDia()throws Exception {
		try {
			sAccionBusqueda="FK_IdDia";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdEstadoCivil()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoCivil";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdEstadoCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdEstadoLegal()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoLegal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdGrupoCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdGrupoCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdPaisNacionalad()throws Exception {
		try {
			sAccionBusqueda="FK_IdPaisNacionalad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdProfesion()throws Exception {
		try {
			sAccionBusqueda="FK_IdProfesion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdProvincia()throws Exception {
		try {
			sAccionBusqueda="FK_IdProvincia";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdRegion()throws Exception {
		try {
			sAccionBusqueda="FK_IdRegion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdRuta()throws Exception {
		try {
			sAccionBusqueda="FK_IdRuta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTipoCargoLabo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCargoLabo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTipoGarantiaEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGarantiaEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTipoGenero()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGenero";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTipoIdentificacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoIdentificacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTipoListaPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoListaPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTipoNivelEdu()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoNivelEdu";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTipoPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdTituloCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdTituloCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClientesFK_IdZona()throws Exception {
		try {
			sAccionBusqueda="FK_IdZona";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getClientesBusquedaPorIdentificacion(String sFinalQuery,String identificacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesBusquedaPorIdentificacion(sFinalQuery,this.pagination,identificacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesBusquedaPorNombreComercial(String sFinalQuery,String nombre_comercial)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesBusquedaPorNombreComercial(sFinalQuery,this.pagination,nombre_comercial);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesBusquedaPorNombreCompleto(String sFinalQuery,String nombre_completo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesBusquedaPorNombreCompleto(sFinalQuery,this.pagination,nombre_completo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdAreaCr(String sFinalQuery,Long id_area_cr)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdAreaCr(sFinalQuery,this.pagination,id_area_cr);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdCateTipoAfiliacion(String sFinalQuery,Long id_cate_tipo_afiliacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdCateTipoAfiliacion(sFinalQuery,this.pagination,id_cate_tipo_afiliacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdCentroActividad(String sFinalQuery,Long id_centro_actividad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdCentroActividad(sFinalQuery,this.pagination,id_centro_actividad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdCiudad(String sFinalQuery,Long id_ciudad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdCiudad(sFinalQuery,this.pagination,id_ciudad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdDia(String sFinalQuery,Long id_dia)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdDia(sFinalQuery,this.pagination,id_dia);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdEstadoCivil(String sFinalQuery,Long id_estado_civil)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdEstadoCivil(sFinalQuery,this.pagination,id_estado_civil);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdEstadoCliente(String sFinalQuery,Long id_estado_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdEstadoCliente(sFinalQuery,this.pagination,id_estado_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdEstadoLegal(String sFinalQuery,Long id_estado_legal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdEstadoLegal(sFinalQuery,this.pagination,id_estado_legal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdGrupoCliente(String sFinalQuery,Long id_grupo_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdGrupoCliente(sFinalQuery,this.pagination,id_grupo_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdPaisNacionalad(String sFinalQuery,Long id_pais_nacionalidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdPaisNacionalad(sFinalQuery,this.pagination,id_pais_nacionalidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdProfesion(String sFinalQuery,Long id_profesion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdProfesion(sFinalQuery,this.pagination,id_profesion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdProvincia(String sFinalQuery,Long id_provincia)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdProvincia(sFinalQuery,this.pagination,id_provincia);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdRegion(String sFinalQuery,Long id_region)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdRegion(sFinalQuery,this.pagination,id_region);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdRuta(String sFinalQuery,Long id_ruta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdRuta(sFinalQuery,this.pagination,id_ruta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTipoCargoLabo(String sFinalQuery,Long id_tipo_cargo_labo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTipoCargoLabo(sFinalQuery,this.pagination,id_tipo_cargo_labo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTipoGarantiaEmpresa(String sFinalQuery,Long id_tipo_garantia_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTipoGarantiaEmpresa(sFinalQuery,this.pagination,id_tipo_garantia_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTipoGenero(String sFinalQuery,Long id_tipo_genero)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTipoGenero(sFinalQuery,this.pagination,id_tipo_genero);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTipoIdentificacion(String sFinalQuery,Long id_tipo_identificacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTipoIdentificacion(sFinalQuery,this.pagination,id_tipo_identificacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTipoListaPrecio(String sFinalQuery,Long id_tipo_lista_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTipoListaPrecio(sFinalQuery,this.pagination,id_tipo_lista_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTipoNivelEdu(String sFinalQuery,Long id_tipo_nivel_edu)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTipoNivelEdu(sFinalQuery,this.pagination,id_tipo_nivel_edu);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTipoPrecio(String sFinalQuery,Long id_tipo_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTipoPrecio(sFinalQuery,this.pagination,id_tipo_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdTituloCliente(String sFinalQuery,Long id_titulo_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdTituloCliente(sFinalQuery,this.pagination,id_titulo_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClientesFK_IdZona(String sFinalQuery,Long id_zona)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getClientesFK_IdZona(sFinalQuery,this.pagination,id_zona);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosCliente() {
		this.isPermisoTodoCliente=false;
		this.isPermisoNuevoCliente=false;
		this.isPermisoActualizarCliente=false;
		this.isPermisoActualizarOriginalCliente=false;
		this.isPermisoEliminarCliente=false;
		this.isPermisoGuardarCambiosCliente=false;
		this.isPermisoConsultaCliente=false;
		this.isPermisoBusquedaCliente=false;
		this.isPermisoReporteCliente=false;		
		this.isPermisoOrdenCliente=false;		
		this.isPermisoPaginacionMedioCliente=false;		
		this.isPermisoPaginacionAltoCliente=false;
		this.isPermisoPaginacionTodoCliente=false;
		this.isPermisoCopiarCliente=false;		
		this.isPermisoVerFormCliente=false;		
		this.isPermisoDuplicarCliente=false;		
		this.isPermisoOrdenCliente=false;		
	}
	
	public void setPermisosUsuarioCliente(Boolean isPermiso) {
		this.isPermisoTodoCliente=isPermiso;
		this.isPermisoNuevoCliente=isPermiso;
		this.isPermisoActualizarCliente=isPermiso;
		this.isPermisoActualizarOriginalCliente=isPermiso;
		this.isPermisoEliminarCliente=isPermiso;
		this.isPermisoGuardarCambiosCliente=isPermiso;
		this.isPermisoConsultaCliente=isPermiso;
		this.isPermisoBusquedaCliente=isPermiso;
		this.isPermisoReporteCliente=isPermiso;
		this.isPermisoOrdenCliente=isPermiso;		
		this.isPermisoPaginacionMedioCliente=isPermiso;		
		this.isPermisoPaginacionAltoCliente=isPermiso;		
		this.isPermisoPaginacionTodoCliente=isPermiso;		
		this.isPermisoCopiarCliente=isPermiso;		
		this.isPermisoVerFormCliente=isPermiso;		
		this.isPermisoDuplicarCliente=isPermiso;
		this.isPermisoOrdenCliente=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioCliente(Boolean isPermiso) {
		//this.isPermisoTodoCliente=isPermiso;
		this.isPermisoNuevoCliente=isPermiso;
		this.isPermisoActualizarCliente=isPermiso;
		this.isPermisoActualizarOriginalCliente=isPermiso;
		this.isPermisoEliminarCliente=isPermiso;
		this.isPermisoGuardarCambiosCliente=isPermiso;
		//this.isPermisoConsultaCliente=isPermiso;
		//this.isPermisoBusquedaCliente=isPermiso;
		//this.isPermisoReporteCliente=isPermiso;
		//this.isPermisoOrdenCliente=isPermiso;		
		//this.isPermisoPaginacionMedioCliente=isPermiso;		
		//this.isPermisoPaginacionAltoCliente=isPermiso;		
		//this.isPermisoPaginacionTodoCliente=isPermiso;		
		//this.isPermisoCopiarCliente=isPermiso;		
		//this.isPermisoDuplicarCliente=isPermiso;
		//this.isPermisoOrdenCliente=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioClienteClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(InformacionLaboralConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(TransportistaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(NovedadConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PoliticasClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ReferenciaPersonalConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(BalanceGeneralClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PoliticaClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(VehiculoClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ResponsableConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(InformacionFinancieraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ConsignatarioConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ClienteImagenConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(GarantiaClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(InformacionEconomicaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ReferenciaComercialConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(BienConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProveedorProductoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ServicioClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ContactoClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DatoConstitucionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ClienteCoaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(HobbyClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(CargaFamiliarConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EMailConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ConyugeConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(CuentaPorCobrarConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FirmaClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RepresentanteLegalConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(TelefonoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(NegocioClienteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ReferenciaBancariaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(MontoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ClienteArchivoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ActividadEconomicaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DireccionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ChequePostFechadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(SubClienteConstantesFunciones.SNOMBREOPCION);
		
		if(ClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosInformacionLaboral=false;
		this.isTienePermisosInformacionLaboral=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,InformacionLaboralConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosTransportista=false;
		this.isTienePermisosTransportista=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,TransportistaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosNovedad=false;
		this.isTienePermisosNovedad=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,NovedadConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPoliticasCliente=false;
		this.isTienePermisosPoliticasCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,PoliticasClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosReferenciaPersonal=false;
		this.isTienePermisosReferenciaPersonal=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ReferenciaPersonalConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosBalanceGeneralCliente=false;
		this.isTienePermisosBalanceGeneralCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,BalanceGeneralClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPoliticaCliente=false;
		this.isTienePermisosPoliticaCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,PoliticaClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosVehiculoCliente=false;
		this.isTienePermisosVehiculoCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,VehiculoClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosResponsable=false;
		this.isTienePermisosResponsable=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ResponsableConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosInformacionFinanciera=false;
		this.isTienePermisosInformacionFinanciera=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,InformacionFinancieraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosConsignatario=false;
		this.isTienePermisosConsignatario=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ConsignatarioConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosClienteImagen=false;
		this.isTienePermisosClienteImagen=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ClienteImagenConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosGarantiaCliente=false;
		this.isTienePermisosGarantiaCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,GarantiaClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosInformacionEconomica=false;
		this.isTienePermisosInformacionEconomica=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,InformacionEconomicaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosReferenciaComercial=false;
		this.isTienePermisosReferenciaComercial=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ReferenciaComercialConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosBien=false;
		this.isTienePermisosBien=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,BienConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProveedorProducto=false;
		this.isTienePermisosProveedorProducto=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ProveedorProductoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosServicioCliente=false;
		this.isTienePermisosServicioCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ServicioClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosContactoCliente=false;
		this.isTienePermisosContactoCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ContactoClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDatoConstitucion=false;
		this.isTienePermisosDatoConstitucion=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,DatoConstitucionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosClienteCoa=false;
		this.isTienePermisosClienteCoa=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ClienteCoaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosHobbyCliente=false;
		this.isTienePermisosHobbyCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,HobbyClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosCargaFamiliar=false;
		this.isTienePermisosCargaFamiliar=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,CargaFamiliarConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEMail=false;
		this.isTienePermisosEMail=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,EMailConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosConyuge=false;
		this.isTienePermisosConyuge=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ConyugeConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosCuentaPorCobrar=false;
		this.isTienePermisosCuentaPorCobrar=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,CuentaPorCobrarConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFirmaCliente=false;
		this.isTienePermisosFirmaCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,FirmaClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRepresentanteLegal=false;
		this.isTienePermisosRepresentanteLegal=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,RepresentanteLegalConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosTelefono=false;
		this.isTienePermisosTelefono=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,TelefonoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosNegocioCliente=false;
		this.isTienePermisosNegocioCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,NegocioClienteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosReferenciaBancaria=false;
		this.isTienePermisosReferenciaBancaria=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ReferenciaBancariaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosMonto=false;
		this.isTienePermisosMonto=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,MontoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosClienteArchivo=false;
		this.isTienePermisosClienteArchivo=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ClienteArchivoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosActividadEconomica=false;
		this.isTienePermisosActividadEconomica=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ActividadEconomicaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDireccion=false;
		this.isTienePermisosDireccion=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,DireccionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosChequePostFechado=false;
		this.isTienePermisosChequePostFechado=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,ChequePostFechadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosSubCliente=false;
		this.isTienePermisosSubCliente=this.verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(this.opcionsRelacionadas,SubClienteConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebCliente(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioClienteClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosInformacionLaboral=conPermiso;
		this.isTienePermisosTransportista=conPermiso;
		this.isTienePermisosNovedad=conPermiso;
		this.isTienePermisosPoliticasCliente=conPermiso;
		this.isTienePermisosReferenciaPersonal=conPermiso;
		this.isTienePermisosBalanceGeneralCliente=conPermiso;
		this.isTienePermisosPoliticaCliente=conPermiso;
		this.isTienePermisosVehiculoCliente=conPermiso;
		this.isTienePermisosResponsable=conPermiso;
		this.isTienePermisosInformacionFinanciera=conPermiso;
		this.isTienePermisosConsignatario=conPermiso;
		this.isTienePermisosClienteImagen=conPermiso;
		this.isTienePermisosGarantiaCliente=conPermiso;
		this.isTienePermisosInformacionEconomica=conPermiso;
		this.isTienePermisosReferenciaComercial=conPermiso;
		this.isTienePermisosBien=conPermiso;
		this.isTienePermisosProveedorProducto=conPermiso;
		this.isTienePermisosServicioCliente=conPermiso;
		this.isTienePermisosContactoCliente=conPermiso;
		this.isTienePermisosDatoConstitucion=conPermiso;
		this.isTienePermisosClienteCoa=conPermiso;
		this.isTienePermisosHobbyCliente=conPermiso;
		this.isTienePermisosCargaFamiliar=conPermiso;
		this.isTienePermisosEMail=conPermiso;
		this.isTienePermisosConyuge=conPermiso;
		this.isTienePermisosCuentaPorCobrar=conPermiso;
		this.isTienePermisosFirmaCliente=conPermiso;
		this.isTienePermisosRepresentanteLegal=conPermiso;
		this.isTienePermisosTelefono=conPermiso;
		this.isTienePermisosNegocioCliente=conPermiso;
		this.isTienePermisosReferenciaBancaria=conPermiso;
		this.isTienePermisosMonto=conPermiso;
		this.isTienePermisosClienteArchivo=conPermiso;
		this.isTienePermisosActividadEconomica=conPermiso;
		this.isTienePermisosDireccion=conPermiso;
		this.isTienePermisosChequePostFechado=conPermiso;
		this.isTienePermisosSubCliente=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioClienteClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionClienteClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioClienteClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosInformacionLaboral && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosTransportista && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosNovedad && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPoliticasCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosReferenciaPersonal && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosBalanceGeneralCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPoliticaCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosVehiculoCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosResponsable && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosInformacionFinanciera && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosConsignatario && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosClienteImagen && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosGarantiaCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosInformacionEconomica && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosReferenciaComercial && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosBien && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProveedorProducto && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosServicioCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosContactoCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDatoConstitucion && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosClienteCoa && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosHobbyCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosCargaFamiliar && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEMail && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosConyuge && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosCuentaPorCobrar && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFirmaCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRepresentanteLegal && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosTelefono && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosNegocioCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosReferenciaBancaria && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosMonto && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosClienteArchivo && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosActividadEconomica && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDireccion && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosChequePostFechado && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosSubCliente && this.jInternalFrameDetalleFormCliente!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.remove(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioCliente() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.clienteSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ClienteConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoCliente=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarCliente=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalCliente=this.isPermisoActualizarCliente;
			this.isPermisoEliminarCliente=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosCliente=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaCliente=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaCliente=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoCliente=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteCliente=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioCliente=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoCliente=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoCliente=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarCliente=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormCliente=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarCliente=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.clienteSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosCliente.setToolTipText(this.jTableDatosCliente.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioCliente(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioCliente(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioCliente() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosContactoCliente && this.clienteConstantesFunciones.mostrarContactoClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Contacto Cliente");
			reporte.setsDescripcion("Contacto Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosBien && this.clienteConstantesFunciones.mostrarBienCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Bien");
			reporte.setsDescripcion("Bien");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosCargaFamiliar && this.clienteConstantesFunciones.mostrarCargaFamiliarCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Carga Familiar");
			reporte.setsDescripcion("Carga Familiar");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosChequePostFechado && this.clienteConstantesFunciones.mostrarChequePostFechadoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Cheque Post Fechado");
			reporte.setsDescripcion("Cheque Post Fechado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEMail && this.clienteConstantesFunciones.mostrarEMailCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("E Mail");
			reporte.setsDescripcion("E Mail");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosReferenciaPersonal && this.clienteConstantesFunciones.mostrarReferenciaPersonalCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Referencia Personal");
			reporte.setsDescripcion("Referencia Personal");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosGarantiaCliente && this.clienteConstantesFunciones.mostrarGarantiaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Garantia Cliente");
			reporte.setsDescripcion("Garantia Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosClienteArchivo && this.clienteConstantesFunciones.mostrarClienteArchivoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Cliente Archivo");
			reporte.setsDescripcion("Cliente Archivo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPoliticasCliente && this.clienteConstantesFunciones.mostrarPoliticasClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Politicas Cliente");
			reporte.setsDescripcion("Politicas Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFirmaCliente && this.clienteConstantesFunciones.mostrarFirmaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Firma Cliente");
			reporte.setsDescripcion("Firma Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosReferenciaComercial && this.clienteConstantesFunciones.mostrarReferenciaComercialCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Referencia Comercial");
			reporte.setsDescripcion("Referencia Comercial");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosNovedad && this.clienteConstantesFunciones.mostrarNovedadCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Novedad");
			reporte.setsDescripcion("Novedad");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosInformacionLaboral && this.clienteConstantesFunciones.mostrarInformacionLaboralCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Informacion Laboral");
			reporte.setsDescripcion("Informacion Laboral");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosInformacionFinanciera && this.clienteConstantesFunciones.mostrarInformacionFinancieraCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Informacion Financiera");
			reporte.setsDescripcion("Informacion Financiera");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosTelefono && this.clienteConstantesFunciones.mostrarTelefonoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Telefono");
			reporte.setsDescripcion("Telefono");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosCuentaPorCobrar && this.clienteConstantesFunciones.mostrarCuentaPorCobrarCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Cuenta Por Cobrar");
			reporte.setsDescripcion("Cuenta Por Cobrar");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosResponsable && this.clienteConstantesFunciones.mostrarResponsableCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Responsable");
			reporte.setsDescripcion("Responsable");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosTransportista && this.clienteConstantesFunciones.mostrarTransportistaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Transportista");
			reporte.setsDescripcion("Transportista");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPoliticaCliente && this.clienteConstantesFunciones.mostrarPoliticaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Politica Cliente");
			reporte.setsDescripcion("Politica Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosConyuge && this.clienteConstantesFunciones.mostrarConyugeCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Conyuge");
			reporte.setsDescripcion("Conyuge");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosReferenciaBancaria && this.clienteConstantesFunciones.mostrarReferenciaBancariaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Referencia Bancaria");
			reporte.setsDescripcion("Referencia Bancaria");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosBalanceGeneralCliente && this.clienteConstantesFunciones.mostrarBalanceGeneralClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Balance General Cliente");
			reporte.setsDescripcion("Balance General Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDatoConstitucion && this.clienteConstantesFunciones.mostrarDatoConstitucionCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Dato Constitucion");
			reporte.setsDescripcion("Dato Constitucion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosActividadEconomica && this.clienteConstantesFunciones.mostrarActividadEconomicaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Actividad Economica");
			reporte.setsDescripcion("Actividad Economica");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProveedorProducto && this.clienteConstantesFunciones.mostrarProveedorProductoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Producto Proveedor");
			reporte.setsDescripcion("Producto Proveedor");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosConsignatario && this.clienteConstantesFunciones.mostrarConsignatarioCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Consignatario");
			reporte.setsDescripcion("Consignatario");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosHobbyCliente && this.clienteConstantesFunciones.mostrarHobbyClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Hobby Cliente");
			reporte.setsDescripcion("Hobby Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRepresentanteLegal && this.clienteConstantesFunciones.mostrarRepresentanteLegalCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Representante Legal");
			reporte.setsDescripcion("Representante Legal");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosClienteCoa && this.clienteConstantesFunciones.mostrarClienteCoaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Coa");
			reporte.setsDescripcion("Coa");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDireccion && this.clienteConstantesFunciones.mostrarDireccionCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Direccion");
			reporte.setsDescripcion("Direccion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosClienteImagen && this.clienteConstantesFunciones.mostrarClienteImagenCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Cliente Imagen");
			reporte.setsDescripcion("Cliente Imagen");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosSubCliente && this.clienteConstantesFunciones.mostrarSubClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Sub Cliente");
			reporte.setsDescripcion("Sub Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosServicioCliente && this.clienteConstantesFunciones.mostrarServicioClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Servicio Cliente");
			reporte.setsDescripcion("Servicio Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosInformacionEconomica && this.clienteConstantesFunciones.mostrarInformacionEconomicaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Informacion Economica");
			reporte.setsDescripcion("Informacion Economica");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosVehiculoCliente && this.clienteConstantesFunciones.mostrarVehiculoClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Vehiculo Cliente");
			reporte.setsDescripcion("Vehiculo Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosNegocioCliente && this.clienteConstantesFunciones.mostrarNegocioClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Negocio Cliente");
			reporte.setsDescripcion("Negocio Cliente");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosMonto && this.clienteConstantesFunciones.mostrarMontoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Monto De Facturacion");
			reporte.setsDescripcion("Monto De Facturacion");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyClienteListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.tipoidentificacionsForeignKey=new ArrayList();
				this.grupoclientesForeignKey=new ArrayList();
				this.tituloclientesForeignKey=new ArrayList();
				this.areacrsForeignKey=new ArrayList();
				this.estadoclientesForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.regionsForeignKey=new ArrayList();
				this.provinciasForeignKey=new ArrayList();
				this.ciudadsForeignKey=new ArrayList();
				this.zonasForeignKey=new ArrayList();
				this.paisnacionalidadsForeignKey=new ArrayList();
				this.tipocargolabosForeignKey=new ArrayList();
				this.tiponiveledusForeignKey=new ArrayList();
				this.profesionsForeignKey=new ArrayList();
				this.tipogenerosForeignKey=new ArrayList();
				this.estadocivilsForeignKey=new ArrayList();
				this.estadolegalsForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.rutasForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.centroactividadsForeignKey=new ArrayList();
				this.tipogarantiaempresasForeignKey=new ArrayList();
				this.catetipoafiliacionsForeignKey=new ArrayList();
				this.diasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.tipopreciosForeignKey=new ArrayList();
				this.tipolistapreciosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ClienteJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyClienteListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoIdentificacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyGrupoClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTituloClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAreaCrListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyRegionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProvinciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisNacionalidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCargoLaboListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoNivelEduListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProfesionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoLegalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyRutaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroActividadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGarantiaEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCateTipoAfiliacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyDiaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoListaPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIdentificacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoidentificacionsForeignKey==null||this.tipoidentificacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoIdentificacionConstantesFunciones.getArrayColumnasGlobalesTipoIdentificacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIdentificacionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoIdentificacionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoIdentificacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyGrupoClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.grupoclientesForeignKey==null||this.grupoclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=GrupoClienteConstantesFunciones.getArrayColumnasGlobalesGrupoCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,GrupoClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=GrupoClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosGrupoClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTituloClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tituloclientesForeignKey==null||this.tituloclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TituloClienteConstantesFunciones.getArrayColumnasGlobalesTituloCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TituloClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TituloClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTituloClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAreaCrListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.areacrsForeignKey==null||this.areacrsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AreaCrConstantesFunciones.getArrayColumnasGlobalesAreaCr(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AreaCrConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AreaCrConstantesFunciones.SFINALQUERY;

				this.cargarCombosAreaCrsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoclientesForeignKey==null||this.estadoclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoClienteConstantesFunciones.getArrayColumnasGlobalesEstadoCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRegionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.regionsForeignKey==null||this.regionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=RegionConstantesFunciones.getArrayColumnasGlobalesRegion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RegionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=RegionConstantesFunciones.SFINALQUERY;

				this.cargarCombosRegionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProvinciaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.provinciasForeignKey==null||this.provinciasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProvinciaConstantesFunciones.getArrayColumnasGlobalesProvincia(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProvinciaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProvinciaConstantesFunciones.SFINALQUERY;

				this.cargarCombosProvinciasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZonaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ZonaConstantesFunciones.SFINALQUERY;

				this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisNacionalidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paisnacionalidadsForeignKey==null||this.paisnacionalidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaisNacionalidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCargoLaboListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocargolabosForeignKey==null||this.tipocargolabosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCargoLaboConstantesFunciones.getArrayColumnasGlobalesTipoCargoLabo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCargoLaboConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCargoLaboConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCargoLabosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoNivelEduListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiponiveledusForeignKey==null||this.tiponiveledusForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoNivelEduConstantesFunciones.getArrayColumnasGlobalesTipoNivelEdu(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoNivelEduConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoNivelEduConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoNivelEdusForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProfesionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.profesionsForeignKey==null||this.profesionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProfesionConstantesFunciones.getArrayColumnasGlobalesProfesion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProfesionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProfesionConstantesFunciones.SFINALQUERY;

				this.cargarCombosProfesionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGeneroListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGeneroConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivilListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoCivilConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoLegalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadolegalsForeignKey==null||this.estadolegalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoLegalConstantesFunciones.getArrayColumnasGlobalesEstadoLegal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoLegalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoLegalConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoLegalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRutaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.rutasForeignKey==null||this.rutasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=RutaConstantesFunciones.getArrayColumnasGlobalesRuta(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=RutaConstantesFunciones.SFINALQUERY;

				this.cargarCombosRutasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroActividadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centroactividadsForeignKey==null||this.centroactividadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroActividadConstantesFunciones.getArrayColumnasGlobalesCentroActividad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroActividadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroActividadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroActividadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGarantiaEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogarantiaempresasForeignKey==null||this.tipogarantiaempresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGarantiaEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoGarantiaEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGarantiaEmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGarantiaEmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGarantiaEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCateTipoAfiliacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.catetipoafiliacionsForeignKey==null||this.catetipoafiliacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CateTipoAfiliacionConstantesFunciones.getArrayColumnasGlobalesCateTipoAfiliacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CateTipoAfiliacionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CateTipoAfiliacionConstantesFunciones.SFINALQUERY;

				this.cargarCombosCateTipoAfiliacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDiaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.diasForeignKey==null||this.diasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=DiaConstantesFunciones.getArrayColumnasGlobalesDia(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DiaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=DiaConstantesFunciones.SFINALQUERY;

				this.cargarCombosDiasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoListaPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipolistapreciosForeignKey==null||this.tipolistapreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoListaPrecioConstantesFunciones.getArrayColumnasGlobalesTipoListaPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoListaPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoListaPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoListaPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ClienteParameterReturnGeneral clienteReturnGeneral=new ClienteParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_empresaCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_empresaCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_sucursalCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_sucursalCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalTipoIdentificacion="";

				if(((this.tipoidentificacionsForeignKey==null||this.tipoidentificacionsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_tipo_identificacionCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_tipo_identificacionCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoIdentificacionConstantesFunciones.getArrayColumnasGlobalesTipoIdentificacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoIdentificacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIdentificacionConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoIdentificacion=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoIdentificacion, "");
						finalQueryGlobalTipoIdentificacion+=TipoIdentificacionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoIdentificacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoIdentificacion=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTipoIdentificacionActual();
					}
				} else {
					finalQueryGlobalTipoIdentificacion="NONE";
				}


				String finalQueryGlobalGrupoCliente="";

				if(((this.grupoclientesForeignKey==null||this.grupoclientesForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_grupo_clienteCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_grupo_clienteCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionGrupoCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=GrupoClienteConstantesFunciones.getArrayColumnasGlobalesGrupoCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalGrupoCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,GrupoClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalGrupoCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalGrupoCliente, "");
						finalQueryGlobalGrupoCliente+=GrupoClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosGrupoClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalGrupoCliente=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidGrupoClienteActual();
					}
				} else {
					finalQueryGlobalGrupoCliente="NONE";
				}


				String finalQueryGlobalTituloCliente="";

				if(((this.tituloclientesForeignKey==null||this.tituloclientesForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_titulo_clienteCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_titulo_clienteCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTituloCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TituloClienteConstantesFunciones.getArrayColumnasGlobalesTituloCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTituloCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TituloClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalTituloCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalTituloCliente, "");
						finalQueryGlobalTituloCliente+=TituloClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTituloClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTituloCliente=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTituloClienteActual();
					}
				} else {
					finalQueryGlobalTituloCliente="NONE";
				}


				String finalQueryGlobalAreaCr="";

				if(((this.areacrsForeignKey==null||this.areacrsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_area_crCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_area_crCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionAreaCr()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AreaCrConstantesFunciones.getArrayColumnasGlobalesAreaCr(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAreaCr=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AreaCrConstantesFunciones.TABLENAME);

						finalQueryGlobalAreaCr=Funciones.GetFinalQueryAppend(finalQueryGlobalAreaCr, "");
						finalQueryGlobalAreaCr+=AreaCrConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAreaCrsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAreaCr=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidAreaCrActual();
					}
				} else {
					finalQueryGlobalAreaCr="NONE";
				}


				String finalQueryGlobalEstadoCliente="";

				if(((this.estadoclientesForeignKey==null||this.estadoclientesForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_estado_clienteCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_estado_clienteCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoClienteConstantesFunciones.getArrayColumnasGlobalesEstadoCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoCliente, "");
						finalQueryGlobalEstadoCliente+=EstadoClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoCliente=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidEstadoClienteActual();
					}
				} else {
					finalQueryGlobalEstadoCliente="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_paisCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_paisCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalRegion="";

				if(cargarCombosDependencia && ((this.regionsForeignKey==null||this.regionsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_regionCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_regionCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionRegion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=RegionConstantesFunciones.getArrayColumnasGlobalesRegion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalRegion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RegionConstantesFunciones.TABLENAME);

						finalQueryGlobalRegion=Funciones.GetFinalQueryAppend(finalQueryGlobalRegion, "");
						finalQueryGlobalRegion+=RegionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosRegionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalRegion=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidRegionActual();
					}
				} else {
					finalQueryGlobalRegion="NONE";
				}


				String finalQueryGlobalProvincia="";

				if(cargarCombosDependencia && ((this.provinciasForeignKey==null||this.provinciasForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_provinciaCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_provinciaCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProvinciaConstantesFunciones.getArrayColumnasGlobalesProvincia(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProvincia=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProvinciaConstantesFunciones.TABLENAME);

						finalQueryGlobalProvincia=Funciones.GetFinalQueryAppend(finalQueryGlobalProvincia, "");
						finalQueryGlobalProvincia+=ProvinciaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProvinciasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProvincia=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidProvinciaActual();
					}
				} else {
					finalQueryGlobalProvincia="NONE";
				}


				String finalQueryGlobalCiudad="";

				if(cargarCombosDependencia && ((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_ciudadCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_ciudadCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudad=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudad, "");
						finalQueryGlobalCiudad+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudad=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidCiudadActual();
					}
				} else {
					finalQueryGlobalCiudad="NONE";
				}


				String finalQueryGlobalZona="";

				if(((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_zonaCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_zonaCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalZona=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

						finalQueryGlobalZona=Funciones.GetFinalQueryAppend(finalQueryGlobalZona, "");
						finalQueryGlobalZona+=ZonaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalZona=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidZonaActual();
					}
				} else {
					finalQueryGlobalZona="NONE";
				}


				String finalQueryGlobalPaisNacionalidad="";

				if(((this.paisnacionalidadsForeignKey==null||this.paisnacionalidadsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_pais_nacionalidadCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_pais_nacionalidadCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPaisNacionalidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPaisNacionalidad=Funciones.GetFinalQueryAppend(finalQueryGlobalPaisNacionalidad, "");
						finalQueryGlobalPaisNacionalidad+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaisNacionalidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPaisNacionalidad=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidPaisNacionalidadActual();
					}
				} else {
					finalQueryGlobalPaisNacionalidad="NONE";
				}


				String finalQueryGlobalTipoCargoLabo="";

				if(((this.tipocargolabosForeignKey==null||this.tipocargolabosForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_tipo_cargo_laboCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_tipo_cargo_laboCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoCargoLabo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCargoLaboConstantesFunciones.getArrayColumnasGlobalesTipoCargoLabo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCargoLabo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCargoLaboConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCargoLabo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCargoLabo, "");
						finalQueryGlobalTipoCargoLabo+=TipoCargoLaboConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCargoLabosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCargoLabo=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTipoCargoLaboActual();
					}
				} else {
					finalQueryGlobalTipoCargoLabo="NONE";
				}


				String finalQueryGlobalTipoNivelEdu="";

				if(((this.tiponiveledusForeignKey==null||this.tiponiveledusForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_tipo_nivel_eduCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_tipo_nivel_eduCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoNivelEduConstantesFunciones.getArrayColumnasGlobalesTipoNivelEdu(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoNivelEdu=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoNivelEduConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoNivelEdu=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoNivelEdu, "");
						finalQueryGlobalTipoNivelEdu+=TipoNivelEduConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoNivelEdusForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoNivelEdu=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTipoNivelEduActual();
					}
				} else {
					finalQueryGlobalTipoNivelEdu="NONE";
				}


				String finalQueryGlobalProfesion="";

				if(((this.profesionsForeignKey==null||this.profesionsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_profesionCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_profesionCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionProfesion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProfesionConstantesFunciones.getArrayColumnasGlobalesProfesion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProfesion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProfesionConstantesFunciones.TABLENAME);

						finalQueryGlobalProfesion=Funciones.GetFinalQueryAppend(finalQueryGlobalProfesion, "");
						finalQueryGlobalProfesion+=ProfesionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProfesionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProfesion=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidProfesionActual();
					}
				} else {
					finalQueryGlobalProfesion="NONE";
				}


				String finalQueryGlobalTipoGenero="";

				if(((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_tipo_generoCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_tipo_generoCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGenero=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGenero=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGenero, "");
						finalQueryGlobalTipoGenero+=TipoGeneroConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGenero=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTipoGeneroActual();
					}
				} else {
					finalQueryGlobalTipoGenero="NONE";
				}


				String finalQueryGlobalEstadoCivil="";

				if(((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_estado_civilCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_estado_civilCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoCivil=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoCivil=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoCivil, "");
						finalQueryGlobalEstadoCivil+=EstadoCivilConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoCivil=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidEstadoCivilActual();
					}
				} else {
					finalQueryGlobalEstadoCivil="NONE";
				}


				String finalQueryGlobalEstadoLegal="";

				if(((this.estadolegalsForeignKey==null||this.estadolegalsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_estado_legalCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_estado_legalCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoLegalConstantesFunciones.getArrayColumnasGlobalesEstadoLegal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoLegal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoLegalConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoLegal=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoLegal, "");
						finalQueryGlobalEstadoLegal+=EstadoLegalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoLegalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoLegal=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidEstadoLegalActual();
					}
				} else {
					finalQueryGlobalEstadoLegal="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_cuenta_contableCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_cuenta_contableCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalRuta="";

				if(((this.rutasForeignKey==null||this.rutasForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_rutaCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_rutaCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionRuta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=RutaConstantesFunciones.getArrayColumnasGlobalesRuta(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalRuta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaConstantesFunciones.TABLENAME);

						finalQueryGlobalRuta=Funciones.GetFinalQueryAppend(finalQueryGlobalRuta, "");
						finalQueryGlobalRuta+=RutaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosRutasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalRuta=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidRutaActual();
					}
				} else {
					finalQueryGlobalRuta="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_vendedorCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_vendedorCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalCentroActividad="";

				if(((this.centroactividadsForeignKey==null||this.centroactividadsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_centro_actividadCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_centro_actividadCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroActividadConstantesFunciones.getArrayColumnasGlobalesCentroActividad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroActividad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroActividadConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroActividad=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroActividad, "");
						finalQueryGlobalCentroActividad+=CentroActividadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroActividadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroActividad=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidCentroActividadActual();
					}
				} else {
					finalQueryGlobalCentroActividad="NONE";
				}


				String finalQueryGlobalTipoGarantiaEmpresa="";

				if(((this.tipogarantiaempresasForeignKey==null||this.tipogarantiaempresasForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_tipo_garantia_empresaCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_tipo_garantia_empresaCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGarantiaEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGarantiaEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoGarantiaEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGarantiaEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGarantiaEmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGarantiaEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGarantiaEmpresa, "");
						finalQueryGlobalTipoGarantiaEmpresa+=TipoGarantiaEmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGarantiaEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGarantiaEmpresa=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTipoGarantiaEmpresaActual();
					}
				} else {
					finalQueryGlobalTipoGarantiaEmpresa="NONE";
				}


				String finalQueryGlobalCateTipoAfiliacion="";

				if(((this.catetipoafiliacionsForeignKey==null||this.catetipoafiliacionsForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_cate_tipo_afiliacionCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_cate_tipo_afiliacionCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCateTipoAfiliacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CateTipoAfiliacionConstantesFunciones.getArrayColumnasGlobalesCateTipoAfiliacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCateTipoAfiliacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CateTipoAfiliacionConstantesFunciones.TABLENAME);

						finalQueryGlobalCateTipoAfiliacion=Funciones.GetFinalQueryAppend(finalQueryGlobalCateTipoAfiliacion, "");
						finalQueryGlobalCateTipoAfiliacion+=CateTipoAfiliacionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCateTipoAfiliacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCateTipoAfiliacion=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidCateTipoAfiliacionActual();
					}
				} else {
					finalQueryGlobalCateTipoAfiliacion="NONE";
				}


				String finalQueryGlobalDia="";

				if(((this.diasForeignKey==null||this.diasForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_diaCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_diaCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionDia()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=DiaConstantesFunciones.getArrayColumnasGlobalesDia(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalDia=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DiaConstantesFunciones.TABLENAME);

						finalQueryGlobalDia=Funciones.GetFinalQueryAppend(finalQueryGlobalDia, "");
						finalQueryGlobalDia+=DiaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosDiasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalDia=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidDiaActual();
					}
				} else {
					finalQueryGlobalDia="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_empleadoCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_empleadoCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalTipoPrecio="";

				if(((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_tipo_precioCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_tipo_precioCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPrecio, "");
						finalQueryGlobalTipoPrecio+=TipoPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPrecio=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTipoPrecioActual();
					}
				} else {
					finalQueryGlobalTipoPrecio="NONE";
				}


				String finalQueryGlobalTipoListaPrecio="";

				if(((this.tipolistapreciosForeignKey==null||this.tipolistapreciosForeignKey.size()<=0) && this.clienteConstantesFunciones.cargarid_tipo_lista_precioCliente)
					 || (this.esRecargarFks && this.clienteConstantesFunciones.cargarid_tipo_lista_precioCliente)) {

					if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoListaPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoListaPrecioConstantesFunciones.getArrayColumnasGlobalesTipoListaPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoListaPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoListaPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoListaPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoListaPrecio, "");
						finalQueryGlobalTipoListaPrecio+=TipoListaPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoListaPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoListaPrecio=" WHERE " + ConstantesSql.ID + "="+clienteSessionBean.getlidTipoListaPrecioActual();
					}
				} else {
					finalQueryGlobalTipoListaPrecio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				clienteReturnGeneral=clienteLogic.cargarCombosLoteForeignKeyCliente(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalTipoIdentificacion,finalQueryGlobalGrupoCliente,finalQueryGlobalTituloCliente,finalQueryGlobalAreaCr,finalQueryGlobalEstadoCliente,finalQueryGlobalPais,finalQueryGlobalRegion,finalQueryGlobalProvincia,finalQueryGlobalCiudad,finalQueryGlobalZona,finalQueryGlobalPaisNacionalidad,finalQueryGlobalTipoCargoLabo,finalQueryGlobalTipoNivelEdu,finalQueryGlobalProfesion,finalQueryGlobalTipoGenero,finalQueryGlobalEstadoCivil,finalQueryGlobalEstadoLegal,finalQueryGlobalCuentaContable,finalQueryGlobalRuta,finalQueryGlobalVendedor,finalQueryGlobalCentroActividad,finalQueryGlobalTipoGarantiaEmpresa,finalQueryGlobalCateTipoAfiliacion,finalQueryGlobalDia,finalQueryGlobalEmpleado,finalQueryGlobalTipoPrecio,finalQueryGlobalTipoListaPrecio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=clienteReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=clienteReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalTipoIdentificacion.equals("NONE")) {
				this.tipoidentificacionsForeignKey=clienteReturnGeneral.gettipoidentificacionsForeignKey();
			}

			if(!finalQueryGlobalGrupoCliente.equals("NONE")) {
				this.grupoclientesForeignKey=clienteReturnGeneral.getgrupoclientesForeignKey();
			}

			if(!finalQueryGlobalTituloCliente.equals("NONE")) {
				this.tituloclientesForeignKey=clienteReturnGeneral.gettituloclientesForeignKey();
			}

			if(!finalQueryGlobalAreaCr.equals("NONE")) {
				this.areacrsForeignKey=clienteReturnGeneral.getareacrsForeignKey();
			}

			if(!finalQueryGlobalEstadoCliente.equals("NONE")) {
				this.estadoclientesForeignKey=clienteReturnGeneral.getestadoclientesForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=clienteReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalRegion.equals("NONE")) {
				this.regionsForeignKey=clienteReturnGeneral.getregionsForeignKey();
			}

			if(!finalQueryGlobalProvincia.equals("NONE")) {
				this.provinciasForeignKey=clienteReturnGeneral.getprovinciasForeignKey();
			}

			if(!finalQueryGlobalCiudad.equals("NONE")) {
				this.ciudadsForeignKey=clienteReturnGeneral.getciudadsForeignKey();
			}

			if(!finalQueryGlobalZona.equals("NONE")) {
				this.zonasForeignKey=clienteReturnGeneral.getzonasForeignKey();
			}

			if(!finalQueryGlobalPaisNacionalidad.equals("NONE")) {
				this.paisnacionalidadsForeignKey=clienteReturnGeneral.getpaisnacionalidadsForeignKey();
			}

			if(!finalQueryGlobalTipoCargoLabo.equals("NONE")) {
				this.tipocargolabosForeignKey=clienteReturnGeneral.gettipocargolabosForeignKey();
			}

			if(!finalQueryGlobalTipoNivelEdu.equals("NONE")) {
				this.tiponiveledusForeignKey=clienteReturnGeneral.gettiponiveledusForeignKey();
			}

			if(!finalQueryGlobalProfesion.equals("NONE")) {
				this.profesionsForeignKey=clienteReturnGeneral.getprofesionsForeignKey();
			}

			if(!finalQueryGlobalTipoGenero.equals("NONE")) {
				this.tipogenerosForeignKey=clienteReturnGeneral.gettipogenerosForeignKey();
			}

			if(!finalQueryGlobalEstadoCivil.equals("NONE")) {
				this.estadocivilsForeignKey=clienteReturnGeneral.getestadocivilsForeignKey();
			}

			if(!finalQueryGlobalEstadoLegal.equals("NONE")) {
				this.estadolegalsForeignKey=clienteReturnGeneral.getestadolegalsForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=clienteReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalRuta.equals("NONE")) {
				this.rutasForeignKey=clienteReturnGeneral.getrutasForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=clienteReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalCentroActividad.equals("NONE")) {
				this.centroactividadsForeignKey=clienteReturnGeneral.getcentroactividadsForeignKey();
			}

			if(!finalQueryGlobalTipoGarantiaEmpresa.equals("NONE")) {
				this.tipogarantiaempresasForeignKey=clienteReturnGeneral.gettipogarantiaempresasForeignKey();
			}

			if(!finalQueryGlobalCateTipoAfiliacion.equals("NONE")) {
				this.catetipoafiliacionsForeignKey=clienteReturnGeneral.getcatetipoafiliacionsForeignKey();
			}

			if(!finalQueryGlobalDia.equals("NONE")) {
				this.diasForeignKey=clienteReturnGeneral.getdiasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=clienteReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalTipoPrecio.equals("NONE")) {
				this.tipopreciosForeignKey=clienteReturnGeneral.gettipopreciosForeignKey();
			}

			if(!finalQueryGlobalTipoListaPrecio.equals("NONE")) {
				this.tipolistapreciosForeignKey=clienteReturnGeneral.gettipolistapreciosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyCliente()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyTipoIdentificacion();
			this.addItemDefectoCombosForeignKeyGrupoCliente();
			this.addItemDefectoCombosForeignKeyTituloCliente();
			this.addItemDefectoCombosForeignKeyAreaCr();
			this.addItemDefectoCombosForeignKeyEstadoCliente();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyRegion();
			this.addItemDefectoCombosForeignKeyProvincia();
			this.addItemDefectoCombosForeignKeyCiudad();
			this.addItemDefectoCombosForeignKeyZona();
			this.addItemDefectoCombosForeignKeyPaisNacionalidad();
			this.addItemDefectoCombosForeignKeyTipoCargoLabo();
			this.addItemDefectoCombosForeignKeyTipoNivelEdu();
			this.addItemDefectoCombosForeignKeyProfesion();
			this.addItemDefectoCombosForeignKeyTipoGenero();
			this.addItemDefectoCombosForeignKeyEstadoCivil();
			this.addItemDefectoCombosForeignKeyEstadoLegal();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyRuta();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeyCentroActividad();
			this.addItemDefectoCombosForeignKeyTipoGarantiaEmpresa();
			this.addItemDefectoCombosForeignKeyCateTipoAfiliacion();
			this.addItemDefectoCombosForeignKeyDia();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyTipoPrecio();
			this.addItemDefectoCombosForeignKeyTipoListaPrecio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoIdentificacion()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {
				TipoIdentificacion tipoidentificacion=new TipoIdentificacion();
				TipoIdentificacionConstantesFunciones.setTipoIdentificacionDescripcion(tipoidentificacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoidentificacion.setId(null);

				if(!TipoIdentificacionConstantesFunciones.ExisteEnLista(this.tipoidentificacionsForeignKey,tipoidentificacion,true)) {

					this.tipoidentificacionsForeignKey.add(0,tipoidentificacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyGrupoCliente()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionGrupoCliente()) {
				GrupoCliente grupocliente=new GrupoCliente();
				GrupoClienteConstantesFunciones.setGrupoClienteDescripcion(grupocliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				grupocliente.setId(null);

				if(!GrupoClienteConstantesFunciones.ExisteEnLista(this.grupoclientesForeignKey,grupocliente,true)) {

					this.grupoclientesForeignKey.add(0,grupocliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTituloCliente()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTituloCliente()) {
				TituloCliente titulocliente=new TituloCliente();
				TituloClienteConstantesFunciones.setTituloClienteDescripcion(titulocliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				titulocliente.setId(null);

				if(!TituloClienteConstantesFunciones.ExisteEnLista(this.tituloclientesForeignKey,titulocliente,true)) {

					this.tituloclientesForeignKey.add(0,titulocliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAreaCr()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionAreaCr()) {
				AreaCr areacr=new AreaCr();
				AreaCrConstantesFunciones.setAreaCrDescripcion(areacr,Constantes.SMENSAJE_ESCOJA_OPCION);
				areacr.setId(null);

				if(!AreaCrConstantesFunciones.ExisteEnLista(this.areacrsForeignKey,areacr,true)) {

					this.areacrsForeignKey.add(0,areacr);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoCliente()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCliente()) {
				EstadoCliente estadocliente=new EstadoCliente();
				EstadoClienteConstantesFunciones.setEstadoClienteDescripcion(estadocliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadocliente.setId(null);

				if(!EstadoClienteConstantesFunciones.ExisteEnLista(this.estadoclientesForeignKey,estadocliente,true)) {

					this.estadoclientesForeignKey.add(0,estadocliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyRegion()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionRegion()) {
				Region region=new Region();
				RegionConstantesFunciones.setRegionDescripcion(region,Constantes.SMENSAJE_ESCOJA_OPCION);
				region.setId(null);

				if(!RegionConstantesFunciones.ExisteEnLista(this.regionsForeignKey,region,true)) {

					this.regionsForeignKey.add(0,region);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProvincia()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {
				Provincia provincia=new Provincia();
				ProvinciaConstantesFunciones.setProvinciaDescripcion(provincia,Constantes.SMENSAJE_ESCOJA_OPCION);
				provincia.setId(null);

				if(!ProvinciaConstantesFunciones.ExisteEnLista(this.provinciasForeignKey,provincia,true)) {

					this.provinciasForeignKey.add(0,provincia);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudad()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				Ciudad ciudad=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudad,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudad.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadsForeignKey,ciudad,true)) {

					this.ciudadsForeignKey.add(0,ciudad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyZona()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				Zona zona=new Zona();
				ZonaConstantesFunciones.setZonaDescripcion(zona,Constantes.SMENSAJE_ESCOJA_OPCION);
				zona.setId(null);

				if(!ZonaConstantesFunciones.ExisteEnLista(this.zonasForeignKey,zona,true)) {

					this.zonasForeignKey.add(0,zona);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPaisNacionalidad()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {
				Pais paisnacionalidad=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(paisnacionalidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				paisnacionalidad.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paisnacionalidadsForeignKey,paisnacionalidad,true)) {

					this.paisnacionalidadsForeignKey.add(0,paisnacionalidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCargoLabo()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoCargoLabo()) {
				TipoCargoLabo tipocargolabo=new TipoCargoLabo();
				TipoCargoLaboConstantesFunciones.setTipoCargoLaboDescripcion(tipocargolabo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocargolabo.setId(null);

				if(!TipoCargoLaboConstantesFunciones.ExisteEnLista(this.tipocargolabosForeignKey,tipocargolabo,true)) {

					this.tipocargolabosForeignKey.add(0,tipocargolabo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoNivelEdu()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {
				TipoNivelEdu tiponiveledu=new TipoNivelEdu();
				TipoNivelEduConstantesFunciones.setTipoNivelEduDescripcion(tiponiveledu,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiponiveledu.setId(null);

				if(!TipoNivelEduConstantesFunciones.ExisteEnLista(this.tiponiveledusForeignKey,tiponiveledu,true)) {

					this.tiponiveledusForeignKey.add(0,tiponiveledu);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProfesion()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionProfesion()) {
				Profesion profesion=new Profesion();
				ProfesionConstantesFunciones.setProfesionDescripcion(profesion,Constantes.SMENSAJE_ESCOJA_OPCION);
				profesion.setId(null);

				if(!ProfesionConstantesFunciones.ExisteEnLista(this.profesionsForeignKey,profesion,true)) {

					this.profesionsForeignKey.add(0,profesion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGenero()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				TipoGenero tipogenero=new TipoGenero();
				TipoGeneroConstantesFunciones.setTipoGeneroDescripcion(tipogenero,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogenero.setId(null);

				if(!TipoGeneroConstantesFunciones.ExisteEnLista(this.tipogenerosForeignKey,tipogenero,true)) {

					this.tipogenerosForeignKey.add(0,tipogenero);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoCivil()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				EstadoCivil estadocivil=new EstadoCivil();
				EstadoCivilConstantesFunciones.setEstadoCivilDescripcion(estadocivil,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadocivil.setId(null);

				if(!EstadoCivilConstantesFunciones.ExisteEnLista(this.estadocivilsForeignKey,estadocivil,true)) {

					this.estadocivilsForeignKey.add(0,estadocivil);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoLegal()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {
				EstadoLegal estadolegal=new EstadoLegal();
				EstadoLegalConstantesFunciones.setEstadoLegalDescripcion(estadolegal,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadolegal.setId(null);

				if(!EstadoLegalConstantesFunciones.ExisteEnLista(this.estadolegalsForeignKey,estadolegal,true)) {

					this.estadolegalsForeignKey.add(0,estadolegal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyRuta()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionRuta()) {
				Ruta ruta=new Ruta();
				RutaConstantesFunciones.setRutaDescripcion(ruta,Constantes.SMENSAJE_ESCOJA_OPCION);
				ruta.setId(null);

				if(!RutaConstantesFunciones.ExisteEnLista(this.rutasForeignKey,ruta,true)) {

					this.rutasForeignKey.add(0,ruta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroActividad()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCentroActividad()) {
				CentroActividad centroactividad=new CentroActividad();
				CentroActividadConstantesFunciones.setCentroActividadDescripcion(centroactividad,Constantes.SMENSAJE_ESCOJA_OPCION);
				centroactividad.setId(null);

				if(!CentroActividadConstantesFunciones.ExisteEnLista(this.centroactividadsForeignKey,centroactividad,true)) {

					this.centroactividadsForeignKey.add(0,centroactividad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGarantiaEmpresa()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoGarantiaEmpresa()) {
				TipoGarantiaEmpresa tipogarantiaempresa=new TipoGarantiaEmpresa();
				TipoGarantiaEmpresaConstantesFunciones.setTipoGarantiaEmpresaDescripcion(tipogarantiaempresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogarantiaempresa.setId(null);

				if(!TipoGarantiaEmpresaConstantesFunciones.ExisteEnLista(this.tipogarantiaempresasForeignKey,tipogarantiaempresa,true)) {

					this.tipogarantiaempresasForeignKey.add(0,tipogarantiaempresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCateTipoAfiliacion()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionCateTipoAfiliacion()) {
				CateTipoAfiliacion catetipoafiliacion=new CateTipoAfiliacion();
				CateTipoAfiliacionConstantesFunciones.setCateTipoAfiliacionDescripcion(catetipoafiliacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				catetipoafiliacion.setId(null);

				if(!CateTipoAfiliacionConstantesFunciones.ExisteEnLista(this.catetipoafiliacionsForeignKey,catetipoafiliacion,true)) {

					this.catetipoafiliacionsForeignKey.add(0,catetipoafiliacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyDia()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionDia()) {
				Dia dia=new Dia();
				DiaConstantesFunciones.setDiaDescripcion(dia,Constantes.SMENSAJE_ESCOJA_OPCION);
				dia.setId(null);

				if(!DiaConstantesFunciones.ExisteEnLista(this.diasForeignKey,dia,true)) {

					this.diasForeignKey.add(0,dia);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				TipoPrecio tipoprecio=new TipoPrecio();
				TipoPrecioConstantesFunciones.setTipoPrecioDescripcion(tipoprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprecio.setId(null);

				if(!TipoPrecioConstantesFunciones.ExisteEnLista(this.tipopreciosForeignKey,tipoprecio,true)) {

					this.tipopreciosForeignKey.add(0,tipoprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoListaPrecio()throws Exception {
		try {

			if(!this.clienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoListaPrecio()) {
				TipoListaPrecio tipolistaprecio=new TipoListaPrecio();
				TipoListaPrecioConstantesFunciones.setTipoListaPrecioDescripcion(tipolistaprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipolistaprecio.setId(null);

				if(!TipoListaPrecioConstantesFunciones.ExisteEnLista(this.tipolistapreciosForeignKey,tipolistaprecio,true)) {

					this.tipolistapreciosForeignKey.add(0,tipolistaprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyCliente()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyPais(JComboBox jComboBoxPaisGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Pais paisLocal=(Pais)jComboBoxPaisGenerico.getSelectedItem();

			if(paisLocal!=null  && paisLocal.getId()!=null  && paisLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_pais="+paisLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboRegion=sFinalQueryCombo;

			this.regionsForeignKey=new ArrayList<Region>();
			this.cargarCombosForeignKeyRegion(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProvincia=sFinalQueryCombo;

			this.provinciasForeignKey=new ArrayList<Provincia>();
			this.cargarCombosForeignKeyProvincia(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyPais(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.addItemListener(new ComboBoxItemListener(this,"id_paisCliente"));
						this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.addFocusListener(new ComboBoxFocusListener(this,"id_paisCliente"));
					}
				} else {
					if(this.jInternalFrameDetalleFormCliente!=null) {
						this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.addActionListener(new ComboBoxActionListener(this,"id_paisCliente"));
						this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.addFocusListener(new ComboBoxFocusListener(this,"id_paisCliente"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyCliente()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
				this.cliente.setfecha_nacimiento(this.parametroGeneralUsuario.getfecha_sistema());
				this.cliente.setfecha_ultima_factura(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyCliente();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyCliente(Cliente cliente)throws Exception {	
		try {
			
			this.setActualTipoIdentificacionForeignKey(cliente.getid_tipo_identificacion(),false,"Formulario");
			this.setActualGrupoClienteForeignKey(cliente.getid_grupo_cliente(),false,"Formulario");
			this.setActualTituloClienteForeignKey(cliente.getid_titulo_cliente(),false,"Formulario");
			this.setActualAreaCrForeignKey(cliente.getid_area_cr(),false,"Formulario");
			this.setActualEstadoClienteForeignKey(cliente.getid_estado_cliente(),false,"Formulario");
			this.setActualPaisForeignKey(cliente.getid_pais(),false,"Formulario");
			this.setActualRegionForeignKey(cliente.getid_region(),false,"Formulario");
			this.setActualProvinciaForeignKey(cliente.getid_provincia(),false,"Formulario");
			this.setActualCiudadForeignKey(cliente.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(cliente.getid_zona(),false,"Formulario");
			this.setActualPaisNacionalidadForeignKey(cliente.getid_pais_nacionalidad(),false,"Formulario");
			this.setActualTipoCargoLaboForeignKey(cliente.getid_tipo_cargo_labo(),false,"Formulario");
			this.setActualTipoNivelEduForeignKey(cliente.getid_tipo_nivel_edu(),false,"Formulario");
			this.setActualProfesionForeignKey(cliente.getid_profesion(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(cliente.getid_tipo_genero(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(cliente.getid_estado_civil(),false,"Formulario");
			this.setActualEstadoLegalForeignKey(cliente.getid_estado_legal(),false,"Formulario");
			this.setActualCuentaContableForeignKey(cliente.getid_cuenta_contable(),false,"Formulario");
			this.setActualRutaForeignKey(cliente.getid_ruta(),false,"Formulario");
			this.setActualVendedorForeignKey(cliente.getid_vendedor(),false,"Formulario");
			this.setActualCentroActividadForeignKey(cliente.getid_centro_actividad(),false,"Formulario");
			this.setActualTipoGarantiaEmpresaForeignKey(cliente.getid_tipo_garantia_empresa(),false,"Formulario");
			this.setActualCateTipoAfiliacionForeignKey(cliente.getid_cate_tipo_afiliacion(),false,"Formulario");
			this.setActualDiaForeignKey(cliente.getid_dia(),false,"Formulario");
			this.setActualEmpleadoForeignKey(cliente.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(cliente.getid_tipo_precio(),false,"Formulario");
			this.setActualTipoListaPrecioForeignKey(cliente.getid_tipo_lista_precio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyCliente(Cliente cliente,String sTipoEvento)throws Exception {	
		try {
			
			

				if(cliente.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableCliente")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(cliente.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyCliente()throws Exception {	
		try {
			
			this.setActualTipoIdentificacionForeignKey(this.clienteConstantesFunciones.getid_tipo_identificacion(),false,"Formulario");
			this.setActualGrupoClienteForeignKey(this.clienteConstantesFunciones.getid_grupo_cliente(),false,"Formulario");
			this.setActualTituloClienteForeignKey(this.clienteConstantesFunciones.getid_titulo_cliente(),false,"Formulario");
			this.setActualAreaCrForeignKey(this.clienteConstantesFunciones.getid_area_cr(),false,"Formulario");
			this.setActualEstadoClienteForeignKey(this.clienteConstantesFunciones.getid_estado_cliente(),false,"Formulario");
			this.setActualPaisForeignKey(this.clienteConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualRegionForeignKey(this.clienteConstantesFunciones.getid_region(),false,"Formulario");
			this.setActualProvinciaForeignKey(this.clienteConstantesFunciones.getid_provincia(),false,"Formulario");
			this.setActualCiudadForeignKey(this.clienteConstantesFunciones.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(this.clienteConstantesFunciones.getid_zona(),false,"Formulario");
			this.setActualPaisNacionalidadForeignKey(this.clienteConstantesFunciones.getid_pais_nacionalidad(),false,"Formulario");
			this.setActualTipoCargoLaboForeignKey(this.clienteConstantesFunciones.getid_tipo_cargo_labo(),false,"Formulario");
			this.setActualTipoNivelEduForeignKey(this.clienteConstantesFunciones.getid_tipo_nivel_edu(),false,"Formulario");
			this.setActualProfesionForeignKey(this.clienteConstantesFunciones.getid_profesion(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(this.clienteConstantesFunciones.getid_tipo_genero(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(this.clienteConstantesFunciones.getid_estado_civil(),false,"Formulario");
			this.setActualEstadoLegalForeignKey(this.clienteConstantesFunciones.getid_estado_legal(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.clienteConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualRutaForeignKey(this.clienteConstantesFunciones.getid_ruta(),false,"Formulario");
			this.setActualVendedorForeignKey(this.clienteConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualCentroActividadForeignKey(this.clienteConstantesFunciones.getid_centro_actividad(),false,"Formulario");
			this.setActualTipoGarantiaEmpresaForeignKey(this.clienteConstantesFunciones.getid_tipo_garantia_empresa(),false,"Formulario");
			this.setActualCateTipoAfiliacionForeignKey(this.clienteConstantesFunciones.getid_cate_tipo_afiliacion(),false,"Formulario");
			this.setActualDiaForeignKey(this.clienteConstantesFunciones.getid_dia(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.clienteConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(this.clienteConstantesFunciones.getid_tipo_precio(),false,"Formulario");
			this.setActualTipoListaPrecioForeignKey(this.clienteConstantesFunciones.getid_tipo_lista_precio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyCliente()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroCliente()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyCliente()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameTipoIdentificacionsForeignKey("Todos");
			this.cargarCombosFrameGrupoClientesForeignKey("Todos");
			this.cargarCombosFrameTituloClientesForeignKey("Todos");
			this.cargarCombosFrameAreaCrsForeignKey("Todos");
			this.cargarCombosFrameEstadoClientesForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameRegionsForeignKey("Todos");
			this.cargarCombosFrameProvinciasForeignKey("Todos");
			this.cargarCombosFrameCiudadsForeignKey("Todos");
			this.cargarCombosFrameZonasForeignKey("Todos");
			this.cargarCombosFramePaisNacionalidadsForeignKey("Todos");
			this.cargarCombosFrameTipoCargoLabosForeignKey("Todos");
			this.cargarCombosFrameTipoNivelEdusForeignKey("Todos");
			this.cargarCombosFrameProfesionsForeignKey("Todos");
			this.cargarCombosFrameTipoGenerosForeignKey("Todos");
			this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
			this.cargarCombosFrameEstadoLegalsForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameRutasForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFrameCentroActividadsForeignKey("Todos");
			this.cargarCombosFrameTipoGarantiaEmpresasForeignKey("Todos");
			this.cargarCombosFrameCateTipoAfiliacionsForeignKey("Todos");
			this.cargarCombosFrameDiasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTipoPreciosForeignKey("Todos");
			this.cargarCombosFrameTipoListaPreciosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoIdentificacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameGrupoClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTituloClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAreaCrsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameRegionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaisNacionalidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCargoLabosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoNivelEdusForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProfesionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoLegalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameRutasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroActividadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGarantiaEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCateTipoAfiliacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameDiasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoListaPreciosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyCliente()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente!=null && this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	















	public void recargarFormClientePais(JComboBox<?> jComboBoxGenericoPais,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormClienteid_region(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
		this.recargarFormClienteid_provincia(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
		this.recargarFormClienteid_ciudad(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
	}










































	
	



	public void recargarFormClienteid_region(JComboBox<?> jComboBoxGenericoRegion,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.cliente,jComboBoxGenericoRegion);
			}

			if(this.cliente.getid_pais()!=null && this.cliente.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.cliente.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualRegionForeignKey(this.cliente.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosRegionsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameRegionsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormClienteid_provincia(JComboBox<?> jComboBoxGenericoProvincia,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.cliente,jComboBoxGenericoProvincia);
			}

			if(this.cliente.getid_pais()!=null && this.cliente.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.cliente.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProvinciaForeignKey(this.cliente.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosProvinciasForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormClienteid_ciudad(JComboBox<?> jComboBoxGenericoCiudad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.cliente,jComboBoxGenericoCiudad);
			}

			if(this.cliente.getid_pais()!=null && this.cliente.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.cliente.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualCiudadForeignKey(this.cliente.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosCiudadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public ClienteBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ClienteBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ClienteBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.clienteSessionBean=new ClienteSessionBean(); 
		this.clienteConstantesFunciones=new ClienteConstantesFunciones(); 
		this.clienteBean=new Cliente();//(this.clienteConstantesFunciones); 		
		this.clienteReturnGeneral=new ClienteParameterReturnGeneral(); 
		
		this.clienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.clienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessCliente(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.clienteConstantesFunciones=new ClienteConstantesFunciones(); 
			this.clienteBean=new Cliente();//this.clienteConstantesFunciones); 			
			this.clienteReturnGeneral=new ClienteParameterReturnGeneral(); 
		
			ClienteBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Cliente Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.cliente=new Cliente();
			this.clientes = new ArrayList<Cliente>();
			this.clientesAux = new ArrayList<Cliente>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic=new ClienteLogic();
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			//this.clienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.clienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormCliente);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoCliente);	
					}
					
					if(this.jInternalFrameImportacionCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionCliente);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByCliente);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormCliente!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormCliente);
				this.jInternalFrameDetalleFormCliente.setVisible(false);
				this.jInternalFrameDetalleFormCliente.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoCliente);
					this.jInternalFrameReporteDinamicoCliente.setVisible(false);
					this.jInternalFrameReporteDinamicoCliente.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionCliente);
					this.jInternalFrameImportacionCliente.setVisible(false);
					this.jInternalFrameImportacionCliente.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByCliente);
					this.jInternalFrameOrderByCliente.setVisible(false);
					this.jInternalFrameOrderByCliente.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idClienteActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ClienteConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.clienteReturnGeneral=new ClienteParameterReturnGeneral();
			
			this.clienteParameterGeneral=new ClienteParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.clienteLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.clienteSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(InformacionLaboralConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(TransportistaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(NovedadConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PoliticasClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ReferenciaPersonalConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(BalanceGeneralClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PoliticaClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(VehiculoClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ResponsableConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(InformacionFinancieraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ConsignatarioConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ClienteImagenConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(GarantiaClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(InformacionEconomicaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ReferenciaComercialConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(BienConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProveedorProductoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ServicioClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ContactoClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DatoConstitucionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ClienteCoaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(HobbyClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(CargaFamiliarConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EMailConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ConyugeConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(CuentaPorCobrarConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FirmaClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RepresentanteLegalConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(TelefonoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(NegocioClienteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ReferenciaBancariaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(MontoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ClienteArchivoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ActividadEconomicaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DireccionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ChequePostFechadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(SubClienteConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.clienteSessionBean.getEsGuardarRelacionado(),this.clienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.clienteSessionBean.getEsGuardarRelacionado(),this.clienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoCliente=false;
			this.isVisibilidadCeldaDuplicarCliente=true;
			this.isVisibilidadCeldaCopiarCliente=true;
			this.isVisibilidadCeldaVerFormCliente=true;
			this.isVisibilidadCeldaOrdenCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
			this.isVisibilidadCeldaModificarCliente=false;
			this.isVisibilidadCeldaActualizarCliente=false;
			this.isVisibilidadCeldaEliminarCliente=false;
			this.isVisibilidadCeldaCancelarCliente=false;
			this.isVisibilidadCeldaGuardarCliente=false;
			this.isVisibilidadCeldaGuardarCambiosCliente=false;
			
			
			this.isVisibilidadBusquedaPorIdentificacion=true;
			this.isVisibilidadBusquedaPorNombreComercial=true;
			this.isVisibilidadBusquedaPorNombreCompleto=true;
			this.isVisibilidadFK_IdAreaCr=true;
			this.isVisibilidadFK_IdCateTipoAfiliacion=true;
			this.isVisibilidadFK_IdCentroActividad=true;
			this.isVisibilidadFK_IdCiudad=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdDia=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoCivil=true;
			this.isVisibilidadFK_IdEstadoCliente=true;
			this.isVisibilidadFK_IdEstadoLegal=true;
			this.isVisibilidadFK_IdGrupoCliente=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdPaisNacionalad=true;
			this.isVisibilidadFK_IdProfesion=true;
			this.isVisibilidadFK_IdProvincia=true;
			this.isVisibilidadFK_IdRegion=true;
			this.isVisibilidadFK_IdRuta=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCargoLabo=true;
			this.isVisibilidadFK_IdTipoGarantiaEmpresa=true;
			this.isVisibilidadFK_IdTipoGenero=true;
			this.isVisibilidadFK_IdTipoIdentificacion=true;
			this.isVisibilidadFK_IdTipoListaPrecio=true;
			this.isVisibilidadFK_IdTipoNivelEdu=true;
			this.isVisibilidadFK_IdTipoPrecio=true;
			this.isVisibilidadFK_IdTituloCliente=true;
			this.isVisibilidadFK_IdVendedor=true;
			this.isVisibilidadFK_IdZona=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosCliente();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioCliente(false);
			
			this.setPermisosUsuarioCliente();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.clienteSessionBean.getEsGuardarRelacionado() 
				|| (this.clienteSessionBean.getEsGuardarRelacionado() && this.clienteSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioClienteClasesRelacionadas();
			}
			
			if(this.clienteSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioClienteClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosCliente();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualCliente();
			}
			
			if(!this.isPermisoBusquedaCliente) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasCliente.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.clienteSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioCliente,this.isPermisoPaginacionMedioCliente,this.isPermisoPaginacionTodoCliente);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ClienteConstantesFunciones.getTiposSeleccionarCliente());
				
				this.tiposColumnasSelect=ClienteConstantesFunciones.getTiposSeleccionarCliente(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectCliente();				
				//this.tiposRelacionesSelect=ClienteConstantesFunciones.getTiposRelacionesCliente(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioCliente();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioCliente(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioCliente(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesCliente() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.contactoclienteLogic=new ContactoClienteLogic();
			this.bienLogic=new BienLogic();
			this.cargafamiliarLogic=new CargaFamiliarLogic();
			this.chequepostfechadoLogic=new ChequePostFechadoLogic();
			this.emailLogic=new EMailLogic();
			this.referenciapersonalLogic=new ReferenciaPersonalLogic();
			this.garantiaclienteLogic=new GarantiaClienteLogic();
			this.clientearchivoLogic=new ClienteArchivoLogic();
			this.politicasclienteLogic=new PoliticasClienteLogic();
			this.firmaclienteLogic=new FirmaClienteLogic();
			this.referenciacomercialLogic=new ReferenciaComercialLogic();
			this.novedadLogic=new NovedadLogic();
			this.informacionlaboralLogic=new InformacionLaboralLogic();
			this.informacionfinancieraLogic=new InformacionFinancieraLogic();
			this.telefonoLogic=new TelefonoLogic();
			this.cuentaporcobrarLogic=new CuentaPorCobrarLogic();
			this.responsableLogic=new ResponsableLogic();
			this.transportistaLogic=new TransportistaLogic();
			this.politicaclienteLogic=new PoliticaClienteLogic();
			this.conyugeLogic=new ConyugeLogic();
			this.referenciabancariaLogic=new ReferenciaBancariaLogic();
			this.balancegeneralclienteLogic=new BalanceGeneralClienteLogic();
			this.datoconstitucionLogic=new DatoConstitucionLogic();
			this.actividadeconomicaLogic=new ActividadEconomicaLogic();
			this.proveedorproductoLogic=new ProveedorProductoLogic();
			this.consignatarioLogic=new ConsignatarioLogic();
			this.hobbyclienteLogic=new HobbyClienteLogic();
			this.representantelegalLogic=new RepresentanteLegalLogic();
			this.clientecoaLogic=new ClienteCoaLogic();
			this.direccionLogic=new DireccionLogic();
			this.clienteimagenLogic=new ClienteImagenLogic();
			this.subclienteLogic=new SubClienteLogic();
			this.servicioclienteLogic=new ServicioClienteLogic();
			this.informacioneconomicaLogic=new InformacionEconomicaLogic();
			this.vehiculoclienteLogic=new VehiculoClienteLogic();
			this.negocioclienteLogic=new NegocioClienteLogic();
			this.montoLogic=new MontoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.tipoidentificacionLogic=new TipoIdentificacionLogic();
			this.grupoclienteLogic=new GrupoClienteLogic();
			this.tituloclienteLogic=new TituloClienteLogic();
			this.areacrLogic=new AreaCrLogic();
			this.estadoclienteLogic=new EstadoClienteLogic();
			this.paisLogic=new PaisLogic();
			this.regionLogic=new RegionLogic();
			this.provinciaLogic=new ProvinciaLogic();
			this.ciudadLogic=new CiudadLogic();
			this.zonaLogic=new ZonaLogic();
			this.paisnacionalidadLogic=new PaisLogic();
			this.tipocargolaboLogic=new TipoCargoLaboLogic();
			this.tiponiveleduLogic=new TipoNivelEduLogic();
			this.profesionLogic=new ProfesionLogic();
			this.tipogeneroLogic=new TipoGeneroLogic();
			this.estadocivilLogic=new EstadoCivilLogic();
			this.estadolegalLogic=new EstadoLegalLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.rutaLogic=new RutaLogic();
			this.vendedorLogic=new VendedorLogic();
			this.centroactividadLogic=new CentroActividadLogic();
			this.tipogarantiaempresaLogic=new TipoGarantiaEmpresaLogic();
			this.catetipoafiliacionLogic=new CateTipoAfiliacionLogic();
			this.diaLogic=new DiaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.tipoprecioLogic=new TipoPrecioLogic();
			this.tipolistaprecioLogic=new TipoListaPrecioLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				clienteImplementable= (ClienteImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				clienteImplementableHome= (ClienteImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.clientes= new ArrayList<Cliente>();
			this.clientesEliminados= new ArrayList<Cliente>();
						
			this.isEsNuevoCliente=false;
			this.esParaAccionDesdeFormularioCliente=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>() ;
			this.grupoclientesForeignKey=new ArrayList<GrupoCliente>() ;
			this.tituloclientesForeignKey=new ArrayList<TituloCliente>() ;
			this.areacrsForeignKey=new ArrayList<AreaCr>() ;
			this.estadoclientesForeignKey=new ArrayList<EstadoCliente>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.regionsForeignKey=new ArrayList<Region>() ;
			this.provinciasForeignKey=new ArrayList<Provincia>() ;
			this.ciudadsForeignKey=new ArrayList<Ciudad>() ;
			this.zonasForeignKey=new ArrayList<Zona>() ;
			this.paisnacionalidadsForeignKey=new ArrayList<Pais>() ;
			this.tipocargolabosForeignKey=new ArrayList<TipoCargoLabo>() ;
			this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>() ;
			this.profesionsForeignKey=new ArrayList<Profesion>() ;
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>() ;
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>() ;
			this.estadolegalsForeignKey=new ArrayList<EstadoLegal>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.rutasForeignKey=new ArrayList<Ruta>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.centroactividadsForeignKey=new ArrayList<CentroActividad>() ;
			this.tipogarantiaempresasForeignKey=new ArrayList<TipoGarantiaEmpresa>() ;
			this.catetipoafiliacionsForeignKey=new ArrayList<CateTipoAfiliacion>() ;
			this.diasForeignKey=new ArrayList<Dia>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>() ;
			this.tipolistapreciosForeignKey=new ArrayList<TipoListaPrecio>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyCliente(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroCliente();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ClienteBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ClienteConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingCliente(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormCliente!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioCliente();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioCliente();
			}
			
			ClienteBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasCliente.getTabCount(); i++) {
					this.jTabbedPaneBusquedasCliente.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasCliente.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessCliente(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Cliente: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectCliente() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(ContactoClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ContactoClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(BienConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(BienConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(CargaFamiliarConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CargaFamiliarConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ChequePostFechadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ChequePostFechadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EMailConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EMailConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ReferenciaPersonalConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ReferenciaPersonalConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(GarantiaClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(GarantiaClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ClienteArchivoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ClienteArchivoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FirmaClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FirmaClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ReferenciaComercialConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ReferenciaComercialConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(NovedadConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(NovedadConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(InformacionLaboralConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(InformacionLaboralConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(InformacionFinancieraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(InformacionFinancieraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(TelefonoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(TelefonoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(CuentaPorCobrarConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CuentaPorCobrarConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ResponsableConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ResponsableConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(TransportistaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(TransportistaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PoliticaClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PoliticaClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ConyugeConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ConyugeConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ReferenciaBancariaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ReferenciaBancariaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(BalanceGeneralClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(BalanceGeneralClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DatoConstitucionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DatoConstitucionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ActividadEconomicaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ActividadEconomicaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ConsignatarioConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ConsignatarioConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(HobbyClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(HobbyClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RepresentanteLegalConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RepresentanteLegalConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ClienteCoaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ClienteCoaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DireccionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DireccionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ClienteImagenConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ClienteImagenConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(SubClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(SubClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(InformacionEconomicaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(InformacionEconomicaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(VehiculoClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(VehiculoClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(NegocioClienteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(NegocioClienteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(MontoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(MontoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesCliente")) {
				iIndex=this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosCliente.getSelectedRow();	
				
				

				if(sTitle.equals("Actividad Economicas")) {
					if(!ActividadEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaActividadEconomica(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Balance General Clientes")) {
					if(!BalanceGeneralClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaBalanceGeneralCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Bienes")) {
					if(!BienJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaBien(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Carga Familiares")) {
					if(!CargaFamiliarJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaCargaFamiliar(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Cheque Post Fechados")) {
					if(!ChequePostFechadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaChequePostFechado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Cliente Archivos")) {
					if(!ClienteArchivoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaClienteArchivo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Coas")) {
					if(!ClienteCoaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaClienteCoa(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Cliente Imagenes")) {
					if(!ClienteImagenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaClienteImagen(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Consignatarios")) {
					if(!ConsignatarioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaConsignatario(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Contacto Clientes")) {
					if(!ContactoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaContactoCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Conyuges")) {
					if(!ConyugeJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaConyuge(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Cuenta Por Cobrares")) {
					if(!CuentaPorCobrarJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaCuentaPorCobrar(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Dato Constituciones")) {
					if(!DatoConstitucionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaDatoConstitucion(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Direcciones")) {
					if(!DireccionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaDireccion(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("E Mailes")) {
					if(!EMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaEMail(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Firma Clientes")) {
					if(!FirmaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaFirmaCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Garantia Clientes")) {
					if(!GarantiaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaGarantiaCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Hobby Clientes")) {
					if(!HobbyClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaHobbyCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Informacion Economicas")) {
					if(!InformacionEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaInformacionEconomica(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Informacion Financieras")) {
					if(!InformacionFinancieraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaInformacionFinanciera(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Informacion Laborales")) {
					if(!InformacionLaboralJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaInformacionLaboral(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Monto De Facturacions")) {
					if(!MontoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaMonto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Negocio Clientes")) {
					if(!NegocioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaNegocioCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Novedades")) {
					if(!NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaNovedad(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Politica Clientes")) {
					if(!PoliticaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaPoliticaCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Politicas Clientes")) {
					if(!PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaPoliticasCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Producto Proveedors")) {
					if(!ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaProveedorProducto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Referencia Bancarias")) {
					if(!ReferenciaBancariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaReferenciaBancaria(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Referencia Comerciales")) {
					if(!ReferenciaComercialJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaReferenciaComercial(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Referencia Personales")) {
					if(!ReferenciaPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaReferenciaPersonal(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Representante Legales")) {
					if(!RepresentanteLegalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaRepresentanteLegal(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Responsables")) {
					if(!ResponsableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaResponsable(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Servicio Clientes")) {
					if(!ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaServicioCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Sub Clientes")) {
					if(!SubClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaSubCliente(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Telefonos")) {
					if(!TelefonoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaTelefono(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Transportistas")) {
					if(!TransportistaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaTransportista(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Vehiculo Clientes")) {
					if(!VehiculoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessCliente();

						this.cargarParteTabPanelRelacionadaVehiculoCliente(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessCliente();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaActividadEconomica(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameActividadEconomica(false,true,iIndex);
		this.jButtonActividadEconomicaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaActividadEconomica();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaBalanceGeneralCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameBalanceGeneralCliente(false,true,iIndex);
		this.jButtonBalanceGeneralClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaBalanceGeneralCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaBien(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameBien(false,true,iIndex);
		this.jButtonBienActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaBien();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaCargaFamiliar(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameCargaFamiliar(false,true,iIndex);
		this.jButtonCargaFamiliarActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCargaFamiliar();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaChequePostFechado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameChequePostFechado(false,true,iIndex);
		this.jButtonChequePostFechadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaChequePostFechado();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaClienteArchivo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameClienteArchivo(false,true,iIndex);
		this.jButtonClienteArchivoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaClienteArchivo();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaClienteCoa(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameClienteCoa(false,true,iIndex);
		this.jButtonClienteCoaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaClienteCoa();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaClienteImagen(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameClienteImagen(false,true,iIndex);
		this.jButtonClienteImagenActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaClienteImagen();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaConsignatario(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameConsignatario(false,true,iIndex);
		this.jButtonConsignatarioActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaConsignatario();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaContactoCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameContactoCliente(false,true,iIndex);
		this.jButtonContactoClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaContactoCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaConyuge(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameConyuge(false,true,iIndex);
		this.jButtonConyugeActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaConyuge();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaCuentaPorCobrar(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameCuentaPorCobrar(false,true,iIndex);
		this.jButtonCuentaPorCobrarActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCuentaPorCobrar();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaDatoConstitucion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameDatoConstitucion(false,true,iIndex);
		this.jButtonDatoConstitucionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDatoConstitucion();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaDireccion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameDireccion(false,true,iIndex);
		this.jButtonDireccionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDireccion();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEMail(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameEMail(false,true,iIndex);
		this.jButtonEMailActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEMail();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFirmaCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameFirmaCliente(false,true,iIndex);
		this.jButtonFirmaClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFirmaCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaGarantiaCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameGarantiaCliente(false,true,iIndex);
		this.jButtonGarantiaClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaGarantiaCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaHobbyCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameHobbyCliente(false,true,iIndex);
		this.jButtonHobbyClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaHobbyCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaInformacionEconomica(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameInformacionEconomica(false,true,iIndex);
		this.jButtonInformacionEconomicaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaInformacionEconomica();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaInformacionFinanciera(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameInformacionFinanciera(false,true,iIndex);
		this.jButtonInformacionFinancieraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaInformacionFinanciera();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaInformacionLaboral(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameInformacionLaboral(false,true,iIndex);
		this.jButtonInformacionLaboralActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaInformacionLaboral();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaMonto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameMonto(false,true,iIndex);
		this.jButtonMontoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaMonto();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaNegocioCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameNegocioCliente(false,true,iIndex);
		this.jButtonNegocioClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaNegocioCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaNovedad(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameNovedad(false,true,iIndex);
		this.jButtonNovedadActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaNovedad();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPoliticaCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFramePoliticaCliente(false,true,iIndex);
		this.jButtonPoliticaClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPoliticaCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPoliticasCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFramePoliticasCliente(false,true,iIndex);
		this.jButtonPoliticasClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPoliticasCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProveedorProducto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameProveedorProducto(false,true,iIndex);
		this.jButtonProveedorProductoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProveedorProducto();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaReferenciaBancaria(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameReferenciaBancaria(false,true,iIndex);
		this.jButtonReferenciaBancariaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaReferenciaBancaria();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaReferenciaComercial(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameReferenciaComercial(false,true,iIndex);
		this.jButtonReferenciaComercialActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaReferenciaComercial();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaReferenciaPersonal(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameReferenciaPersonal(false,true,iIndex);
		this.jButtonReferenciaPersonalActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaReferenciaPersonal();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRepresentanteLegal(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameRepresentanteLegal(false,true,iIndex);
		this.jButtonRepresentanteLegalActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRepresentanteLegal();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaResponsable(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameResponsable(false,true,iIndex);
		this.jButtonResponsableActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaResponsable();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaServicioCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameServicioCliente(false,true,iIndex);
		this.jButtonServicioClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaServicioCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaSubCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameSubCliente(false,true,iIndex);
		this.jButtonSubClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaSubCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaTelefono(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameTelefono(false,true,iIndex);
		this.jButtonTelefonoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaTelefono();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaTransportista(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameTransportista(false,true,iIndex);
		this.jButtonTransportistaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaTransportista();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaVehiculoCliente(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormCliente.cargarSessionConBeanSwingJInternalFrameVehiculoCliente(false,true,iIndex);
		this.jButtonVehiculoClienteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaVehiculoCliente();

		//this.jTabbedPaneRelacionesCliente.updateUI();
		//this.jTabbedPaneRelacionesCliente.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesCliente.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("ContactoCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonContactoClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Bien")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonBienActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("CargaFamiliar")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonCargaFamiliarActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ChequePostFechado")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonChequePostFechadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EMail")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonEMailActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ReferenciaPersonal")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonReferenciaPersonalActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("GarantiaCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonGarantiaClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ClienteArchivo")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonClienteArchivoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PoliticasCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonPoliticasClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FirmaCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonFirmaClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ReferenciaComercial")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonReferenciaComercialActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Novedad")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonNovedadActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("InformacionLaboral")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonInformacionLaboralActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("InformacionFinanciera")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonInformacionFinancieraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Telefono")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonTelefonoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("CuentaPorCobrar")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonCuentaPorCobrarActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Responsable")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonResponsableActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Transportista")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonTransportistaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PoliticaCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonPoliticaClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Conyuge")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonConyugeActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ReferenciaBancaria")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonReferenciaBancariaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("BalanceGeneralCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonBalanceGeneralClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DatoConstitucion")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonDatoConstitucionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ActividadEconomica")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonActividadEconomicaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProveedorProducto")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonProveedorProductoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Consignatario")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonConsignatarioActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("HobbyCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonHobbyClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RepresentanteLegal")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonRepresentanteLegalActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ClienteCoa")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonClienteCoaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Direccion")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonDireccionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ClienteImagen")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonClienteImagenActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("SubCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonSubClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ServicioCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonServicioClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("InformacionEconomica")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonInformacionEconomicaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("VehiculoCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonVehiculoClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("NegocioCliente")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonNegocioClienteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Monto")) {
				int row=this.jTableDatosCliente.getSelectedRow();
				jButtonMontoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Contacto Cliente")) {

					if(this.isTienePermisosContactoCliente && this.clienteConstantesFunciones.mostrarContactoClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Contacto Clientes"+"("+ContactoClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Contacto Clientes");

						if(clienteConstantesFunciones.resaltarContactoClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarContactoClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarContactoClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ContactoCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Bien")) {

					if(this.isTienePermisosBien && this.clienteConstantesFunciones.mostrarBienCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Bienes"+"("+BienConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Bienes");

						if(clienteConstantesFunciones.resaltarBienCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarBienCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarBienCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Bien"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Carga Familiar")) {

					if(this.isTienePermisosCargaFamiliar && this.clienteConstantesFunciones.mostrarCargaFamiliarCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Carga Familiares"+"("+CargaFamiliarConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Carga Familiares");

						if(clienteConstantesFunciones.resaltarCargaFamiliarCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarCargaFamiliarCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarCargaFamiliarCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"CargaFamiliar"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Cheque Post Fechado")) {

					if(this.isTienePermisosChequePostFechado && this.clienteConstantesFunciones.mostrarChequePostFechadoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Cheque Post Fechados"+"("+ChequePostFechadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Cheque Post Fechados");

						if(clienteConstantesFunciones.resaltarChequePostFechadoCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarChequePostFechadoCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarChequePostFechadoCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ChequePostFechado"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("E Mail")) {

					if(this.isTienePermisosEMail && this.clienteConstantesFunciones.mostrarEMailCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="E Mailes"+"("+EMailConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("E Mailes");

						if(clienteConstantesFunciones.resaltarEMailCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarEMailCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarEMailCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EMail"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Referencia Personal")) {

					if(this.isTienePermisosReferenciaPersonal && this.clienteConstantesFunciones.mostrarReferenciaPersonalCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Referencia Personales"+"("+ReferenciaPersonalConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Referencia Personales");

						if(clienteConstantesFunciones.resaltarReferenciaPersonalCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarReferenciaPersonalCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarReferenciaPersonalCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ReferenciaPersonal"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Garantia Cliente")) {

					if(this.isTienePermisosGarantiaCliente && this.clienteConstantesFunciones.mostrarGarantiaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Garantia Clientes"+"("+GarantiaClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Garantia Clientes");

						if(clienteConstantesFunciones.resaltarGarantiaClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarGarantiaClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarGarantiaClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"GarantiaCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Cliente Archivo")) {

					if(this.isTienePermisosClienteArchivo && this.clienteConstantesFunciones.mostrarClienteArchivoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Cliente Archivos"+"("+ClienteArchivoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Cliente Archivos");

						if(clienteConstantesFunciones.resaltarClienteArchivoCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarClienteArchivoCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarClienteArchivoCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ClienteArchivo"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Politicas Cliente")) {

					if(this.isTienePermisosPoliticasCliente && this.clienteConstantesFunciones.mostrarPoliticasClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Politicas Clientes"+"("+PoliticasClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Politicas Clientes");

						if(clienteConstantesFunciones.resaltarPoliticasClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarPoliticasClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarPoliticasClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PoliticasCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Firma Cliente")) {

					if(this.isTienePermisosFirmaCliente && this.clienteConstantesFunciones.mostrarFirmaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Firma Clientes"+"("+FirmaClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Firma Clientes");

						if(clienteConstantesFunciones.resaltarFirmaClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarFirmaClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarFirmaClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FirmaCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Referencia Comercial")) {

					if(this.isTienePermisosReferenciaComercial && this.clienteConstantesFunciones.mostrarReferenciaComercialCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Referencia Comerciales"+"("+ReferenciaComercialConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Referencia Comerciales");

						if(clienteConstantesFunciones.resaltarReferenciaComercialCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarReferenciaComercialCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarReferenciaComercialCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ReferenciaComercial"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Novedad")) {

					if(this.isTienePermisosNovedad && this.clienteConstantesFunciones.mostrarNovedadCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Novedades"+"("+NovedadConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Novedades");

						if(clienteConstantesFunciones.resaltarNovedadCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarNovedadCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarNovedadCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Novedad"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Informacion Laboral")) {

					if(this.isTienePermisosInformacionLaboral && this.clienteConstantesFunciones.mostrarInformacionLaboralCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Informacion Laborales"+"("+InformacionLaboralConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Informacion Laborales");

						if(clienteConstantesFunciones.resaltarInformacionLaboralCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarInformacionLaboralCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarInformacionLaboralCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"InformacionLaboral"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Informacion Financiera")) {

					if(this.isTienePermisosInformacionFinanciera && this.clienteConstantesFunciones.mostrarInformacionFinancieraCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Informacion Financieras"+"("+InformacionFinancieraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Informacion Financieras");

						if(clienteConstantesFunciones.resaltarInformacionFinancieraCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarInformacionFinancieraCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarInformacionFinancieraCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"InformacionFinanciera"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Telefono")) {

					if(this.isTienePermisosTelefono && this.clienteConstantesFunciones.mostrarTelefonoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Telefonos"+"("+TelefonoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Telefonos");

						if(clienteConstantesFunciones.resaltarTelefonoCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarTelefonoCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarTelefonoCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Telefono"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Cuenta Por Cobrar")) {

					if(this.isTienePermisosCuentaPorCobrar && this.clienteConstantesFunciones.mostrarCuentaPorCobrarCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Cuenta Por Cobrares"+"("+CuentaPorCobrarConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Cuenta Por Cobrares");

						if(clienteConstantesFunciones.resaltarCuentaPorCobrarCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarCuentaPorCobrarCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarCuentaPorCobrarCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"CuentaPorCobrar"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Responsable")) {

					if(this.isTienePermisosResponsable && this.clienteConstantesFunciones.mostrarResponsableCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Responsables"+"("+ResponsableConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Responsables");

						if(clienteConstantesFunciones.resaltarResponsableCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarResponsableCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarResponsableCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Responsable"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Transportista")) {

					if(this.isTienePermisosTransportista && this.clienteConstantesFunciones.mostrarTransportistaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Transportistas"+"("+TransportistaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Transportistas");

						if(clienteConstantesFunciones.resaltarTransportistaCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarTransportistaCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarTransportistaCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Transportista"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Politica Cliente")) {

					if(this.isTienePermisosPoliticaCliente && this.clienteConstantesFunciones.mostrarPoliticaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Politica Clientes"+"("+PoliticaClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Politica Clientes");

						if(clienteConstantesFunciones.resaltarPoliticaClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarPoliticaClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarPoliticaClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PoliticaCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Conyuge")) {

					if(this.isTienePermisosConyuge && this.clienteConstantesFunciones.mostrarConyugeCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Conyuges"+"("+ConyugeConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Conyuges");

						if(clienteConstantesFunciones.resaltarConyugeCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarConyugeCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarConyugeCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Conyuge"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Referencia Bancaria")) {

					if(this.isTienePermisosReferenciaBancaria && this.clienteConstantesFunciones.mostrarReferenciaBancariaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Referencia Bancarias"+"("+ReferenciaBancariaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Referencia Bancarias");

						if(clienteConstantesFunciones.resaltarReferenciaBancariaCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarReferenciaBancariaCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarReferenciaBancariaCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ReferenciaBancaria"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Balance General Cliente")) {

					if(this.isTienePermisosBalanceGeneralCliente && this.clienteConstantesFunciones.mostrarBalanceGeneralClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Balance General Clientes"+"("+BalanceGeneralClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Balance General Clientes");

						if(clienteConstantesFunciones.resaltarBalanceGeneralClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarBalanceGeneralClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarBalanceGeneralClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"BalanceGeneralCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Dato Constitucion")) {

					if(this.isTienePermisosDatoConstitucion && this.clienteConstantesFunciones.mostrarDatoConstitucionCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Dato Constituciones"+"("+DatoConstitucionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Dato Constituciones");

						if(clienteConstantesFunciones.resaltarDatoConstitucionCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarDatoConstitucionCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarDatoConstitucionCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DatoConstitucion"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Actividad Economica")) {

					if(this.isTienePermisosActividadEconomica && this.clienteConstantesFunciones.mostrarActividadEconomicaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Actividad Economicas"+"("+ActividadEconomicaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Actividad Economicas");

						if(clienteConstantesFunciones.resaltarActividadEconomicaCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarActividadEconomicaCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarActividadEconomicaCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ActividadEconomica"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Producto Proveedor")) {

					if(this.isTienePermisosProveedorProducto && this.clienteConstantesFunciones.mostrarProveedorProductoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Producto Proveedors"+"("+ProveedorProductoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Producto Proveedors");

						if(clienteConstantesFunciones.resaltarProveedorProductoCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarProveedorProductoCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarProveedorProductoCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProveedorProducto"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Consignatario")) {

					if(this.isTienePermisosConsignatario && this.clienteConstantesFunciones.mostrarConsignatarioCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Consignatarios"+"("+ConsignatarioConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Consignatarios");

						if(clienteConstantesFunciones.resaltarConsignatarioCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarConsignatarioCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarConsignatarioCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Consignatario"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Hobby Cliente")) {

					if(this.isTienePermisosHobbyCliente && this.clienteConstantesFunciones.mostrarHobbyClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Hobby Clientes"+"("+HobbyClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Hobby Clientes");

						if(clienteConstantesFunciones.resaltarHobbyClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarHobbyClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarHobbyClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"HobbyCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Representante Legal")) {

					if(this.isTienePermisosRepresentanteLegal && this.clienteConstantesFunciones.mostrarRepresentanteLegalCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Representante Legales"+"("+RepresentanteLegalConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Representante Legales");

						if(clienteConstantesFunciones.resaltarRepresentanteLegalCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarRepresentanteLegalCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarRepresentanteLegalCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RepresentanteLegal"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Coa")) {

					if(this.isTienePermisosClienteCoa && this.clienteConstantesFunciones.mostrarClienteCoaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Coas"+"("+ClienteCoaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Coas");

						if(clienteConstantesFunciones.resaltarClienteCoaCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarClienteCoaCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarClienteCoaCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ClienteCoa"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Direccion")) {

					if(this.isTienePermisosDireccion && this.clienteConstantesFunciones.mostrarDireccionCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Direcciones"+"("+DireccionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Direcciones");

						if(clienteConstantesFunciones.resaltarDireccionCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarDireccionCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarDireccionCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Direccion"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Cliente Imagen")) {

					if(this.isTienePermisosClienteImagen && this.clienteConstantesFunciones.mostrarClienteImagenCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Cliente Imagenes"+"("+ClienteImagenConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Cliente Imagenes");

						if(clienteConstantesFunciones.resaltarClienteImagenCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarClienteImagenCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarClienteImagenCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ClienteImagen"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Sub Cliente")) {

					if(this.isTienePermisosSubCliente && this.clienteConstantesFunciones.mostrarSubClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Sub Clientes"+"("+SubClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Sub Clientes");

						if(clienteConstantesFunciones.resaltarSubClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarSubClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarSubClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"SubCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Servicio Cliente")) {

					if(this.isTienePermisosServicioCliente && this.clienteConstantesFunciones.mostrarServicioClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Servicio Clientes"+"("+ServicioClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Servicio Clientes");

						if(clienteConstantesFunciones.resaltarServicioClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarServicioClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarServicioClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ServicioCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Informacion Economica")) {

					if(this.isTienePermisosInformacionEconomica && this.clienteConstantesFunciones.mostrarInformacionEconomicaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Informacion Economicas"+"("+InformacionEconomicaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Informacion Economicas");

						if(clienteConstantesFunciones.resaltarInformacionEconomicaCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarInformacionEconomicaCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarInformacionEconomicaCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"InformacionEconomica"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Vehiculo Cliente")) {

					if(this.isTienePermisosVehiculoCliente && this.clienteConstantesFunciones.mostrarVehiculoClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Vehiculo Clientes"+"("+VehiculoClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Vehiculo Clientes");

						if(clienteConstantesFunciones.resaltarVehiculoClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarVehiculoClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarVehiculoClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"VehiculoCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Negocio Cliente")) {

					if(this.isTienePermisosNegocioCliente && this.clienteConstantesFunciones.mostrarNegocioClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Negocio Clientes"+"("+NegocioClienteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Negocio Clientes");

						if(clienteConstantesFunciones.resaltarNegocioClienteCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarNegocioClienteCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarNegocioClienteCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"NegocioCliente"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Monto De Facturacion")) {

					if(this.isTienePermisosMonto && this.clienteConstantesFunciones.mostrarMontoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Monto De Facturacions"+"("+MontoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Monto De Facturacions");

						if(clienteConstantesFunciones.resaltarMontoCliente!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(clienteConstantesFunciones.resaltarMontoCliente);
						}

						jmenuItem.setEnabled(this.clienteConstantesFunciones.activarMontoCliente);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Monto"));

						

						this.jInternalFrameDetalleFormCliente.jmenuDetalleCliente.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyCliente(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyClienteListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyCliente();
		
		this.cargarCombosFrameForeignKeyCliente();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyCliente();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyCliente();
		}
	}
	
	

	public void cargarCombosForeignKeyTipoIdentificacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoIdentificacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoIdentificacion();
				this.cargarCombosFrameTipoIdentificacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoIdentificacion(this.tipoidentificacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyGrupoCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyGrupoClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyGrupoCliente();
				this.cargarCombosFrameGrupoClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaGrupoCliente(this.grupoclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTituloCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTituloClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTituloCliente();
				this.cargarCombosFrameTituloClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTituloCliente(this.tituloclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAreaCr(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAreaCrListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAreaCr();
				this.cargarCombosFrameAreaCrsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAreaCr(this.areacrsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoCliente();
				this.cargarCombosFrameEstadoClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoCliente(this.estadoclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRegion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyRegionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyRegion();
				this.cargarCombosFrameRegionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaRegion(this.regionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProvincia(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProvinciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProvincia();
				this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaProvincia(this.provinciasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCiudad(this.ciudadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZona(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaZona(this.zonasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisNacionalidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisNacionalidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPaisNacionalidad();
				this.cargarCombosFramePaisNacionalidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaPaisNacionalidad(this.paisnacionalidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCargoLabo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCargoLaboListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCargoLabo();
				this.cargarCombosFrameTipoCargoLabosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoCargoLabo(this.tipocargolabosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoNivelEdu(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoNivelEduListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoNivelEdu();
				this.cargarCombosFrameTipoNivelEdusForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoNivelEdu(this.tiponiveledusForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProfesion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProfesionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProfesion();
				this.cargarCombosFrameProfesionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaProfesion(this.profesionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGenero(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoGenero(this.tipogenerosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivil(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoCivil(this.estadocivilsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoLegal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoLegalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoLegal();
				this.cargarCombosFrameEstadoLegalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoLegal(this.estadolegalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRuta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyRutaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyRuta();
				this.cargarCombosFrameRutasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaRuta(this.rutasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroActividad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroActividadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroActividad();
				this.cargarCombosFrameCentroActividadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCentroActividad(this.centroactividadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGarantiaEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGarantiaEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGarantiaEmpresa();
				this.cargarCombosFrameTipoGarantiaEmpresasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoGarantiaEmpresa(this.tipogarantiaempresasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCateTipoAfiliacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCateTipoAfiliacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCateTipoAfiliacion();
				this.cargarCombosFrameCateTipoAfiliacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCateTipoAfiliacion(this.catetipoafiliacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDia(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyDiaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyDia();
				this.cargarCombosFrameDiasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaDia(this.diasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoPrecio(this.tipopreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoListaPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoListaPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoListaPrecio();
				this.cargarCombosFrameTipoListaPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoListaPrecio(this.tipolistapreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.clienteSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			
			if(jTableDatosCliente.getRowCount()>=1) {
				jTableDatosCliente.removeRowSelectionInterval(0, jTableDatosCliente.getRowCount()-1);						
			}
			
			this.isEsNuevoCliente=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoCliente(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesCliente(true);			
			//this.cliente=new Cliente();
			//this.cliente.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesCliente(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCliente() ;
			
			if(ClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleCliente(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.cliente);	
			this.actualizarInformacion("INFO_PADRE",false,this.cliente);				
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			if(this.clienteSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Cliente: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosCliente.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosCliente.getSelectedRows().length;			
			}
			
			clientesSeleccionados=this.getClientesSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoCliente--;			
				//Cliente clienteAux= new Cliente();			
				//clienteAux.setId(this.iIdNuevoCliente);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Cliente clienteOrigen=new Cliente();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Cliente clienteOrigen : clientesSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosCliente.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							clienteOrigen =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteOrigen =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaCliente();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.cliente.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosCliente(clienteOrigen,this.cliente,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.clienteLogic.getClientes().add(this.clienteAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.clientes.add(this.clienteAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaCliente(false);
				
				this.jTableDatosCliente.setRowSelectionInterval(this.getIndiceNuevoCliente(), this.getIndiceNuevoCliente());
				
				int iLastRow =  this.jTableDatosCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaCliente(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();									
		
			Cliente clienteOrigen=new Cliente();
			Cliente clienteDestino=new Cliente();
				
			clientesSeleccionados=this.getClientesSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosCliente.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || clientesSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosCliente.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteOrigen =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						clienteOrigen =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteDestino =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						clienteDestino =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				clienteOrigen =clientesSeleccionados.get(0);
				clienteDestino =clientesSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosCliente(clienteOrigen,clienteDestino,true,false);
				
				clienteDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(clienteDestino,clienteLogic.getClientes());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteDestino,clientes);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaCliente(false);
				
				//this.jTableDatosCliente.setRowSelectionInterval(this.getIndiceNuevoCliente(), this.getIndiceNuevoCliente());
				
				int iLastRow =  this.jTableDatosCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaCliente(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormCliente.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesCliente.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasCliente.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesCliente.setVisible(!isVisible);
			this.jPanelPaginacionCliente.setVisible(!isVisible);
			this.jPanelAccionesCliente.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameCliente();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByCliente();
			
			this.abrirFrameOrderByCliente();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleCliente(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormCliente);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormCliente.isMaximum()) {
					this.jInternalFrameDetalleFormCliente.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormCliente.setSize(this.jInternalFrameDetalleFormCliente.iWidthFormulario,this.jInternalFrameDetalleFormCliente.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormCliente.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormCliente.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormCliente.isMaximum()) {
						this.jInternalFrameDetalleFormCliente.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),ClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),ClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),ClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(ActividadEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaActividadEconomica();
					}

					if(BalanceGeneralClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaBalanceGeneralCliente();
					}

					if(BienJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaBien();
					}

					if(CargaFamiliarJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCargaFamiliar();
					}

					if(ChequePostFechadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaChequePostFechado();
					}

					if(ClienteArchivoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaClienteArchivo();
					}

					if(ClienteCoaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaClienteCoa();
					}

					if(ClienteImagenJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaClienteImagen();
					}

					if(ConsignatarioJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaConsignatario();
					}

					if(ContactoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaContactoCliente();
					}

					if(ConyugeJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaConyuge();
					}

					if(CuentaPorCobrarJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCuentaPorCobrar();
					}

					if(DatoConstitucionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDatoConstitucion();
					}

					if(DireccionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDireccion();
					}

					if(EMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEMail();
					}

					if(FirmaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFirmaCliente();
					}

					if(GarantiaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaGarantiaCliente();
					}

					if(HobbyClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaHobbyCliente();
					}

					if(InformacionEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaInformacionEconomica();
					}

					if(InformacionFinancieraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaInformacionFinanciera();
					}

					if(InformacionLaboralJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaInformacionLaboral();
					}

					if(MontoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaMonto();
					}

					if(NegocioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaNegocioCliente();
					}

					if(NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaNovedad();
					}

					if(PoliticaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPoliticaCliente();
					}

					if(PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPoliticasCliente();
					}

					if(ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProveedorProducto();
					}

					if(ReferenciaBancariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaReferenciaBancaria();
					}

					if(ReferenciaComercialJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaReferenciaComercial();
					}

					if(ReferenciaPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaReferenciaPersonal();
					}

					if(RepresentanteLegalJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRepresentanteLegal();
					}

					if(ResponsableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaResponsable();
					}

					if(ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaServicioCliente();
					}

					if(SubClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaSubCliente();
					}

					if(TelefonoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaTelefono();
					}

					if(TransportistaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaTransportista();
					}

					if(VehiculoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaVehiculoCliente();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormCliente.setVisible(true);
	        this.jInternalFrameDetalleFormCliente.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByCliente==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByCliente,false,this);
				} else {
					this.jInternalFrameOrderByCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByCliente,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByCliente);
				this.jInternalFrameOrderByCliente.setVisible(false);
				this.jInternalFrameOrderByCliente.setSelected(false);
				
				this.jInternalFrameOrderByCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByCliente"));
				
				this.inicializarActualizarBindingTablaOrderByCliente();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionCliente==null) {
				
				this.jInternalFrameImportacionCliente=new ImportacionJInternalFrame(ClienteConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionCliente);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionCliente);
				this.jInternalFrameImportacionCliente.setVisible(false);
				this.jInternalFrameImportacionCliente.setSelected(false);


				this.jInternalFrameImportacionCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionCliente"));
				this.jInternalFrameImportacionCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionCliente"));
				this.jInternalFrameImportacionCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionCliente"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoCliente() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoCliente==null) {
				this.jInternalFrameReporteDinamicoCliente=new ReporteDinamicoJInternalFrame(ClienteConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoCliente);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoCliente);
				this.jInternalFrameReporteDinamicoCliente.setVisible(false);
				this.jInternalFrameReporteDinamicoCliente.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoCliente"));
				this.jInternalFrameReporteDinamicoCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoCliente"));
				this.jInternalFrameReporteDinamicoCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoCliente"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualCliente();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaActividadEconomica() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.jScrollPanelDatosActividadEconomica.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.jScrollPanelDatosActividadEconomica.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.jScrollPanelDatosActividadEconomica.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.jScrollPanelDatosActividadEconomica.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaBalanceGeneralCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.jScrollPanelDatosBalanceGeneralCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.jScrollPanelDatosBalanceGeneralCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.jScrollPanelDatosBalanceGeneralCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.jScrollPanelDatosBalanceGeneralCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaBien() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.jScrollPanelDatosBien.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.jScrollPanelDatosBien.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.jScrollPanelDatosBien.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.jScrollPanelDatosBien.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaCargaFamiliar() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaChequePostFechado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.jScrollPanelDatosChequePostFechado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.jScrollPanelDatosChequePostFechado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.jScrollPanelDatosChequePostFechado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.jScrollPanelDatosChequePostFechado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaClienteArchivo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.jScrollPanelDatosClienteArchivo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.jScrollPanelDatosClienteArchivo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.jScrollPanelDatosClienteArchivo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.jScrollPanelDatosClienteArchivo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaClienteCoa() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.jScrollPanelDatosClienteCoa.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.jScrollPanelDatosClienteCoa.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.jScrollPanelDatosClienteCoa.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.jScrollPanelDatosClienteCoa.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaClienteImagen() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.jScrollPanelDatosClienteImagen.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.jScrollPanelDatosClienteImagen.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.jScrollPanelDatosClienteImagen.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.jScrollPanelDatosClienteImagen.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaConsignatario() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaContactoCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.jScrollPanelDatosContactoCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.jScrollPanelDatosContactoCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.jScrollPanelDatosContactoCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.jScrollPanelDatosContactoCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaConyuge() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.jScrollPanelDatosConyuge.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.jScrollPanelDatosConyuge.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.jScrollPanelDatosConyuge.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.jScrollPanelDatosConyuge.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaCuentaPorCobrar() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.jScrollPanelDatosCuentaPorCobrar.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.jScrollPanelDatosCuentaPorCobrar.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.jScrollPanelDatosCuentaPorCobrar.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.jScrollPanelDatosCuentaPorCobrar.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaDatoConstitucion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.jScrollPanelDatosDatoConstitucion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.jScrollPanelDatosDatoConstitucion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.jScrollPanelDatosDatoConstitucion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.jScrollPanelDatosDatoConstitucion.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaDireccion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.jScrollPanelDatosDireccion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.jScrollPanelDatosDireccion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.jScrollPanelDatosDireccion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.jScrollPanelDatosDireccion.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEMail() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.jScrollPanelDatosEMail.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.jScrollPanelDatosEMail.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.jScrollPanelDatosEMail.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.jScrollPanelDatosEMail.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFirmaCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.jScrollPanelDatosFirmaCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.jScrollPanelDatosFirmaCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.jScrollPanelDatosFirmaCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.jScrollPanelDatosFirmaCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaGarantiaCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.jScrollPanelDatosGarantiaCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.jScrollPanelDatosGarantiaCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.jScrollPanelDatosGarantiaCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.jScrollPanelDatosGarantiaCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaHobbyCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.jScrollPanelDatosHobbyCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.jScrollPanelDatosHobbyCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.jScrollPanelDatosHobbyCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.jScrollPanelDatosHobbyCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaInformacionEconomica() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.jScrollPanelDatosInformacionEconomica.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.jScrollPanelDatosInformacionEconomica.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.jScrollPanelDatosInformacionEconomica.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.jScrollPanelDatosInformacionEconomica.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaInformacionFinanciera() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.jScrollPanelDatosInformacionFinanciera.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.jScrollPanelDatosInformacionFinanciera.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.jScrollPanelDatosInformacionFinanciera.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.jScrollPanelDatosInformacionFinanciera.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaInformacionLaboral() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.jScrollPanelDatosInformacionLaboral.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.jScrollPanelDatosInformacionLaboral.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.jScrollPanelDatosInformacionLaboral.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.jScrollPanelDatosInformacionLaboral.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaMonto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.jScrollPanelDatosMonto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.jScrollPanelDatosMonto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.jScrollPanelDatosMonto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.jScrollPanelDatosMonto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaNegocioCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.jScrollPanelDatosNegocioCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.jScrollPanelDatosNegocioCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.jScrollPanelDatosNegocioCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.jScrollPanelDatosNegocioCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaNovedad() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPoliticaCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticaCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticaCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticaCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticaCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPoliticasCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProveedorProducto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaReferenciaBancaria() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.jScrollPanelDatosReferenciaBancaria.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.jScrollPanelDatosReferenciaBancaria.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.jScrollPanelDatosReferenciaBancaria.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.jScrollPanelDatosReferenciaBancaria.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaReferenciaComercial() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.jScrollPanelDatosReferenciaComercial.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.jScrollPanelDatosReferenciaComercial.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.jScrollPanelDatosReferenciaComercial.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.jScrollPanelDatosReferenciaComercial.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaReferenciaPersonal() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.jScrollPanelDatosReferenciaPersonal.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.jScrollPanelDatosReferenciaPersonal.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.jScrollPanelDatosReferenciaPersonal.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.jScrollPanelDatosReferenciaPersonal.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRepresentanteLegal() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.jScrollPanelDatosRepresentanteLegal.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.jScrollPanelDatosRepresentanteLegal.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.jScrollPanelDatosRepresentanteLegal.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.jScrollPanelDatosRepresentanteLegal.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaResponsable() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaServicioCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaSubCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaTelefono() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.jScrollPanelDatosTelefono.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.jScrollPanelDatosTelefono.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.jScrollPanelDatosTelefono.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.jScrollPanelDatosTelefono.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaTransportista() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaVehiculoCliente() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.jScrollPanelDatosVehiculoCliente.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormCliente.jContentPaneDetalleCliente.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.jScrollPanelDatosVehiculoCliente.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.jScrollPanelDatosVehiculoCliente.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.jScrollPanelDatosVehiculoCliente.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleCliente() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormCliente);
			
	       	this.jInternalFrameDetalleFormCliente.setVisible(false);
	        this.jInternalFrameDetalleFormCliente.setSelected(false);
			
			//this.jInternalFrameDetalleFormCliente.dispose();
			//this.jInternalFrameDetalleFormCliente=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoCliente() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoCliente.setVisible(true);
	        this.jInternalFrameReporteDinamicoCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionCliente.setVisible(true);
	        this.jInternalFrameImportacionCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByCliente.setVisible(true);
	        this.jInternalFrameOrderByCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByCliente.setVisible(false);
	        this.jInternalFrameOrderByCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoCliente() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoCliente.setVisible(false);
	        this.jInternalFrameReporteDinamicoCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionCliente.setVisible(false);
	        this.jInternalFrameImportacionCliente.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderCliente.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderCliente.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarCliente(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarCliente(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosCliente.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesCliente(true);
			//this.isEsNuevoCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesCliente(false) ;
			
			if(clienteSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.getEsGuardarRelacionado() && InformacionLaboralJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonInformacionLaboralActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaSessionBean.getEsGuardarRelacionado() && TransportistaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTransportistaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadSessionBean.getEsGuardarRelacionado() && NovedadJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNovedadActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getEsGuardarRelacionado() && PoliticasClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticasClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.getEsGuardarRelacionado() && ReferenciaPersonalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaPersonalActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.getEsGuardarRelacionado() && BalanceGeneralClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBalanceGeneralClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.getEsGuardarRelacionado() && PoliticaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPoliticaClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.getEsGuardarRelacionado() && VehiculoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonVehiculoClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableSessionBean.getEsGuardarRelacionado() && ResponsableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonResponsableActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.getEsGuardarRelacionado() && InformacionFinancieraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonInformacionFinancieraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.getEsGuardarRelacionado() && ConsignatarioJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConsignatarioActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.getEsGuardarRelacionado() && ClienteImagenJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteImagenActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.getEsGuardarRelacionado() && GarantiaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGarantiaClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.getEsGuardarRelacionado() && InformacionEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonInformacionEconomicaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.getEsGuardarRelacionado() && ReferenciaComercialJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaComercialActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienSessionBean.getEsGuardarRelacionado() && BienJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonBienActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getEsGuardarRelacionado() && ProveedorProductoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProveedorProductoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado() && ServicioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.getEsGuardarRelacionado() && ContactoClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonContactoClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.getEsGuardarRelacionado() && DatoConstitucionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDatoConstitucionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.getEsGuardarRelacionado() && ClienteCoaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteCoaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.getEsGuardarRelacionado() && HobbyClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHobbyClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.getEsGuardarRelacionado() && CargaFamiliarJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCargaFamiliarActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailSessionBean.getEsGuardarRelacionado() && EMailJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEMailActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeSessionBean.getEsGuardarRelacionado() && ConyugeJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonConyugeActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.getEsGuardarRelacionado() && CuentaPorCobrarJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCuentaPorCobrarActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.getEsGuardarRelacionado() && FirmaClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFirmaClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.getEsGuardarRelacionado() && RepresentanteLegalJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRepresentanteLegalActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoSessionBean.getEsGuardarRelacionado() && TelefonoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTelefonoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.getEsGuardarRelacionado() && NegocioClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonNegocioClienteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.getEsGuardarRelacionado() && ReferenciaBancariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonReferenciaBancariaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoSessionBean.getEsGuardarRelacionado() && MontoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMontoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.getEsGuardarRelacionado() && ClienteArchivoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonClienteArchivoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.getEsGuardarRelacionado() && ActividadEconomicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonActividadEconomicaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionSessionBean.getEsGuardarRelacionado() && DireccionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDireccionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.getEsGuardarRelacionado() && ChequePostFechadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonChequePostFechadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteSessionBean.getEsGuardarRelacionado() && SubClienteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSubClienteActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(ClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleCliente(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaClienteActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarCliente(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosCliente.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesCliente(true);
			//this.isEsNuevoCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.cliente.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesCliente(false) ;
			
			if(ClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleCliente(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContable")) {
				if(!this.clienteConstantesFunciones.cargarid_cuenta_contableCliente) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingCliente(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaTipoIdentificacion(List<TipoIdentificacion> tipoidentificacionsForeignKey)throws Exception{
		TableColumn tableColumnTipoIdentificacion=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION));
		TableCellEditor tableCellEditorTipoIdentificacion =tableColumnTipoIdentificacion.getCellEditor();

		TipoIdentificacionTableCell tipoidentificacionTableCellFk=(TipoIdentificacionTableCell)tableCellEditorTipoIdentificacion;

		if(tipoidentificacionTableCellFk!=null) {
			tipoidentificacionTableCellFk.settipoidentificacionsForeignKey(tipoidentificacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoidentificacionTableCellFk.setRowActual(intSelectedRow);
			//tipoidentificacionTableCellFk.settipoidentificacionsForeignKeyActual(tipoidentificacionsForeignKey);
		//}


		if(tipoidentificacionTableCellFk!=null) {
			tipoidentificacionTableCellFk.RecargarTipoIdentificacionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaGrupoCliente(List<GrupoCliente> grupoclientesForeignKey)throws Exception{
		TableColumn tableColumnGrupoCliente=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE));
		TableCellEditor tableCellEditorGrupoCliente =tableColumnGrupoCliente.getCellEditor();

		GrupoClienteTableCell grupoclienteTableCellFk=(GrupoClienteTableCell)tableCellEditorGrupoCliente;

		if(grupoclienteTableCellFk!=null) {
			grupoclienteTableCellFk.setgrupoclientesForeignKey(grupoclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//grupoclienteTableCellFk.setRowActual(intSelectedRow);
			//grupoclienteTableCellFk.setgrupoclientesForeignKeyActual(grupoclientesForeignKey);
		//}


		if(grupoclienteTableCellFk!=null) {
			grupoclienteTableCellFk.RecargarGrupoClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTituloCliente(List<TituloCliente> tituloclientesForeignKey)throws Exception{
		TableColumn tableColumnTituloCliente=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE));
		TableCellEditor tableCellEditorTituloCliente =tableColumnTituloCliente.getCellEditor();

		TituloClienteTableCell tituloclienteTableCellFk=(TituloClienteTableCell)tableCellEditorTituloCliente;

		if(tituloclienteTableCellFk!=null) {
			tituloclienteTableCellFk.settituloclientesForeignKey(tituloclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tituloclienteTableCellFk.setRowActual(intSelectedRow);
			//tituloclienteTableCellFk.settituloclientesForeignKeyActual(tituloclientesForeignKey);
		//}


		if(tituloclienteTableCellFk!=null) {
			tituloclienteTableCellFk.RecargarTituloClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAreaCr(List<AreaCr> areacrsForeignKey)throws Exception{
		TableColumn tableColumnAreaCr=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDAREACR));
		TableCellEditor tableCellEditorAreaCr =tableColumnAreaCr.getCellEditor();

		AreaCrTableCell areacrTableCellFk=(AreaCrTableCell)tableCellEditorAreaCr;

		if(areacrTableCellFk!=null) {
			areacrTableCellFk.setareacrsForeignKey(areacrsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//areacrTableCellFk.setRowActual(intSelectedRow);
			//areacrTableCellFk.setareacrsForeignKeyActual(areacrsForeignKey);
		//}


		if(areacrTableCellFk!=null) {
			areacrTableCellFk.RecargarAreaCrsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoCliente(List<EstadoCliente> estadoclientesForeignKey)throws Exception{
		TableColumn tableColumnEstadoCliente=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE));
		TableCellEditor tableCellEditorEstadoCliente =tableColumnEstadoCliente.getCellEditor();

		EstadoClienteTableCell estadoclienteTableCellFk=(EstadoClienteTableCell)tableCellEditorEstadoCliente;

		if(estadoclienteTableCellFk!=null) {
			estadoclienteTableCellFk.setestadoclientesForeignKey(estadoclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoclienteTableCellFk.setRowActual(intSelectedRow);
			//estadoclienteTableCellFk.setestadoclientesForeignKeyActual(estadoclientesForeignKey);
		//}


		if(estadoclienteTableCellFk!=null) {
			estadoclienteTableCellFk.RecargarEstadoClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaRegion(List<Region> regionsForeignKey)throws Exception{
		TableColumn tableColumnRegion=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDREGION));
		TableCellEditor tableCellEditorRegion =tableColumnRegion.getCellEditor();

		RegionTableCell regionTableCellFk=(RegionTableCell)tableCellEditorRegion;

		if(regionTableCellFk!=null) {
			regionTableCellFk.setregionsForeignKey(regionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//regionTableCellFk.setRowActual(intSelectedRow);
			//regionTableCellFk.setregionsForeignKeyActual(regionsForeignKey);
		//}


		if(regionTableCellFk!=null) {
			regionTableCellFk.RecargarRegionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProvincia(List<Provincia> provinciasForeignKey)throws Exception{
		TableColumn tableColumnProvincia=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPROVINCIA));
		TableCellEditor tableCellEditorProvincia =tableColumnProvincia.getCellEditor();

		ProvinciaTableCell provinciaTableCellFk=(ProvinciaTableCell)tableCellEditorProvincia;

		if(provinciaTableCellFk!=null) {
			provinciaTableCellFk.setprovinciasForeignKey(provinciasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//provinciaTableCellFk.setRowActual(intSelectedRow);
			//provinciaTableCellFk.setprovinciasForeignKeyActual(provinciasForeignKey);
		//}


		if(provinciaTableCellFk!=null) {
			provinciaTableCellFk.RecargarProvinciasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudad(List<Ciudad> ciudadsForeignKey)throws Exception{
		TableColumn tableColumnCiudad=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCIUDAD));
		TableCellEditor tableCellEditorCiudad =tableColumnCiudad.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudad;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadsForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaZona(List<Zona> zonasForeignKey)throws Exception{
		TableColumn tableColumnZona=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDZONA));
		TableCellEditor tableCellEditorZona =tableColumnZona.getCellEditor();

		ZonaTableCell zonaTableCellFk=(ZonaTableCell)tableCellEditorZona;

		if(zonaTableCellFk!=null) {
			zonaTableCellFk.setzonasForeignKey(zonasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//zonaTableCellFk.setRowActual(intSelectedRow);
			//zonaTableCellFk.setzonasForeignKeyActual(zonasForeignKey);
		//}


		if(zonaTableCellFk!=null) {
			zonaTableCellFk.RecargarZonasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPaisNacionalidad(List<Pais> paisnacionalidadsForeignKey)throws Exception{
		TableColumn tableColumnPaisNacionalidad=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD));
		TableCellEditor tableCellEditorPaisNacionalidad =tableColumnPaisNacionalidad.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPaisNacionalidad;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paisnacionalidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paisnacionalidadsForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCargoLabo(List<TipoCargoLabo> tipocargolabosForeignKey)throws Exception{
		TableColumn tableColumnTipoCargoLabo=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO));
		TableCellEditor tableCellEditorTipoCargoLabo =tableColumnTipoCargoLabo.getCellEditor();

		TipoCargoLaboTableCell tipocargolaboTableCellFk=(TipoCargoLaboTableCell)tableCellEditorTipoCargoLabo;

		if(tipocargolaboTableCellFk!=null) {
			tipocargolaboTableCellFk.settipocargolabosForeignKey(tipocargolabosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocargolaboTableCellFk.setRowActual(intSelectedRow);
			//tipocargolaboTableCellFk.settipocargolabosForeignKeyActual(tipocargolabosForeignKey);
		//}


		if(tipocargolaboTableCellFk!=null) {
			tipocargolaboTableCellFk.RecargarTipoCargoLabosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoNivelEdu(List<TipoNivelEdu> tiponiveledusForeignKey)throws Exception{
		TableColumn tableColumnTipoNivelEdu=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU));
		TableCellEditor tableCellEditorTipoNivelEdu =tableColumnTipoNivelEdu.getCellEditor();

		TipoNivelEduTableCell tiponiveleduTableCellFk=(TipoNivelEduTableCell)tableCellEditorTipoNivelEdu;

		if(tiponiveleduTableCellFk!=null) {
			tiponiveleduTableCellFk.settiponiveledusForeignKey(tiponiveledusForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiponiveleduTableCellFk.setRowActual(intSelectedRow);
			//tiponiveleduTableCellFk.settiponiveledusForeignKeyActual(tiponiveledusForeignKey);
		//}


		if(tiponiveleduTableCellFk!=null) {
			tiponiveleduTableCellFk.RecargarTipoNivelEdusForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProfesion(List<Profesion> profesionsForeignKey)throws Exception{
		TableColumn tableColumnProfesion=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPROFESION));
		TableCellEditor tableCellEditorProfesion =tableColumnProfesion.getCellEditor();

		ProfesionTableCell profesionTableCellFk=(ProfesionTableCell)tableCellEditorProfesion;

		if(profesionTableCellFk!=null) {
			profesionTableCellFk.setprofesionsForeignKey(profesionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//profesionTableCellFk.setRowActual(intSelectedRow);
			//profesionTableCellFk.setprofesionsForeignKeyActual(profesionsForeignKey);
		//}


		if(profesionTableCellFk!=null) {
			profesionTableCellFk.RecargarProfesionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoGenero(List<TipoGenero> tipogenerosForeignKey)throws Exception{
		TableColumn tableColumnTipoGenero=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOGENERO));
		TableCellEditor tableCellEditorTipoGenero =tableColumnTipoGenero.getCellEditor();

		TipoGeneroTableCell tipogeneroTableCellFk=(TipoGeneroTableCell)tableCellEditorTipoGenero;

		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.settipogenerosForeignKey(tipogenerosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogeneroTableCellFk.setRowActual(intSelectedRow);
			//tipogeneroTableCellFk.settipogenerosForeignKeyActual(tipogenerosForeignKey);
		//}


		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.RecargarTipoGenerosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoCivil(List<EstadoCivil> estadocivilsForeignKey)throws Exception{
		TableColumn tableColumnEstadoCivil=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDESTADOCIVIL));
		TableCellEditor tableCellEditorEstadoCivil =tableColumnEstadoCivil.getCellEditor();

		EstadoCivilTableCell estadocivilTableCellFk=(EstadoCivilTableCell)tableCellEditorEstadoCivil;

		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.setestadocivilsForeignKey(estadocivilsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadocivilTableCellFk.setRowActual(intSelectedRow);
			//estadocivilTableCellFk.setestadocivilsForeignKeyActual(estadocivilsForeignKey);
		//}


		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.RecargarEstadoCivilsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoLegal(List<EstadoLegal> estadolegalsForeignKey)throws Exception{
		TableColumn tableColumnEstadoLegal=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDESTADOLEGAL));
		TableCellEditor tableCellEditorEstadoLegal =tableColumnEstadoLegal.getCellEditor();

		EstadoLegalTableCell estadolegalTableCellFk=(EstadoLegalTableCell)tableCellEditorEstadoLegal;

		if(estadolegalTableCellFk!=null) {
			estadolegalTableCellFk.setestadolegalsForeignKey(estadolegalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadolegalTableCellFk.setRowActual(intSelectedRow);
			//estadolegalTableCellFk.setestadolegalsForeignKeyActual(estadolegalsForeignKey);
		//}


		if(estadolegalTableCellFk!=null) {
			estadolegalTableCellFk.RecargarEstadoLegalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaRuta(List<Ruta> rutasForeignKey)throws Exception{
		TableColumn tableColumnRuta=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDRUTA));
		TableCellEditor tableCellEditorRuta =tableColumnRuta.getCellEditor();

		RutaTableCell rutaTableCellFk=(RutaTableCell)tableCellEditorRuta;

		if(rutaTableCellFk!=null) {
			rutaTableCellFk.setrutasForeignKey(rutasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//rutaTableCellFk.setRowActual(intSelectedRow);
			//rutaTableCellFk.setrutasForeignKeyActual(rutasForeignKey);
		//}


		if(rutaTableCellFk!=null) {
			rutaTableCellFk.RecargarRutasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroActividad(List<CentroActividad> centroactividadsForeignKey)throws Exception{
		TableColumn tableColumnCentroActividad=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD));
		TableCellEditor tableCellEditorCentroActividad =tableColumnCentroActividad.getCellEditor();

		CentroActividadTableCell centroactividadTableCellFk=(CentroActividadTableCell)tableCellEditorCentroActividad;

		if(centroactividadTableCellFk!=null) {
			centroactividadTableCellFk.setcentroactividadsForeignKey(centroactividadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centroactividadTableCellFk.setRowActual(intSelectedRow);
			//centroactividadTableCellFk.setcentroactividadsForeignKeyActual(centroactividadsForeignKey);
		//}


		if(centroactividadTableCellFk!=null) {
			centroactividadTableCellFk.RecargarCentroActividadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoGarantiaEmpresa(List<TipoGarantiaEmpresa> tipogarantiaempresasForeignKey)throws Exception{
		TableColumn tableColumnTipoGarantiaEmpresa=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA));
		TableCellEditor tableCellEditorTipoGarantiaEmpresa =tableColumnTipoGarantiaEmpresa.getCellEditor();

		TipoGarantiaEmpresaTableCell tipogarantiaempresaTableCellFk=(TipoGarantiaEmpresaTableCell)tableCellEditorTipoGarantiaEmpresa;

		if(tipogarantiaempresaTableCellFk!=null) {
			tipogarantiaempresaTableCellFk.settipogarantiaempresasForeignKey(tipogarantiaempresasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogarantiaempresaTableCellFk.setRowActual(intSelectedRow);
			//tipogarantiaempresaTableCellFk.settipogarantiaempresasForeignKeyActual(tipogarantiaempresasForeignKey);
		//}


		if(tipogarantiaempresaTableCellFk!=null) {
			tipogarantiaempresaTableCellFk.RecargarTipoGarantiaEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCateTipoAfiliacion(List<CateTipoAfiliacion> catetipoafiliacionsForeignKey)throws Exception{
		TableColumn tableColumnCateTipoAfiliacion=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION));
		TableCellEditor tableCellEditorCateTipoAfiliacion =tableColumnCateTipoAfiliacion.getCellEditor();

		CateTipoAfiliacionTableCell catetipoafiliacionTableCellFk=(CateTipoAfiliacionTableCell)tableCellEditorCateTipoAfiliacion;

		if(catetipoafiliacionTableCellFk!=null) {
			catetipoafiliacionTableCellFk.setcatetipoafiliacionsForeignKey(catetipoafiliacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//catetipoafiliacionTableCellFk.setRowActual(intSelectedRow);
			//catetipoafiliacionTableCellFk.setcatetipoafiliacionsForeignKeyActual(catetipoafiliacionsForeignKey);
		//}


		if(catetipoafiliacionTableCellFk!=null) {
			catetipoafiliacionTableCellFk.RecargarCateTipoAfiliacionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaDia(List<Dia> diasForeignKey)throws Exception{
		TableColumn tableColumnDia=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDDIA));
		TableCellEditor tableCellEditorDia =tableColumnDia.getCellEditor();

		DiaTableCell diaTableCellFk=(DiaTableCell)tableCellEditorDia;

		if(diaTableCellFk!=null) {
			diaTableCellFk.setdiasForeignKey(diasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//diaTableCellFk.setRowActual(intSelectedRow);
			//diaTableCellFk.setdiasForeignKeyActual(diasForeignKey);
		//}


		if(diaTableCellFk!=null) {
			diaTableCellFk.RecargarDiasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPrecio(List<TipoPrecio> tipopreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoPrecio=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOPRECIO));
		TableCellEditor tableCellEditorTipoPrecio =tableColumnTipoPrecio.getCellEditor();

		TipoPrecioTableCell tipoprecioTableCellFk=(TipoPrecioTableCell)tableCellEditorTipoPrecio;

		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.settipopreciosForeignKey(tipopreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprecioTableCellFk.setRowActual(intSelectedRow);
			//tipoprecioTableCellFk.settipopreciosForeignKeyActual(tipopreciosForeignKey);
		//}


		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.RecargarTipoPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoListaPrecio(List<TipoListaPrecio> tipolistapreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoListaPrecio=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO));
		TableCellEditor tableCellEditorTipoListaPrecio =tableColumnTipoListaPrecio.getCellEditor();

		TipoListaPrecioTableCell tipolistaprecioTableCellFk=(TipoListaPrecioTableCell)tableCellEditorTipoListaPrecio;

		if(tipolistaprecioTableCellFk!=null) {
			tipolistaprecioTableCellFk.settipolistapreciosForeignKey(tipolistapreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipolistaprecioTableCellFk.setRowActual(intSelectedRow);
			//tipolistaprecioTableCellFk.settipolistapreciosForeignKeyActual(tipolistapreciosForeignKey);
		//}


		if(tipolistaprecioTableCellFk!=null) {
			tipolistaprecioTableCellFk.RecargarTipoListaPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesCliente(false);
			
			//if(!this.isEsNuevoCliente) {								
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				
			}
			
			if(this.permiteMantenimiento(this.cliente)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.clienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoCliente=true;
					this.inicializarActualizarBindingTablaCliente(false);
					this.isEsNuevoCliente=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoCliente=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoCliente=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualCliente(false);
				
				this.habilitarDeshabilitarControlesCliente(false);
			
												
				
				if(ClienteJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleCliente();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoClienteActionPerformed(evt,clienteSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualCliente(this.cliente,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosCliente.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,clienteSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.cliente.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosCliente.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				this.cliente.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				this.cliente.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.cliente)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.clienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ClienteModel) this.jTableDatosCliente.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoCliente=true;
				this.inicializarActualizarBindingTablaCliente(false);
				this.isEsNuevoCliente=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualCliente(false);
				
				this.habilitarDeshabilitarControlesCliente(false);
				
				
				
				if(ClienteJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleCliente();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarClienteActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosCliente.getRowCount()>=1) {
				jTableDatosCliente.removeRowSelectionInterval(0, jTableDatosCliente.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesCliente(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaCliente(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesCliente(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualCliente(false) ;
			
			this.isEsNuevoCliente=false;
			
			if(ClienteJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleCliente();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingCliente(false);
				
				//SI ES MANUAL
				if(ClienteJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualCliente();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoCliente--;			
			//Cliente clienteAux= new Cliente();			
			//clienteAux.setId(this.iIdNuevoCliente);
			
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaCliente();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
			
			this.cliente.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.clienteLogic.getClientes().add(this.clienteAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.clientes.add(this.clienteAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaCliente(false);
			
			this.jTableDatosCliente.setRowSelectionInterval(this.getIndiceNuevoCliente(), this.getIndiceNuevoCliente());
			
			int iLastRow =  this.jTableDatosCliente.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosCliente.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosCliente.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaCliente(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingCliente(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCliente(false);
			
			//SI ES MANUAL
			if(ClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualCliente();
			}
			
			//this.abrirFrameTreeCliente();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE ClienteS ?", "MANTENIMIENTO DE Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionCliente.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralCliente();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.clienteReturnGeneral=clienteLogic.procesarImportacionClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.clienteParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarClienteReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionCliente.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionCliente.setFileImportacion(this.jInternalFrameImportacionCliente.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionCliente.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionCliente.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionCliente.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionCliente.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoClienteActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		

		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ClienteBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ClienteBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteClientes("Todos",clientesSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ClienteConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoIdentificacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoIdentificacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoIdentificacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoIdentificacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDENTIFICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_entificacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_entificacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_entificacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_entificacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_APELLIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ellido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ellido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ellido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ellido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreCompleto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreCompleto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreCompleto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreCompleto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreComercial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreComercial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreComercial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreComercial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_ESPROVE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Prove_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Prove_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Prove_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Prove_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_GrupoCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_GrupoCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_GrupoCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_GrupoCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TituloCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TituloCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TituloCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TituloCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDAREACR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AreaCr_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AreaCr_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AreaCr_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AreaCr_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_OBSERVACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_servacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_servacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_servacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_servacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDREGION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Region_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Region_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Region_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Region_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDPROVINCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Provincia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Provincia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Provincia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Provincia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDCIUDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ciudad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ciudad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ciudad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ciudad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDZONA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Zona_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Zona_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Zona_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Zona_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PaisNacionalidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PaisNacionalidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PaisNacionalidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PaisNacionalidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCargoLabo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCargoLabo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCargoLabo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCargoLabo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoNivelEdu_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoNivelEdu_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoNivelEdu_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoNivelEdu_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDPROFESION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Profesion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Profesion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Profesion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Profesion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGenero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGenero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGenero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGenero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoCivil_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoCivil_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoCivil_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoCivil_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoLegal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoLegal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoLegal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoLegal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaNacimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaNacimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaNacimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaNacimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_thImagenFirma_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_thImagenFirma_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_thImagenFirma_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_thImagenFirma_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_CONTACTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntacto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntacto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntacto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntacto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDRUTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ruta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ruta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ruta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ruta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroActividad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroActividad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroActividad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroActividad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_REPRESENTANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_presentante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_presentante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_presentante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_presentante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGarantiaEmpresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGarantiaEmpresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGarantiaEmpresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGarantiaEmpresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_NOMBREGARANTIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreGarantia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreGarantia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreGarantia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreGarantia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_VALORGARANTIA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorGarantia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorGarantia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorGarantia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorGarantia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CateTipoAfiliacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CateTipoAfiliacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CateTipoAfiliacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CateTipoAfiliacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_NUMEROCARGA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCarga_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCarga_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCarga_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCarga_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_CREDITOUSADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_editoUsado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_editoUsado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_editoUsado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_editoUsado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_LIMITECREDITO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_miteCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_miteCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_miteCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_miteCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_editoDisponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_editoDisponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_editoDisponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_editoDisponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talDocumentos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talDocumentos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talDocumentos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talDocumentos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaUltimaFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaUltimaFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaUltimaFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaUltimaFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDDIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Dia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Dia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Dia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Dia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_HORAPAGO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_COBRANZAS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_branzas_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_branzas_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_branzas_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_branzas_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_MOTIVO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tivo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tivo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tivo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tivo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_PREFERENCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_eferencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_eferencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_eferencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_eferencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nSeparacionBienes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nSeparacionBienes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nSeparacionBienes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nSeparacionBienes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoListaPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoListaPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoListaPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoListaPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_DETALLEESTADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talleEstado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talleEstado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talleEstado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talleEstado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ContribuyenteEspecial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ContribuyenteEspecial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ContribuyenteEspecial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ContribuyenteEspecial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoCliente.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ClienteConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ClienteConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					sNombreCampoCategoria="id_tipo_identificacion";
					break;

				case ClienteConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoria="identificacion";
					break;

				case ClienteConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case ClienteConstantesFunciones.LABEL_APELLIDO:
					sNombreCampoCategoria="apellido";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					sNombreCampoCategoria="nombre_completo";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL:
					sNombreCampoCategoria="nombre_comercial";
					break;

				case ClienteConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case ClienteConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case ClienteConstantesFunciones.LABEL_ESPROVE:
					sNombreCampoCategoria="es_prove";
					break;

				case ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE:
					sNombreCampoCategoria="id_grupo_cliente";
					break;

				case ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE:
					sNombreCampoCategoria="id_titulo_cliente";
					break;

				case ClienteConstantesFunciones.LABEL_IDAREACR:
					sNombreCampoCategoria="id_area_cr";
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE:
					sNombreCampoCategoria="id_estado_cliente";
					break;

				case ClienteConstantesFunciones.LABEL_OBSERVACION:
					sNombreCampoCategoria="observacion";
					break;

				case ClienteConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case ClienteConstantesFunciones.LABEL_IDREGION:
					sNombreCampoCategoria="id_region";
					break;

				case ClienteConstantesFunciones.LABEL_IDPROVINCIA:
					sNombreCampoCategoria="id_provincia";
					break;

				case ClienteConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoria="id_ciudad";
					break;

				case ClienteConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoria="id_zona";
					break;

				case ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					sNombreCampoCategoria="id_pais_nacionalidad";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO:
					sNombreCampoCategoria="id_tipo_cargo_labo";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					sNombreCampoCategoria="id_tipo_nivel_edu";
					break;

				case ClienteConstantesFunciones.LABEL_IDPROFESION:
					sNombreCampoCategoria="id_profesion";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoria="id_tipo_genero";
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoria="id_estado_civil";
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					sNombreCampoCategoria="id_estado_legal";
					break;

				case ClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					sNombreCampoCategoria="fecha_nacimiento";
					break;

				case ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					sNombreCampoCategoria="path_imagen_firma";
					break;

				case ClienteConstantesFunciones.LABEL_CONTACTO:
					sNombreCampoCategoria="contacto";
					break;

				case ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case ClienteConstantesFunciones.LABEL_IDRUTA:
					sNombreCampoCategoria="id_ruta";
					break;

				case ClienteConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					sNombreCampoCategoria="id_centro_actividad";
					break;

				case ClienteConstantesFunciones.LABEL_REPRESENTANTE:
					sNombreCampoCategoria="representante";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA:
					sNombreCampoCategoria="id_tipo_garantia_empresa";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBREGARANTIA:
					sNombreCampoCategoria="nombre_garantia";
					break;

				case ClienteConstantesFunciones.LABEL_VALORGARANTIA:
					sNombreCampoCategoria="valor_garantia";
					break;

				case ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION:
					sNombreCampoCategoria="id_cate_tipo_afiliacion";
					break;

				case ClienteConstantesFunciones.LABEL_NUMEROCARGA:
					sNombreCampoCategoria="numero_carga";
					break;

				case ClienteConstantesFunciones.LABEL_CREDITOUSADO:
					sNombreCampoCategoria="credito_usado";
					break;

				case ClienteConstantesFunciones.LABEL_LIMITECREDITO:
					sNombreCampoCategoria="limite_credito";
					break;

				case ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE:
					sNombreCampoCategoria="credito_disponible";
					break;

				case ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS:
					sNombreCampoCategoria="total_documentos";
					break;

				case ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA:
					sNombreCampoCategoria="fecha_ultima_factura";
					break;

				case ClienteConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case ClienteConstantesFunciones.LABEL_IDDIA:
					sNombreCampoCategoria="id_dia";
					break;

				case ClienteConstantesFunciones.LABEL_HORAPAGO:
					sNombreCampoCategoria="hora_pago";
					break;

				case ClienteConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case ClienteConstantesFunciones.LABEL_COBRANZAS:
					sNombreCampoCategoria="cobranzas";
					break;

				case ClienteConstantesFunciones.LABEL_MOTIVO:
					sNombreCampoCategoria="motivo";
					break;

				case ClienteConstantesFunciones.LABEL_PREFERENCIA:
					sNombreCampoCategoria="preferencia";
					break;

				case ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES:
					sNombreCampoCategoria="con_separacion_bienes";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoria="id_tipo_precio";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					sNombreCampoCategoria="id_tipo_lista_precio";
					break;

				case ClienteConstantesFunciones.LABEL_DETALLEESTADO:
					sNombreCampoCategoria="detalle_estado";
					break;

				case ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL:
					sNombreCampoCategoria="es_contribuyente_especial";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ClienteConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ClienteConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					sNombreCampoCategoriaValor="id_tipo_identificacion";
					break;

				case ClienteConstantesFunciones.LABEL_IDENTIFICACION:
					sNombreCampoCategoriaValor="identificacion";
					break;

				case ClienteConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case ClienteConstantesFunciones.LABEL_APELLIDO:
					sNombreCampoCategoriaValor="apellido";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					sNombreCampoCategoriaValor="nombre_completo";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL:
					sNombreCampoCategoriaValor="nombre_comercial";
					break;

				case ClienteConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case ClienteConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case ClienteConstantesFunciones.LABEL_ESPROVE:
					sNombreCampoCategoriaValor="es_prove";
					break;

				case ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE:
					sNombreCampoCategoriaValor="id_grupo_cliente";
					break;

				case ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE:
					sNombreCampoCategoriaValor="id_titulo_cliente";
					break;

				case ClienteConstantesFunciones.LABEL_IDAREACR:
					sNombreCampoCategoriaValor="id_area_cr";
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE:
					sNombreCampoCategoriaValor="id_estado_cliente";
					break;

				case ClienteConstantesFunciones.LABEL_OBSERVACION:
					sNombreCampoCategoriaValor="observacion";
					break;

				case ClienteConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case ClienteConstantesFunciones.LABEL_IDREGION:
					sNombreCampoCategoriaValor="id_region";
					break;

				case ClienteConstantesFunciones.LABEL_IDPROVINCIA:
					sNombreCampoCategoriaValor="id_provincia";
					break;

				case ClienteConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoriaValor="id_ciudad";
					break;

				case ClienteConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoriaValor="id_zona";
					break;

				case ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					sNombreCampoCategoriaValor="id_pais_nacionalidad";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO:
					sNombreCampoCategoriaValor="id_tipo_cargo_labo";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					sNombreCampoCategoriaValor="id_tipo_nivel_edu";
					break;

				case ClienteConstantesFunciones.LABEL_IDPROFESION:
					sNombreCampoCategoriaValor="id_profesion";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoriaValor="id_tipo_genero";
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoriaValor="id_estado_civil";
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					sNombreCampoCategoriaValor="id_estado_legal";
					break;

				case ClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					sNombreCampoCategoriaValor="fecha_nacimiento";
					break;

				case ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					sNombreCampoCategoriaValor="path_imagen_firma";
					break;

				case ClienteConstantesFunciones.LABEL_CONTACTO:
					sNombreCampoCategoriaValor="contacto";
					break;

				case ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case ClienteConstantesFunciones.LABEL_IDRUTA:
					sNombreCampoCategoriaValor="id_ruta";
					break;

				case ClienteConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					sNombreCampoCategoriaValor="id_centro_actividad";
					break;

				case ClienteConstantesFunciones.LABEL_REPRESENTANTE:
					sNombreCampoCategoriaValor="representante";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA:
					sNombreCampoCategoriaValor="id_tipo_garantia_empresa";
					break;

				case ClienteConstantesFunciones.LABEL_NOMBREGARANTIA:
					sNombreCampoCategoriaValor="nombre_garantia";
					break;

				case ClienteConstantesFunciones.LABEL_VALORGARANTIA:
					sNombreCampoCategoriaValor="valor_garantia";
					break;

				case ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION:
					sNombreCampoCategoriaValor="id_cate_tipo_afiliacion";
					break;

				case ClienteConstantesFunciones.LABEL_NUMEROCARGA:
					sNombreCampoCategoriaValor="numero_carga";
					break;

				case ClienteConstantesFunciones.LABEL_CREDITOUSADO:
					sNombreCampoCategoriaValor="credito_usado";
					break;

				case ClienteConstantesFunciones.LABEL_LIMITECREDITO:
					sNombreCampoCategoriaValor="limite_credito";
					break;

				case ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE:
					sNombreCampoCategoriaValor="credito_disponible";
					break;

				case ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS:
					sNombreCampoCategoriaValor="total_documentos";
					break;

				case ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA:
					sNombreCampoCategoriaValor="fecha_ultima_factura";
					break;

				case ClienteConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case ClienteConstantesFunciones.LABEL_IDDIA:
					sNombreCampoCategoriaValor="id_dia";
					break;

				case ClienteConstantesFunciones.LABEL_HORAPAGO:
					sNombreCampoCategoriaValor="hora_pago";
					break;

				case ClienteConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case ClienteConstantesFunciones.LABEL_COBRANZAS:
					sNombreCampoCategoriaValor="cobranzas";
					break;

				case ClienteConstantesFunciones.LABEL_MOTIVO:
					sNombreCampoCategoriaValor="motivo";
					break;

				case ClienteConstantesFunciones.LABEL_PREFERENCIA:
					sNombreCampoCategoriaValor="preferencia";
					break;

				case ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES:
					sNombreCampoCategoriaValor="con_separacion_bienes";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoriaValor="id_tipo_precio";
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					sNombreCampoCategoriaValor="id_tipo_lista_precio";
					break;

				case ClienteConstantesFunciones.LABEL_DETALLEESTADO:
					sNombreCampoCategoriaValor="detalle_estado";
					break;

				case ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL:
					sNombreCampoCategoriaValor="es_contribuyente_especial";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoCliente.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoCliente.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ClienteConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ClienteConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ClienteConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Identificacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_identificacion");
					break;

				case ClienteConstantesFunciones.LABEL_IDENTIFICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Identificacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"identificacion");
					break;

				case ClienteConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case ClienteConstantesFunciones.LABEL_APELLIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Apellido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"apellido");
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Completo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_completo");
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Comercial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_comercial");
					break;

				case ClienteConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case ClienteConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case ClienteConstantesFunciones.LABEL_ESPROVE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Proveedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_prove");
					break;

				case ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Grupo Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_grupo_cliente");
					break;

				case ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Titulo Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_titulo_cliente");
					break;

				case ClienteConstantesFunciones.LABEL_IDAREACR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Area",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_area_cr");
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_cliente");
					break;

				case ClienteConstantesFunciones.LABEL_OBSERVACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Observacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"observacion");
					break;

				case ClienteConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case ClienteConstantesFunciones.LABEL_IDREGION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Region",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_region");
					break;

				case ClienteConstantesFunciones.LABEL_IDPROVINCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Provincia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_provincia");
					break;

				case ClienteConstantesFunciones.LABEL_IDCIUDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad");
					break;

				case ClienteConstantesFunciones.LABEL_IDZONA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Zona",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_zona");
					break;

				case ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais Nacionalidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais_nacionalidad");
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cargo Laboral",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cargo_labo");
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Nivel Educativo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_nivel_edu");
					break;

				case ClienteConstantesFunciones.LABEL_IDPROFESION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Profesion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_profesion");
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Genero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_genero");
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Civil",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_civil");
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Legal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_legal");
					break;

				case ClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Nacimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_nacimiento");
					break;

				case ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Path Imagen Firma",sNombreCampoCategoria,sNombreCampoCategoriaValor,"path_imagen_firma");
					break;

				case ClienteConstantesFunciones.LABEL_CONTACTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Contacto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"contacto");
					break;

				case ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case ClienteConstantesFunciones.LABEL_IDRUTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ruta");
					break;

				case ClienteConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Activad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_actividad");
					break;

				case ClienteConstantesFunciones.LABEL_REPRESENTANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Representante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"representante");
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Garantia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_garantia_empresa");
					break;

				case ClienteConstantesFunciones.LABEL_NOMBREGARANTIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Garantia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_garantia");
					break;

				case ClienteConstantesFunciones.LABEL_VALORGARANTIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Garantia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_garantia");
					break;

				case ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Categoria Afiliacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cate_tipo_afiliacion");
					break;

				case ClienteConstantesFunciones.LABEL_NUMEROCARGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Carga",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_carga");
					break;

				case ClienteConstantesFunciones.LABEL_CREDITOUSADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Credito Usado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"credito_usado");
					break;

				case ClienteConstantesFunciones.LABEL_LIMITECREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Limite Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"limite_credito");
					break;

				case ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Credito Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"credito_disponible");
					break;

				case ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Documentos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_documentos");
					break;

				case ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Ultima Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_ultima_factura");
					break;

				case ClienteConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case ClienteConstantesFunciones.LABEL_IDDIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dia Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_dia");
					break;

				case ClienteConstantesFunciones.LABEL_HORAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_pago");
					break;

				case ClienteConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case ClienteConstantesFunciones.LABEL_COBRANZAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cobranzas",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cobranzas");
					break;

				case ClienteConstantesFunciones.LABEL_MOTIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Motivo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"motivo");
					break;

				case ClienteConstantesFunciones.LABEL_PREFERENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Preferencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"preferencia");
					break;

				case ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Separacion Bienes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_separacion_bienes");
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_precio");
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Lista Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_lista_precio");
					break;

				case ClienteConstantesFunciones.LABEL_DETALLEESTADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Detalle Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"detalle_estado");
					break;

				case ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Contribuyente Especial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_contribuyente_especial");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoClienteActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"cliente";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Clientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ClienteConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettipoidentificacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDENTIFICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDENTIFICACION);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getidentificacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_RUC);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_APELLIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_APELLIDO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getapellido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getnombre_completo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getnombre_comercial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_ESPROVE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_ESPROVE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getes_prove());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getgrupocliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettitulocliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDAREACR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDAREACR);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getareacr_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getestadocliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_OBSERVACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_OBSERVACION);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getobservacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDREGION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDREGION);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getregion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDPROVINCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPROVINCIA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getprovincia_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDCIUDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCIUDAD);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getciudad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDZONA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDZONA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getzona_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getpaisnacionalidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettipocargolabo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettiponiveledu_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDPROFESION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPROFESION);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getprofesion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGENERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOGENERO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettipogenero_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOCIVIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOCIVIL);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getestadocivil_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDESTADOLEGAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOLEGAL);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getestadolegal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_FECHANACIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_FECHANACIMIENTO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getfecha_nacimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getpath_imagen_firma());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_CONTACTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_CONTACTO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcontacto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDRUTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDRUTA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getruta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcentroactividad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_REPRESENTANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_REPRESENTANTE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getrepresentante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettipogarantiaempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_NOMBREGARANTIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBREGARANTIA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getnombre_garantia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_VALORGARANTIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_VALORGARANTIA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getvalor_garantia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcatetipoafiliacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_NUMEROCARGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_NUMEROCARGA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getnumero_carga());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_CREDITOUSADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_CREDITOUSADO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcredito_usado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_LIMITECREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_LIMITECREDITO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getlimite_credito());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcredito_disponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettotal_documentos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getfecha_ultima_factura());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDDIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDDIA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getdia_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_HORAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_HORAPAGO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gethora_pago());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_COBRANZAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_COBRANZAS);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcobranzas());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_MOTIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_MOTIVO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getmotivo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_PREFERENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_PREFERENCIA);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getpreferencia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getcon_separacion_bienes());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOPRECIO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettipoprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.gettipolistaprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_DETALLEESTADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_DETALLEESTADO);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getdetalle_estado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL);
					iRow++;

					for(Cliente cliente:clientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(cliente.getes_contribuyente_especial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelCliente(row);				
			//	iRow++;
			//}				
			
			//for(Cliente clienteAux:clientesSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelCliente(clienteAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCliente(false);
			
			//SI ES MANUAL
			if(ClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualCliente();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCliente(false);
			
			//SI ES MANUAL
			if(ClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualCliente();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingCliente(false);
			
			//SI ES MANUAL
			if(ClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualCliente();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaCliente() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosCliente.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosCliente.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosCliente.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosCliente.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosCliente.setMinimumSize(dimensionMinimum);
		this.jTableDatosCliente.setMaximumSize(dimensionMaximum);
		this.jTableDatosCliente.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingCliente(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingCliente(esInicializar,true);
	}
	
	public void inicializarActualizarBindingCliente(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaCliente(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesCliente(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasCliente(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesCliente(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesCliente(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ClienteJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ClienteJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualCliente() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaCliente();
		
		this.inicializarActualizarBindingBotonesManualCliente(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualCliente();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesCliente() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualCliente(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualCliente(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosCliente.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosCliente.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteCliente.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormCliente!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormCliente.jCheckBoxPostAccionNuevoCliente.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormCliente.jCheckBoxPostAccionSinCerrarCliente.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormCliente.jCheckBoxPostAccionSinMensajeCliente.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosCliente.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosCliente.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteCliente.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormCliente!=null) {
				this.jInternalFrameDetalleFormCliente.jCheckBoxPostAccionNuevoCliente.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormCliente.jCheckBoxPostAccionSinCerrarCliente.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormCliente.jCheckBoxPostAccionSinMensajeCliente.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionCliente.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionCliente.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormCliente!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesCliente.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoCliente!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesCliente.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesCliente.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoCliente!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesCliente.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralCliente.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesCliente(Boolean esInicializar) throws Exception {
		try	{	
			if(ClienteJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualCliente(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesCliente() throws Exception {
		try	{
			if(ClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualCliente();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleCliente() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualCliente() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesCliente.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesCliente.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesCliente.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionCliente.addItem(reporte);
			}
			
			
			if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarCliente.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarCliente.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualCliente();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualCliente() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoCliente!=null) {
				this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoCliente!=null) {
				this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoCliente!=null) {
				
				if(this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoCliente.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoCliente.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoCliente.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoCliente.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=ClienteConstantesFunciones.getTiposSeleccionarCliente(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=ClienteConstantesFunciones.getTiposSeleccionarCliente(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoCliente.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoCliente.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoCliente.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=ClienteConstantesFunciones.getTiposSeleccionarCliente(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoCliente.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoCliente.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualCliente()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		this.identificacionBusquedaPorIdentificacion=this.jTextFieldidentificacionBusquedaPorIdentificacionCliente.getText();
		this.nombre_comercialBusquedaPorNombreComercial=this.jTextAreanombre_comercialBusquedaPorNombreComercialCliente.getText();
		this.nombre_completoBusquedaPorNombreCompleto=this.jTextAreanombre_completoBusquedaPorNombreCompletoCliente.getText();
		if(this.jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.getSelectedItem()!=null){this.id_estado_clienteFK_IdEstadoCliente=((EstadoCliente)this.jComboBoxid_estado_clienteFK_IdEstadoClienteCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_legalFK_IdEstadoLegalCliente.getSelectedItem()!=null){this.id_estado_legalFK_IdEstadoLegal=((EstadoLegal)this.jComboBoxid_estado_legalFK_IdEstadoLegalCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.getSelectedItem()!=null){this.id_grupo_clienteFK_IdGrupoCliente=((GrupoCliente)this.jComboBoxid_grupo_clienteFK_IdGrupoClienteCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_rutaFK_IdRutaCliente.getSelectedItem()!=null){this.id_rutaFK_IdRuta=((Ruta)this.jComboBoxid_rutaFK_IdRutaCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.getSelectedItem()!=null){this.id_tipo_precioFK_IdTipoPrecio=((TipoPrecio)this.jComboBoxid_tipo_precioFK_IdTipoPrecioCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.getSelectedItem()!=null){this.id_titulo_clienteFK_IdTituloCliente=((TituloCliente)this.jComboBoxid_titulo_clienteFK_IdTituloClienteCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorCliente.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_zonaFK_IdZonaCliente.getSelectedItem()!=null){this.id_zonaFK_IdZona=((Zona)this.jComboBoxid_zonaFK_IdZonaCliente.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasCliente(Boolean esInicializar) throws Exception {				
		if(ClienteJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualCliente();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaCliente() throws Exception {
		this.inicializarActualizarBindingTablaCliente(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByCliente() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByCliente.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByCliente.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByCliente.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosClienteOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByCliente.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByCliente.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaCliente(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=clienteLogic.getClientes().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=clientes.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosCliente.setModel(new ClienteModel(this.clienteLogic.getClientes(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosCliente.setModel(new ClienteModel(this.clientes,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByCliente!=null && this.jInternalFrameOrderByCliente.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByCliente();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ClienteConstantesFunciones.SCLASSWEBTITULO,clienteConstantesFunciones.resaltarSeleccionarCliente,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ClienteConstantesFunciones.SCLASSWEBTITULO,clienteConstantesFunciones.resaltarSeleccionarCliente,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_ID));

		if(this.clienteConstantesFunciones.mostraridCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltaridCliente,this.clienteConstantesFunciones.activaridCliente,iSizeTabla,this,true,"idCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltaridCliente,this.clienteConstantesFunciones.activaridCliente,this,true,"idCliente","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDEMPRESA));

		if(this.clienteConstantesFunciones.mostrarid_empresaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.clienteConstantesFunciones.resaltarid_empresaCliente,this,this.clienteConstantesFunciones.activarid_empresaCliente,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.clienteConstantesFunciones.resaltarid_empresaCliente,this,this.clienteConstantesFunciones.activarid_empresaCliente,false,"id_empresaCliente","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.clienteConstantesFunciones.mostrarid_sucursalCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.clienteConstantesFunciones.resaltarid_sucursalCliente,this,this.clienteConstantesFunciones.activarid_sucursalCliente,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.clienteConstantesFunciones.resaltarid_sucursalCliente,this,this.clienteConstantesFunciones.activarid_sucursalCliente,false,"id_sucursalCliente","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_CODIGO));

		if(this.clienteConstantesFunciones.mostrarcodigoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarcodigoCliente,this.clienteConstantesFunciones.activarcodigoCliente,iSizeTabla,this,true,"codigoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarcodigoCliente,this.clienteConstantesFunciones.activarcodigoCliente,this,true,"codigoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION));

		if(this.clienteConstantesFunciones.mostrarid_tipo_identificacionCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoIdentificacionTableCell(this.tipoidentificacionsForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_identificacionCliente,this,this.clienteConstantesFunciones.activarid_tipo_identificacionCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoIdentificacionTableCell(this.tipoidentificacionsForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_identificacionCliente,this,this.clienteConstantesFunciones.activarid_tipo_identificacionCliente,true,"id_tipo_identificacionCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDENTIFICACION));

		if(this.clienteConstantesFunciones.mostraridentificacionCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDENTIFICACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltaridentificacionCliente,this.clienteConstantesFunciones.activaridentificacionCliente,iSizeTabla,this,true,"identificacionCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltaridentificacionCliente,this.clienteConstantesFunciones.activaridentificacionCliente,this,true,"identificacionCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_RUC));

		if(this.clienteConstantesFunciones.mostrarrucCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarrucCliente,this.clienteConstantesFunciones.activarrucCliente,iSizeTabla,this,true,"rucCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarrucCliente,this.clienteConstantesFunciones.activarrucCliente,this,true,"rucCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_NOMBRE));

		if(this.clienteConstantesFunciones.mostrarnombreCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarnombreCliente,this.clienteConstantesFunciones.activarnombreCliente,iSizeTabla,this,true,"nombreCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarnombreCliente,this.clienteConstantesFunciones.activarnombreCliente,this,true,"nombreCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_APELLIDO));

		if(this.clienteConstantesFunciones.mostrarapellidoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_APELLIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarapellidoCliente,this.clienteConstantesFunciones.activarapellidoCliente,iSizeTabla,this,true,"apellidoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarapellidoCliente,this.clienteConstantesFunciones.activarapellidoCliente,this,true,"apellidoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO));

		if(this.clienteConstantesFunciones.mostrarnombre_completoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarnombre_completoCliente,this.clienteConstantesFunciones.activarnombre_completoCliente,iSizeTabla,this,true,"nombre_completoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarnombre_completoCliente,this.clienteConstantesFunciones.activarnombre_completoCliente,this,true,"nombre_completoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL));

		if(this.clienteConstantesFunciones.mostrarnombre_comercialCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarnombre_comercialCliente,this.clienteConstantesFunciones.activarnombre_comercialCliente,iSizeTabla,this,true,"nombre_comercialCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarnombre_comercialCliente,this.clienteConstantesFunciones.activarnombre_comercialCliente,this,true,"nombre_comercialCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_TELEFONO));

		if(this.clienteConstantesFunciones.mostrartelefonoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltartelefonoCliente,this.clienteConstantesFunciones.activartelefonoCliente,iSizeTabla,this,true,"telefonoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltartelefonoCliente,this.clienteConstantesFunciones.activartelefonoCliente,this,true,"telefonoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_DIRECCION));

		if(this.clienteConstantesFunciones.mostrardireccionCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltardireccionCliente,this.clienteConstantesFunciones.activardireccionCliente,iSizeTabla,this,true,"direccionCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltardireccionCliente,this.clienteConstantesFunciones.activardireccionCliente,this,true,"direccionCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_ESPROVE));

		if(this.clienteConstantesFunciones.mostrares_proveCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_ESPROVE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.clienteConstantesFunciones.resaltares_proveCliente,this.clienteConstantesFunciones.activares_proveCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.clienteConstantesFunciones.resaltares_proveCliente,this.clienteConstantesFunciones.activares_proveCliente,this,true,"es_proveCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE));

		if(this.clienteConstantesFunciones.mostrarid_grupo_clienteCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new GrupoClienteTableCell(this.grupoclientesForeignKey,this.clienteConstantesFunciones.resaltarid_grupo_clienteCliente,this,this.clienteConstantesFunciones.activarid_grupo_clienteCliente,iSizeTabla));
			tableColumn.setCellEditor(new GrupoClienteTableCell(this.grupoclientesForeignKey,this.clienteConstantesFunciones.resaltarid_grupo_clienteCliente,this,this.clienteConstantesFunciones.activarid_grupo_clienteCliente,true,"id_grupo_clienteCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE));

		if(this.clienteConstantesFunciones.mostrarid_titulo_clienteCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TituloClienteTableCell(this.tituloclientesForeignKey,this.clienteConstantesFunciones.resaltarid_titulo_clienteCliente,this,this.clienteConstantesFunciones.activarid_titulo_clienteCliente,iSizeTabla));
			tableColumn.setCellEditor(new TituloClienteTableCell(this.tituloclientesForeignKey,this.clienteConstantesFunciones.resaltarid_titulo_clienteCliente,this,this.clienteConstantesFunciones.activarid_titulo_clienteCliente,true,"id_titulo_clienteCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDAREACR));

		if(this.clienteConstantesFunciones.mostrarid_area_crCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDAREACR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AreaCrTableCell(this.areacrsForeignKey,this.clienteConstantesFunciones.resaltarid_area_crCliente,this,this.clienteConstantesFunciones.activarid_area_crCliente,iSizeTabla));
			tableColumn.setCellEditor(new AreaCrTableCell(this.areacrsForeignKey,this.clienteConstantesFunciones.resaltarid_area_crCliente,this,this.clienteConstantesFunciones.activarid_area_crCliente,true,"id_area_crCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE));

		if(this.clienteConstantesFunciones.mostrarid_estado_clienteCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoClienteTableCell(this.estadoclientesForeignKey,this.clienteConstantesFunciones.resaltarid_estado_clienteCliente,this,this.clienteConstantesFunciones.activarid_estado_clienteCliente,iSizeTabla));
			tableColumn.setCellEditor(new EstadoClienteTableCell(this.estadoclientesForeignKey,this.clienteConstantesFunciones.resaltarid_estado_clienteCliente,this,this.clienteConstantesFunciones.activarid_estado_clienteCliente,true,"id_estado_clienteCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_OBSERVACION));

		if(this.clienteConstantesFunciones.mostrarobservacionCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_OBSERVACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarobservacionCliente,this.clienteConstantesFunciones.activarobservacionCliente,iSizeTabla,this,true,"observacionCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarobservacionCliente,this.clienteConstantesFunciones.activarobservacionCliente,this,true,"observacionCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPAIS));

		if(this.clienteConstantesFunciones.mostrarid_paisCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.clienteConstantesFunciones.resaltarid_paisCliente,this,this.clienteConstantesFunciones.activarid_paisCliente,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.clienteConstantesFunciones.resaltarid_paisCliente,this,this.clienteConstantesFunciones.activarid_paisCliente,true,"id_paisCliente","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDREGION));

		if(this.clienteConstantesFunciones.mostrarid_regionCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDREGION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new RegionTableCell(this.regionsForeignKey,this.clienteConstantesFunciones.resaltarid_regionCliente,this,this.clienteConstantesFunciones.activarid_regionCliente,iSizeTabla));
			tableColumn.setCellEditor(new RegionTableCell(this.regionsForeignKey,this.clienteConstantesFunciones.resaltarid_regionCliente,this,this.clienteConstantesFunciones.activarid_regionCliente,true,"id_regionCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPROVINCIA));

		if(this.clienteConstantesFunciones.mostrarid_provinciaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDPROVINCIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProvinciaTableCell(this.provinciasForeignKey,this.clienteConstantesFunciones.resaltarid_provinciaCliente,this,this.clienteConstantesFunciones.activarid_provinciaCliente,iSizeTabla));
			tableColumn.setCellEditor(new ProvinciaTableCell(this.provinciasForeignKey,this.clienteConstantesFunciones.resaltarid_provinciaCliente,this,this.clienteConstantesFunciones.activarid_provinciaCliente,true,"id_provinciaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCIUDAD));

		if(this.clienteConstantesFunciones.mostrarid_ciudadCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDCIUDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadsForeignKey,this.clienteConstantesFunciones.resaltarid_ciudadCliente,this,this.clienteConstantesFunciones.activarid_ciudadCliente,iSizeTabla));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadsForeignKey,this.clienteConstantesFunciones.resaltarid_ciudadCliente,this,this.clienteConstantesFunciones.activarid_ciudadCliente,true,"id_ciudadCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDZONA));

		if(this.clienteConstantesFunciones.mostrarid_zonaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDZONA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ZonaTableCell(this.zonasForeignKey,this.clienteConstantesFunciones.resaltarid_zonaCliente,this,this.clienteConstantesFunciones.activarid_zonaCliente,iSizeTabla));
			tableColumn.setCellEditor(new ZonaTableCell(this.zonasForeignKey,this.clienteConstantesFunciones.resaltarid_zonaCliente,this,this.clienteConstantesFunciones.activarid_zonaCliente,true,"id_zonaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD));

		if(this.clienteConstantesFunciones.mostrarid_pais_nacionalidadCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paisnacionalidadsForeignKey,this.clienteConstantesFunciones.resaltarid_pais_nacionalidadCliente,this,this.clienteConstantesFunciones.activarid_pais_nacionalidadCliente,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paisnacionalidadsForeignKey,this.clienteConstantesFunciones.resaltarid_pais_nacionalidadCliente,this,this.clienteConstantesFunciones.activarid_pais_nacionalidadCliente,true,"id_pais_nacionalidadCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO));

		if(this.clienteConstantesFunciones.mostrarid_tipo_cargo_laboCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCargoLaboTableCell(this.tipocargolabosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_cargo_laboCliente,this,this.clienteConstantesFunciones.activarid_tipo_cargo_laboCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoCargoLaboTableCell(this.tipocargolabosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_cargo_laboCliente,this,this.clienteConstantesFunciones.activarid_tipo_cargo_laboCliente,true,"id_tipo_cargo_laboCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU));

		if(this.clienteConstantesFunciones.mostrarid_tipo_nivel_eduCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoNivelEduTableCell(this.tiponiveledusForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_nivel_eduCliente,this,this.clienteConstantesFunciones.activarid_tipo_nivel_eduCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoNivelEduTableCell(this.tiponiveledusForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_nivel_eduCliente,this,this.clienteConstantesFunciones.activarid_tipo_nivel_eduCliente,true,"id_tipo_nivel_eduCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDPROFESION));

		if(this.clienteConstantesFunciones.mostrarid_profesionCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDPROFESION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProfesionTableCell(this.profesionsForeignKey,this.clienteConstantesFunciones.resaltarid_profesionCliente,this,this.clienteConstantesFunciones.activarid_profesionCliente,iSizeTabla));
			tableColumn.setCellEditor(new ProfesionTableCell(this.profesionsForeignKey,this.clienteConstantesFunciones.resaltarid_profesionCliente,this,this.clienteConstantesFunciones.activarid_profesionCliente,true,"id_profesionCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOGENERO));

		if(this.clienteConstantesFunciones.mostrarid_tipo_generoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTIPOGENERO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_generoCliente,this,this.clienteConstantesFunciones.activarid_tipo_generoCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_generoCliente,this,this.clienteConstantesFunciones.activarid_tipo_generoCliente,true,"id_tipo_generoCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDESTADOCIVIL));

		if(this.clienteConstantesFunciones.mostrarid_estado_civilCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDESTADOCIVIL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.clienteConstantesFunciones.resaltarid_estado_civilCliente,this,this.clienteConstantesFunciones.activarid_estado_civilCliente,iSizeTabla));
			tableColumn.setCellEditor(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.clienteConstantesFunciones.resaltarid_estado_civilCliente,this,this.clienteConstantesFunciones.activarid_estado_civilCliente,true,"id_estado_civilCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDESTADOLEGAL));

		if(this.clienteConstantesFunciones.mostrarid_estado_legalCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDESTADOLEGAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoLegalTableCell(this.estadolegalsForeignKey,this.clienteConstantesFunciones.resaltarid_estado_legalCliente,this,this.clienteConstantesFunciones.activarid_estado_legalCliente,iSizeTabla));
			tableColumn.setCellEditor(new EstadoLegalTableCell(this.estadolegalsForeignKey,this.clienteConstantesFunciones.resaltarid_estado_legalCliente,this,this.clienteConstantesFunciones.activarid_estado_legalCliente,true,"id_estado_legalCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_FECHANACIMIENTO));

		if(this.clienteConstantesFunciones.mostrarfecha_nacimientoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_FECHANACIMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.clienteConstantesFunciones.resaltarfecha_nacimientoCliente,this.clienteConstantesFunciones.activarfecha_nacimientoCliente,iSizeTabla,this,true,"fecha_nacimientoCliente","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.clienteConstantesFunciones.resaltarfecha_nacimientoCliente,this.clienteConstantesFunciones.activarfecha_nacimientoCliente,this,true,"fecha_nacimientoCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA));

		if(this.clienteConstantesFunciones.mostrarpath_imagen_firmaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarpath_imagen_firmaCliente,this.clienteConstantesFunciones.activarpath_imagen_firmaCliente,iSizeTabla,this,true,"path_imagen_firmaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarpath_imagen_firmaCliente,this.clienteConstantesFunciones.activarpath_imagen_firmaCliente,this,true,"path_imagen_firmaCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_CONTACTO));

		if(this.clienteConstantesFunciones.mostrarcontactoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_CONTACTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarcontactoCliente,this.clienteConstantesFunciones.activarcontactoCliente,iSizeTabla,this,true,"contactoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarcontactoCliente,this.clienteConstantesFunciones.activarcontactoCliente,this,true,"contactoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.clienteConstantesFunciones.mostrarid_cuenta_contableCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.clienteConstantesFunciones.resaltarid_cuenta_contableCliente,this,this.clienteConstantesFunciones.activarid_cuenta_contableCliente,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.clienteConstantesFunciones.resaltarid_cuenta_contableCliente,this,this.clienteConstantesFunciones.activarid_cuenta_contableCliente,true,"id_cuenta_contableCliente","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDRUTA));

		if(this.clienteConstantesFunciones.mostrarid_rutaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDRUTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new RutaTableCell(this.rutasForeignKey,this.clienteConstantesFunciones.resaltarid_rutaCliente,this,this.clienteConstantesFunciones.activarid_rutaCliente,iSizeTabla));
			tableColumn.setCellEditor(new RutaTableCell(this.rutasForeignKey,this.clienteConstantesFunciones.resaltarid_rutaCliente,this,this.clienteConstantesFunciones.activarid_rutaCliente,true,"id_rutaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.clienteConstantesFunciones.mostrarid_vendedorCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.clienteConstantesFunciones.resaltarid_vendedorCliente,this,this.clienteConstantesFunciones.activarid_vendedorCliente,iSizeTabla));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.clienteConstantesFunciones.resaltarid_vendedorCliente,this,this.clienteConstantesFunciones.activarid_vendedorCliente,true,"id_vendedorCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD));

		if(this.clienteConstantesFunciones.mostrarid_centro_actividadCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroActividadTableCell(this.centroactividadsForeignKey,this.clienteConstantesFunciones.resaltarid_centro_actividadCliente,this,this.clienteConstantesFunciones.activarid_centro_actividadCliente,iSizeTabla));
			tableColumn.setCellEditor(new CentroActividadTableCell(this.centroactividadsForeignKey,this.clienteConstantesFunciones.resaltarid_centro_actividadCliente,this,this.clienteConstantesFunciones.activarid_centro_actividadCliente,true,"id_centro_actividadCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_REPRESENTANTE));

		if(this.clienteConstantesFunciones.mostrarrepresentanteCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_REPRESENTANTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarrepresentanteCliente,this.clienteConstantesFunciones.activarrepresentanteCliente,iSizeTabla,this,true,"representanteCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarrepresentanteCliente,this.clienteConstantesFunciones.activarrepresentanteCliente,this,true,"representanteCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA));

		if(this.clienteConstantesFunciones.mostrarid_tipo_garantia_empresaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGarantiaEmpresaTableCell(this.tipogarantiaempresasForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_garantia_empresaCliente,this,this.clienteConstantesFunciones.activarid_tipo_garantia_empresaCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoGarantiaEmpresaTableCell(this.tipogarantiaempresasForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_garantia_empresaCliente,this,this.clienteConstantesFunciones.activarid_tipo_garantia_empresaCliente,true,"id_tipo_garantia_empresaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_NOMBREGARANTIA));

		if(this.clienteConstantesFunciones.mostrarnombre_garantiaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_NOMBREGARANTIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarnombre_garantiaCliente,this.clienteConstantesFunciones.activarnombre_garantiaCliente,iSizeTabla,this,true,"nombre_garantiaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarnombre_garantiaCliente,this.clienteConstantesFunciones.activarnombre_garantiaCliente,this,true,"nombre_garantiaCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_VALORGARANTIA));

		if(this.clienteConstantesFunciones.mostrarvalor_garantiaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_VALORGARANTIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltarvalor_garantiaCliente,this.clienteConstantesFunciones.activarvalor_garantiaCliente,iSizeTabla,this,true,"valor_garantiaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarvalor_garantiaCliente,this.clienteConstantesFunciones.activarvalor_garantiaCliente,this,true,"valor_garantiaCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION));

		if(this.clienteConstantesFunciones.mostrarid_cate_tipo_afiliacionCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CateTipoAfiliacionTableCell(this.catetipoafiliacionsForeignKey,this.clienteConstantesFunciones.resaltarid_cate_tipo_afiliacionCliente,this,this.clienteConstantesFunciones.activarid_cate_tipo_afiliacionCliente,iSizeTabla));
			tableColumn.setCellEditor(new CateTipoAfiliacionTableCell(this.catetipoafiliacionsForeignKey,this.clienteConstantesFunciones.resaltarid_cate_tipo_afiliacionCliente,this,this.clienteConstantesFunciones.activarid_cate_tipo_afiliacionCliente,true,"id_cate_tipo_afiliacionCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_NUMEROCARGA));

		if(this.clienteConstantesFunciones.mostrarnumero_cargaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_NUMEROCARGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltarnumero_cargaCliente,this.clienteConstantesFunciones.activarnumero_cargaCliente,iSizeTabla,this,true,"numero_cargaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarnumero_cargaCliente,this.clienteConstantesFunciones.activarnumero_cargaCliente,this,true,"numero_cargaCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_CREDITOUSADO));

		if(this.clienteConstantesFunciones.mostrarcredito_usadoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_CREDITOUSADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltarcredito_usadoCliente,this.clienteConstantesFunciones.activarcredito_usadoCliente,iSizeTabla,this,true,"credito_usadoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarcredito_usadoCliente,this.clienteConstantesFunciones.activarcredito_usadoCliente,this,true,"credito_usadoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_LIMITECREDITO));

		if(this.clienteConstantesFunciones.mostrarlimite_creditoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_LIMITECREDITO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltarlimite_creditoCliente,this.clienteConstantesFunciones.activarlimite_creditoCliente,iSizeTabla,this,true,"limite_creditoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarlimite_creditoCliente,this.clienteConstantesFunciones.activarlimite_creditoCliente,this,true,"limite_creditoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE));

		if(this.clienteConstantesFunciones.mostrarcredito_disponibleCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltarcredito_disponibleCliente,this.clienteConstantesFunciones.activarcredito_disponibleCliente,iSizeTabla,this,true,"credito_disponibleCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarcredito_disponibleCliente,this.clienteConstantesFunciones.activarcredito_disponibleCliente,this,true,"credito_disponibleCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS));

		if(this.clienteConstantesFunciones.mostrartotal_documentosCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltartotal_documentosCliente,this.clienteConstantesFunciones.activartotal_documentosCliente,iSizeTabla,this,true,"total_documentosCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltartotal_documentosCliente,this.clienteConstantesFunciones.activartotal_documentosCliente,this,true,"total_documentosCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA));

		if(this.clienteConstantesFunciones.mostrarfecha_ultima_facturaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.clienteConstantesFunciones.resaltarfecha_ultima_facturaCliente,this.clienteConstantesFunciones.activarfecha_ultima_facturaCliente,iSizeTabla,this,true,"fecha_ultima_facturaCliente","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.clienteConstantesFunciones.resaltarfecha_ultima_facturaCliente,this.clienteConstantesFunciones.activarfecha_ultima_facturaCliente,this,true,"fecha_ultima_facturaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_DESCUENTO));

		if(this.clienteConstantesFunciones.mostrardescuentoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteConstantesFunciones.resaltardescuentoCliente,this.clienteConstantesFunciones.activardescuentoCliente,iSizeTabla,this,true,"descuentoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltardescuentoCliente,this.clienteConstantesFunciones.activardescuentoCliente,this,true,"descuentoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDDIA));

		if(this.clienteConstantesFunciones.mostrarid_diaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDDIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new DiaTableCell(this.diasForeignKey,this.clienteConstantesFunciones.resaltarid_diaCliente,this,this.clienteConstantesFunciones.activarid_diaCliente,iSizeTabla));
			tableColumn.setCellEditor(new DiaTableCell(this.diasForeignKey,this.clienteConstantesFunciones.resaltarid_diaCliente,this,this.clienteConstantesFunciones.activarid_diaCliente,true,"id_diaCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_HORAPAGO));

		if(this.clienteConstantesFunciones.mostrarhora_pagoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_HORAPAGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TimeRenderer(this.clienteConstantesFunciones.resaltarhora_pagoCliente,this.clienteConstantesFunciones.activarhora_pagoCliente,iSizeTabla,this,true,"hora_pagoCliente","BASICO"));
			tableColumn.setCellEditor(new TimeEditorRenderer(this.clienteConstantesFunciones.resaltarhora_pagoCliente,this.clienteConstantesFunciones.activarhora_pagoCliente,iSizeTabla,this,true,"hora_pagoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.clienteConstantesFunciones.mostrarid_empleadoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.clienteConstantesFunciones.resaltarid_empleadoCliente,this,this.clienteConstantesFunciones.activarid_empleadoCliente,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.clienteConstantesFunciones.resaltarid_empleadoCliente,this,this.clienteConstantesFunciones.activarid_empleadoCliente,true,"id_empleadoCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_COBRANZAS));

		if(this.clienteConstantesFunciones.mostrarcobranzasCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_COBRANZAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarcobranzasCliente,this.clienteConstantesFunciones.activarcobranzasCliente,iSizeTabla,this,true,"cobranzasCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarcobranzasCliente,this.clienteConstantesFunciones.activarcobranzasCliente,this,true,"cobranzasCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_MOTIVO));

		if(this.clienteConstantesFunciones.mostrarmotivoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_MOTIVO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarmotivoCliente,this.clienteConstantesFunciones.activarmotivoCliente,iSizeTabla,this,true,"motivoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarmotivoCliente,this.clienteConstantesFunciones.activarmotivoCliente,this,true,"motivoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_PREFERENCIA));

		if(this.clienteConstantesFunciones.mostrarpreferenciaCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_PREFERENCIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltarpreferenciaCliente,this.clienteConstantesFunciones.activarpreferenciaCliente,iSizeTabla,this,true,"preferenciaCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltarpreferenciaCliente,this.clienteConstantesFunciones.activarpreferenciaCliente,this,true,"preferenciaCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES));

		if(this.clienteConstantesFunciones.mostrarcon_separacion_bienesCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.clienteConstantesFunciones.resaltarcon_separacion_bienesCliente,this.clienteConstantesFunciones.activarcon_separacion_bienesCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.clienteConstantesFunciones.resaltarcon_separacion_bienesCliente,this.clienteConstantesFunciones.activarcon_separacion_bienesCliente,this,true,"con_separacion_bienesCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOPRECIO));

		if(this.clienteConstantesFunciones.mostrarid_tipo_precioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTIPOPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_precioCliente,this,this.clienteConstantesFunciones.activarid_tipo_precioCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_precioCliente,this,this.clienteConstantesFunciones.activarid_tipo_precioCliente,true,"id_tipo_precioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO));

		if(this.clienteConstantesFunciones.mostrarid_tipo_lista_precioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoListaPrecioTableCell(this.tipolistapreciosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_lista_precioCliente,this,this.clienteConstantesFunciones.activarid_tipo_lista_precioCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoListaPrecioTableCell(this.tipolistapreciosForeignKey,this.clienteConstantesFunciones.resaltarid_tipo_lista_precioCliente,this,this.clienteConstantesFunciones.activarid_tipo_lista_precioCliente,true,"id_tipo_lista_precioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_DETALLEESTADO));

		if(this.clienteConstantesFunciones.mostrardetalle_estadoCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_DETALLEESTADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteConstantesFunciones.resaltardetalle_estadoCliente,this.clienteConstantesFunciones.activardetalle_estadoCliente,iSizeTabla,this,true,"detalle_estadoCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteConstantesFunciones.resaltardetalle_estadoCliente,this.clienteConstantesFunciones.activardetalle_estadoCliente,this,true,"detalle_estadoCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosCliente,ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL));

		if(this.clienteConstantesFunciones.mostrares_contribuyente_especialCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.clienteConstantesFunciones.resaltares_contribuyente_especialCliente,this.clienteConstantesFunciones.activares_contribuyente_especialCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.clienteConstantesFunciones.resaltares_contribuyente_especialCliente,this.clienteConstantesFunciones.activares_contribuyente_especialCliente,this,true,"es_contribuyente_especialCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.clienteSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosContactoCliente && this.clienteConstantesFunciones.mostrarContactoClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Contacto Clientes");
				tableColumn.setHeaderValue("Contacto Clientes");
				tableColumn.setCellRenderer(new ContactoClienteTableCell(clienteConstantesFunciones.resaltarContactoClienteCliente,this,this.clienteConstantesFunciones.activarContactoClienteCliente));
				tableColumn.setCellEditor(new ContactoClienteTableCell(clienteConstantesFunciones.resaltarContactoClienteCliente,this,this.clienteConstantesFunciones.activarContactoClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosBien && this.clienteConstantesFunciones.mostrarBienCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Bienes");
				tableColumn.setHeaderValue("Bienes");
				tableColumn.setCellRenderer(new BienTableCell(clienteConstantesFunciones.resaltarBienCliente,this,this.clienteConstantesFunciones.activarBienCliente));
				tableColumn.setCellEditor(new BienTableCell(clienteConstantesFunciones.resaltarBienCliente,this,this.clienteConstantesFunciones.activarBienCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosCargaFamiliar && this.clienteConstantesFunciones.mostrarCargaFamiliarCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Carga Familiares");
				tableColumn.setHeaderValue("Carga Familiares");
				tableColumn.setCellRenderer(new CargaFamiliarTableCell(clienteConstantesFunciones.resaltarCargaFamiliarCliente,this,this.clienteConstantesFunciones.activarCargaFamiliarCliente));
				tableColumn.setCellEditor(new CargaFamiliarTableCell(clienteConstantesFunciones.resaltarCargaFamiliarCliente,this,this.clienteConstantesFunciones.activarCargaFamiliarCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosChequePostFechado && this.clienteConstantesFunciones.mostrarChequePostFechadoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Cheque Post Fechados");
				tableColumn.setHeaderValue("Cheque Post Fechados");
				tableColumn.setCellRenderer(new ChequePostFechadoTableCell(clienteConstantesFunciones.resaltarChequePostFechadoCliente,this,this.clienteConstantesFunciones.activarChequePostFechadoCliente));
				tableColumn.setCellEditor(new ChequePostFechadoTableCell(clienteConstantesFunciones.resaltarChequePostFechadoCliente,this,this.clienteConstantesFunciones.activarChequePostFechadoCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosEMail && this.clienteConstantesFunciones.mostrarEMailCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("E Mailes");
				tableColumn.setHeaderValue("E Mailes");
				tableColumn.setCellRenderer(new EMailTableCell(clienteConstantesFunciones.resaltarEMailCliente,this,this.clienteConstantesFunciones.activarEMailCliente));
				tableColumn.setCellEditor(new EMailTableCell(clienteConstantesFunciones.resaltarEMailCliente,this,this.clienteConstantesFunciones.activarEMailCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosReferenciaPersonal && this.clienteConstantesFunciones.mostrarReferenciaPersonalCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Referencia Personales");
				tableColumn.setHeaderValue("Referencia Personales");
				tableColumn.setCellRenderer(new ReferenciaPersonalTableCell(clienteConstantesFunciones.resaltarReferenciaPersonalCliente,this,this.clienteConstantesFunciones.activarReferenciaPersonalCliente));
				tableColumn.setCellEditor(new ReferenciaPersonalTableCell(clienteConstantesFunciones.resaltarReferenciaPersonalCliente,this,this.clienteConstantesFunciones.activarReferenciaPersonalCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosGarantiaCliente && this.clienteConstantesFunciones.mostrarGarantiaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Garantia Clientes");
				tableColumn.setHeaderValue("Garantia Clientes");
				tableColumn.setCellRenderer(new GarantiaClienteTableCell(clienteConstantesFunciones.resaltarGarantiaClienteCliente,this,this.clienteConstantesFunciones.activarGarantiaClienteCliente));
				tableColumn.setCellEditor(new GarantiaClienteTableCell(clienteConstantesFunciones.resaltarGarantiaClienteCliente,this,this.clienteConstantesFunciones.activarGarantiaClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosClienteArchivo && this.clienteConstantesFunciones.mostrarClienteArchivoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Cliente Archivos");
				tableColumn.setHeaderValue("Cliente Archivos");
				tableColumn.setCellRenderer(new ClienteArchivoTableCell(clienteConstantesFunciones.resaltarClienteArchivoCliente,this,this.clienteConstantesFunciones.activarClienteArchivoCliente));
				tableColumn.setCellEditor(new ClienteArchivoTableCell(clienteConstantesFunciones.resaltarClienteArchivoCliente,this,this.clienteConstantesFunciones.activarClienteArchivoCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosPoliticasCliente && this.clienteConstantesFunciones.mostrarPoliticasClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Politicas Clientes");
				tableColumn.setHeaderValue("Politicas Clientes");
				tableColumn.setCellRenderer(new PoliticasClienteTableCell(clienteConstantesFunciones.resaltarPoliticasClienteCliente,this,this.clienteConstantesFunciones.activarPoliticasClienteCliente));
				tableColumn.setCellEditor(new PoliticasClienteTableCell(clienteConstantesFunciones.resaltarPoliticasClienteCliente,this,this.clienteConstantesFunciones.activarPoliticasClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosFirmaCliente && this.clienteConstantesFunciones.mostrarFirmaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Firma Clientes");
				tableColumn.setHeaderValue("Firma Clientes");
				tableColumn.setCellRenderer(new FirmaClienteTableCell(clienteConstantesFunciones.resaltarFirmaClienteCliente,this,this.clienteConstantesFunciones.activarFirmaClienteCliente));
				tableColumn.setCellEditor(new FirmaClienteTableCell(clienteConstantesFunciones.resaltarFirmaClienteCliente,this,this.clienteConstantesFunciones.activarFirmaClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosReferenciaComercial && this.clienteConstantesFunciones.mostrarReferenciaComercialCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Referencia Comerciales");
				tableColumn.setHeaderValue("Referencia Comerciales");
				tableColumn.setCellRenderer(new ReferenciaComercialTableCell(clienteConstantesFunciones.resaltarReferenciaComercialCliente,this,this.clienteConstantesFunciones.activarReferenciaComercialCliente));
				tableColumn.setCellEditor(new ReferenciaComercialTableCell(clienteConstantesFunciones.resaltarReferenciaComercialCliente,this,this.clienteConstantesFunciones.activarReferenciaComercialCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosNovedad && this.clienteConstantesFunciones.mostrarNovedadCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Novedades");
				tableColumn.setHeaderValue("Novedades");
				tableColumn.setCellRenderer(new NovedadTableCell(clienteConstantesFunciones.resaltarNovedadCliente,this,this.clienteConstantesFunciones.activarNovedadCliente));
				tableColumn.setCellEditor(new NovedadTableCell(clienteConstantesFunciones.resaltarNovedadCliente,this,this.clienteConstantesFunciones.activarNovedadCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosInformacionLaboral && this.clienteConstantesFunciones.mostrarInformacionLaboralCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Informacion Laborales");
				tableColumn.setHeaderValue("Informacion Laborales");
				tableColumn.setCellRenderer(new InformacionLaboralTableCell(clienteConstantesFunciones.resaltarInformacionLaboralCliente,this,this.clienteConstantesFunciones.activarInformacionLaboralCliente));
				tableColumn.setCellEditor(new InformacionLaboralTableCell(clienteConstantesFunciones.resaltarInformacionLaboralCliente,this,this.clienteConstantesFunciones.activarInformacionLaboralCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosInformacionFinanciera && this.clienteConstantesFunciones.mostrarInformacionFinancieraCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Informacion Financieras");
				tableColumn.setHeaderValue("Informacion Financieras");
				tableColumn.setCellRenderer(new InformacionFinancieraTableCell(clienteConstantesFunciones.resaltarInformacionFinancieraCliente,this,this.clienteConstantesFunciones.activarInformacionFinancieraCliente));
				tableColumn.setCellEditor(new InformacionFinancieraTableCell(clienteConstantesFunciones.resaltarInformacionFinancieraCliente,this,this.clienteConstantesFunciones.activarInformacionFinancieraCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosTelefono && this.clienteConstantesFunciones.mostrarTelefonoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Telefonos");
				tableColumn.setHeaderValue("Telefonos");
				tableColumn.setCellRenderer(new TelefonoTableCell(clienteConstantesFunciones.resaltarTelefonoCliente,this,this.clienteConstantesFunciones.activarTelefonoCliente));
				tableColumn.setCellEditor(new TelefonoTableCell(clienteConstantesFunciones.resaltarTelefonoCliente,this,this.clienteConstantesFunciones.activarTelefonoCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosCuentaPorCobrar && this.clienteConstantesFunciones.mostrarCuentaPorCobrarCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Cuenta Por Cobrares");
				tableColumn.setHeaderValue("Cuenta Por Cobrares");
				tableColumn.setCellRenderer(new CuentaPorCobrarTableCell(clienteConstantesFunciones.resaltarCuentaPorCobrarCliente,this,this.clienteConstantesFunciones.activarCuentaPorCobrarCliente));
				tableColumn.setCellEditor(new CuentaPorCobrarTableCell(clienteConstantesFunciones.resaltarCuentaPorCobrarCliente,this,this.clienteConstantesFunciones.activarCuentaPorCobrarCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosResponsable && this.clienteConstantesFunciones.mostrarResponsableCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Responsables");
				tableColumn.setHeaderValue("Responsables");
				tableColumn.setCellRenderer(new ResponsableTableCell(clienteConstantesFunciones.resaltarResponsableCliente,this,this.clienteConstantesFunciones.activarResponsableCliente));
				tableColumn.setCellEditor(new ResponsableTableCell(clienteConstantesFunciones.resaltarResponsableCliente,this,this.clienteConstantesFunciones.activarResponsableCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosTransportista && this.clienteConstantesFunciones.mostrarTransportistaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Transportistas");
				tableColumn.setHeaderValue("Transportistas");
				tableColumn.setCellRenderer(new TransportistaTableCell(clienteConstantesFunciones.resaltarTransportistaCliente,this,this.clienteConstantesFunciones.activarTransportistaCliente));
				tableColumn.setCellEditor(new TransportistaTableCell(clienteConstantesFunciones.resaltarTransportistaCliente,this,this.clienteConstantesFunciones.activarTransportistaCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosPoliticaCliente && this.clienteConstantesFunciones.mostrarPoliticaClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Politica Clientes");
				tableColumn.setHeaderValue("Politica Clientes");
				tableColumn.setCellRenderer(new PoliticaClienteTableCell(clienteConstantesFunciones.resaltarPoliticaClienteCliente,this,this.clienteConstantesFunciones.activarPoliticaClienteCliente));
				tableColumn.setCellEditor(new PoliticaClienteTableCell(clienteConstantesFunciones.resaltarPoliticaClienteCliente,this,this.clienteConstantesFunciones.activarPoliticaClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosConyuge && this.clienteConstantesFunciones.mostrarConyugeCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Conyuges");
				tableColumn.setHeaderValue("Conyuges");
				tableColumn.setCellRenderer(new ConyugeTableCell(clienteConstantesFunciones.resaltarConyugeCliente,this,this.clienteConstantesFunciones.activarConyugeCliente));
				tableColumn.setCellEditor(new ConyugeTableCell(clienteConstantesFunciones.resaltarConyugeCliente,this,this.clienteConstantesFunciones.activarConyugeCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosReferenciaBancaria && this.clienteConstantesFunciones.mostrarReferenciaBancariaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Referencia Bancarias");
				tableColumn.setHeaderValue("Referencia Bancarias");
				tableColumn.setCellRenderer(new ReferenciaBancariaTableCell(clienteConstantesFunciones.resaltarReferenciaBancariaCliente,this,this.clienteConstantesFunciones.activarReferenciaBancariaCliente));
				tableColumn.setCellEditor(new ReferenciaBancariaTableCell(clienteConstantesFunciones.resaltarReferenciaBancariaCliente,this,this.clienteConstantesFunciones.activarReferenciaBancariaCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosBalanceGeneralCliente && this.clienteConstantesFunciones.mostrarBalanceGeneralClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Balance General Clientes");
				tableColumn.setHeaderValue("Balance General Clientes");
				tableColumn.setCellRenderer(new BalanceGeneralClienteTableCell(clienteConstantesFunciones.resaltarBalanceGeneralClienteCliente,this,this.clienteConstantesFunciones.activarBalanceGeneralClienteCliente));
				tableColumn.setCellEditor(new BalanceGeneralClienteTableCell(clienteConstantesFunciones.resaltarBalanceGeneralClienteCliente,this,this.clienteConstantesFunciones.activarBalanceGeneralClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosDatoConstitucion && this.clienteConstantesFunciones.mostrarDatoConstitucionCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Dato Constituciones");
				tableColumn.setHeaderValue("Dato Constituciones");
				tableColumn.setCellRenderer(new DatoConstitucionTableCell(clienteConstantesFunciones.resaltarDatoConstitucionCliente,this,this.clienteConstantesFunciones.activarDatoConstitucionCliente));
				tableColumn.setCellEditor(new DatoConstitucionTableCell(clienteConstantesFunciones.resaltarDatoConstitucionCliente,this,this.clienteConstantesFunciones.activarDatoConstitucionCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosActividadEconomica && this.clienteConstantesFunciones.mostrarActividadEconomicaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Actividad Economicas");
				tableColumn.setHeaderValue("Actividad Economicas");
				tableColumn.setCellRenderer(new ActividadEconomicaTableCell(clienteConstantesFunciones.resaltarActividadEconomicaCliente,this,this.clienteConstantesFunciones.activarActividadEconomicaCliente));
				tableColumn.setCellEditor(new ActividadEconomicaTableCell(clienteConstantesFunciones.resaltarActividadEconomicaCliente,this,this.clienteConstantesFunciones.activarActividadEconomicaCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosProveedorProducto && this.clienteConstantesFunciones.mostrarProveedorProductoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Producto Proveedors");
				tableColumn.setHeaderValue("Producto Proveedors");
				tableColumn.setCellRenderer(new ProveedorProductoTableCell(clienteConstantesFunciones.resaltarProveedorProductoCliente,this,this.clienteConstantesFunciones.activarProveedorProductoCliente));
				tableColumn.setCellEditor(new ProveedorProductoTableCell(clienteConstantesFunciones.resaltarProveedorProductoCliente,this,this.clienteConstantesFunciones.activarProveedorProductoCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosConsignatario && this.clienteConstantesFunciones.mostrarConsignatarioCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Consignatarios");
				tableColumn.setHeaderValue("Consignatarios");
				tableColumn.setCellRenderer(new ConsignatarioTableCell(clienteConstantesFunciones.resaltarConsignatarioCliente,this,this.clienteConstantesFunciones.activarConsignatarioCliente));
				tableColumn.setCellEditor(new ConsignatarioTableCell(clienteConstantesFunciones.resaltarConsignatarioCliente,this,this.clienteConstantesFunciones.activarConsignatarioCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosHobbyCliente && this.clienteConstantesFunciones.mostrarHobbyClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Hobby Clientes");
				tableColumn.setHeaderValue("Hobby Clientes");
				tableColumn.setCellRenderer(new HobbyClienteTableCell(clienteConstantesFunciones.resaltarHobbyClienteCliente,this,this.clienteConstantesFunciones.activarHobbyClienteCliente));
				tableColumn.setCellEditor(new HobbyClienteTableCell(clienteConstantesFunciones.resaltarHobbyClienteCliente,this,this.clienteConstantesFunciones.activarHobbyClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosRepresentanteLegal && this.clienteConstantesFunciones.mostrarRepresentanteLegalCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Representante Legales");
				tableColumn.setHeaderValue("Representante Legales");
				tableColumn.setCellRenderer(new RepresentanteLegalTableCell(clienteConstantesFunciones.resaltarRepresentanteLegalCliente,this,this.clienteConstantesFunciones.activarRepresentanteLegalCliente));
				tableColumn.setCellEditor(new RepresentanteLegalTableCell(clienteConstantesFunciones.resaltarRepresentanteLegalCliente,this,this.clienteConstantesFunciones.activarRepresentanteLegalCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosClienteCoa && this.clienteConstantesFunciones.mostrarClienteCoaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Coas");
				tableColumn.setHeaderValue("Coas");
				tableColumn.setCellRenderer(new ClienteCoaTableCell(clienteConstantesFunciones.resaltarClienteCoaCliente,this,this.clienteConstantesFunciones.activarClienteCoaCliente));
				tableColumn.setCellEditor(new ClienteCoaTableCell(clienteConstantesFunciones.resaltarClienteCoaCliente,this,this.clienteConstantesFunciones.activarClienteCoaCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosDireccion && this.clienteConstantesFunciones.mostrarDireccionCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Direcciones");
				tableColumn.setHeaderValue("Direcciones");
				tableColumn.setCellRenderer(new DireccionTableCell(clienteConstantesFunciones.resaltarDireccionCliente,this,this.clienteConstantesFunciones.activarDireccionCliente));
				tableColumn.setCellEditor(new DireccionTableCell(clienteConstantesFunciones.resaltarDireccionCliente,this,this.clienteConstantesFunciones.activarDireccionCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosClienteImagen && this.clienteConstantesFunciones.mostrarClienteImagenCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Cliente Imagenes");
				tableColumn.setHeaderValue("Cliente Imagenes");
				tableColumn.setCellRenderer(new ClienteImagenTableCell(clienteConstantesFunciones.resaltarClienteImagenCliente,this,this.clienteConstantesFunciones.activarClienteImagenCliente));
				tableColumn.setCellEditor(new ClienteImagenTableCell(clienteConstantesFunciones.resaltarClienteImagenCliente,this,this.clienteConstantesFunciones.activarClienteImagenCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosSubCliente && this.clienteConstantesFunciones.mostrarSubClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Sub Clientes");
				tableColumn.setHeaderValue("Sub Clientes");
				tableColumn.setCellRenderer(new SubClienteTableCell(clienteConstantesFunciones.resaltarSubClienteCliente,this,this.clienteConstantesFunciones.activarSubClienteCliente));
				tableColumn.setCellEditor(new SubClienteTableCell(clienteConstantesFunciones.resaltarSubClienteCliente,this,this.clienteConstantesFunciones.activarSubClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosServicioCliente && this.clienteConstantesFunciones.mostrarServicioClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Servicio Clientes");
				tableColumn.setHeaderValue("Servicio Clientes");
				tableColumn.setCellRenderer(new ServicioClienteTableCell(clienteConstantesFunciones.resaltarServicioClienteCliente,this,this.clienteConstantesFunciones.activarServicioClienteCliente));
				tableColumn.setCellEditor(new ServicioClienteTableCell(clienteConstantesFunciones.resaltarServicioClienteCliente,this,this.clienteConstantesFunciones.activarServicioClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosInformacionEconomica && this.clienteConstantesFunciones.mostrarInformacionEconomicaCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Informacion Economicas");
				tableColumn.setHeaderValue("Informacion Economicas");
				tableColumn.setCellRenderer(new InformacionEconomicaTableCell(clienteConstantesFunciones.resaltarInformacionEconomicaCliente,this,this.clienteConstantesFunciones.activarInformacionEconomicaCliente));
				tableColumn.setCellEditor(new InformacionEconomicaTableCell(clienteConstantesFunciones.resaltarInformacionEconomicaCliente,this,this.clienteConstantesFunciones.activarInformacionEconomicaCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosVehiculoCliente && this.clienteConstantesFunciones.mostrarVehiculoClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Vehiculo Clientes");
				tableColumn.setHeaderValue("Vehiculo Clientes");
				tableColumn.setCellRenderer(new VehiculoClienteTableCell(clienteConstantesFunciones.resaltarVehiculoClienteCliente,this,this.clienteConstantesFunciones.activarVehiculoClienteCliente));
				tableColumn.setCellEditor(new VehiculoClienteTableCell(clienteConstantesFunciones.resaltarVehiculoClienteCliente,this,this.clienteConstantesFunciones.activarVehiculoClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosNegocioCliente && this.clienteConstantesFunciones.mostrarNegocioClienteCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Negocio Clientes");
				tableColumn.setHeaderValue("Negocio Clientes");
				tableColumn.setCellRenderer(new NegocioClienteTableCell(clienteConstantesFunciones.resaltarNegocioClienteCliente,this,this.clienteConstantesFunciones.activarNegocioClienteCliente));
				tableColumn.setCellEditor(new NegocioClienteTableCell(clienteConstantesFunciones.resaltarNegocioClienteCliente,this,this.clienteConstantesFunciones.activarNegocioClienteCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}

			if(this.isTienePermisosMonto && this.clienteConstantesFunciones.mostrarMontoCliente && !ClienteConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Monto De Facturacions");
				tableColumn.setHeaderValue("Monto De Facturacions");
				tableColumn.setCellRenderer(new MontoTableCell(clienteConstantesFunciones.resaltarMontoCliente,this,this.clienteConstantesFunciones.activarMontoCliente));
				tableColumn.setCellEditor(new MontoTableCell(clienteConstantesFunciones.resaltarMontoCliente,this,this.clienteConstantesFunciones.activarMontoCliente));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosCliente.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.clienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.clienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosCliente.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.clienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.clienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosCliente.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarCliente && this.isPermisoGuardarCambiosCliente) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.clienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.clienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosCliente.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.clienteSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosCliente.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosCliente.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarCliente && this.isPermisoGuardarCambiosCliente) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.clienteSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarCliente && this.isPermisoGuardarCambiosCliente) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosCliente.moveColumn(this.jTableDatosCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosCliente.moveColumn(this.jTableDatosCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.clienteSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosCliente.moveColumn(this.jTableDatosCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosCliente.moveColumn(this.jTableDatosCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosCliente.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosCliente.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosCliente,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosCliente.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosCliente.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosCliente.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosCliente.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosCliente.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=clienteLogic.getClientes().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=clientes.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosCliente.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosCliente();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoCliente=false;
					
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
				if(this.clienteSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosCliente.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.cliente.getsType().equals("DUPLICADO")
				   || this.cliente.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoCliente=true;
				
				} else {
					this.isEsNuevoCliente=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.clienteSessionBean.getEsGuardarRelacionado()) {
					if(this.cliente.getId()>=0 && !this.cliente.getIsNew()) {						
						this.isEsNuevoCliente=false;
						
					} else {
						this.isEsNuevoCliente=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoCliente(esRelaciones);						
				
				this.seleccionarCliente(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.cliente.getId()<0) {
					this.isEsNuevoCliente=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarCliente(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarCliente(evt,rowIndex);
				}	
				
				if(this.clienteSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Cliente: " + this.dDif); 
					}
				}								
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarCliente(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.cliente)) {
					if(this.cliente.getId()>0) {
						this.cliente.setIsDeleted(true);
						
						this.clientesEliminados.add(this.cliente);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.clienteLogic.getClientes().remove(this.cliente);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.clientes.remove(this.cliente);				
					}
					
					
					((ClienteModel) this.jTableDatosCliente.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaCliente(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarCliente(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoCliente) {
			
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosCliente.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioCliente(this.cliente);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.clienteConstantesFunciones.cargarid_empresaCliente || this.clienteConstantesFunciones.event_dependid_empresaCliente) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.cliente.getid_empresa());
									//this.inicializarActualizarBindingCliente(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(cliente.getEmpresa()!=null) {
							this.empresasForeignKey.add(cliente.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.cliente.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.clienteConstantesFunciones.cargarid_sucursalCliente || this.clienteConstantesFunciones.event_dependid_sucursalCliente) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.cliente.getid_sucursal());
									//this.inicializarActualizarBindingCliente(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(cliente.getSucursal()!=null) {
							this.sucursalsForeignKey.add(cliente.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.cliente.getid_sucursal(),false,"Formulario");

					//TipoIdentificacion
					if(!this.clienteConstantesFunciones.cargarid_tipo_identificacionCliente || this.clienteConstantesFunciones.event_dependid_tipo_identificacionCliente) {
						//this.cargarCombosTipoIdentificacionsForeignKeyLista(" where id="+this.cliente.getid_tipo_identificacion());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>();

						if(cliente.getTipoIdentificacion()!=null) {
							this.tipoidentificacionsForeignKey.add(cliente.getTipoIdentificacion());
						}

						this.addItemDefectoCombosForeignKeyTipoIdentificacion();
						this.cargarCombosFrameTipoIdentificacionsForeignKey("Todos");
					}
					this.setActualTipoIdentificacionForeignKey(this.cliente.getid_tipo_identificacion(),false,"Formulario");

					//GrupoCliente
					if(!this.clienteConstantesFunciones.cargarid_grupo_clienteCliente || this.clienteConstantesFunciones.event_dependid_grupo_clienteCliente) {
						//this.cargarCombosGrupoClientesForeignKeyLista(" where id="+this.cliente.getid_grupo_cliente());
									//this.inicializarActualizarBindingCliente(false,false);
						this.grupoclientesForeignKey=new ArrayList<GrupoCliente>();

						if(cliente.getGrupoCliente()!=null) {
							this.grupoclientesForeignKey.add(cliente.getGrupoCliente());
						}

						this.addItemDefectoCombosForeignKeyGrupoCliente();
						this.cargarCombosFrameGrupoClientesForeignKey("Todos");
					}
					this.setActualGrupoClienteForeignKey(this.cliente.getid_grupo_cliente(),false,"Formulario");

					//TituloCliente
					if(!this.clienteConstantesFunciones.cargarid_titulo_clienteCliente || this.clienteConstantesFunciones.event_dependid_titulo_clienteCliente) {
						//this.cargarCombosTituloClientesForeignKeyLista(" where id="+this.cliente.getid_titulo_cliente());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tituloclientesForeignKey=new ArrayList<TituloCliente>();

						if(cliente.getTituloCliente()!=null) {
							this.tituloclientesForeignKey.add(cliente.getTituloCliente());
						}

						this.addItemDefectoCombosForeignKeyTituloCliente();
						this.cargarCombosFrameTituloClientesForeignKey("Todos");
					}
					this.setActualTituloClienteForeignKey(this.cliente.getid_titulo_cliente(),false,"Formulario");

					//AreaCr
					if(!this.clienteConstantesFunciones.cargarid_area_crCliente || this.clienteConstantesFunciones.event_dependid_area_crCliente) {
						//this.cargarCombosAreaCrsForeignKeyLista(" where id="+this.cliente.getid_area_cr());
									//this.inicializarActualizarBindingCliente(false,false);
						this.areacrsForeignKey=new ArrayList<AreaCr>();

						if(cliente.getAreaCr()!=null) {
							this.areacrsForeignKey.add(cliente.getAreaCr());
						}

						this.addItemDefectoCombosForeignKeyAreaCr();
						this.cargarCombosFrameAreaCrsForeignKey("Todos");
					}
					this.setActualAreaCrForeignKey(this.cliente.getid_area_cr(),false,"Formulario");

					//EstadoCliente
					if(!this.clienteConstantesFunciones.cargarid_estado_clienteCliente || this.clienteConstantesFunciones.event_dependid_estado_clienteCliente) {
						//this.cargarCombosEstadoClientesForeignKeyLista(" where id="+this.cliente.getid_estado_cliente());
									//this.inicializarActualizarBindingCliente(false,false);
						this.estadoclientesForeignKey=new ArrayList<EstadoCliente>();

						if(cliente.getEstadoCliente()!=null) {
							this.estadoclientesForeignKey.add(cliente.getEstadoCliente());
						}

						this.addItemDefectoCombosForeignKeyEstadoCliente();
						this.cargarCombosFrameEstadoClientesForeignKey("Todos");
					}
					this.setActualEstadoClienteForeignKey(this.cliente.getid_estado_cliente(),false,"Formulario");

					//Pais
					if(!this.clienteConstantesFunciones.cargarid_paisCliente || this.clienteConstantesFunciones.event_dependid_paisCliente) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.cliente.getid_pais());
									//this.inicializarActualizarBindingCliente(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(cliente.getPais()!=null) {
							this.paissForeignKey.add(cliente.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.cliente.getid_pais(),false,"Formulario");

					//Region
					if(!this.clienteConstantesFunciones.cargarid_regionCliente || this.clienteConstantesFunciones.event_dependid_regionCliente) {
						//this.cargarCombosRegionsForeignKeyLista(" where id="+this.cliente.getid_region());
									//this.inicializarActualizarBindingCliente(false,false);
						this.regionsForeignKey=new ArrayList<Region>();

						if(cliente.getRegion()!=null) {
							this.regionsForeignKey.add(cliente.getRegion());
						}

						this.addItemDefectoCombosForeignKeyRegion();
						this.cargarCombosFrameRegionsForeignKey("Todos");
					}
					this.setActualRegionForeignKey(this.cliente.getid_region(),false,"Formulario");

					//Provincia
					if(!this.clienteConstantesFunciones.cargarid_provinciaCliente || this.clienteConstantesFunciones.event_dependid_provinciaCliente) {
						//this.cargarCombosProvinciasForeignKeyLista(" where id="+this.cliente.getid_provincia());
									//this.inicializarActualizarBindingCliente(false,false);
						this.provinciasForeignKey=new ArrayList<Provincia>();

						if(cliente.getProvincia()!=null) {
							this.provinciasForeignKey.add(cliente.getProvincia());
						}

						this.addItemDefectoCombosForeignKeyProvincia();
						this.cargarCombosFrameProvinciasForeignKey("Todos");
					}
					this.setActualProvinciaForeignKey(this.cliente.getid_provincia(),false,"Formulario");

					//Ciudad
					if(!this.clienteConstantesFunciones.cargarid_ciudadCliente || this.clienteConstantesFunciones.event_dependid_ciudadCliente) {
						//this.cargarCombosCiudadsForeignKeyLista(" where id="+this.cliente.getid_ciudad());
									//this.inicializarActualizarBindingCliente(false,false);
						this.ciudadsForeignKey=new ArrayList<Ciudad>();

						if(cliente.getCiudad()!=null) {
							this.ciudadsForeignKey.add(cliente.getCiudad());
						}

						this.addItemDefectoCombosForeignKeyCiudad();
						this.cargarCombosFrameCiudadsForeignKey("Todos");
					}
					this.setActualCiudadForeignKey(this.cliente.getid_ciudad(),false,"Formulario");

					//Zona
					if(!this.clienteConstantesFunciones.cargarid_zonaCliente || this.clienteConstantesFunciones.event_dependid_zonaCliente) {
						//this.cargarCombosZonasForeignKeyLista(" where id="+this.cliente.getid_zona());
									//this.inicializarActualizarBindingCliente(false,false);
						this.zonasForeignKey=new ArrayList<Zona>();

						if(cliente.getZona()!=null) {
							this.zonasForeignKey.add(cliente.getZona());
						}

						this.addItemDefectoCombosForeignKeyZona();
						this.cargarCombosFrameZonasForeignKey("Todos");
					}
					this.setActualZonaForeignKey(this.cliente.getid_zona(),false,"Formulario");

					//PaisNacionalidad
					if(!this.clienteConstantesFunciones.cargarid_pais_nacionalidadCliente || this.clienteConstantesFunciones.event_dependid_pais_nacionalidadCliente) {
						//this.cargarCombosPaisNacionalidadsForeignKeyLista(" where id="+this.cliente.getid_pais_nacionalidad());
									//this.inicializarActualizarBindingCliente(false,false);
						this.paisnacionalidadsForeignKey=new ArrayList<Pais>();

						if(cliente.getPaisNacionalidad()!=null) {
							this.paisnacionalidadsForeignKey.add(cliente.getPaisNacionalidad());
						}

						this.addItemDefectoCombosForeignKeyPaisNacionalidad();
						this.cargarCombosFramePaisNacionalidadsForeignKey("Todos");
					}
					this.setActualPaisNacionalidadForeignKey(this.cliente.getid_pais_nacionalidad(),false,"Formulario");

					//TipoCargoLabo
					if(!this.clienteConstantesFunciones.cargarid_tipo_cargo_laboCliente || this.clienteConstantesFunciones.event_dependid_tipo_cargo_laboCliente) {
						//this.cargarCombosTipoCargoLabosForeignKeyLista(" where id="+this.cliente.getid_tipo_cargo_labo());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tipocargolabosForeignKey=new ArrayList<TipoCargoLabo>();

						if(cliente.getTipoCargoLabo()!=null) {
							this.tipocargolabosForeignKey.add(cliente.getTipoCargoLabo());
						}

						this.addItemDefectoCombosForeignKeyTipoCargoLabo();
						this.cargarCombosFrameTipoCargoLabosForeignKey("Todos");
					}
					this.setActualTipoCargoLaboForeignKey(this.cliente.getid_tipo_cargo_labo(),false,"Formulario");

					//TipoNivelEdu
					if(!this.clienteConstantesFunciones.cargarid_tipo_nivel_eduCliente || this.clienteConstantesFunciones.event_dependid_tipo_nivel_eduCliente) {
						//this.cargarCombosTipoNivelEdusForeignKeyLista(" where id="+this.cliente.getid_tipo_nivel_edu());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>();

						if(cliente.getTipoNivelEdu()!=null) {
							this.tiponiveledusForeignKey.add(cliente.getTipoNivelEdu());
						}

						this.addItemDefectoCombosForeignKeyTipoNivelEdu();
						this.cargarCombosFrameTipoNivelEdusForeignKey("Todos");
					}
					this.setActualTipoNivelEduForeignKey(this.cliente.getid_tipo_nivel_edu(),false,"Formulario");

					//Profesion
					if(!this.clienteConstantesFunciones.cargarid_profesionCliente || this.clienteConstantesFunciones.event_dependid_profesionCliente) {
						//this.cargarCombosProfesionsForeignKeyLista(" where id="+this.cliente.getid_profesion());
									//this.inicializarActualizarBindingCliente(false,false);
						this.profesionsForeignKey=new ArrayList<Profesion>();

						if(cliente.getProfesion()!=null) {
							this.profesionsForeignKey.add(cliente.getProfesion());
						}

						this.addItemDefectoCombosForeignKeyProfesion();
						this.cargarCombosFrameProfesionsForeignKey("Todos");
					}
					this.setActualProfesionForeignKey(this.cliente.getid_profesion(),false,"Formulario");

					//TipoGenero
					if(!this.clienteConstantesFunciones.cargarid_tipo_generoCliente || this.clienteConstantesFunciones.event_dependid_tipo_generoCliente) {
						//this.cargarCombosTipoGenerosForeignKeyLista(" where id="+this.cliente.getid_tipo_genero());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

						if(cliente.getTipoGenero()!=null) {
							this.tipogenerosForeignKey.add(cliente.getTipoGenero());
						}

						this.addItemDefectoCombosForeignKeyTipoGenero();
						this.cargarCombosFrameTipoGenerosForeignKey("Todos");
					}
					this.setActualTipoGeneroForeignKey(this.cliente.getid_tipo_genero(),false,"Formulario");

					//EstadoCivil
					if(!this.clienteConstantesFunciones.cargarid_estado_civilCliente || this.clienteConstantesFunciones.event_dependid_estado_civilCliente) {
						//this.cargarCombosEstadoCivilsForeignKeyLista(" where id="+this.cliente.getid_estado_civil());
									//this.inicializarActualizarBindingCliente(false,false);
						this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

						if(cliente.getEstadoCivil()!=null) {
							this.estadocivilsForeignKey.add(cliente.getEstadoCivil());
						}

						this.addItemDefectoCombosForeignKeyEstadoCivil();
						this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
					}
					this.setActualEstadoCivilForeignKey(this.cliente.getid_estado_civil(),false,"Formulario");

					//EstadoLegal
					if(!this.clienteConstantesFunciones.cargarid_estado_legalCliente || this.clienteConstantesFunciones.event_dependid_estado_legalCliente) {
						//this.cargarCombosEstadoLegalsForeignKeyLista(" where id="+this.cliente.getid_estado_legal());
									//this.inicializarActualizarBindingCliente(false,false);
						this.estadolegalsForeignKey=new ArrayList<EstadoLegal>();

						if(cliente.getEstadoLegal()!=null) {
							this.estadolegalsForeignKey.add(cliente.getEstadoLegal());
						}

						this.addItemDefectoCombosForeignKeyEstadoLegal();
						this.cargarCombosFrameEstadoLegalsForeignKey("Todos");
					}
					this.setActualEstadoLegalForeignKey(this.cliente.getid_estado_legal(),false,"Formulario");

					//CuentaContable
					if(!this.clienteConstantesFunciones.cargarid_cuenta_contableCliente || this.clienteConstantesFunciones.event_dependid_cuenta_contableCliente) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.cliente.getid_cuenta_contable());
									//this.inicializarActualizarBindingCliente(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(cliente.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(cliente.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.cliente.getid_cuenta_contable(),false,"Formulario");

					//Ruta
					if(!this.clienteConstantesFunciones.cargarid_rutaCliente || this.clienteConstantesFunciones.event_dependid_rutaCliente) {
						//this.cargarCombosRutasForeignKeyLista(" where id="+this.cliente.getid_ruta());
									//this.inicializarActualizarBindingCliente(false,false);
						this.rutasForeignKey=new ArrayList<Ruta>();

						if(cliente.getRuta()!=null) {
							this.rutasForeignKey.add(cliente.getRuta());
						}

						this.addItemDefectoCombosForeignKeyRuta();
						this.cargarCombosFrameRutasForeignKey("Todos");
					}
					this.setActualRutaForeignKey(this.cliente.getid_ruta(),false,"Formulario");

					//Vendedor
					if(!this.clienteConstantesFunciones.cargarid_vendedorCliente || this.clienteConstantesFunciones.event_dependid_vendedorCliente) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.cliente.getid_vendedor());
									//this.inicializarActualizarBindingCliente(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(cliente.getVendedor()!=null) {
							this.vendedorsForeignKey.add(cliente.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.cliente.getid_vendedor(),false,"Formulario");

					//CentroActividad
					if(!this.clienteConstantesFunciones.cargarid_centro_actividadCliente || this.clienteConstantesFunciones.event_dependid_centro_actividadCliente) {
						//this.cargarCombosCentroActividadsForeignKeyLista(" where id="+this.cliente.getid_centro_actividad());
									//this.inicializarActualizarBindingCliente(false,false);
						this.centroactividadsForeignKey=new ArrayList<CentroActividad>();

						if(cliente.getCentroActividad()!=null) {
							this.centroactividadsForeignKey.add(cliente.getCentroActividad());
						}

						this.addItemDefectoCombosForeignKeyCentroActividad();
						this.cargarCombosFrameCentroActividadsForeignKey("Todos");
					}
					this.setActualCentroActividadForeignKey(this.cliente.getid_centro_actividad(),false,"Formulario");

					//TipoGarantiaEmpresa
					if(!this.clienteConstantesFunciones.cargarid_tipo_garantia_empresaCliente || this.clienteConstantesFunciones.event_dependid_tipo_garantia_empresaCliente) {
						//this.cargarCombosTipoGarantiaEmpresasForeignKeyLista(" where id="+this.cliente.getid_tipo_garantia_empresa());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tipogarantiaempresasForeignKey=new ArrayList<TipoGarantiaEmpresa>();

						if(cliente.getTipoGarantiaEmpresa()!=null) {
							this.tipogarantiaempresasForeignKey.add(cliente.getTipoGarantiaEmpresa());
						}

						this.addItemDefectoCombosForeignKeyTipoGarantiaEmpresa();
						this.cargarCombosFrameTipoGarantiaEmpresasForeignKey("Todos");
					}
					this.setActualTipoGarantiaEmpresaForeignKey(this.cliente.getid_tipo_garantia_empresa(),false,"Formulario");

					//CateTipoAfiliacion
					if(!this.clienteConstantesFunciones.cargarid_cate_tipo_afiliacionCliente || this.clienteConstantesFunciones.event_dependid_cate_tipo_afiliacionCliente) {
						//this.cargarCombosCateTipoAfiliacionsForeignKeyLista(" where id="+this.cliente.getid_cate_tipo_afiliacion());
									//this.inicializarActualizarBindingCliente(false,false);
						this.catetipoafiliacionsForeignKey=new ArrayList<CateTipoAfiliacion>();

						if(cliente.getCateTipoAfiliacion()!=null) {
							this.catetipoafiliacionsForeignKey.add(cliente.getCateTipoAfiliacion());
						}

						this.addItemDefectoCombosForeignKeyCateTipoAfiliacion();
						this.cargarCombosFrameCateTipoAfiliacionsForeignKey("Todos");
					}
					this.setActualCateTipoAfiliacionForeignKey(this.cliente.getid_cate_tipo_afiliacion(),false,"Formulario");

					//Dia
					if(!this.clienteConstantesFunciones.cargarid_diaCliente || this.clienteConstantesFunciones.event_dependid_diaCliente) {
						//this.cargarCombosDiasForeignKeyLista(" where id="+this.cliente.getid_dia());
									//this.inicializarActualizarBindingCliente(false,false);
						this.diasForeignKey=new ArrayList<Dia>();

						if(cliente.getDia()!=null) {
							this.diasForeignKey.add(cliente.getDia());
						}

						this.addItemDefectoCombosForeignKeyDia();
						this.cargarCombosFrameDiasForeignKey("Todos");
					}
					this.setActualDiaForeignKey(this.cliente.getid_dia(),false,"Formulario");

					//Empleado
					if(!this.clienteConstantesFunciones.cargarid_empleadoCliente || this.clienteConstantesFunciones.event_dependid_empleadoCliente) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.cliente.getid_empleado());
									//this.inicializarActualizarBindingCliente(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(cliente.getEmpleado()!=null) {
							this.empleadosForeignKey.add(cliente.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.cliente.getid_empleado(),false,"Formulario");

					//TipoPrecio
					if(!this.clienteConstantesFunciones.cargarid_tipo_precioCliente || this.clienteConstantesFunciones.event_dependid_tipo_precioCliente) {
						//this.cargarCombosTipoPreciosForeignKeyLista(" where id="+this.cliente.getid_tipo_precio());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

						if(cliente.getTipoPrecio()!=null) {
							this.tipopreciosForeignKey.add(cliente.getTipoPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoPrecio();
						this.cargarCombosFrameTipoPreciosForeignKey("Todos");
					}
					this.setActualTipoPrecioForeignKey(this.cliente.getid_tipo_precio(),false,"Formulario");

					//TipoListaPrecio
					if(!this.clienteConstantesFunciones.cargarid_tipo_lista_precioCliente || this.clienteConstantesFunciones.event_dependid_tipo_lista_precioCliente) {
						//this.cargarCombosTipoListaPreciosForeignKeyLista(" where id="+this.cliente.getid_tipo_lista_precio());
									//this.inicializarActualizarBindingCliente(false,false);
						this.tipolistapreciosForeignKey=new ArrayList<TipoListaPrecio>();

						if(cliente.getTipoListaPrecio()!=null) {
							this.tipolistapreciosForeignKey.add(cliente.getTipoListaPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoListaPrecio();
						this.cargarCombosFrameTipoListaPreciosForeignKey("Todos");
					}
					this.setActualTipoListaPrecioForeignKey(this.cliente.getid_tipo_lista_precio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesCliente("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesCliente(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualCliente() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoCliente(Cliente cliente) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoCliente(cliente,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoCliente(Cliente cliente,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioCliente(cliente);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyCliente(cliente,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyCliente(cliente);
	}
	
	public void setVariablesObjetoActualToFormularioCliente(Cliente cliente) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormCliente.jLabelidCliente.setText(cliente.getId().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.setText(cliente.getcodigo());
			this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.setText(cliente.getidentificacion());
			this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.setText(cliente.getruc());
			this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.setText(cliente.getnombre());
			this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.setText(cliente.getapellido());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.setText(cliente.getnombre_completo());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.setText(cliente.getnombre_comercial());
			this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.setText(cliente.gettelefono());
			this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.setText(cliente.getdireccion());
			this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setSelected(cliente.getes_prove());
			this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.setText(cliente.getobservacion());
			this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.setDate(cliente.getfecha_nacimiento());
			this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.setText(cliente.getpath_imagen_firma());
			this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.setText(cliente.getcontacto());
			this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.setText(cliente.getrepresentante());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.setText(cliente.getnombre_garantia());
			this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.setText(cliente.getvalor_garantia().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.setText(cliente.getnumero_carga().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.setText(cliente.getcredito_usado().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.setText(cliente.getlimite_credito().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.setText(cliente.getcredito_disponible().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.setText(cliente.gettotal_documentos().toString());
			this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.setDate(cliente.getfecha_ultima_factura());
			this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.setText(cliente.getdescuento().toString());
			this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.setValue(cliente.gethora_pago());
			this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.setText(cliente.getcobranzas());
			this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.setText(cliente.getmotivo());
			this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.setText(cliente.getpreferencia());
			this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setSelected(cliente.getcon_separacion_bienes());
			this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.setText(cliente.getdetalle_estado());
			this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setSelected(cliente.getes_contribuyente_especial());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Cliente clienteLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,clienteLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Cliente clienteLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				clienteLocal=this.cliente;
			} else {
				clienteLocal=this.clienteAnterior;
			}
		}
		
		if(this.permiteMantenimiento(clienteLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoCliente(clienteLocal,true);
					
					if(clienteSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(clienteLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.clienteSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(clienteLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoCliente(Cliente cliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualCliente(cliente,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysCliente(cliente);
	}
	
	public void setVariablesFormularioToObjetoActualCliente(Cliente cliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualCliente(cliente,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualCliente(Cliente cliente,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormCliente.jLabelidCliente.getText()==null || this.jInternalFrameDetalleFormCliente.jLabelidCliente.getText()=="" || this.jInternalFrameDetalleFormCliente.jLabelidCliente.getText()=="Id") {
				this.jInternalFrameDetalleFormCliente.jLabelidCliente.setText("0");
			}

			if(conColumnasBase) {cliente.setId(Long.parseLong(this.jInternalFrameDetalleFormCliente.jLabelidCliente.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelIdCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setcodigo(this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcodigoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setidentificacion(this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_IDENTIFICACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelidentificacionCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setruc(this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelrucCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setnombre(this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombreCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setapellido(this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_APELLIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelapellidoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setnombre_completo(this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombre_completoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setnombre_comercial(this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombre_comercialCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.settelefono(this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeltelefonoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setdireccion(this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeldireccionCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setes_prove(this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_ESPROVE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeles_proveCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setobservacion(this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_OBSERVACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelobservacionCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setfecha_nacimiento(this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_FECHANACIMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelfecha_nacimientoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setpath_imagen_firma(this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelpath_imagen_firmaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setcontacto(this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_CONTACTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcontactoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setrepresentante(this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_REPRESENTANTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelrepresentanteCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setnombre_garantia(this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_NOMBREGARANTIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnombre_garantiaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setvalor_garantia(Double.parseDouble(this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_VALORGARANTIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelvalor_garantiaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setnumero_carga(Integer.parseInt(this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_NUMEROCARGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelnumero_cargaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setcredito_usado(Double.parseDouble(this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_CREDITOUSADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcredito_usadoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setlimite_credito(Double.parseDouble(this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_LIMITECREDITO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabellimite_creditoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setcredito_disponible(Double.parseDouble(this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcredito_disponibleCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.settotal_documentos(Double.parseDouble(this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeltotal_documentosCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setfecha_ultima_factura(this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelfecha_ultima_facturaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeldescuentoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.sethora_pago(new Time(((Date)this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.getValue()).getTime()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_HORAPAGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelhora_pagoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setcobranzas(this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_COBRANZAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcobranzasCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setmotivo(this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_MOTIVO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelmotivoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setpreferencia(this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_PREFERENCIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelpreferenciaCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setcon_separacion_bienes(this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabelcon_separacion_bienesCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setdetalle_estado(this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_DETALLEESTADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeldetalle_estadoCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			cliente.setes_contribuyente_especial(this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormCliente.jLabeles_contribuyente_especialCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualCliente(Cliente clienteBean,Cliente cliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && clienteBean.getid_tipo_identificacion()!=null && !clienteBean.getid_tipo_identificacion().equals(-1L))) {cliente.setid_tipo_identificacion(clienteBean.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && clienteBean.getid_grupo_cliente()!=null && !clienteBean.getid_grupo_cliente().equals(-1L))) {cliente.setid_grupo_cliente(clienteBean.getid_grupo_cliente());}
			if(conDefault || (!conDefault && clienteBean.getid_titulo_cliente()!=null && !clienteBean.getid_titulo_cliente().equals(-1L))) {cliente.setid_titulo_cliente(clienteBean.getid_titulo_cliente());}
			if(conDefault || (!conDefault && clienteBean.getid_area_cr()!=null && !clienteBean.getid_area_cr().equals(-1L))) {cliente.setid_area_cr(clienteBean.getid_area_cr());}
			if(conDefault || (!conDefault && clienteBean.getid_estado_cliente()!=null && !clienteBean.getid_estado_cliente().equals(-1L))) {cliente.setid_estado_cliente(clienteBean.getid_estado_cliente());}
			if(conDefault || (!conDefault && clienteBean.getid_pais()!=null && !clienteBean.getid_pais().equals(-1L))) {cliente.setid_pais(clienteBean.getid_pais());}
			if(conDefault || (!conDefault && clienteBean.getid_region()!=null && !clienteBean.getid_region().equals(-1L))) {cliente.setid_region(clienteBean.getid_region());}
			if(conDefault || (!conDefault && clienteBean.getid_provincia()!=null && !clienteBean.getid_provincia().equals(-1L))) {cliente.setid_provincia(clienteBean.getid_provincia());}
			if(conDefault || (!conDefault && clienteBean.getid_ciudad()!=null && !clienteBean.getid_ciudad().equals(-1L))) {cliente.setid_ciudad(clienteBean.getid_ciudad());}
			if(conDefault || (!conDefault && clienteBean.getid_zona()!=null && !clienteBean.getid_zona().equals(-1L))) {cliente.setid_zona(clienteBean.getid_zona());}
			if(conDefault || (!conDefault && clienteBean.getid_pais_nacionalidad()!=null && !clienteBean.getid_pais_nacionalidad().equals(-1L))) {cliente.setid_pais_nacionalidad(clienteBean.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && clienteBean.getid_tipo_cargo_labo()!=null && !clienteBean.getid_tipo_cargo_labo().equals(-1L))) {cliente.setid_tipo_cargo_labo(clienteBean.getid_tipo_cargo_labo());}
			if(conDefault || (!conDefault && clienteBean.getid_tipo_nivel_edu()!=null && !clienteBean.getid_tipo_nivel_edu().equals(-1L))) {cliente.setid_tipo_nivel_edu(clienteBean.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && clienteBean.getid_profesion()!=null && !clienteBean.getid_profesion().equals(-1L))) {cliente.setid_profesion(clienteBean.getid_profesion());}
			if(conDefault || (!conDefault && clienteBean.getid_tipo_genero()!=null && !clienteBean.getid_tipo_genero().equals(-1L))) {cliente.setid_tipo_genero(clienteBean.getid_tipo_genero());}
			if(conDefault || (!conDefault && clienteBean.getid_estado_civil()!=null && !clienteBean.getid_estado_civil().equals(-1L))) {cliente.setid_estado_civil(clienteBean.getid_estado_civil());}
			if(conDefault || (!conDefault && clienteBean.getid_estado_legal()!=null && !clienteBean.getid_estado_legal().equals(-1L))) {cliente.setid_estado_legal(clienteBean.getid_estado_legal());}
			if(conDefault || (!conDefault && clienteBean.getid_cuenta_contable()!=null && !clienteBean.getid_cuenta_contable().equals(-1L))) {cliente.setid_cuenta_contable(clienteBean.getid_cuenta_contable());}
			if(conDefault || (!conDefault && clienteBean.getid_ruta()!=null && !clienteBean.getid_ruta().equals(-1L))) {cliente.setid_ruta(clienteBean.getid_ruta());}
			if(conDefault || (!conDefault && clienteBean.getid_vendedor()!=null && !clienteBean.getid_vendedor().equals(-1L))) {cliente.setid_vendedor(clienteBean.getid_vendedor());}
			if(conDefault || (!conDefault && clienteBean.getid_centro_actividad()!=null && !clienteBean.getid_centro_actividad().equals(null))) {cliente.setid_centro_actividad(clienteBean.getid_centro_actividad());}
			if(conDefault || (!conDefault && clienteBean.getid_tipo_garantia_empresa()!=null && !clienteBean.getid_tipo_garantia_empresa().equals(-1L))) {cliente.setid_tipo_garantia_empresa(clienteBean.getid_tipo_garantia_empresa());}
			if(conDefault || (!conDefault && clienteBean.getid_cate_tipo_afiliacion()!=null && !clienteBean.getid_cate_tipo_afiliacion().equals(-1L))) {cliente.setid_cate_tipo_afiliacion(clienteBean.getid_cate_tipo_afiliacion());}
			if(conDefault || (!conDefault && clienteBean.getid_dia()!=null && !clienteBean.getid_dia().equals(-1L))) {cliente.setid_dia(clienteBean.getid_dia());}
			if(conDefault || (!conDefault && clienteBean.getid_empleado()!=null && !clienteBean.getid_empleado().equals(-1L))) {cliente.setid_empleado(clienteBean.getid_empleado());}
			if(conDefault || (!conDefault && clienteBean.getid_tipo_precio()!=null && !clienteBean.getid_tipo_precio().equals(-1L))) {cliente.setid_tipo_precio(clienteBean.getid_tipo_precio());}
			if(conDefault || (!conDefault && clienteBean.getid_tipo_lista_precio()!=null && !clienteBean.getid_tipo_lista_precio().equals(-1L))) {cliente.setid_tipo_lista_precio(clienteBean.getid_tipo_lista_precio());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosCliente(Cliente clienteOrigen,Cliente cliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && clienteOrigen.getId()!=null && !clienteOrigen.getId().equals(0L))) {cliente.setId(clienteOrigen.getId());}}
			if(conDefault || (!conDefault && clienteOrigen.getcodigo()!=null && !clienteOrigen.getcodigo().equals(""))) {cliente.setcodigo(clienteOrigen.getcodigo());}
			if(conDefault || (!conDefault && clienteOrigen.getid_tipo_identificacion()!=null && !clienteOrigen.getid_tipo_identificacion().equals(-1L))) {cliente.setid_tipo_identificacion(clienteOrigen.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && clienteOrigen.getidentificacion()!=null && !clienteOrigen.getidentificacion().equals(""))) {cliente.setidentificacion(clienteOrigen.getidentificacion());}
			if(conDefault || (!conDefault && clienteOrigen.getruc()!=null && !clienteOrigen.getruc().equals(""))) {cliente.setruc(clienteOrigen.getruc());}
			if(conDefault || (!conDefault && clienteOrigen.getnombre()!=null && !clienteOrigen.getnombre().equals(""))) {cliente.setnombre(clienteOrigen.getnombre());}
			if(conDefault || (!conDefault && clienteOrigen.getapellido()!=null && !clienteOrigen.getapellido().equals(""))) {cliente.setapellido(clienteOrigen.getapellido());}
			if(conDefault || (!conDefault && clienteOrigen.getnombre_completo()!=null && !clienteOrigen.getnombre_completo().equals(""))) {cliente.setnombre_completo(clienteOrigen.getnombre_completo());}
			if(conDefault || (!conDefault && clienteOrigen.getnombre_comercial()!=null && !clienteOrigen.getnombre_comercial().equals(""))) {cliente.setnombre_comercial(clienteOrigen.getnombre_comercial());}
			if(conDefault || (!conDefault && clienteOrigen.gettelefono()!=null && !clienteOrigen.gettelefono().equals(""))) {cliente.settelefono(clienteOrigen.gettelefono());}
			if(conDefault || (!conDefault && clienteOrigen.getdireccion()!=null && !clienteOrigen.getdireccion().equals(""))) {cliente.setdireccion(clienteOrigen.getdireccion());}
			if(conDefault || (!conDefault && clienteOrigen.getes_prove()!=null && !clienteOrigen.getes_prove().equals(false))) {cliente.setes_prove(clienteOrigen.getes_prove());}
			if(conDefault || (!conDefault && clienteOrigen.getid_grupo_cliente()!=null && !clienteOrigen.getid_grupo_cliente().equals(-1L))) {cliente.setid_grupo_cliente(clienteOrigen.getid_grupo_cliente());}
			if(conDefault || (!conDefault && clienteOrigen.getid_titulo_cliente()!=null && !clienteOrigen.getid_titulo_cliente().equals(-1L))) {cliente.setid_titulo_cliente(clienteOrigen.getid_titulo_cliente());}
			if(conDefault || (!conDefault && clienteOrigen.getid_area_cr()!=null && !clienteOrigen.getid_area_cr().equals(-1L))) {cliente.setid_area_cr(clienteOrigen.getid_area_cr());}
			if(conDefault || (!conDefault && clienteOrigen.getid_estado_cliente()!=null && !clienteOrigen.getid_estado_cliente().equals(-1L))) {cliente.setid_estado_cliente(clienteOrigen.getid_estado_cliente());}
			if(conDefault || (!conDefault && clienteOrigen.getobservacion()!=null && !clienteOrigen.getobservacion().equals(""))) {cliente.setobservacion(clienteOrigen.getobservacion());}
			if(conDefault || (!conDefault && clienteOrigen.getid_pais()!=null && !clienteOrigen.getid_pais().equals(-1L))) {cliente.setid_pais(clienteOrigen.getid_pais());}
			if(conDefault || (!conDefault && clienteOrigen.getid_region()!=null && !clienteOrigen.getid_region().equals(-1L))) {cliente.setid_region(clienteOrigen.getid_region());}
			if(conDefault || (!conDefault && clienteOrigen.getid_provincia()!=null && !clienteOrigen.getid_provincia().equals(-1L))) {cliente.setid_provincia(clienteOrigen.getid_provincia());}
			if(conDefault || (!conDefault && clienteOrigen.getid_ciudad()!=null && !clienteOrigen.getid_ciudad().equals(-1L))) {cliente.setid_ciudad(clienteOrigen.getid_ciudad());}
			if(conDefault || (!conDefault && clienteOrigen.getid_zona()!=null && !clienteOrigen.getid_zona().equals(-1L))) {cliente.setid_zona(clienteOrigen.getid_zona());}
			if(conDefault || (!conDefault && clienteOrigen.getid_pais_nacionalidad()!=null && !clienteOrigen.getid_pais_nacionalidad().equals(-1L))) {cliente.setid_pais_nacionalidad(clienteOrigen.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && clienteOrigen.getid_tipo_cargo_labo()!=null && !clienteOrigen.getid_tipo_cargo_labo().equals(-1L))) {cliente.setid_tipo_cargo_labo(clienteOrigen.getid_tipo_cargo_labo());}
			if(conDefault || (!conDefault && clienteOrigen.getid_tipo_nivel_edu()!=null && !clienteOrigen.getid_tipo_nivel_edu().equals(-1L))) {cliente.setid_tipo_nivel_edu(clienteOrigen.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && clienteOrigen.getid_profesion()!=null && !clienteOrigen.getid_profesion().equals(-1L))) {cliente.setid_profesion(clienteOrigen.getid_profesion());}
			if(conDefault || (!conDefault && clienteOrigen.getid_tipo_genero()!=null && !clienteOrigen.getid_tipo_genero().equals(-1L))) {cliente.setid_tipo_genero(clienteOrigen.getid_tipo_genero());}
			if(conDefault || (!conDefault && clienteOrigen.getid_estado_civil()!=null && !clienteOrigen.getid_estado_civil().equals(-1L))) {cliente.setid_estado_civil(clienteOrigen.getid_estado_civil());}
			if(conDefault || (!conDefault && clienteOrigen.getid_estado_legal()!=null && !clienteOrigen.getid_estado_legal().equals(-1L))) {cliente.setid_estado_legal(clienteOrigen.getid_estado_legal());}
			if(conDefault || (!conDefault && clienteOrigen.getfecha_nacimiento()!=null && !clienteOrigen.getfecha_nacimiento().equals(new Date()))) {cliente.setfecha_nacimiento(clienteOrigen.getfecha_nacimiento());}
			if(conDefault || (!conDefault && clienteOrigen.getpath_imagen_firma()!=null && !clienteOrigen.getpath_imagen_firma().equals(""))) {cliente.setpath_imagen_firma(clienteOrigen.getpath_imagen_firma());}
			if(conDefault || (!conDefault && clienteOrigen.getcontacto()!=null && !clienteOrigen.getcontacto().equals(""))) {cliente.setcontacto(clienteOrigen.getcontacto());}
			if(conDefault || (!conDefault && clienteOrigen.getid_cuenta_contable()!=null && !clienteOrigen.getid_cuenta_contable().equals(-1L))) {cliente.setid_cuenta_contable(clienteOrigen.getid_cuenta_contable());}
			if(conDefault || (!conDefault && clienteOrigen.getid_ruta()!=null && !clienteOrigen.getid_ruta().equals(-1L))) {cliente.setid_ruta(clienteOrigen.getid_ruta());}
			if(conDefault || (!conDefault && clienteOrigen.getid_vendedor()!=null && !clienteOrigen.getid_vendedor().equals(-1L))) {cliente.setid_vendedor(clienteOrigen.getid_vendedor());}
			if(conDefault || (!conDefault && clienteOrigen.getid_centro_actividad()!=null && !clienteOrigen.getid_centro_actividad().equals(null))) {cliente.setid_centro_actividad(clienteOrigen.getid_centro_actividad());}
			if(conDefault || (!conDefault && clienteOrigen.getrepresentante()!=null && !clienteOrigen.getrepresentante().equals(""))) {cliente.setrepresentante(clienteOrigen.getrepresentante());}
			if(conDefault || (!conDefault && clienteOrigen.getid_tipo_garantia_empresa()!=null && !clienteOrigen.getid_tipo_garantia_empresa().equals(-1L))) {cliente.setid_tipo_garantia_empresa(clienteOrigen.getid_tipo_garantia_empresa());}
			if(conDefault || (!conDefault && clienteOrigen.getnombre_garantia()!=null && !clienteOrigen.getnombre_garantia().equals(""))) {cliente.setnombre_garantia(clienteOrigen.getnombre_garantia());}
			if(conDefault || (!conDefault && clienteOrigen.getvalor_garantia()!=null && !clienteOrigen.getvalor_garantia().equals(0.0))) {cliente.setvalor_garantia(clienteOrigen.getvalor_garantia());}
			if(conDefault || (!conDefault && clienteOrigen.getid_cate_tipo_afiliacion()!=null && !clienteOrigen.getid_cate_tipo_afiliacion().equals(-1L))) {cliente.setid_cate_tipo_afiliacion(clienteOrigen.getid_cate_tipo_afiliacion());}
			if(conDefault || (!conDefault && clienteOrigen.getnumero_carga()!=null && !clienteOrigen.getnumero_carga().equals(0))) {cliente.setnumero_carga(clienteOrigen.getnumero_carga());}
			if(conDefault || (!conDefault && clienteOrigen.getcredito_usado()!=null && !clienteOrigen.getcredito_usado().equals(0.0))) {cliente.setcredito_usado(clienteOrigen.getcredito_usado());}
			if(conDefault || (!conDefault && clienteOrigen.getlimite_credito()!=null && !clienteOrigen.getlimite_credito().equals(0.0))) {cliente.setlimite_credito(clienteOrigen.getlimite_credito());}
			if(conDefault || (!conDefault && clienteOrigen.getcredito_disponible()!=null && !clienteOrigen.getcredito_disponible().equals(0.0))) {cliente.setcredito_disponible(clienteOrigen.getcredito_disponible());}
			if(conDefault || (!conDefault && clienteOrigen.gettotal_documentos()!=null && !clienteOrigen.gettotal_documentos().equals(0.0))) {cliente.settotal_documentos(clienteOrigen.gettotal_documentos());}
			if(conDefault || (!conDefault && clienteOrigen.getfecha_ultima_factura()!=null && !clienteOrigen.getfecha_ultima_factura().equals(new Date()))) {cliente.setfecha_ultima_factura(clienteOrigen.getfecha_ultima_factura());}
			if(conDefault || (!conDefault && clienteOrigen.getdescuento()!=null && !clienteOrigen.getdescuento().equals(0.0))) {cliente.setdescuento(clienteOrigen.getdescuento());}
			if(conDefault || (!conDefault && clienteOrigen.getid_dia()!=null && !clienteOrigen.getid_dia().equals(-1L))) {cliente.setid_dia(clienteOrigen.getid_dia());}
			if(conDefault || (!conDefault && clienteOrigen.gethora_pago()!=null && !clienteOrigen.gethora_pago().equals(new Time((new Date()).getTime())))) {cliente.sethora_pago(clienteOrigen.gethora_pago());}
			if(conDefault || (!conDefault && clienteOrigen.getid_empleado()!=null && !clienteOrigen.getid_empleado().equals(-1L))) {cliente.setid_empleado(clienteOrigen.getid_empleado());}
			if(conDefault || (!conDefault && clienteOrigen.getcobranzas()!=null && !clienteOrigen.getcobranzas().equals(""))) {cliente.setcobranzas(clienteOrigen.getcobranzas());}
			if(conDefault || (!conDefault && clienteOrigen.getmotivo()!=null && !clienteOrigen.getmotivo().equals(""))) {cliente.setmotivo(clienteOrigen.getmotivo());}
			if(conDefault || (!conDefault && clienteOrigen.getpreferencia()!=null && !clienteOrigen.getpreferencia().equals(""))) {cliente.setpreferencia(clienteOrigen.getpreferencia());}
			if(conDefault || (!conDefault && clienteOrigen.getcon_separacion_bienes()!=null && !clienteOrigen.getcon_separacion_bienes().equals(false))) {cliente.setcon_separacion_bienes(clienteOrigen.getcon_separacion_bienes());}
			if(conDefault || (!conDefault && clienteOrigen.getid_tipo_precio()!=null && !clienteOrigen.getid_tipo_precio().equals(-1L))) {cliente.setid_tipo_precio(clienteOrigen.getid_tipo_precio());}
			if(conDefault || (!conDefault && clienteOrigen.getid_tipo_lista_precio()!=null && !clienteOrigen.getid_tipo_lista_precio().equals(-1L))) {cliente.setid_tipo_lista_precio(clienteOrigen.getid_tipo_lista_precio());}
			if(conDefault || (!conDefault && clienteOrigen.getdetalle_estado()!=null && !clienteOrigen.getdetalle_estado().equals(""))) {cliente.setdetalle_estado(clienteOrigen.getdetalle_estado());}
			if(conDefault || (!conDefault && clienteOrigen.getes_contribuyente_especial()!=null && !clienteOrigen.getes_contribuyente_especial().equals(false))) {cliente.setes_contribuyente_especial(clienteOrigen.getes_contribuyente_especial());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioCliente(Cliente cliente) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormCliente.jLabelidCliente.setText(cliente.getId().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.setText(cliente.getcodigo());
			this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.setText(cliente.getidentificacion());
			this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.setText(cliente.getruc());
			this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.setText(cliente.getnombre());
			this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.setText(cliente.getapellido());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.setText(cliente.getnombre_completo());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.setText(cliente.getnombre_comercial());
			this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.setText(cliente.gettelefono());
			this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.setText(cliente.getdireccion());
			this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setSelected(cliente.getes_prove());
			this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.setText(cliente.getobservacion());
			this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.setDate(cliente.getfecha_nacimiento());
			this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.setText(cliente.getpath_imagen_firma());
			this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.setText(cliente.getcontacto());
			this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.setText(cliente.getrepresentante());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.setText(cliente.getnombre_garantia());
			this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.setText(cliente.getvalor_garantia().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.setText(cliente.getnumero_carga().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.setText(cliente.getcredito_usado().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.setText(cliente.getlimite_credito().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.setText(cliente.getcredito_disponible().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.setText(cliente.gettotal_documentos().toString());
			this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.setDate(cliente.getfecha_ultima_factura());
			this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.setText(cliente.getdescuento().toString());
			this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.setValue(cliente.gethora_pago());
			this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.setText(cliente.getcobranzas());
			this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.setText(cliente.getmotivo());
			this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.setText(cliente.getpreferencia());
			this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setSelected(cliente.getcon_separacion_bienes());
			this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.setText(cliente.getdetalle_estado());
			this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setSelected(cliente.getes_contribuyente_especial());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioCliente(ClienteBean clienteBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormCliente.jLabelidCliente.setText(clienteBean.getId().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.setText(clienteBean.getcodigo());
			this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.setText(clienteBean.getidentificacion());
			this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.setText(clienteBean.getruc());
			this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.setText(clienteBean.getnombre());
			this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.setText(clienteBean.getapellido());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.setText(clienteBean.getnombre_completo());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.setText(clienteBean.getnombre_comercial());
			this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.setText(clienteBean.gettelefono());
			this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.setText(clienteBean.getdireccion());
			this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setSelected(clienteBean.getes_prove());
			this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.setText(clienteBean.getobservacion());
			this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.setDate(clienteBean.getfecha_nacimiento());
			this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.setText(clienteBean.getpath_imagen_firma());
			this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.setText(clienteBean.getcontacto());
			this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.setText(clienteBean.getrepresentante());
			this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.setText(clienteBean.getnombre_garantia());
			this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.setText(clienteBean.getvalor_garantia().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.setText(clienteBean.getnumero_carga().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.setText(clienteBean.getcredito_usado().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.setText(clienteBean.getlimite_credito().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.setText(clienteBean.getcredito_disponible().toString());
			this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.setText(clienteBean.gettotal_documentos().toString());
			this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.setDate(clienteBean.getfecha_ultima_factura());
			this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.setText(clienteBean.getdescuento().toString());
			this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.setValue(clienteBean.gethora_pago());
			this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.setText(clienteBean.getcobranzas());
			this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.setText(clienteBean.getmotivo());
			this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.setText(clienteBean.getpreferencia());
			this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setSelected(clienteBean.getcon_separacion_bienes());
			this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.setText(clienteBean.getdetalle_estado());
			this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setSelected(clienteBean.getes_contribuyente_especial());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanCliente(ClienteParameterReturnGeneral clienteReturnGeneral,ClienteBean clienteBean,Boolean conDefault) throws Exception { 
		try {
			Cliente clienteLocal=new Cliente();
			
			clienteLocal=clienteReturnGeneral.getCliente();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && clienteLocal.getId()!=null && !clienteLocal.getId().equals(0L))) {clienteBean.setId(clienteLocal.getId());}}
			if(conDefault || (!conDefault && clienteLocal.getcodigo()!=null && !clienteLocal.getcodigo().equals(""))) {clienteBean.setcodigo(clienteLocal.getcodigo());}
			if(conDefault || (!conDefault && clienteLocal.getid_tipo_identificacion()!=null && !clienteLocal.getid_tipo_identificacion().equals(-1L))) {clienteBean.setid_tipo_identificacion(clienteLocal.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && clienteLocal.getidentificacion()!=null && !clienteLocal.getidentificacion().equals(""))) {clienteBean.setidentificacion(clienteLocal.getidentificacion());}
			if(conDefault || (!conDefault && clienteLocal.getruc()!=null && !clienteLocal.getruc().equals(""))) {clienteBean.setruc(clienteLocal.getruc());}
			if(conDefault || (!conDefault && clienteLocal.getnombre()!=null && !clienteLocal.getnombre().equals(""))) {clienteBean.setnombre(clienteLocal.getnombre());}
			if(conDefault || (!conDefault && clienteLocal.getapellido()!=null && !clienteLocal.getapellido().equals(""))) {clienteBean.setapellido(clienteLocal.getapellido());}
			if(conDefault || (!conDefault && clienteLocal.getnombre_completo()!=null && !clienteLocal.getnombre_completo().equals(""))) {clienteBean.setnombre_completo(clienteLocal.getnombre_completo());}
			if(conDefault || (!conDefault && clienteLocal.getnombre_comercial()!=null && !clienteLocal.getnombre_comercial().equals(""))) {clienteBean.setnombre_comercial(clienteLocal.getnombre_comercial());}
			if(conDefault || (!conDefault && clienteLocal.gettelefono()!=null && !clienteLocal.gettelefono().equals(""))) {clienteBean.settelefono(clienteLocal.gettelefono());}
			if(conDefault || (!conDefault && clienteLocal.getdireccion()!=null && !clienteLocal.getdireccion().equals(""))) {clienteBean.setdireccion(clienteLocal.getdireccion());}
			if(conDefault || (!conDefault && clienteLocal.getes_prove()!=null && !clienteLocal.getes_prove().equals(false))) {clienteBean.setes_prove(clienteLocal.getes_prove());}
			if(conDefault || (!conDefault && clienteLocal.getid_grupo_cliente()!=null && !clienteLocal.getid_grupo_cliente().equals(-1L))) {clienteBean.setid_grupo_cliente(clienteLocal.getid_grupo_cliente());}
			if(conDefault || (!conDefault && clienteLocal.getid_titulo_cliente()!=null && !clienteLocal.getid_titulo_cliente().equals(-1L))) {clienteBean.setid_titulo_cliente(clienteLocal.getid_titulo_cliente());}
			if(conDefault || (!conDefault && clienteLocal.getid_area_cr()!=null && !clienteLocal.getid_area_cr().equals(-1L))) {clienteBean.setid_area_cr(clienteLocal.getid_area_cr());}
			if(conDefault || (!conDefault && clienteLocal.getid_estado_cliente()!=null && !clienteLocal.getid_estado_cliente().equals(-1L))) {clienteBean.setid_estado_cliente(clienteLocal.getid_estado_cliente());}
			if(conDefault || (!conDefault && clienteLocal.getobservacion()!=null && !clienteLocal.getobservacion().equals(""))) {clienteBean.setobservacion(clienteLocal.getobservacion());}
			if(conDefault || (!conDefault && clienteLocal.getid_pais()!=null && !clienteLocal.getid_pais().equals(-1L))) {clienteBean.setid_pais(clienteLocal.getid_pais());}
			if(conDefault || (!conDefault && clienteLocal.getid_region()!=null && !clienteLocal.getid_region().equals(-1L))) {clienteBean.setid_region(clienteLocal.getid_region());}
			if(conDefault || (!conDefault && clienteLocal.getid_provincia()!=null && !clienteLocal.getid_provincia().equals(-1L))) {clienteBean.setid_provincia(clienteLocal.getid_provincia());}
			if(conDefault || (!conDefault && clienteLocal.getid_ciudad()!=null && !clienteLocal.getid_ciudad().equals(-1L))) {clienteBean.setid_ciudad(clienteLocal.getid_ciudad());}
			if(conDefault || (!conDefault && clienteLocal.getid_zona()!=null && !clienteLocal.getid_zona().equals(-1L))) {clienteBean.setid_zona(clienteLocal.getid_zona());}
			if(conDefault || (!conDefault && clienteLocal.getid_pais_nacionalidad()!=null && !clienteLocal.getid_pais_nacionalidad().equals(-1L))) {clienteBean.setid_pais_nacionalidad(clienteLocal.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && clienteLocal.getid_tipo_cargo_labo()!=null && !clienteLocal.getid_tipo_cargo_labo().equals(-1L))) {clienteBean.setid_tipo_cargo_labo(clienteLocal.getid_tipo_cargo_labo());}
			if(conDefault || (!conDefault && clienteLocal.getid_tipo_nivel_edu()!=null && !clienteLocal.getid_tipo_nivel_edu().equals(-1L))) {clienteBean.setid_tipo_nivel_edu(clienteLocal.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && clienteLocal.getid_profesion()!=null && !clienteLocal.getid_profesion().equals(-1L))) {clienteBean.setid_profesion(clienteLocal.getid_profesion());}
			if(conDefault || (!conDefault && clienteLocal.getid_tipo_genero()!=null && !clienteLocal.getid_tipo_genero().equals(-1L))) {clienteBean.setid_tipo_genero(clienteLocal.getid_tipo_genero());}
			if(conDefault || (!conDefault && clienteLocal.getid_estado_civil()!=null && !clienteLocal.getid_estado_civil().equals(-1L))) {clienteBean.setid_estado_civil(clienteLocal.getid_estado_civil());}
			if(conDefault || (!conDefault && clienteLocal.getid_estado_legal()!=null && !clienteLocal.getid_estado_legal().equals(-1L))) {clienteBean.setid_estado_legal(clienteLocal.getid_estado_legal());}
			if(conDefault || (!conDefault && clienteLocal.getfecha_nacimiento()!=null && !clienteLocal.getfecha_nacimiento().equals(new Date()))) {clienteBean.setfecha_nacimiento(clienteLocal.getfecha_nacimiento());}
			if(conDefault || (!conDefault && clienteLocal.getpath_imagen_firma()!=null && !clienteLocal.getpath_imagen_firma().equals(""))) {clienteBean.setpath_imagen_firma(clienteLocal.getpath_imagen_firma());}
			if(conDefault || (!conDefault && clienteLocal.getcontacto()!=null && !clienteLocal.getcontacto().equals(""))) {clienteBean.setcontacto(clienteLocal.getcontacto());}
			if(conDefault || (!conDefault && clienteLocal.getid_cuenta_contable()!=null && !clienteLocal.getid_cuenta_contable().equals(-1L))) {clienteBean.setid_cuenta_contable(clienteLocal.getid_cuenta_contable());}
			if(conDefault || (!conDefault && clienteLocal.getid_ruta()!=null && !clienteLocal.getid_ruta().equals(-1L))) {clienteBean.setid_ruta(clienteLocal.getid_ruta());}
			if(conDefault || (!conDefault && clienteLocal.getid_vendedor()!=null && !clienteLocal.getid_vendedor().equals(-1L))) {clienteBean.setid_vendedor(clienteLocal.getid_vendedor());}
			if(conDefault || (!conDefault && clienteLocal.getid_centro_actividad()!=null && !clienteLocal.getid_centro_actividad().equals(null))) {clienteBean.setid_centro_actividad(clienteLocal.getid_centro_actividad());}
			if(conDefault || (!conDefault && clienteLocal.getrepresentante()!=null && !clienteLocal.getrepresentante().equals(""))) {clienteBean.setrepresentante(clienteLocal.getrepresentante());}
			if(conDefault || (!conDefault && clienteLocal.getid_tipo_garantia_empresa()!=null && !clienteLocal.getid_tipo_garantia_empresa().equals(-1L))) {clienteBean.setid_tipo_garantia_empresa(clienteLocal.getid_tipo_garantia_empresa());}
			if(conDefault || (!conDefault && clienteLocal.getnombre_garantia()!=null && !clienteLocal.getnombre_garantia().equals(""))) {clienteBean.setnombre_garantia(clienteLocal.getnombre_garantia());}
			if(conDefault || (!conDefault && clienteLocal.getvalor_garantia()!=null && !clienteLocal.getvalor_garantia().equals(0.0))) {clienteBean.setvalor_garantia(clienteLocal.getvalor_garantia());}
			if(conDefault || (!conDefault && clienteLocal.getid_cate_tipo_afiliacion()!=null && !clienteLocal.getid_cate_tipo_afiliacion().equals(-1L))) {clienteBean.setid_cate_tipo_afiliacion(clienteLocal.getid_cate_tipo_afiliacion());}
			if(conDefault || (!conDefault && clienteLocal.getnumero_carga()!=null && !clienteLocal.getnumero_carga().equals(0))) {clienteBean.setnumero_carga(clienteLocal.getnumero_carga());}
			if(conDefault || (!conDefault && clienteLocal.getcredito_usado()!=null && !clienteLocal.getcredito_usado().equals(0.0))) {clienteBean.setcredito_usado(clienteLocal.getcredito_usado());}
			if(conDefault || (!conDefault && clienteLocal.getlimite_credito()!=null && !clienteLocal.getlimite_credito().equals(0.0))) {clienteBean.setlimite_credito(clienteLocal.getlimite_credito());}
			if(conDefault || (!conDefault && clienteLocal.getcredito_disponible()!=null && !clienteLocal.getcredito_disponible().equals(0.0))) {clienteBean.setcredito_disponible(clienteLocal.getcredito_disponible());}
			if(conDefault || (!conDefault && clienteLocal.gettotal_documentos()!=null && !clienteLocal.gettotal_documentos().equals(0.0))) {clienteBean.settotal_documentos(clienteLocal.gettotal_documentos());}
			if(conDefault || (!conDefault && clienteLocal.getfecha_ultima_factura()!=null && !clienteLocal.getfecha_ultima_factura().equals(new Date()))) {clienteBean.setfecha_ultima_factura(clienteLocal.getfecha_ultima_factura());}
			if(conDefault || (!conDefault && clienteLocal.getdescuento()!=null && !clienteLocal.getdescuento().equals(0.0))) {clienteBean.setdescuento(clienteLocal.getdescuento());}
			if(conDefault || (!conDefault && clienteLocal.getid_dia()!=null && !clienteLocal.getid_dia().equals(-1L))) {clienteBean.setid_dia(clienteLocal.getid_dia());}
			if(conDefault || (!conDefault && clienteLocal.gethora_pago()!=null && !clienteLocal.gethora_pago().equals(new Time((new Date()).getTime())))) {clienteBean.sethora_pago(clienteLocal.gethora_pago());}
			if(conDefault || (!conDefault && clienteLocal.getid_empleado()!=null && !clienteLocal.getid_empleado().equals(-1L))) {clienteBean.setid_empleado(clienteLocal.getid_empleado());}
			if(conDefault || (!conDefault && clienteLocal.getcobranzas()!=null && !clienteLocal.getcobranzas().equals(""))) {clienteBean.setcobranzas(clienteLocal.getcobranzas());}
			if(conDefault || (!conDefault && clienteLocal.getmotivo()!=null && !clienteLocal.getmotivo().equals(""))) {clienteBean.setmotivo(clienteLocal.getmotivo());}
			if(conDefault || (!conDefault && clienteLocal.getpreferencia()!=null && !clienteLocal.getpreferencia().equals(""))) {clienteBean.setpreferencia(clienteLocal.getpreferencia());}
			if(conDefault || (!conDefault && clienteLocal.getcon_separacion_bienes()!=null && !clienteLocal.getcon_separacion_bienes().equals(false))) {clienteBean.setcon_separacion_bienes(clienteLocal.getcon_separacion_bienes());}
			if(conDefault || (!conDefault && clienteLocal.getid_tipo_precio()!=null && !clienteLocal.getid_tipo_precio().equals(-1L))) {clienteBean.setid_tipo_precio(clienteLocal.getid_tipo_precio());}
			if(conDefault || (!conDefault && clienteLocal.getid_tipo_lista_precio()!=null && !clienteLocal.getid_tipo_lista_precio().equals(-1L))) {clienteBean.setid_tipo_lista_precio(clienteLocal.getid_tipo_lista_precio());}
			if(conDefault || (!conDefault && clienteLocal.getdetalle_estado()!=null && !clienteLocal.getdetalle_estado().equals(""))) {clienteBean.setdetalle_estado(clienteLocal.getdetalle_estado());}
			if(conDefault || (!conDefault && clienteLocal.getes_contribuyente_especial()!=null && !clienteLocal.getes_contribuyente_especial().equals(false))) {clienteBean.setes_contribuyente_especial(clienteLocal.getes_contribuyente_especial());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxClienteGenerico(Long idClienteSeleccionado,JComboBox jComboBoxCliente,List<Cliente> clientesLocal)throws Exception {
		try {
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesLocal) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			jComboBoxCliente.setSelectedItem(clienteTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxClienteGenerico(JComboBox jComboBoxCliente,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxCliente.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxCliente.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("InformacionLaboral")) {
			jButtonInformacionLaboralActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Transportista")) {
			jButtonTransportistaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Novedad")) {
			jButtonNovedadActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PoliticasCliente")) {
			jButtonPoliticasClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ReferenciaPersonal")) {
			jButtonReferenciaPersonalActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("BalanceGeneralCliente")) {
			jButtonBalanceGeneralClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PoliticaCliente")) {
			jButtonPoliticaClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("VehiculoCliente")) {
			jButtonVehiculoClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Responsable")) {
			jButtonResponsableActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("InformacionFinanciera")) {
			jButtonInformacionFinancieraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Consignatario")) {
			jButtonConsignatarioActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ClienteImagen")) {
			jButtonClienteImagenActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("GarantiaCliente")) {
			jButtonGarantiaClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("InformacionEconomica")) {
			jButtonInformacionEconomicaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ReferenciaComercial")) {
			jButtonReferenciaComercialActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Bien")) {
			jButtonBienActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProveedorProducto")) {
			jButtonProveedorProductoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ServicioCliente")) {
			jButtonServicioClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ContactoCliente")) {
			jButtonContactoClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DatoConstitucion")) {
			jButtonDatoConstitucionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ClienteCoa")) {
			jButtonClienteCoaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("HobbyCliente")) {
			jButtonHobbyClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("CargaFamiliar")) {
			jButtonCargaFamiliarActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EMail")) {
			jButtonEMailActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Conyuge")) {
			jButtonConyugeActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("CuentaPorCobrar")) {
			jButtonCuentaPorCobrarActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FirmaCliente")) {
			jButtonFirmaClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RepresentanteLegal")) {
			jButtonRepresentanteLegalActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Telefono")) {
			jButtonTelefonoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("NegocioCliente")) {
			jButtonNegocioClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ReferenciaBancaria")) {
			jButtonReferenciaBancariaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Monto")) {
			jButtonMontoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ClienteArchivo")) {
			jButtonClienteArchivoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ActividadEconomica")) {
			jButtonActividadEconomicaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Direccion")) {
			jButtonDireccionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ChequePostFechado")) {
			jButtonChequePostFechadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("SubCliente")) {
			jButtonSubClienteActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			cliente=(Cliente) clienteLogic.getClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			cliente =(Cliente) clientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("TipoIdentificacion")) {
			//sDescripcion=this.getActualTipoIdentificacionForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettipoidentificacion_descripcion();
			} else {
				//sDescripcion=this.getActualTipoIdentificacionForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettipoidentificacion_descripcion();
			}
		}

		if(sTipo.equals("GrupoCliente")) {
			//sDescripcion=this.getActualGrupoClienteForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getgrupocliente_descripcion();
			} else {
				//sDescripcion=this.getActualGrupoClienteForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getgrupocliente_descripcion();
			}
		}

		if(sTipo.equals("TituloCliente")) {
			//sDescripcion=this.getActualTituloClienteForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettitulocliente_descripcion();
			} else {
				//sDescripcion=this.getActualTituloClienteForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettitulocliente_descripcion();
			}
		}

		if(sTipo.equals("AreaCr")) {
			//sDescripcion=this.getActualAreaCrForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getareacr_descripcion();
			} else {
				//sDescripcion=this.getActualAreaCrForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getareacr_descripcion();
			}
		}

		if(sTipo.equals("EstadoCliente")) {
			//sDescripcion=this.getActualEstadoClienteForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getestadocliente_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoClienteForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getestadocliente_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getpais_descripcion();
			}
		}

		if(sTipo.equals("Region")) {
			//sDescripcion=this.getActualRegionForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getregion_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=cliente.getregion_descripcion();
			}
		}

		if(sTipo.equals("Provincia")) {
			//sDescripcion=this.getActualProvinciaForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getprovincia_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=cliente.getprovincia_descripcion();
			}
		}

		if(sTipo.equals("Ciudad")) {
			//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getciudad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=cliente.getciudad_descripcion();
			}
		}

		if(sTipo.equals("Zona")) {
			//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getzona_descripcion();
			} else {
				//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getzona_descripcion();
			}
		}

		if(sTipo.equals("PaisNacionalidad")) {
			//sDescripcion=this.getActualPaisNacionalidadForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getpaisnacionalidad_descripcion();
			} else {
				//sDescripcion=this.getActualPaisNacionalidadForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getpaisnacionalidad_descripcion();
			}
		}

		if(sTipo.equals("TipoCargoLabo")) {
			//sDescripcion=this.getActualTipoCargoLaboForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettipocargolabo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCargoLaboForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettipocargolabo_descripcion();
			}
		}

		if(sTipo.equals("TipoNivelEdu")) {
			//sDescripcion=this.getActualTipoNivelEduForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettiponiveledu_descripcion();
			} else {
				//sDescripcion=this.getActualTipoNivelEduForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettiponiveledu_descripcion();
			}
		}

		if(sTipo.equals("Profesion")) {
			//sDescripcion=this.getActualProfesionForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getprofesion_descripcion();
			} else {
				//sDescripcion=this.getActualProfesionForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getprofesion_descripcion();
			}
		}

		if(sTipo.equals("TipoGenero")) {
			//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettipogenero_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettipogenero_descripcion();
			}
		}

		if(sTipo.equals("EstadoCivil")) {
			//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getestadocivil_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getestadocivil_descripcion();
			}
		}

		if(sTipo.equals("EstadoLegal")) {
			//sDescripcion=this.getActualEstadoLegalForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getestadolegal_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoLegalForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getestadolegal_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("Ruta")) {
			//sDescripcion=this.getActualRutaForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getruta_descripcion();
			} else {
				//sDescripcion=this.getActualRutaForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getruta_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("CentroActividad")) {
			//sDescripcion=this.getActualCentroActividadForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getcentroactividad_descripcion();
			} else {
				//sDescripcion=this.getActualCentroActividadForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getcentroactividad_descripcion();
			}
		}

		if(sTipo.equals("TipoGarantiaEmpresa")) {
			//sDescripcion=this.getActualTipoGarantiaEmpresaForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettipogarantiaempresa_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGarantiaEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettipogarantiaempresa_descripcion();
			}
		}

		if(sTipo.equals("CateTipoAfiliacion")) {
			//sDescripcion=this.getActualCateTipoAfiliacionForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getcatetipoafiliacion_descripcion();
			} else {
				//sDescripcion=this.getActualCateTipoAfiliacionForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getcatetipoafiliacion_descripcion();
			}
		}

		if(sTipo.equals("Dia")) {
			//sDescripcion=this.getActualDiaForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getdia_descripcion();
			} else {
				//sDescripcion=this.getActualDiaForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getdia_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.getempleado_descripcion();
			}
		}

		if(sTipo.equals("TipoPrecio")) {
			//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettipoprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettipoprecio_descripcion();
			}
		}

		if(sTipo.equals("TipoListaPrecio")) {
			//sDescripcion=this.getActualTipoListaPrecioForeignKeyDescripcion((Long)value);
			if(!cliente.getIsNew() && !cliente.getIsChanged() && !cliente.getIsDeleted()) {
				sDescripcion=cliente.gettipolistaprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoListaPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=cliente.gettipolistaprecio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Cliente clienteRow=new Cliente();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			clienteRow=(Cliente) clienteLogic.getClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			clienteRow=(Cliente) clientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonInformacionLaboralActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosInformacionLaboral && this.permiteMantenimiento(this.cliente)) {
					InformacionLaboralBeanSwingJInternalFrame informacionlaboralBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFramePopup=new InformacionLaboralBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						informacionlaboralBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFramePopup;
					} else {
						informacionlaboralBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.setConGuardarRelaciones(false);
						//informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					informacionlaboralBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarInformacionLaboralBeanSwingJInternalFrame(clientes,this.cliente,informacionlaboralBeanSwingJInternalFrame,/*conInicializar,*/informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.getConGuardarRelaciones(),informacionlaboralBeanSwingJInternalFrame.informacionlaboralSessionBean.getEsGuardarRelacionado());
					informacionlaboralBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						informacionlaboralBeanSwingJInternalFrame.actualizarEstadoPanelsInformacionLaboral("no_relacionado");

						informacionlaboralBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(InformacionLaboralConstantesFunciones.ITAMANIOFILATABLA + (InformacionLaboralConstantesFunciones.ITAMANIOFILATABLA/2));

						informacionlaboralBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderInformacionLaboral=(TitledBorder)informacionlaboralBeanSwingJInternalFrame.jScrollPanelDatosInformacionLaboral.getBorder();

						titledBorderInformacionLaboral.setTitle(titledBorderCliente.getTitle() + " -> Informacion Laboral");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,informacionlaboralBeanSwingJInternalFrame);
						}

						informacionlaboralBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(informacionlaboralBeanSwingJInternalFrame);

						informacionlaboralBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Informacion Laboral",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonTransportistaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosTransportista && this.permiteMantenimiento(this.cliente)) {
					TransportistaBeanSwingJInternalFrame transportistaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFramePopup=new TransportistaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						transportistaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFramePopup;
					} else {
						transportistaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//transportistaBeanSwingJInternalFrame.transportistaSessionBean.setConGuardarRelaciones(false);
						//transportistaBeanSwingJInternalFrame.transportistaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					transportistaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarTransportistaBeanSwingJInternalFrame(clientes,this.cliente,transportistaBeanSwingJInternalFrame,/*conInicializar,*/transportistaBeanSwingJInternalFrame.transportistaSessionBean.getConGuardarRelaciones(),transportistaBeanSwingJInternalFrame.transportistaSessionBean.getEsGuardarRelacionado());
					transportistaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						transportistaBeanSwingJInternalFrame.actualizarEstadoPanelsTransportista("no_relacionado");

						transportistaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(TransportistaConstantesFunciones.ITAMANIOFILATABLA + (TransportistaConstantesFunciones.ITAMANIOFILATABLA/2));

						transportistaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderTransportista=(TitledBorder)transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getBorder();

						titledBorderTransportista.setTitle(titledBorderCliente.getTitle() + " -> Transportista");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,transportistaBeanSwingJInternalFrame);
						}

						transportistaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(transportistaBeanSwingJInternalFrame);

						transportistaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Transportista",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonNovedadActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosNovedad && this.permiteMantenimiento(this.cliente)) {
					NovedadBeanSwingJInternalFrame novedadBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFramePopup=new NovedadBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						novedadBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFramePopup;
					} else {
						novedadBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//novedadBeanSwingJInternalFrame.novedadSessionBean.setConGuardarRelaciones(false);
						//novedadBeanSwingJInternalFrame.novedadSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					novedadBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarNovedadBeanSwingJInternalFrame(clientes,this.cliente,novedadBeanSwingJInternalFrame,/*conInicializar,*/novedadBeanSwingJInternalFrame.novedadSessionBean.getConGuardarRelaciones(),novedadBeanSwingJInternalFrame.novedadSessionBean.getEsGuardarRelacionado());
					novedadBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						novedadBeanSwingJInternalFrame.actualizarEstadoPanelsNovedad("no_relacionado");

						novedadBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(NovedadConstantesFunciones.ITAMANIOFILATABLA + (NovedadConstantesFunciones.ITAMANIOFILATABLA/2));

						novedadBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderNovedad=(TitledBorder)novedadBeanSwingJInternalFrame.jScrollPanelDatosNovedad.getBorder();

						titledBorderNovedad.setTitle(titledBorderCliente.getTitle() + " -> Novedad");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,novedadBeanSwingJInternalFrame);
						}

						novedadBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(novedadBeanSwingJInternalFrame);

						novedadBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Novedad",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPoliticasClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosPoliticasCliente && this.permiteMantenimiento(this.cliente)) {
					PoliticasClienteBeanSwingJInternalFrame politicasclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFramePopup=new PoliticasClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						politicasclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFramePopup;
					} else {
						politicasclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setConGuardarRelaciones(false);
						//politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					politicasclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarPoliticasClienteBeanSwingJInternalFrame(clientes,this.cliente,politicasclienteBeanSwingJInternalFrame,/*conInicializar,*/politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getConGuardarRelaciones(),politicasclienteBeanSwingJInternalFrame.politicasclienteSessionBean.getEsGuardarRelacionado());
					politicasclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						politicasclienteBeanSwingJInternalFrame.actualizarEstadoPanelsPoliticasCliente("no_relacionado");

						politicasclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PoliticasClienteConstantesFunciones.ITAMANIOFILATABLA + (PoliticasClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						politicasclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderPoliticasCliente=(TitledBorder)politicasclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticasCliente.getBorder();

						titledBorderPoliticasCliente.setTitle(titledBorderCliente.getTitle() + " -> Politicas Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,politicasclienteBeanSwingJInternalFrame);
						}

						politicasclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(politicasclienteBeanSwingJInternalFrame);

						politicasclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Politicas Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonReferenciaPersonalActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosReferenciaPersonal && this.permiteMantenimiento(this.cliente)) {
					ReferenciaPersonalBeanSwingJInternalFrame referenciapersonalBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFramePopup=new ReferenciaPersonalBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						referenciapersonalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFramePopup;
					} else {
						referenciapersonalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.setConGuardarRelaciones(false);
						//referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					referenciapersonalBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarReferenciaPersonalBeanSwingJInternalFrame(clientes,this.cliente,referenciapersonalBeanSwingJInternalFrame,/*conInicializar,*/referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.getConGuardarRelaciones(),referenciapersonalBeanSwingJInternalFrame.referenciapersonalSessionBean.getEsGuardarRelacionado());
					referenciapersonalBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						referenciapersonalBeanSwingJInternalFrame.actualizarEstadoPanelsReferenciaPersonal("no_relacionado");

						referenciapersonalBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ReferenciaPersonalConstantesFunciones.ITAMANIOFILATABLA + (ReferenciaPersonalConstantesFunciones.ITAMANIOFILATABLA/2));

						referenciapersonalBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderReferenciaPersonal=(TitledBorder)referenciapersonalBeanSwingJInternalFrame.jScrollPanelDatosReferenciaPersonal.getBorder();

						titledBorderReferenciaPersonal.setTitle(titledBorderCliente.getTitle() + " -> Referencia Personal");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,referenciapersonalBeanSwingJInternalFrame);
						}

						referenciapersonalBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(referenciapersonalBeanSwingJInternalFrame);

						referenciapersonalBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Referencia Personal",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonBalanceGeneralClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosBalanceGeneralCliente && this.permiteMantenimiento(this.cliente)) {
					BalanceGeneralClienteBeanSwingJInternalFrame balancegeneralclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFramePopup=new BalanceGeneralClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						balancegeneralclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFramePopup;
					} else {
						balancegeneralclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.setConGuardarRelaciones(false);
						//balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					balancegeneralclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarBalanceGeneralClienteBeanSwingJInternalFrame(clientes,this.cliente,balancegeneralclienteBeanSwingJInternalFrame,/*conInicializar,*/balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.getConGuardarRelaciones(),balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteSessionBean.getEsGuardarRelacionado());
					balancegeneralclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						balancegeneralclienteBeanSwingJInternalFrame.actualizarEstadoPanelsBalanceGeneralCliente("no_relacionado");

						balancegeneralclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(BalanceGeneralClienteConstantesFunciones.ITAMANIOFILATABLA + (BalanceGeneralClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						balancegeneralclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderBalanceGeneralCliente=(TitledBorder)balancegeneralclienteBeanSwingJInternalFrame.jScrollPanelDatosBalanceGeneralCliente.getBorder();

						titledBorderBalanceGeneralCliente.setTitle(titledBorderCliente.getTitle() + " -> Balance General Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,balancegeneralclienteBeanSwingJInternalFrame);
						}

						balancegeneralclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(balancegeneralclienteBeanSwingJInternalFrame);

						balancegeneralclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Balance General Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPoliticaClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosPoliticaCliente && this.permiteMantenimiento(this.cliente)) {
					PoliticaClienteBeanSwingJInternalFrame politicaclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFramePopup=new PoliticaClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						politicaclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFramePopup;
					} else {
						politicaclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.setConGuardarRelaciones(false);
						//politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					politicaclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarPoliticaClienteBeanSwingJInternalFrame(clientes,this.cliente,politicaclienteBeanSwingJInternalFrame,/*conInicializar,*/politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.getConGuardarRelaciones(),politicaclienteBeanSwingJInternalFrame.politicaclienteSessionBean.getEsGuardarRelacionado());
					politicaclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						politicaclienteBeanSwingJInternalFrame.actualizarEstadoPanelsPoliticaCliente("no_relacionado");

						politicaclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PoliticaClienteConstantesFunciones.ITAMANIOFILATABLA + (PoliticaClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						politicaclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderPoliticaCliente=(TitledBorder)politicaclienteBeanSwingJInternalFrame.jScrollPanelDatosPoliticaCliente.getBorder();

						titledBorderPoliticaCliente.setTitle(titledBorderCliente.getTitle() + " -> Politica Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,politicaclienteBeanSwingJInternalFrame);
						}

						politicaclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(politicaclienteBeanSwingJInternalFrame);

						politicaclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Politica Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonVehiculoClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosVehiculoCliente && this.permiteMantenimiento(this.cliente)) {
					VehiculoClienteBeanSwingJInternalFrame vehiculoclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFramePopup=new VehiculoClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						vehiculoclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFramePopup;
					} else {
						vehiculoclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.setConGuardarRelaciones(false);
						//vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					vehiculoclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarVehiculoClienteBeanSwingJInternalFrame(clientes,this.cliente,vehiculoclienteBeanSwingJInternalFrame,/*conInicializar,*/vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.getConGuardarRelaciones(),vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteSessionBean.getEsGuardarRelacionado());
					vehiculoclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						vehiculoclienteBeanSwingJInternalFrame.actualizarEstadoPanelsVehiculoCliente("no_relacionado");

						vehiculoclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(VehiculoClienteConstantesFunciones.ITAMANIOFILATABLA + (VehiculoClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						vehiculoclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderVehiculoCliente=(TitledBorder)vehiculoclienteBeanSwingJInternalFrame.jScrollPanelDatosVehiculoCliente.getBorder();

						titledBorderVehiculoCliente.setTitle(titledBorderCliente.getTitle() + " -> Vehiculo Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vehiculoclienteBeanSwingJInternalFrame);
						}

						vehiculoclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(vehiculoclienteBeanSwingJInternalFrame);

						vehiculoclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Vehiculo Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonResponsableActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosResponsable && this.permiteMantenimiento(this.cliente)) {
					ResponsableBeanSwingJInternalFrame responsableBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFramePopup=new ResponsableBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						responsableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFramePopup;
					} else {
						responsableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//responsableBeanSwingJInternalFrame.responsableSessionBean.setConGuardarRelaciones(false);
						//responsableBeanSwingJInternalFrame.responsableSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					responsableBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarResponsableBeanSwingJInternalFrame(clientes,this.cliente,responsableBeanSwingJInternalFrame,/*conInicializar,*/responsableBeanSwingJInternalFrame.responsableSessionBean.getConGuardarRelaciones(),responsableBeanSwingJInternalFrame.responsableSessionBean.getEsGuardarRelacionado());
					responsableBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						responsableBeanSwingJInternalFrame.actualizarEstadoPanelsResponsable("no_relacionado");

						responsableBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ResponsableConstantesFunciones.ITAMANIOFILATABLA + (ResponsableConstantesFunciones.ITAMANIOFILATABLA/2));

						responsableBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderResponsable=(TitledBorder)responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.getBorder();

						titledBorderResponsable.setTitle(titledBorderCliente.getTitle() + " -> Responsable");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,responsableBeanSwingJInternalFrame);
						}

						responsableBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(responsableBeanSwingJInternalFrame);

						responsableBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Responsable",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonInformacionFinancieraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosInformacionFinanciera && this.permiteMantenimiento(this.cliente)) {
					InformacionFinancieraBeanSwingJInternalFrame informacionfinancieraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFramePopup=new InformacionFinancieraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						informacionfinancieraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFramePopup;
					} else {
						informacionfinancieraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.setConGuardarRelaciones(false);
						//informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					informacionfinancieraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarInformacionFinancieraBeanSwingJInternalFrame(clientes,this.cliente,informacionfinancieraBeanSwingJInternalFrame,/*conInicializar,*/informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.getConGuardarRelaciones(),informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraSessionBean.getEsGuardarRelacionado());
					informacionfinancieraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						informacionfinancieraBeanSwingJInternalFrame.actualizarEstadoPanelsInformacionFinanciera("no_relacionado");

						informacionfinancieraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(InformacionFinancieraConstantesFunciones.ITAMANIOFILATABLA + (InformacionFinancieraConstantesFunciones.ITAMANIOFILATABLA/2));

						informacionfinancieraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderInformacionFinanciera=(TitledBorder)informacionfinancieraBeanSwingJInternalFrame.jScrollPanelDatosInformacionFinanciera.getBorder();

						titledBorderInformacionFinanciera.setTitle(titledBorderCliente.getTitle() + " -> Informacion Financiera");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,informacionfinancieraBeanSwingJInternalFrame);
						}

						informacionfinancieraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(informacionfinancieraBeanSwingJInternalFrame);

						informacionfinancieraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Informacion Financiera",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonConsignatarioActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosConsignatario && this.permiteMantenimiento(this.cliente)) {
					ConsignatarioBeanSwingJInternalFrame consignatarioBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFramePopup=new ConsignatarioBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						consignatarioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFramePopup;
					} else {
						consignatarioBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.setConGuardarRelaciones(false);
						//consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					consignatarioBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarConsignatarioBeanSwingJInternalFrame(clientes,this.cliente,consignatarioBeanSwingJInternalFrame,/*conInicializar,*/consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.getConGuardarRelaciones(),consignatarioBeanSwingJInternalFrame.consignatarioSessionBean.getEsGuardarRelacionado());
					consignatarioBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						consignatarioBeanSwingJInternalFrame.actualizarEstadoPanelsConsignatario("no_relacionado");

						consignatarioBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ConsignatarioConstantesFunciones.ITAMANIOFILATABLA + (ConsignatarioConstantesFunciones.ITAMANIOFILATABLA/2));

						consignatarioBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderConsignatario=(TitledBorder)consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.getBorder();

						titledBorderConsignatario.setTitle(titledBorderCliente.getTitle() + " -> Consignatario");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,consignatarioBeanSwingJInternalFrame);
						}

						consignatarioBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(consignatarioBeanSwingJInternalFrame);

						consignatarioBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Consignatario",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonClienteImagenActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosClienteImagen && this.permiteMantenimiento(this.cliente)) {
					ClienteImagenBeanSwingJInternalFrame clienteimagenBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFramePopup=new ClienteImagenBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						clienteimagenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFramePopup;
					} else {
						clienteimagenBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.setConGuardarRelaciones(false);
						//clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					clienteimagenBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarClienteImagenBeanSwingJInternalFrame(clientes,this.cliente,clienteimagenBeanSwingJInternalFrame,/*conInicializar,*/clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.getConGuardarRelaciones(),clienteimagenBeanSwingJInternalFrame.clienteimagenSessionBean.getEsGuardarRelacionado());
					clienteimagenBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						clienteimagenBeanSwingJInternalFrame.actualizarEstadoPanelsClienteImagen("no_relacionado");

						clienteimagenBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ClienteImagenConstantesFunciones.ITAMANIOFILATABLA + (ClienteImagenConstantesFunciones.ITAMANIOFILATABLA/2));

						clienteimagenBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderClienteImagen=(TitledBorder)clienteimagenBeanSwingJInternalFrame.jScrollPanelDatosClienteImagen.getBorder();

						titledBorderClienteImagen.setTitle(titledBorderCliente.getTitle() + " -> Cliente Imagen");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,clienteimagenBeanSwingJInternalFrame);
						}

						clienteimagenBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(clienteimagenBeanSwingJInternalFrame);

						clienteimagenBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Cliente Imagen",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonGarantiaClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosGarantiaCliente && this.permiteMantenimiento(this.cliente)) {
					GarantiaClienteBeanSwingJInternalFrame garantiaclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFramePopup=new GarantiaClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						garantiaclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFramePopup;
					} else {
						garantiaclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.setConGuardarRelaciones(false);
						//garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					garantiaclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarGarantiaClienteBeanSwingJInternalFrame(clientes,this.cliente,garantiaclienteBeanSwingJInternalFrame,/*conInicializar,*/garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.getConGuardarRelaciones(),garantiaclienteBeanSwingJInternalFrame.garantiaclienteSessionBean.getEsGuardarRelacionado());
					garantiaclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						garantiaclienteBeanSwingJInternalFrame.actualizarEstadoPanelsGarantiaCliente("no_relacionado");

						garantiaclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(GarantiaClienteConstantesFunciones.ITAMANIOFILATABLA + (GarantiaClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						garantiaclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderGarantiaCliente=(TitledBorder)garantiaclienteBeanSwingJInternalFrame.jScrollPanelDatosGarantiaCliente.getBorder();

						titledBorderGarantiaCliente.setTitle(titledBorderCliente.getTitle() + " -> Garantia Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,garantiaclienteBeanSwingJInternalFrame);
						}

						garantiaclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(garantiaclienteBeanSwingJInternalFrame);

						garantiaclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Garantia Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonInformacionEconomicaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosInformacionEconomica && this.permiteMantenimiento(this.cliente)) {
					InformacionEconomicaBeanSwingJInternalFrame informacioneconomicaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFramePopup=new InformacionEconomicaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						informacioneconomicaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFramePopup;
					} else {
						informacioneconomicaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.setConGuardarRelaciones(false);
						//informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					informacioneconomicaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarInformacionEconomicaBeanSwingJInternalFrame(clientes,this.cliente,informacioneconomicaBeanSwingJInternalFrame,/*conInicializar,*/informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.getConGuardarRelaciones(),informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaSessionBean.getEsGuardarRelacionado());
					informacioneconomicaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						informacioneconomicaBeanSwingJInternalFrame.actualizarEstadoPanelsInformacionEconomica("no_relacionado");

						informacioneconomicaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(InformacionEconomicaConstantesFunciones.ITAMANIOFILATABLA + (InformacionEconomicaConstantesFunciones.ITAMANIOFILATABLA/2));

						informacioneconomicaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderInformacionEconomica=(TitledBorder)informacioneconomicaBeanSwingJInternalFrame.jScrollPanelDatosInformacionEconomica.getBorder();

						titledBorderInformacionEconomica.setTitle(titledBorderCliente.getTitle() + " -> Informacion Economica");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,informacioneconomicaBeanSwingJInternalFrame);
						}

						informacioneconomicaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(informacioneconomicaBeanSwingJInternalFrame);

						informacioneconomicaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Informacion Economica",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonReferenciaComercialActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosReferenciaComercial && this.permiteMantenimiento(this.cliente)) {
					ReferenciaComercialBeanSwingJInternalFrame referenciacomercialBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFramePopup=new ReferenciaComercialBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						referenciacomercialBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFramePopup;
					} else {
						referenciacomercialBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.setConGuardarRelaciones(false);
						//referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					referenciacomercialBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarReferenciaComercialBeanSwingJInternalFrame(clientes,this.cliente,referenciacomercialBeanSwingJInternalFrame,/*conInicializar,*/referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.getConGuardarRelaciones(),referenciacomercialBeanSwingJInternalFrame.referenciacomercialSessionBean.getEsGuardarRelacionado());
					referenciacomercialBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						referenciacomercialBeanSwingJInternalFrame.actualizarEstadoPanelsReferenciaComercial("no_relacionado");

						referenciacomercialBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ReferenciaComercialConstantesFunciones.ITAMANIOFILATABLA + (ReferenciaComercialConstantesFunciones.ITAMANIOFILATABLA/2));

						referenciacomercialBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderReferenciaComercial=(TitledBorder)referenciacomercialBeanSwingJInternalFrame.jScrollPanelDatosReferenciaComercial.getBorder();

						titledBorderReferenciaComercial.setTitle(titledBorderCliente.getTitle() + " -> Referencia Comercial");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,referenciacomercialBeanSwingJInternalFrame);
						}

						referenciacomercialBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(referenciacomercialBeanSwingJInternalFrame);

						referenciacomercialBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Referencia Comercial",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonBienActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosBien && this.permiteMantenimiento(this.cliente)) {
					BienBeanSwingJInternalFrame bienBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFramePopup=new BienBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						bienBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFramePopup;
					} else {
						bienBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//bienBeanSwingJInternalFrame.bienSessionBean.setConGuardarRelaciones(false);
						//bienBeanSwingJInternalFrame.bienSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					bienBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarBienBeanSwingJInternalFrame(clientes,this.cliente,bienBeanSwingJInternalFrame,/*conInicializar,*/bienBeanSwingJInternalFrame.bienSessionBean.getConGuardarRelaciones(),bienBeanSwingJInternalFrame.bienSessionBean.getEsGuardarRelacionado());
					bienBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						bienBeanSwingJInternalFrame.actualizarEstadoPanelsBien("no_relacionado");

						bienBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(BienConstantesFunciones.ITAMANIOFILATABLA + (BienConstantesFunciones.ITAMANIOFILATABLA/2));

						bienBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderBien=(TitledBorder)bienBeanSwingJInternalFrame.jScrollPanelDatosBien.getBorder();

						titledBorderBien.setTitle(titledBorderCliente.getTitle() + " -> Bien");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,bienBeanSwingJInternalFrame);
						}

						bienBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(bienBeanSwingJInternalFrame);

						bienBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Bien",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProveedorProductoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosProveedorProducto && this.permiteMantenimiento(this.cliente)) {
					ProveedorProductoBeanSwingJInternalFrame proveedorproductoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFramePopup=new ProveedorProductoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						proveedorproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFramePopup;
					} else {
						proveedorproductoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setConGuardarRelaciones(false);
						//proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					proveedorproductoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarProveedorProductoBeanSwingJInternalFrame(clientes,this.cliente,proveedorproductoBeanSwingJInternalFrame,/*conInicializar,*/proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getConGuardarRelaciones(),proveedorproductoBeanSwingJInternalFrame.proveedorproductoSessionBean.getEsGuardarRelacionado());
					proveedorproductoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						proveedorproductoBeanSwingJInternalFrame.actualizarEstadoPanelsProveedorProducto("no_relacionado");

						proveedorproductoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProveedorProductoConstantesFunciones.ITAMANIOFILATABLA + (ProveedorProductoConstantesFunciones.ITAMANIOFILATABLA/2));

						proveedorproductoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderProveedorProducto=(TitledBorder)proveedorproductoBeanSwingJInternalFrame.jScrollPanelDatosProveedorProducto.getBorder();

						titledBorderProveedorProducto.setTitle(titledBorderCliente.getTitle() + " -> Producto Proveedor");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,proveedorproductoBeanSwingJInternalFrame);
						}

						proveedorproductoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(proveedorproductoBeanSwingJInternalFrame);

						proveedorproductoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Producto Proveedor",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonServicioClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosServicioCliente && this.permiteMantenimiento(this.cliente)) {
					ServicioClienteBeanSwingJInternalFrame servicioclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFramePopup=new ServicioClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						servicioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFramePopup;
					} else {
						servicioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setConGuardarRelaciones(false);
						//servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					servicioclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarServicioClienteBeanSwingJInternalFrame(clientes,this.cliente,servicioclienteBeanSwingJInternalFrame,/*conInicializar,*/servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getConGuardarRelaciones(),servicioclienteBeanSwingJInternalFrame.servicioclienteSessionBean.getEsGuardarRelacionado());
					servicioclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						servicioclienteBeanSwingJInternalFrame.actualizarEstadoPanelsServicioCliente("no_relacionado");

						servicioclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ServicioClienteConstantesFunciones.ITAMANIOFILATABLA + (ServicioClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						servicioclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderServicioCliente=(TitledBorder)servicioclienteBeanSwingJInternalFrame.jScrollPanelDatosServicioCliente.getBorder();

						titledBorderServicioCliente.setTitle(titledBorderCliente.getTitle() + " -> Servicio Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,servicioclienteBeanSwingJInternalFrame);
						}

						servicioclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(servicioclienteBeanSwingJInternalFrame);

						servicioclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Servicio Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonContactoClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosContactoCliente && this.permiteMantenimiento(this.cliente)) {
					ContactoClienteBeanSwingJInternalFrame contactoclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFramePopup=new ContactoClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						contactoclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFramePopup;
					} else {
						contactoclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.setConGuardarRelaciones(false);
						//contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					contactoclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarContactoClienteBeanSwingJInternalFrame(clientes,this.cliente,contactoclienteBeanSwingJInternalFrame,/*conInicializar,*/contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.getConGuardarRelaciones(),contactoclienteBeanSwingJInternalFrame.contactoclienteSessionBean.getEsGuardarRelacionado());
					contactoclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						contactoclienteBeanSwingJInternalFrame.actualizarEstadoPanelsContactoCliente("no_relacionado");

						contactoclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ContactoClienteConstantesFunciones.ITAMANIOFILATABLA + (ContactoClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						contactoclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderContactoCliente=(TitledBorder)contactoclienteBeanSwingJInternalFrame.jScrollPanelDatosContactoCliente.getBorder();

						titledBorderContactoCliente.setTitle(titledBorderCliente.getTitle() + " -> Contacto Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,contactoclienteBeanSwingJInternalFrame);
						}

						contactoclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(contactoclienteBeanSwingJInternalFrame);

						contactoclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Contacto Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDatoConstitucionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosDatoConstitucion && this.permiteMantenimiento(this.cliente)) {
					DatoConstitucionBeanSwingJInternalFrame datoconstitucionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFramePopup=new DatoConstitucionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						datoconstitucionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFramePopup;
					} else {
						datoconstitucionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.setConGuardarRelaciones(false);
						//datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					datoconstitucionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarDatoConstitucionBeanSwingJInternalFrame(clientes,this.cliente,datoconstitucionBeanSwingJInternalFrame,/*conInicializar,*/datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.getConGuardarRelaciones(),datoconstitucionBeanSwingJInternalFrame.datoconstitucionSessionBean.getEsGuardarRelacionado());
					datoconstitucionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						datoconstitucionBeanSwingJInternalFrame.actualizarEstadoPanelsDatoConstitucion("no_relacionado");

						datoconstitucionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DatoConstitucionConstantesFunciones.ITAMANIOFILATABLA + (DatoConstitucionConstantesFunciones.ITAMANIOFILATABLA/2));

						datoconstitucionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderDatoConstitucion=(TitledBorder)datoconstitucionBeanSwingJInternalFrame.jScrollPanelDatosDatoConstitucion.getBorder();

						titledBorderDatoConstitucion.setTitle(titledBorderCliente.getTitle() + " -> Dato Constitucion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,datoconstitucionBeanSwingJInternalFrame);
						}

						datoconstitucionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(datoconstitucionBeanSwingJInternalFrame);

						datoconstitucionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Dato Constitucion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonClienteCoaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosClienteCoa && this.permiteMantenimiento(this.cliente)) {
					ClienteCoaBeanSwingJInternalFrame clientecoaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFramePopup=new ClienteCoaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						clientecoaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFramePopup;
					} else {
						clientecoaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.setConGuardarRelaciones(false);
						//clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					clientecoaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarClienteCoaBeanSwingJInternalFrame(clientes,this.cliente,clientecoaBeanSwingJInternalFrame,/*conInicializar,*/clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.getConGuardarRelaciones(),clientecoaBeanSwingJInternalFrame.clientecoaSessionBean.getEsGuardarRelacionado());
					clientecoaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						clientecoaBeanSwingJInternalFrame.actualizarEstadoPanelsClienteCoa("no_relacionado");

						clientecoaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ClienteCoaConstantesFunciones.ITAMANIOFILATABLA + (ClienteCoaConstantesFunciones.ITAMANIOFILATABLA/2));

						clientecoaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderClienteCoa=(TitledBorder)clientecoaBeanSwingJInternalFrame.jScrollPanelDatosClienteCoa.getBorder();

						titledBorderClienteCoa.setTitle(titledBorderCliente.getTitle() + " -> Coa");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,clientecoaBeanSwingJInternalFrame);
						}

						clientecoaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(clientecoaBeanSwingJInternalFrame);

						clientecoaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Coa",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonHobbyClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosHobbyCliente && this.permiteMantenimiento(this.cliente)) {
					HobbyClienteBeanSwingJInternalFrame hobbyclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFramePopup=new HobbyClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						hobbyclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFramePopup;
					} else {
						hobbyclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.setConGuardarRelaciones(false);
						//hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					hobbyclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarHobbyClienteBeanSwingJInternalFrame(clientes,this.cliente,hobbyclienteBeanSwingJInternalFrame,/*conInicializar,*/hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.getConGuardarRelaciones(),hobbyclienteBeanSwingJInternalFrame.hobbyclienteSessionBean.getEsGuardarRelacionado());
					hobbyclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						hobbyclienteBeanSwingJInternalFrame.actualizarEstadoPanelsHobbyCliente("no_relacionado");

						hobbyclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(HobbyClienteConstantesFunciones.ITAMANIOFILATABLA + (HobbyClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						hobbyclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderHobbyCliente=(TitledBorder)hobbyclienteBeanSwingJInternalFrame.jScrollPanelDatosHobbyCliente.getBorder();

						titledBorderHobbyCliente.setTitle(titledBorderCliente.getTitle() + " -> Hobby Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,hobbyclienteBeanSwingJInternalFrame);
						}

						hobbyclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(hobbyclienteBeanSwingJInternalFrame);

						hobbyclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Hobby Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonCargaFamiliarActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosCargaFamiliar && this.permiteMantenimiento(this.cliente)) {
					CargaFamiliarBeanSwingJInternalFrame cargafamiliarBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFramePopup=new CargaFamiliarBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						cargafamiliarBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFramePopup;
					} else {
						cargafamiliarBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.setConGuardarRelaciones(false);
						//cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					cargafamiliarBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarCargaFamiliarBeanSwingJInternalFrame(clientes,this.cliente,cargafamiliarBeanSwingJInternalFrame,/*conInicializar,*/cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.getConGuardarRelaciones(),cargafamiliarBeanSwingJInternalFrame.cargafamiliarSessionBean.getEsGuardarRelacionado());
					cargafamiliarBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						cargafamiliarBeanSwingJInternalFrame.actualizarEstadoPanelsCargaFamiliar("no_relacionado");

						cargafamiliarBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CargaFamiliarConstantesFunciones.ITAMANIOFILATABLA + (CargaFamiliarConstantesFunciones.ITAMANIOFILATABLA/2));

						cargafamiliarBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderCargaFamiliar=(TitledBorder)cargafamiliarBeanSwingJInternalFrame.jScrollPanelDatosCargaFamiliar.getBorder();

						titledBorderCargaFamiliar.setTitle(titledBorderCliente.getTitle() + " -> Carga Familiar");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cargafamiliarBeanSwingJInternalFrame);
						}

						cargafamiliarBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(cargafamiliarBeanSwingJInternalFrame);

						cargafamiliarBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Carga Familiar",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEMailActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosEMail && this.permiteMantenimiento(this.cliente)) {
					EMailBeanSwingJInternalFrame emailBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFramePopup=new EMailBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						emailBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFramePopup;
					} else {
						emailBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//emailBeanSwingJInternalFrame.emailSessionBean.setConGuardarRelaciones(false);
						//emailBeanSwingJInternalFrame.emailSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					emailBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarEMailBeanSwingJInternalFrame(clientes,this.cliente,emailBeanSwingJInternalFrame,/*conInicializar,*/emailBeanSwingJInternalFrame.emailSessionBean.getConGuardarRelaciones(),emailBeanSwingJInternalFrame.emailSessionBean.getEsGuardarRelacionado());
					emailBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						emailBeanSwingJInternalFrame.actualizarEstadoPanelsEMail("no_relacionado");

						emailBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EMailConstantesFunciones.ITAMANIOFILATABLA + (EMailConstantesFunciones.ITAMANIOFILATABLA/2));

						emailBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderEMail=(TitledBorder)emailBeanSwingJInternalFrame.jScrollPanelDatosEMail.getBorder();

						titledBorderEMail.setTitle(titledBorderCliente.getTitle() + " -> E Mail");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,emailBeanSwingJInternalFrame);
						}

						emailBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(emailBeanSwingJInternalFrame);

						emailBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE E Mail",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonConyugeActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosConyuge && this.permiteMantenimiento(this.cliente)) {
					ConyugeBeanSwingJInternalFrame conyugeBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFramePopup=new ConyugeBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						conyugeBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFramePopup;
					} else {
						conyugeBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//conyugeBeanSwingJInternalFrame.conyugeSessionBean.setConGuardarRelaciones(false);
						//conyugeBeanSwingJInternalFrame.conyugeSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					conyugeBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarConyugeBeanSwingJInternalFrame(clientes,this.cliente,conyugeBeanSwingJInternalFrame,/*conInicializar,*/conyugeBeanSwingJInternalFrame.conyugeSessionBean.getConGuardarRelaciones(),conyugeBeanSwingJInternalFrame.conyugeSessionBean.getEsGuardarRelacionado());
					conyugeBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						conyugeBeanSwingJInternalFrame.actualizarEstadoPanelsConyuge("no_relacionado");

						conyugeBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ConyugeConstantesFunciones.ITAMANIOFILATABLA + (ConyugeConstantesFunciones.ITAMANIOFILATABLA/2));

						conyugeBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderConyuge=(TitledBorder)conyugeBeanSwingJInternalFrame.jScrollPanelDatosConyuge.getBorder();

						titledBorderConyuge.setTitle(titledBorderCliente.getTitle() + " -> Conyuge");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,conyugeBeanSwingJInternalFrame);
						}

						conyugeBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(conyugeBeanSwingJInternalFrame);

						conyugeBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Conyuge",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonCuentaPorCobrarActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosCuentaPorCobrar && this.permiteMantenimiento(this.cliente)) {
					CuentaPorCobrarBeanSwingJInternalFrame cuentaporcobrarBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFramePopup=new CuentaPorCobrarBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						cuentaporcobrarBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFramePopup;
					} else {
						cuentaporcobrarBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.setConGuardarRelaciones(false);
						//cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					cuentaporcobrarBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarCuentaPorCobrarBeanSwingJInternalFrame(clientes,this.cliente,cuentaporcobrarBeanSwingJInternalFrame,/*conInicializar,*/cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.getConGuardarRelaciones(),cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarSessionBean.getEsGuardarRelacionado());
					cuentaporcobrarBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						cuentaporcobrarBeanSwingJInternalFrame.actualizarEstadoPanelsCuentaPorCobrar("no_relacionado");

						cuentaporcobrarBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CuentaPorCobrarConstantesFunciones.ITAMANIOFILATABLA + (CuentaPorCobrarConstantesFunciones.ITAMANIOFILATABLA/2));

						cuentaporcobrarBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderCuentaPorCobrar=(TitledBorder)cuentaporcobrarBeanSwingJInternalFrame.jScrollPanelDatosCuentaPorCobrar.getBorder();

						titledBorderCuentaPorCobrar.setTitle(titledBorderCliente.getTitle() + " -> Cuenta Por Cobrar");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentaporcobrarBeanSwingJInternalFrame);
						}

						cuentaporcobrarBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(cuentaporcobrarBeanSwingJInternalFrame);

						cuentaporcobrarBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Cuenta Por Cobrar",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFirmaClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosFirmaCliente && this.permiteMantenimiento(this.cliente)) {
					FirmaClienteBeanSwingJInternalFrame firmaclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFramePopup=new FirmaClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						firmaclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFramePopup;
					} else {
						firmaclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.setConGuardarRelaciones(false);
						//firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					firmaclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarFirmaClienteBeanSwingJInternalFrame(clientes,this.cliente,firmaclienteBeanSwingJInternalFrame,/*conInicializar,*/firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.getConGuardarRelaciones(),firmaclienteBeanSwingJInternalFrame.firmaclienteSessionBean.getEsGuardarRelacionado());
					firmaclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						firmaclienteBeanSwingJInternalFrame.actualizarEstadoPanelsFirmaCliente("no_relacionado");

						firmaclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FirmaClienteConstantesFunciones.ITAMANIOFILATABLA + (FirmaClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						firmaclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderFirmaCliente=(TitledBorder)firmaclienteBeanSwingJInternalFrame.jScrollPanelDatosFirmaCliente.getBorder();

						titledBorderFirmaCliente.setTitle(titledBorderCliente.getTitle() + " -> Firma Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,firmaclienteBeanSwingJInternalFrame);
						}

						firmaclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(firmaclienteBeanSwingJInternalFrame);

						firmaclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Firma Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRepresentanteLegalActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosRepresentanteLegal && this.permiteMantenimiento(this.cliente)) {
					RepresentanteLegalBeanSwingJInternalFrame representantelegalBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFramePopup=new RepresentanteLegalBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						representantelegalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFramePopup;
					} else {
						representantelegalBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.setConGuardarRelaciones(false);
						//representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					representantelegalBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarRepresentanteLegalBeanSwingJInternalFrame(clientes,this.cliente,representantelegalBeanSwingJInternalFrame,/*conInicializar,*/representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.getConGuardarRelaciones(),representantelegalBeanSwingJInternalFrame.representantelegalSessionBean.getEsGuardarRelacionado());
					representantelegalBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						representantelegalBeanSwingJInternalFrame.actualizarEstadoPanelsRepresentanteLegal("no_relacionado");

						representantelegalBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RepresentanteLegalConstantesFunciones.ITAMANIOFILATABLA + (RepresentanteLegalConstantesFunciones.ITAMANIOFILATABLA/2));

						representantelegalBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderRepresentanteLegal=(TitledBorder)representantelegalBeanSwingJInternalFrame.jScrollPanelDatosRepresentanteLegal.getBorder();

						titledBorderRepresentanteLegal.setTitle(titledBorderCliente.getTitle() + " -> Representante Legal");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,representantelegalBeanSwingJInternalFrame);
						}

						representantelegalBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(representantelegalBeanSwingJInternalFrame);

						representantelegalBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Representante Legal",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonTelefonoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosTelefono && this.permiteMantenimiento(this.cliente)) {
					TelefonoBeanSwingJInternalFrame telefonoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFramePopup=new TelefonoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						telefonoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFramePopup;
					} else {
						telefonoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//telefonoBeanSwingJInternalFrame.telefonoSessionBean.setConGuardarRelaciones(false);
						//telefonoBeanSwingJInternalFrame.telefonoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					telefonoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarTelefonoBeanSwingJInternalFrame(clientes,this.cliente,telefonoBeanSwingJInternalFrame,/*conInicializar,*/telefonoBeanSwingJInternalFrame.telefonoSessionBean.getConGuardarRelaciones(),telefonoBeanSwingJInternalFrame.telefonoSessionBean.getEsGuardarRelacionado());
					telefonoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						telefonoBeanSwingJInternalFrame.actualizarEstadoPanelsTelefono("no_relacionado");

						telefonoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(TelefonoConstantesFunciones.ITAMANIOFILATABLA + (TelefonoConstantesFunciones.ITAMANIOFILATABLA/2));

						telefonoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderTelefono=(TitledBorder)telefonoBeanSwingJInternalFrame.jScrollPanelDatosTelefono.getBorder();

						titledBorderTelefono.setTitle(titledBorderCliente.getTitle() + " -> Telefono");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,telefonoBeanSwingJInternalFrame);
						}

						telefonoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(telefonoBeanSwingJInternalFrame);

						telefonoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Telefono",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonNegocioClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosNegocioCliente && this.permiteMantenimiento(this.cliente)) {
					NegocioClienteBeanSwingJInternalFrame negocioclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFramePopup=new NegocioClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						negocioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFramePopup;
					} else {
						negocioclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.setConGuardarRelaciones(false);
						//negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					negocioclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarNegocioClienteBeanSwingJInternalFrame(clientes,this.cliente,negocioclienteBeanSwingJInternalFrame,/*conInicializar,*/negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.getConGuardarRelaciones(),negocioclienteBeanSwingJInternalFrame.negocioclienteSessionBean.getEsGuardarRelacionado());
					negocioclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						negocioclienteBeanSwingJInternalFrame.actualizarEstadoPanelsNegocioCliente("no_relacionado");

						negocioclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(NegocioClienteConstantesFunciones.ITAMANIOFILATABLA + (NegocioClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						negocioclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderNegocioCliente=(TitledBorder)negocioclienteBeanSwingJInternalFrame.jScrollPanelDatosNegocioCliente.getBorder();

						titledBorderNegocioCliente.setTitle(titledBorderCliente.getTitle() + " -> Negocio Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,negocioclienteBeanSwingJInternalFrame);
						}

						negocioclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(negocioclienteBeanSwingJInternalFrame);

						negocioclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Negocio Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonReferenciaBancariaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosReferenciaBancaria && this.permiteMantenimiento(this.cliente)) {
					ReferenciaBancariaBeanSwingJInternalFrame referenciabancariaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFramePopup=new ReferenciaBancariaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						referenciabancariaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFramePopup;
					} else {
						referenciabancariaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.setConGuardarRelaciones(false);
						//referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					referenciabancariaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarReferenciaBancariaBeanSwingJInternalFrame(clientes,this.cliente,referenciabancariaBeanSwingJInternalFrame,/*conInicializar,*/referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.getConGuardarRelaciones(),referenciabancariaBeanSwingJInternalFrame.referenciabancariaSessionBean.getEsGuardarRelacionado());
					referenciabancariaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						referenciabancariaBeanSwingJInternalFrame.actualizarEstadoPanelsReferenciaBancaria("no_relacionado");

						referenciabancariaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ReferenciaBancariaConstantesFunciones.ITAMANIOFILATABLA + (ReferenciaBancariaConstantesFunciones.ITAMANIOFILATABLA/2));

						referenciabancariaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderReferenciaBancaria=(TitledBorder)referenciabancariaBeanSwingJInternalFrame.jScrollPanelDatosReferenciaBancaria.getBorder();

						titledBorderReferenciaBancaria.setTitle(titledBorderCliente.getTitle() + " -> Referencia Bancaria");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,referenciabancariaBeanSwingJInternalFrame);
						}

						referenciabancariaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(referenciabancariaBeanSwingJInternalFrame);

						referenciabancariaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Referencia Bancaria",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonMontoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosMonto && this.permiteMantenimiento(this.cliente)) {
					MontoBeanSwingJInternalFrame montoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFramePopup=new MontoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						montoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFramePopup;
					} else {
						montoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//montoBeanSwingJInternalFrame.montoSessionBean.setConGuardarRelaciones(false);
						//montoBeanSwingJInternalFrame.montoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					montoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarMontoBeanSwingJInternalFrame(clientes,this.cliente,montoBeanSwingJInternalFrame,/*conInicializar,*/montoBeanSwingJInternalFrame.montoSessionBean.getConGuardarRelaciones(),montoBeanSwingJInternalFrame.montoSessionBean.getEsGuardarRelacionado());
					montoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						montoBeanSwingJInternalFrame.actualizarEstadoPanelsMonto("no_relacionado");

						montoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(MontoConstantesFunciones.ITAMANIOFILATABLA + (MontoConstantesFunciones.ITAMANIOFILATABLA/2));

						montoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderMonto=(TitledBorder)montoBeanSwingJInternalFrame.jScrollPanelDatosMonto.getBorder();

						titledBorderMonto.setTitle(titledBorderCliente.getTitle() + " -> Monto De Facturacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,montoBeanSwingJInternalFrame);
						}

						montoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(montoBeanSwingJInternalFrame);

						montoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Monto De Facturacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonClienteArchivoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosClienteArchivo && this.permiteMantenimiento(this.cliente)) {
					ClienteArchivoBeanSwingJInternalFrame clientearchivoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFramePopup=new ClienteArchivoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						clientearchivoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFramePopup;
					} else {
						clientearchivoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.setConGuardarRelaciones(false);
						//clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					clientearchivoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarClienteArchivoBeanSwingJInternalFrame(clientes,this.cliente,clientearchivoBeanSwingJInternalFrame,/*conInicializar,*/clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.getConGuardarRelaciones(),clientearchivoBeanSwingJInternalFrame.clientearchivoSessionBean.getEsGuardarRelacionado());
					clientearchivoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						clientearchivoBeanSwingJInternalFrame.actualizarEstadoPanelsClienteArchivo("no_relacionado");

						clientearchivoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ClienteArchivoConstantesFunciones.ITAMANIOFILATABLA + (ClienteArchivoConstantesFunciones.ITAMANIOFILATABLA/2));

						clientearchivoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderClienteArchivo=(TitledBorder)clientearchivoBeanSwingJInternalFrame.jScrollPanelDatosClienteArchivo.getBorder();

						titledBorderClienteArchivo.setTitle(titledBorderCliente.getTitle() + " -> Cliente Archivo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,clientearchivoBeanSwingJInternalFrame);
						}

						clientearchivoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(clientearchivoBeanSwingJInternalFrame);

						clientearchivoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Cliente Archivo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonActividadEconomicaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosActividadEconomica && this.permiteMantenimiento(this.cliente)) {
					ActividadEconomicaBeanSwingJInternalFrame actividadeconomicaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFramePopup=new ActividadEconomicaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						actividadeconomicaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFramePopup;
					} else {
						actividadeconomicaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.setConGuardarRelaciones(false);
						//actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					actividadeconomicaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarActividadEconomicaBeanSwingJInternalFrame(clientes,this.cliente,actividadeconomicaBeanSwingJInternalFrame,/*conInicializar,*/actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.getConGuardarRelaciones(),actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaSessionBean.getEsGuardarRelacionado());
					actividadeconomicaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						actividadeconomicaBeanSwingJInternalFrame.actualizarEstadoPanelsActividadEconomica("no_relacionado");

						actividadeconomicaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ActividadEconomicaConstantesFunciones.ITAMANIOFILATABLA + (ActividadEconomicaConstantesFunciones.ITAMANIOFILATABLA/2));

						actividadeconomicaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderActividadEconomica=(TitledBorder)actividadeconomicaBeanSwingJInternalFrame.jScrollPanelDatosActividadEconomica.getBorder();

						titledBorderActividadEconomica.setTitle(titledBorderCliente.getTitle() + " -> Actividad Economica");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,actividadeconomicaBeanSwingJInternalFrame);
						}

						actividadeconomicaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(actividadeconomicaBeanSwingJInternalFrame);

						actividadeconomicaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Actividad Economica",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDireccionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosDireccion && this.permiteMantenimiento(this.cliente)) {
					DireccionBeanSwingJInternalFrame direccionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFramePopup=new DireccionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						direccionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFramePopup;
					} else {
						direccionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//direccionBeanSwingJInternalFrame.direccionSessionBean.setConGuardarRelaciones(false);
						//direccionBeanSwingJInternalFrame.direccionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					direccionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarDireccionBeanSwingJInternalFrame(clientes,this.cliente,direccionBeanSwingJInternalFrame,/*conInicializar,*/direccionBeanSwingJInternalFrame.direccionSessionBean.getConGuardarRelaciones(),direccionBeanSwingJInternalFrame.direccionSessionBean.getEsGuardarRelacionado());
					direccionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						direccionBeanSwingJInternalFrame.actualizarEstadoPanelsDireccion("no_relacionado");

						direccionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DireccionConstantesFunciones.ITAMANIOFILATABLA + (DireccionConstantesFunciones.ITAMANIOFILATABLA/2));

						direccionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderDireccion=(TitledBorder)direccionBeanSwingJInternalFrame.jScrollPanelDatosDireccion.getBorder();

						titledBorderDireccion.setTitle(titledBorderCliente.getTitle() + " -> Direccion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,direccionBeanSwingJInternalFrame);
						}

						direccionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(direccionBeanSwingJInternalFrame);

						direccionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Direccion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonChequePostFechadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosChequePostFechado && this.permiteMantenimiento(this.cliente)) {
					ChequePostFechadoBeanSwingJInternalFrame chequepostfechadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFramePopup=new ChequePostFechadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						chequepostfechadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFramePopup;
					} else {
						chequepostfechadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.setConGuardarRelaciones(false);
						//chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					chequepostfechadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarChequePostFechadoBeanSwingJInternalFrame(clientes,this.cliente,chequepostfechadoBeanSwingJInternalFrame,/*conInicializar,*/chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.getConGuardarRelaciones(),chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoSessionBean.getEsGuardarRelacionado());
					chequepostfechadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						chequepostfechadoBeanSwingJInternalFrame.actualizarEstadoPanelsChequePostFechado("no_relacionado");

						chequepostfechadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ChequePostFechadoConstantesFunciones.ITAMANIOFILATABLA + (ChequePostFechadoConstantesFunciones.ITAMANIOFILATABLA/2));

						chequepostfechadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderChequePostFechado=(TitledBorder)chequepostfechadoBeanSwingJInternalFrame.jScrollPanelDatosChequePostFechado.getBorder();

						titledBorderChequePostFechado.setTitle(titledBorderCliente.getTitle() + " -> Cheque Post Fechado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,chequepostfechadoBeanSwingJInternalFrame);
						}

						chequepostfechadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(chequepostfechadoBeanSwingJInternalFrame);

						chequepostfechadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Cheque Post Fechado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonSubClienteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Cliente cliente) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormCliente==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente = (Cliente)this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.cliente = (Cliente)this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(cliente!=null) {
						this.cliente = cliente;
					} else {
						this.cliente = new Cliente();
					}
				}

				if(this.isTienePermisosSubCliente && this.permiteMantenimiento(this.cliente)) {
					SubClienteBeanSwingJInternalFrame subclienteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFramePopup=new SubClienteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						subclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFramePopup;
					} else {
						subclienteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame;
					}

					List<Cliente> clientes=new ArrayList<Cliente>();
					clientes.add(this.cliente);
					if(!esRelacionado) {
						//subclienteBeanSwingJInternalFrame.subclienteSessionBean.setConGuardarRelaciones(false);
						//subclienteBeanSwingJInternalFrame.subclienteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					subclienteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormCliente.cargarSubClienteBeanSwingJInternalFrame(clientes,this.cliente,subclienteBeanSwingJInternalFrame,/*conInicializar,*/subclienteBeanSwingJInternalFrame.subclienteSessionBean.getConGuardarRelaciones(),subclienteBeanSwingJInternalFrame.subclienteSessionBean.getEsGuardarRelacionado());
					subclienteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						subclienteBeanSwingJInternalFrame.actualizarEstadoPanelsSubCliente("no_relacionado");

						subclienteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(SubClienteConstantesFunciones.ITAMANIOFILATABLA + (SubClienteConstantesFunciones.ITAMANIOFILATABLA/2));

						subclienteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
						TitledBorder titledBorderSubCliente=(TitledBorder)subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.getBorder();

						titledBorderSubCliente.setTitle(titledBorderCliente.getTitle() + " -> Sub Cliente");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,subclienteBeanSwingJInternalFrame);
						}

						subclienteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(subclienteBeanSwingJInternalFrame);

						subclienteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.clienteSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Sub Cliente",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualCliente(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoCliente.setVisible((this.isVisibilidadCeldaNuevoCliente && this.isPermisoNuevoCliente));			
			this.jButtonDuplicarCliente.setVisible((this.isVisibilidadCeldaDuplicarCliente && this.isPermisoDuplicarCliente));			
			this.jButtonCopiarCliente.setVisible((this.isVisibilidadCeldaCopiarCliente && this.isPermisoCopiarCliente));
			this.jButtonVerFormCliente.setVisible((this.isVisibilidadCeldaVerFormCliente && this.isPermisoVerFormCliente));
			
			this.jButtonAbrirOrderByCliente.setVisible((this.isVisibilidadCeldaOrdenCliente && this.isPermisoOrdenCliente));			
			
			this.jButtonNuevoRelacionesCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesCliente && this.isPermisoNuevoCliente));			
			this.jButtonNuevoGuardarCambiosCliente.setVisible((this.isVisibilidadCeldaNuevoCliente && this.isPermisoNuevoCliente && this.isPermisoGuardarCambiosCliente));
			
			if(this.jInternalFrameDetalleFormCliente!=null) {
			this.jInternalFrameDetalleFormCliente.jButtonModificarCliente.setVisible((this.isVisibilidadCeldaModificarCliente && this.isPermisoActualizarCliente));	
			this.jInternalFrameDetalleFormCliente.jButtonActualizarCliente.setVisible((this.isVisibilidadCeldaActualizarCliente && this.isPermisoActualizarCliente));	
			this.jInternalFrameDetalleFormCliente.jButtonEliminarCliente.setVisible((this.isVisibilidadCeldaEliminarCliente && this.isPermisoEliminarCliente));
			this.jInternalFrameDetalleFormCliente.jButtonCancelarCliente.setVisible(this.isVisibilidadCeldaCancelarCliente);							
			this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.setVisible((this.isVisibilidadCeldaGuardarCliente && this.isPermisoGuardarCambiosCliente));			
			
			}
						
			this.jButtonGuardarCambiosTablaCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosCliente && this.isPermisoGuardarCambiosCliente));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarCliente.setVisible((this.isVisibilidadCeldaNuevoCliente && this.isPermisoNuevoCliente));						
			this.jButtonDuplicarToolBarCliente.setVisible((this.isVisibilidadCeldaDuplicarCliente && this.isPermisoDuplicarCliente));						
			this.jButtonCopiarToolBarCliente.setVisible((this.isVisibilidadCeldaCopiarCliente && this.isPermisoCopiarCliente));			
			this.jButtonVerFormToolBarCliente.setVisible((this.isVisibilidadCeldaVerFormCliente && this.isPermisoVerFormCliente));			
			this.jButtonAbrirOrderByToolBarCliente.setVisible((this.isVisibilidadCeldaOrdenCliente && this.isPermisoOrdenCliente));
			this.jButtonNuevoRelacionesToolBarCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesCliente && this.isPermisoNuevoCliente));			
			this.jButtonNuevoGuardarCambiosToolBarCliente.setVisible((this.isVisibilidadCeldaNuevoCliente && this.isPermisoNuevoCliente && this.isPermisoGuardarCambiosCliente));			
			
			if(this.jInternalFrameDetalleFormCliente!=null) {
			this.jInternalFrameDetalleFormCliente.jButtonModificarToolBarCliente.setVisible((this.isVisibilidadCeldaModificarCliente && this.isPermisoActualizarCliente));	
			this.jInternalFrameDetalleFormCliente.jButtonActualizarToolBarCliente.setVisible((this.isVisibilidadCeldaActualizarCliente  && this.isPermisoActualizarCliente));	
			this.jInternalFrameDetalleFormCliente.jButtonEliminarToolBarCliente.setVisible((this.isVisibilidadCeldaEliminarCliente && this.isPermisoEliminarCliente));
			this.jInternalFrameDetalleFormCliente.jButtonCancelarToolBarCliente.setVisible(this.isVisibilidadCeldaCancelarCliente);				
			this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosToolBarCliente.setVisible((this.isVisibilidadCeldaGuardarCliente && this.isPermisoGuardarCambiosCliente));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosCliente && this.isPermisoGuardarCambiosCliente));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoCliente.setVisible((this.isVisibilidadCeldaNuevoCliente && this.isPermisoNuevoCliente));			
			this.jMenuItemDuplicarCliente.setVisible((this.isVisibilidadCeldaDuplicarCliente && this.isPermisoDuplicarCliente));			
			this.jMenuItemCopiarCliente.setVisible((this.isVisibilidadCeldaCopiarCliente && this.isPermisoCopiarCliente));			
			this.jMenuItemVerFormCliente.setVisible((this.isVisibilidadCeldaVerFormCliente && this.isPermisoVerFormCliente));			
			this.jMenuItemAbrirOrderByCliente.setVisible((this.isVisibilidadCeldaOrdenCliente && this.isPermisoOrdenCliente));			
			//this.jMenuItemMostrarOcultarCliente.setVisible((this.isVisibilidadCeldaOrdenCliente && this.isPermisoOrdenCliente));
			this.jMenuItemDetalleAbrirOrderByCliente.setVisible((this.isVisibilidadCeldaOrdenCliente && this.isPermisoOrdenCliente));			
			//this.jMenuItemDetalleMostrarOcultarCliente.setVisible((this.isVisibilidadCeldaOrdenCliente && this.isPermisoOrdenCliente));			
			this.jMenuItemNuevoRelacionesCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesCliente && this.isPermisoNuevoCliente));			
			this.jMenuItemNuevoGuardarCambiosCliente.setVisible((this.isVisibilidadCeldaNuevoCliente && this.isPermisoNuevoCliente && this.isPermisoGuardarCambiosCliente));									
			
			if(this.jInternalFrameDetalleFormCliente!=null) {
			this.jInternalFrameDetalleFormCliente.jMenuItemModificarCliente.setVisible((this.isVisibilidadCeldaModificarCliente && this.isPermisoActualizarCliente));	
			this.jInternalFrameDetalleFormCliente.jMenuItemActualizarCliente.setVisible((this.isVisibilidadCeldaActualizarCliente && this.isPermisoActualizarCliente));	
			this.jInternalFrameDetalleFormCliente.jMenuItemEliminarCliente.setVisible((this.isVisibilidadCeldaEliminarCliente && this.isPermisoEliminarCliente));
			this.jInternalFrameDetalleFormCliente.jMenuItemCancelarCliente.setVisible(this.isVisibilidadCeldaCancelarCliente);				
			}
			
			this.jMenuItemGuardarCambiosCliente.setVisible((this.isVisibilidadCeldaGuardarCliente && this.isPermisoGuardarCambiosCliente));						
			this.jMenuItemGuardarCambiosTablaCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosCliente && this.isPermisoGuardarCambiosCliente));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoCliente=this.jButtonNuevoCliente.isVisible();
			this.isVisibilidadCeldaDuplicarCliente=this.jButtonDuplicarCliente.isVisible();
			this.isVisibilidadCeldaCopiarCliente=this.jButtonCopiarCliente.isVisible();
			this.isVisibilidadCeldaVerFormCliente=this.jButtonVerFormCliente.isVisible();
			
			this.isVisibilidadCeldaOrdenCliente=this.jButtonAbrirOrderByCliente.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesCliente=this.jButtonNuevoRelacionesCliente.isVisible();
			this.isVisibilidadCeldaModificarCliente=this.jButtonModificarCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormCliente!=null) {
			this.isVisibilidadCeldaActualizarCliente=this.jInternalFrameDetalleFormCliente.jButtonActualizarCliente.isVisible();
			this.isVisibilidadCeldaEliminarCliente=this.jInternalFrameDetalleFormCliente.jButtonEliminarCliente.isVisible();
			this.isVisibilidadCeldaCancelarCliente=this.jInternalFrameDetalleFormCliente.jButtonCancelarCliente.isVisible();
			this.isVisibilidadCeldaGuardarCliente=this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosCliente=this.jButtonGuardarCambiosTablaCliente.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoCliente=this.jButtonNuevoToolBarCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesCliente=this.jButtonNuevoRelacionesToolBarCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormCliente!=null) {
			this.isVisibilidadCeldaModificarCliente=this.jInternalFrameDetalleFormCliente.jButtonModificarToolBarCliente.isVisible();
			this.isVisibilidadCeldaActualizarCliente=this.jInternalFrameDetalleFormCliente.jButtonActualizarToolBarCliente.isVisible();
			this.isVisibilidadCeldaEliminarCliente=this.jInternalFrameDetalleFormCliente.jButtonEliminarToolBarCliente.isVisible();
			this.isVisibilidadCeldaCancelarCliente=this.jInternalFrameDetalleFormCliente.jButtonCancelarToolBarCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarCliente=this.jButtonGuardarCambiosToolBarCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosCliente=this.jButtonGuardarCambiosTablaToolBarCliente.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoCliente=this.jMenuItemNuevoCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesCliente=this.jMenuItemNuevoRelacionesCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormCliente!=null) {
			this.isVisibilidadCeldaModificarCliente=this.jInternalFrameDetalleFormCliente.jMenuItemModificarCliente.isVisible();
			this.isVisibilidadCeldaActualizarCliente=this.jInternalFrameDetalleFormCliente.jMenuItemActualizarCliente.isVisible();
			this.isVisibilidadCeldaEliminarCliente=this.jInternalFrameDetalleFormCliente.jMenuItemEliminarCliente.isVisible();
			this.isVisibilidadCeldaCancelarCliente=this.jInternalFrameDetalleFormCliente.jMenuItemCancelarCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarCliente=this.jMenuItemGuardarCambiosCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosCliente=this.jMenuItemGuardarCambiosTablaCliente.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesCliente(Boolean esInicializar) {
		if(ClienteJInternalFrame.ISBINDING_MANUAL) {			
			if(this.clienteSessionBean.getConGuardarRelaciones()) {
				//if(this.clienteSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesCliente();
			}
			
			this.inicializarActualizarBindingBotonesManualCliente(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualCliente() {
		this.jButtonNuevoCliente.setVisible(this.isPermisoNuevoCliente);			
		this.jButtonDuplicarCliente.setVisible(this.isPermisoDuplicarCliente);			
		this.jButtonCopiarCliente.setVisible(this.isPermisoCopiarCliente);			
		this.jButtonVerFormCliente.setVisible(this.isPermisoVerFormCliente);			
		
		this.jButtonAbrirOrderByCliente.setVisible(this.isPermisoOrdenCliente);					
		
		this.jButtonNuevoRelacionesCliente.setVisible(this.isPermisoNuevoCliente);			
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonModificarCliente.setVisible(this.isPermisoActualizarCliente);	
			this.jInternalFrameDetalleFormCliente.jButtonActualizarCliente.setVisible(this.isPermisoActualizarCliente);	
			this.jInternalFrameDetalleFormCliente.jButtonEliminarCliente.setVisible(this.isPermisoEliminarCliente);
			this.jInternalFrameDetalleFormCliente.jButtonCancelarCliente.setVisible(this.isVisibilidadCeldaCancelarCliente);						
			this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.setVisible(this.isPermisoGuardarCambiosCliente);							
		}
		
		this.jButtonGuardarCambiosTablaCliente.setVisible(this.isPermisoActualizarCliente);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleCliente() {
		this.jInternalFrameDetalleFormCliente.jButtonModificarCliente.setVisible(this.isPermisoActualizarCliente);	
		this.jInternalFrameDetalleFormCliente.jButtonActualizarCliente.setVisible(this.isPermisoActualizarCliente);	
		this.jInternalFrameDetalleFormCliente.jButtonEliminarCliente.setVisible(this.isPermisoEliminarCliente);
		this.jInternalFrameDetalleFormCliente.jButtonCancelarCliente.setVisible(this.isVisibilidadCeldaCancelarCliente);							
		this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.setVisible((this.isVisibilidadCeldaGuardarCliente && this.isPermisoGuardarCambiosCliente));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosCliente() {
		if(ClienteJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualCliente();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesCliente() {
	}
	
	public void jTableDatosClienteListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarCliente(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.cliente.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebCliente(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.cliente.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderCliente.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.cliente.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebCliente(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.cliente.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderCliente.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.cliente.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.cliente.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_identificacionClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoidentificacion=true;

			idTienePermisotipoidentificacion=this.tienePermisosUsuarioEnPaginaWebCliente(TipoIdentificacionConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoidentificacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tipoidentificacionBeanSwingJInternalFrame=new TipoIdentificacionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoidentificacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoidentificacionBeanSwingJInternalFrame.getTipoIdentificacionLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_tipo_identificacion()!=null) {
					this.tipoidentificacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoidentificacionBeanSwingJInternalFrame.setIdActual(this.cliente.getid_tipo_identificacion());
					this.tipoidentificacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoidentificacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoidentificacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoIdentificacion();
				}

				JInternalFrameBase jinternalFrame =this.tipoidentificacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertipoidentificacion=(TitledBorder)this.tipoidentificacionBeanSwingJInternalFrame.jScrollPanelDatosTipoIdentificacion.getBorder();

				titledBordertipoidentificacion.setTitle(titledBorderCliente.getTitle() + " -> Tipo Identificacion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_identificacionClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_tipo_identificacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_identificacion = "+this.cliente.getid_tipo_identificacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonidentificacionClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getidentificacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where identificacion like '%"+this.cliente.getidentificacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.cliente.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.cliente.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonapellidoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getapellido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where apellido like '%"+this.cliente.getapellido()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_completoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getnombre_completo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_completo like '%"+this.cliente.getnombre_completo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_comercialClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getnombre_comercial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_comercial like '%"+this.cliente.getnombre_comercial()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.cliente.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.cliente.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_proveClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getes_prove()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_prove = "+this.cliente.getes_prove().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_grupo_clienteClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisogrupocliente=true;

			idTienePermisogrupocliente=this.tienePermisosUsuarioEnPaginaWebCliente(GrupoClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisogrupocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.grupoclienteBeanSwingJInternalFrame=new GrupoClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.grupoclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.grupoclienteBeanSwingJInternalFrame.getGrupoClienteLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_grupo_cliente()!=null) {
					this.grupoclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.grupoclienteBeanSwingJInternalFrame.setIdActual(this.cliente.getid_grupo_cliente());
					this.grupoclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.grupoclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.grupoclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaGrupoCliente();
				}

				JInternalFrameBase jinternalFrame =this.grupoclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordergrupocliente=(TitledBorder)this.grupoclienteBeanSwingJInternalFrame.jScrollPanelDatosGrupoCliente.getBorder();

				titledBordergrupocliente.setTitle(titledBorderCliente.getTitle() + " -> Grupo Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_grupo_clienteClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_grupo_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_grupo_cliente = "+this.cliente.getid_grupo_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_titulo_clienteClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotitulocliente=true;

			idTienePermisotitulocliente=this.tienePermisosUsuarioEnPaginaWebCliente(TituloClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisotitulocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tituloclienteBeanSwingJInternalFrame=new TituloClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tituloclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tituloclienteBeanSwingJInternalFrame.getTituloClienteLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_titulo_cliente()!=null) {
					this.tituloclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tituloclienteBeanSwingJInternalFrame.setIdActual(this.cliente.getid_titulo_cliente());
					this.tituloclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tituloclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tituloclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTituloCliente();
				}

				JInternalFrameBase jinternalFrame =this.tituloclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertitulocliente=(TitledBorder)this.tituloclienteBeanSwingJInternalFrame.jScrollPanelDatosTituloCliente.getBorder();

				titledBordertitulocliente.setTitle(titledBorderCliente.getTitle() + " -> Tipo Comercial Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_titulo_clienteClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_titulo_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_titulo_cliente = "+this.cliente.getid_titulo_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_area_crClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoareacr=true;

			idTienePermisoareacr=this.tienePermisosUsuarioEnPaginaWebCliente(AreaCrConstantesFunciones.CLASSNAME);

			if(idTienePermisoareacr) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.areacrBeanSwingJInternalFrame=new AreaCrBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.areacrBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.areacrBeanSwingJInternalFrame.getAreaCrLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_area_cr()!=null) {
					this.areacrBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.areacrBeanSwingJInternalFrame.setIdActual(this.cliente.getid_area_cr());
					this.areacrBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.areacrBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.areacrBeanSwingJInternalFrame.inicializarActualizarBindingTablaAreaCr();
				}

				JInternalFrameBase jinternalFrame =this.areacrBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderareacr=(TitledBorder)this.areacrBeanSwingJInternalFrame.jScrollPanelDatosAreaCr.getBorder();

				titledBorderareacr.setTitle(titledBorderCliente.getTitle() + " -> Area");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_area_crClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_area_cr()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_area_cr = "+this.cliente.getid_area_cr().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_clienteClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadocliente=true;

			idTienePermisoestadocliente=this.tienePermisosUsuarioEnPaginaWebCliente(EstadoClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.estadoclienteBeanSwingJInternalFrame=new EstadoClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoclienteBeanSwingJInternalFrame.getEstadoClienteLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_estado_cliente()!=null) {
					this.estadoclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoclienteBeanSwingJInternalFrame.setIdActual(this.cliente.getid_estado_cliente());
					this.estadoclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoCliente();
				}

				JInternalFrameBase jinternalFrame =this.estadoclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderestadocliente=(TitledBorder)this.estadoclienteBeanSwingJInternalFrame.jScrollPanelDatosEstadoCliente.getBorder();

				titledBorderestadocliente.setTitle(titledBorderCliente.getTitle() + " -> Estado Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_clienteClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_estado_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_cliente = "+this.cliente.getid_estado_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonobservacionClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getobservacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where observacion like '%"+this.cliente.getobservacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebCliente(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.cliente.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderCliente.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.cliente.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_regionClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoregion=true;

			idTienePermisoregion=this.tienePermisosUsuarioEnPaginaWebCliente(RegionConstantesFunciones.CLASSNAME);

			if(idTienePermisoregion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.regionBeanSwingJInternalFrame=new RegionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.regionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.regionBeanSwingJInternalFrame.getRegionLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_region()!=null) {
					this.regionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.regionBeanSwingJInternalFrame.setIdActual(this.cliente.getid_region());
					this.regionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.regionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.regionBeanSwingJInternalFrame.inicializarActualizarBindingTablaRegion();
				}

				JInternalFrameBase jinternalFrame =this.regionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderregion=(TitledBorder)this.regionBeanSwingJInternalFrame.jScrollPanelDatosRegion.getBorder();

				titledBorderregion.setTitle(titledBorderCliente.getTitle() + " -> Region");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_regionClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_region()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_region = "+this.cliente.getid_region().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_provinciaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoprovincia=true;

			idTienePermisoprovincia=this.tienePermisosUsuarioEnPaginaWebCliente(ProvinciaConstantesFunciones.CLASSNAME);

			if(idTienePermisoprovincia) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.provinciaBeanSwingJInternalFrame=new ProvinciaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.provinciaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.provinciaBeanSwingJInternalFrame.getProvinciaLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_provincia()!=null) {
					this.provinciaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.provinciaBeanSwingJInternalFrame.setIdActual(this.cliente.getid_provincia());
					this.provinciaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.provinciaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.provinciaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProvincia();
				}

				JInternalFrameBase jinternalFrame =this.provinciaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderprovincia=(TitledBorder)this.provinciaBeanSwingJInternalFrame.jScrollPanelDatosProvincia.getBorder();

				titledBorderprovincia.setTitle(titledBorderCliente.getTitle() + " -> Provincia");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_provinciaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_provincia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_provincia = "+this.cliente.getid_provincia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudadClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudad=true;

			idTienePermisociudad=this.tienePermisosUsuarioEnPaginaWebCliente(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.ciudadBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_ciudad()!=null) {
					this.ciudadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadBeanSwingJInternalFrame.setIdActual(this.cliente.getid_ciudad());
					this.ciudadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderciudad=(TitledBorder)this.ciudadBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudad.setTitle(titledBorderCliente.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudadClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_ciudad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad = "+this.cliente.getid_ciudad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_zonaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisozona=true;

			idTienePermisozona=this.tienePermisosUsuarioEnPaginaWebCliente(ZonaConstantesFunciones.CLASSNAME);

			if(idTienePermisozona) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.zonaBeanSwingJInternalFrame=new ZonaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.zonaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.zonaBeanSwingJInternalFrame.getZonaLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_zona()!=null) {
					this.zonaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.zonaBeanSwingJInternalFrame.setIdActual(this.cliente.getid_zona());
					this.zonaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.inicializarActualizarBindingTablaZona();
				}

				JInternalFrameBase jinternalFrame =this.zonaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderzona=(TitledBorder)this.zonaBeanSwingJInternalFrame.jScrollPanelDatosZona.getBorder();

				titledBorderzona.setTitle(titledBorderCliente.getTitle() + " -> Zona");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_zonaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_zona()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_zona = "+this.cliente.getid_zona().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_pais_nacionalidadClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopaisnacionalidad=true;

			idTienePermisopaisnacionalidad=this.tienePermisosUsuarioEnPaginaWebCliente(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopaisnacionalidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.paisnacionalidadBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisnacionalidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisnacionalidadBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_pais_nacionalidad()!=null) {
					this.paisnacionalidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisnacionalidadBeanSwingJInternalFrame.setIdActual(this.cliente.getid_pais_nacionalidad());
					this.paisnacionalidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisnacionalidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisnacionalidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisnacionalidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderpaisnacionalidad=(TitledBorder)this.paisnacionalidadBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpaisnacionalidad.setTitle(titledBorderCliente.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_pais_nacionalidadClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_pais_nacionalidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais_nacionalidad = "+this.cliente.getid_pais_nacionalidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cargo_laboClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocargolabo=true;

			idTienePermisotipocargolabo=this.tienePermisosUsuarioEnPaginaWebCliente(TipoCargoLaboConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocargolabo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tipocargolaboBeanSwingJInternalFrame=new TipoCargoLaboBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocargolaboBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocargolaboBeanSwingJInternalFrame.getTipoCargoLaboLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_tipo_cargo_labo()!=null) {
					this.tipocargolaboBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocargolaboBeanSwingJInternalFrame.setIdActual(this.cliente.getid_tipo_cargo_labo());
					this.tipocargolaboBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocargolaboBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocargolaboBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCargoLabo();
				}

				JInternalFrameBase jinternalFrame =this.tipocargolaboBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertipocargolabo=(TitledBorder)this.tipocargolaboBeanSwingJInternalFrame.jScrollPanelDatosTipoCargoLabo.getBorder();

				titledBordertipocargolabo.setTitle(titledBorderCliente.getTitle() + " -> Tipo Cargo Laboral");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cargo_laboClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_tipo_cargo_labo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cargo_labo = "+this.cliente.getid_tipo_cargo_labo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_nivel_eduClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiponiveledu=true;

			idTienePermisotiponiveledu=this.tienePermisosUsuarioEnPaginaWebCliente(TipoNivelEduConstantesFunciones.CLASSNAME);

			if(idTienePermisotiponiveledu) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tiponiveleduBeanSwingJInternalFrame=new TipoNivelEduBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiponiveleduBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiponiveleduBeanSwingJInternalFrame.getTipoNivelEduLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_tipo_nivel_edu()!=null) {
					this.tiponiveleduBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiponiveleduBeanSwingJInternalFrame.setIdActual(this.cliente.getid_tipo_nivel_edu());
					this.tiponiveleduBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiponiveleduBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiponiveleduBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoNivelEdu();
				}

				JInternalFrameBase jinternalFrame =this.tiponiveleduBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertiponiveledu=(TitledBorder)this.tiponiveleduBeanSwingJInternalFrame.jScrollPanelDatosTipoNivelEdu.getBorder();

				titledBordertiponiveledu.setTitle(titledBorderCliente.getTitle() + " -> Tipo Nivel Edu");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_nivel_eduClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_tipo_nivel_edu()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_nivel_edu = "+this.cliente.getid_tipo_nivel_edu().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_profesionClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoprofesion=true;

			idTienePermisoprofesion=this.tienePermisosUsuarioEnPaginaWebCliente(ProfesionConstantesFunciones.CLASSNAME);

			if(idTienePermisoprofesion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.profesionBeanSwingJInternalFrame=new ProfesionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.profesionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.profesionBeanSwingJInternalFrame.getProfesionLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_profesion()!=null) {
					this.profesionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.profesionBeanSwingJInternalFrame.setIdActual(this.cliente.getid_profesion());
					this.profesionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.profesionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.profesionBeanSwingJInternalFrame.inicializarActualizarBindingTablaProfesion();
				}

				JInternalFrameBase jinternalFrame =this.profesionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderprofesion=(TitledBorder)this.profesionBeanSwingJInternalFrame.jScrollPanelDatosProfesion.getBorder();

				titledBorderprofesion.setTitle(titledBorderCliente.getTitle() + " -> Profesion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_profesionClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_profesion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_profesion = "+this.cliente.getid_profesion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_generoClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogenero=true;

			idTienePermisotipogenero=this.tienePermisosUsuarioEnPaginaWebCliente(TipoGeneroConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogenero) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tipogeneroBeanSwingJInternalFrame=new TipoGeneroBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogeneroBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogeneroBeanSwingJInternalFrame.getTipoGeneroLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_tipo_genero()!=null) {
					this.tipogeneroBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogeneroBeanSwingJInternalFrame.setIdActual(this.cliente.getid_tipo_genero());
					this.tipogeneroBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGenero();
				}

				JInternalFrameBase jinternalFrame =this.tipogeneroBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertipogenero=(TitledBorder)this.tipogeneroBeanSwingJInternalFrame.jScrollPanelDatosTipoGenero.getBorder();

				titledBordertipogenero.setTitle(titledBorderCliente.getTitle() + " -> Tipo Genero");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_generoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_tipo_genero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_genero = "+this.cliente.getid_tipo_genero().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_civilClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadocivil=true;

			idTienePermisoestadocivil=this.tienePermisosUsuarioEnPaginaWebCliente(EstadoCivilConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadocivil) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.estadocivilBeanSwingJInternalFrame=new EstadoCivilBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadocivilBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadocivilBeanSwingJInternalFrame.getEstadoCivilLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_estado_civil()!=null) {
					this.estadocivilBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadocivilBeanSwingJInternalFrame.setIdActual(this.cliente.getid_estado_civil());
					this.estadocivilBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoCivil();
				}

				JInternalFrameBase jinternalFrame =this.estadocivilBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderestadocivil=(TitledBorder)this.estadocivilBeanSwingJInternalFrame.jScrollPanelDatosEstadoCivil.getBorder();

				titledBorderestadocivil.setTitle(titledBorderCliente.getTitle() + " -> Estado Civil");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_civilClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_estado_civil()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_civil = "+this.cliente.getid_estado_civil().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_legalClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadolegal=true;

			idTienePermisoestadolegal=this.tienePermisosUsuarioEnPaginaWebCliente(EstadoLegalConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadolegal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.estadolegalBeanSwingJInternalFrame=new EstadoLegalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadolegalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadolegalBeanSwingJInternalFrame.getEstadoLegalLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_estado_legal()!=null) {
					this.estadolegalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadolegalBeanSwingJInternalFrame.setIdActual(this.cliente.getid_estado_legal());
					this.estadolegalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadolegalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadolegalBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoLegal();
				}

				JInternalFrameBase jinternalFrame =this.estadolegalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderestadolegal=(TitledBorder)this.estadolegalBeanSwingJInternalFrame.jScrollPanelDatosEstadoLegal.getBorder();

				titledBorderestadolegal.setTitle(titledBorderCliente.getTitle() + " -> Estado Legal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_legalClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_estado_legal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_legal = "+this.cliente.getid_estado_legal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_nacimientoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getfecha_nacimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_nacimiento = '"+Funciones2.getStringPostgresDate(this.cliente.getfecha_nacimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpath_imagen_firmaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getpath_imagen_firma()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where path_imagen_firma like '%"+this.cliente.getpath_imagen_firma()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncontactoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getcontacto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where contacto like '%"+this.cliente.getcontacto()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableClienteActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderCliente=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosCliente.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderCliente.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebCliente(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.cliente.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderCliente.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.cliente.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_rutaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoruta=true;

			idTienePermisoruta=this.tienePermisosUsuarioEnPaginaWebCliente(RutaConstantesFunciones.CLASSNAME);

			if(idTienePermisoruta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.rutaBeanSwingJInternalFrame=new RutaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.rutaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.rutaBeanSwingJInternalFrame.getRutaLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_ruta()!=null) {
					this.rutaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.rutaBeanSwingJInternalFrame.setIdActual(this.cliente.getid_ruta());
					this.rutaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.rutaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.rutaBeanSwingJInternalFrame.inicializarActualizarBindingTablaRuta();
				}

				JInternalFrameBase jinternalFrame =this.rutaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderruta=(TitledBorder)this.rutaBeanSwingJInternalFrame.jScrollPanelDatosRuta.getBorder();

				titledBorderruta.setTitle(titledBorderCliente.getTitle() + " -> Ruta");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_rutaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_ruta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ruta = "+this.cliente.getid_ruta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebCliente(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.cliente.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderCliente.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.cliente.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_actividadClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentroactividad=true;

			idTienePermisocentroactividad=this.tienePermisosUsuarioEnPaginaWebCliente(CentroActividadConstantesFunciones.CLASSNAME);

			if(idTienePermisocentroactividad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.centroactividadBeanSwingJInternalFrame=new CentroActividadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centroactividadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centroactividadBeanSwingJInternalFrame.getCentroActividadLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_centro_actividad()!=null) {
					this.centroactividadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centroactividadBeanSwingJInternalFrame.setIdActual(this.cliente.getid_centro_actividad());
					this.centroactividadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centroactividadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centroactividadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroActividad();
				}

				JInternalFrameBase jinternalFrame =this.centroactividadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordercentroactividad=(TitledBorder)this.centroactividadBeanSwingJInternalFrame.jScrollPanelDatosCentroActividad.getBorder();

				titledBordercentroactividad.setTitle(titledBorderCliente.getTitle() + " -> Centro Actividad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_actividadClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_centro_actividad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_actividad = "+this.cliente.getid_centro_actividad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrepresentanteClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getrepresentante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where representante like '%"+this.cliente.getrepresentante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_garantia_empresaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogarantiaempresa=true;

			idTienePermisotipogarantiaempresa=this.tienePermisosUsuarioEnPaginaWebCliente(TipoGarantiaEmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogarantiaempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tipogarantiaempresaBeanSwingJInternalFrame=new TipoGarantiaEmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogarantiaempresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogarantiaempresaBeanSwingJInternalFrame.getTipoGarantiaEmpresaLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_tipo_garantia_empresa()!=null) {
					this.tipogarantiaempresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogarantiaempresaBeanSwingJInternalFrame.setIdActual(this.cliente.getid_tipo_garantia_empresa());
					this.tipogarantiaempresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogarantiaempresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogarantiaempresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGarantiaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.tipogarantiaempresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertipogarantiaempresa=(TitledBorder)this.tipogarantiaempresaBeanSwingJInternalFrame.jScrollPanelDatosTipoGarantiaEmpresa.getBorder();

				titledBordertipogarantiaempresa.setTitle(titledBorderCliente.getTitle() + " -> Tipo Garantia Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_garantia_empresaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_tipo_garantia_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_garantia_empresa = "+this.cliente.getid_tipo_garantia_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_garantiaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getnombre_garantia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_garantia like '%"+this.cliente.getnombre_garantia()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_garantiaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getvalor_garantia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_garantia = "+this.cliente.getvalor_garantia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cate_tipo_afiliacionClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocatetipoafiliacion=true;

			idTienePermisocatetipoafiliacion=this.tienePermisosUsuarioEnPaginaWebCliente(CateTipoAfiliacionConstantesFunciones.CLASSNAME);

			if(idTienePermisocatetipoafiliacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.catetipoafiliacionBeanSwingJInternalFrame=new CateTipoAfiliacionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.catetipoafiliacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.catetipoafiliacionBeanSwingJInternalFrame.getCateTipoAfiliacionLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_cate_tipo_afiliacion()!=null) {
					this.catetipoafiliacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.catetipoafiliacionBeanSwingJInternalFrame.setIdActual(this.cliente.getid_cate_tipo_afiliacion());
					this.catetipoafiliacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.catetipoafiliacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.catetipoafiliacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaCateTipoAfiliacion();
				}

				JInternalFrameBase jinternalFrame =this.catetipoafiliacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordercatetipoafiliacion=(TitledBorder)this.catetipoafiliacionBeanSwingJInternalFrame.jScrollPanelDatosCateTipoAfiliacion.getBorder();

				titledBordercatetipoafiliacion.setTitle(titledBorderCliente.getTitle() + " -> Cate Tipo Afiliacion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cate_tipo_afiliacionClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_cate_tipo_afiliacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cate_tipo_afiliacion = "+this.cliente.getid_cate_tipo_afiliacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_cargaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getnumero_carga()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_carga = "+this.cliente.getnumero_carga().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncredito_usadoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getcredito_usado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where credito_usado = "+this.cliente.getcredito_usado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlimite_creditoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getlimite_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where limite_credito = "+this.cliente.getlimite_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncredito_disponibleClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getcredito_disponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where credito_disponible = "+this.cliente.getcredito_disponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_documentosClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.gettotal_documentos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_documentos = "+this.cliente.gettotal_documentos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_ultima_facturaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getfecha_ultima_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_ultima_factura = '"+Funciones2.getStringPostgresDate(this.cliente.getfecha_ultima_factura())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.cliente.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_diaClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisodia=true;

			idTienePermisodia=this.tienePermisosUsuarioEnPaginaWebCliente(DiaConstantesFunciones.CLASSNAME);

			if(idTienePermisodia) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.diaBeanSwingJInternalFrame=new DiaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.diaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.diaBeanSwingJInternalFrame.getDiaLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_dia()!=null) {
					this.diaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.diaBeanSwingJInternalFrame.setIdActual(this.cliente.getid_dia());
					this.diaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.diaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.diaBeanSwingJInternalFrame.inicializarActualizarBindingTablaDia();
				}

				JInternalFrameBase jinternalFrame =this.diaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderdia=(TitledBorder)this.diaBeanSwingJInternalFrame.jScrollPanelDatosDia.getBorder();

				titledBorderdia.setTitle(titledBorderCliente.getTitle() + " -> Dia");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_diaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_dia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_dia = "+this.cliente.getid_dia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_pagoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.gethora_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_pago = "+this.cliente.gethora_pago().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebCliente(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.cliente.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderCliente.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.cliente.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncobranzasClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getcobranzas()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cobranzas like '%"+this.cliente.getcobranzas()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmotivoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getmotivo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where motivo like '%"+this.cliente.getmotivo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpreferenciaClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getpreferencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where preferencia like '%"+this.cliente.getpreferencia()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_separacion_bienesClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getcon_separacion_bienes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_separacion_bienes = "+this.cliente.getcon_separacion_bienes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_precioClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprecio=true;

			idTienePermisotipoprecio=this.tienePermisosUsuarioEnPaginaWebCliente(TipoPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tipoprecioBeanSwingJInternalFrame=new TipoPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprecioBeanSwingJInternalFrame.getTipoPrecioLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_tipo_precio()!=null) {
					this.tipoprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprecioBeanSwingJInternalFrame.setIdActual(this.cliente.getid_tipo_precio());
					this.tipoprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipoprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertipoprecio=(TitledBorder)this.tipoprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoPrecio.getBorder();

				titledBordertipoprecio.setTitle(titledBorderCliente.getTitle() + " -> Tipo Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_precioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_tipo_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_precio = "+this.cliente.getid_tipo_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_lista_precioClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipolistaprecio=true;

			idTienePermisotipolistaprecio=this.tienePermisosUsuarioEnPaginaWebCliente(TipoListaPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipolistaprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);

				this.tipolistaprecioBeanSwingJInternalFrame=new TipoListaPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipolistaprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipolistaprecioBeanSwingJInternalFrame.getTipoListaPrecioLogic().setConnexion(this.clienteLogic.getConnexion());

				if(this.cliente.getid_tipo_lista_precio()!=null) {
					this.tipolistaprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipolistaprecioBeanSwingJInternalFrame.setIdActual(this.cliente.getid_tipo_lista_precio());
					this.tipolistaprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipolistaprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipolistaprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoListaPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipolistaprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderCliente=(TitledBorder)this.jScrollPanelDatosCliente.getBorder();
				TitledBorder titledBordertipolistaprecio=(TitledBorder)this.tipolistaprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoListaPrecio.getBorder();

				titledBordertipolistaprecio.setTitle(titledBorderCliente.getTitle() + " -> Tipo Lista Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_lista_precioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getid_tipo_lista_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_lista_precio = "+this.cliente.getid_tipo_lista_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondetalle_estadoClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getdetalle_estado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where detalle_estado like '%"+this.cliente.getdetalle_estado()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_contribuyente_especialClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualCliente(this.getcliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.cliente==null) {
						this.cliente = new Cliente();
					}

					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);
				}

				if(this.cliente.getes_contribuyente_especial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_contribuyente_especial = "+this.cliente.getes_contribuyente_especial().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonBusquedaPorIdentificacionClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesBusquedaPorIdentificacion();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombreComercialClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesBusquedaPorNombreComercial();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonBusquedaPorNombreCompletoClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesBusquedaPorNombreCompleto();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAreaCrClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdAreaCr();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCateTipoAfiliacionClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdCateTipoAfiliacion();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroActividadClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdCentroActividad();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCiudadClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdCiudad();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdCuentaContable();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdDiaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdDia();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdEmpleado();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdEmpresa();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoCivilClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdEstadoCivil();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoClienteClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdEstadoCliente();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoLegalClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdEstadoLegal();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdGrupoClienteClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdGrupoCliente();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdPais();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisNacionaladClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdPaisNacionalad();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProfesionClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdProfesion();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProvinciaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdProvincia();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdRegionClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdRegion();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdRutaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdRuta();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdSucursal();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCargoLaboClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTipoCargoLabo();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGarantiaEmpresaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTipoGarantiaEmpresa();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGeneroClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTipoGenero();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoIdentificacionClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTipoIdentificacion();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoListaPrecioClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTipoListaPrecio();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoNivelEduClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTipoNivelEdu();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPrecioClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTipoPrecio();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTituloClienteClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdTituloCliente();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdVendedor();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdZonaClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingCliente(false,false);

			this.getClientesFK_IdZona();

			this.inicializarActualizarBindingCliente(false);

			//if(ClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameCliente() {
		if(this.jInternalFrameDetalleFormCliente!=null) {
		

		if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
			this.jInternalFrameDetalleFormCliente.setVisible(false);	    			
			this.jInternalFrameDetalleFormCliente.dispose();
			this.jInternalFrameDetalleFormCliente=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoCliente!=null) {
			this.jInternalFrameReporteDinamicoCliente.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoCliente.dispose();
			this.jInternalFrameReporteDinamicoCliente=null;
		}
		
		if(this.jInternalFrameImportacionCliente!=null) {
			this.jInternalFrameImportacionCliente.setVisible(false);	    			
			this.jInternalFrameImportacionCliente.dispose();
			this.jInternalFrameImportacionCliente=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessCliente();
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			
			if(sTipo.equals("NuevoCliente")) {
				jButtonNuevoClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarCliente")) {
				jButtonDuplicarClienteActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarCliente")) {
				jButtonCopiarClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormCliente")) {
				jButtonVerFormClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarCliente")) {
				jButtonNuevoClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarCliente")) {
				jButtonDuplicarClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoCliente")) {
				jButtonNuevoClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarCliente")) {
				jButtonDuplicarClienteActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesCliente")) {
				jButtonNuevoClienteActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarCliente")) {
				jButtonNuevoClienteActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesCliente")) {
				jButtonNuevoClienteActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarCliente")) {
				jButtonModificarClienteActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarCliente")) {
				jButtonModificarClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarCliente")) {
				jButtonModificarClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarCliente")) {
				jButtonActualizarClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarCliente")) {
				jButtonActualizarClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarCliente")) {
				jButtonActualizarClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarCliente")) {
				jButtonEliminarClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarCliente")) {
				jButtonEliminarClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarCliente")) {
				jButtonEliminarClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarCliente")) {
				jButtonCancelarClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarCliente")) {
				jButtonCancelarClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarCliente")) {
				jButtonCancelarClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarCliente")) {
				jButtonCerrarClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarCliente")) {
				jButtonCerrarClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarCliente")) {
				jButtonCerrarClienteActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarCliente")) {
				jButtonMostrarOcultarClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarCliente")) {
				jButtonCancelarClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarCliente")) {
				jButtonCopiarClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarCliente")) {
				jButtonVerFormClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarCliente")) {
				jButtonCopiarClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormCliente")) {
				jButtonVerFormClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionCliente")) {
				jButtonRecargarInformacionClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarCliente")) {
				jButtonRecargarInformacionClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionCliente")) {
				jButtonRecargarInformacionClienteActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresCliente")) {
				jButtonAnterioresClienteActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarCliente")) {
				jButtonAnterioresClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreCliente")) {
				jButtonAnterioresClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesCliente")) {
				jButtonSiguientesClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarCliente")) {
				jButtonSiguientesClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesCliente")) {
				jButtonSiguientesClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByCliente") || sTipo.equals("MenuItemDetalleAbrirOrderByCliente")) {
				jButtonAbrirOrderByClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarCliente") || sTipo.equals("MenuItemDetalleMostrarOcultarCliente")) {
				jButtonMostrarOcultarClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosCliente")) {
				jButtonNuevoGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarCliente")) {
				jButtonNuevoGuardarCambiosClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosCliente")) {
				jButtonNuevoGuardarCambiosClienteActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoCliente")) {
				jButtonCerrarReporteDinamicoClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoCliente")) {
				jButtonGenerarReporteDinamicoClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoCliente")) {
				
				jButtonGenerarExcelReporteDinamicoClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionCliente")) {
				jButtonCerrarImportacionClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionCliente")) {
				
				jButtonGenerarImportacionClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionCliente")) {
				
				jButtonAbrirImportacionClienteActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesCliente")) {
				jComboBoxTiposAccionesClienteActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesCliente")) {
				jComboBoxTiposRelacionesClienteActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioCliente")) {
				jComboBoxTiposAccionesClienteActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarCliente")) {
				
				jComboBoxTiposSeleccionarClienteActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralCliente")) {
				jTextFieldValorCampoGeneralClienteActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByCliente")) {
				jButtonAbrirOrderByClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarCliente")) {
				jButtonAbrirOrderByClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByCliente")) {
				jButtonCerrarOrderByClienteActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idClienteBusqueda")) {
				this.jButtonidClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaClienteUpdate")) {
				this.jButtonid_empresaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaClienteBusqueda")) {
				this.jButtonid_empresaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalClienteUpdate")) {
				this.jButtonid_sucursalClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalClienteBusqueda")) {
				this.jButtonid_sucursalClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoClienteBusqueda")) {
				this.jButtoncodigoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_identificacionClienteUpdate")) {
				this.jButtonid_tipo_identificacionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_identificacionClienteBusqueda")) {
				this.jButtonid_tipo_identificacionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionClienteBusqueda")) {
				this.jButtonidentificacionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucClienteBusqueda")) {
				this.jButtonrucClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreClienteBusqueda")) {
				this.jButtonnombreClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("apellidoClienteBusqueda")) {
				this.jButtonapellidoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completoClienteBusqueda")) {
				this.jButtonnombre_completoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_comercialClienteBusqueda")) {
				this.jButtonnombre_comercialClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoClienteBusqueda")) {
				this.jButtontelefonoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionClienteBusqueda")) {
				this.jButtondireccionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_proveClienteBusqueda")) {
				this.jButtones_proveClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_grupo_clienteClienteUpdate")) {
				this.jButtonid_grupo_clienteClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_grupo_clienteClienteBusqueda")) {
				this.jButtonid_grupo_clienteClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_titulo_clienteClienteUpdate")) {
				this.jButtonid_titulo_clienteClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_titulo_clienteClienteBusqueda")) {
				this.jButtonid_titulo_clienteClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_area_crClienteUpdate")) {
				this.jButtonid_area_crClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_area_crClienteBusqueda")) {
				this.jButtonid_area_crClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_clienteClienteUpdate")) {
				this.jButtonid_estado_clienteClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_clienteClienteBusqueda")) {
				this.jButtonid_estado_clienteClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacionClienteBusqueda")) {
				this.jButtonobservacionClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisClienteUpdate")) {
				this.jButtonid_paisClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisClienteBusqueda")) {
				this.jButtonid_paisClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_regionClienteUpdate")) {
				this.jButtonid_regionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_regionClienteBusqueda")) {
				this.jButtonid_regionClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_provinciaClienteUpdate")) {
				this.jButtonid_provinciaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_provinciaClienteBusqueda")) {
				this.jButtonid_provinciaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadClienteUpdate")) {
				this.jButtonid_ciudadClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadClienteBusqueda")) {
				this.jButtonid_ciudadClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaClienteUpdate")) {
				this.jButtonid_zonaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaClienteBusqueda")) {
				this.jButtonid_zonaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pais_nacionalidadClienteUpdate")) {
				this.jButtonid_pais_nacionalidadClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pais_nacionalidadClienteBusqueda")) {
				this.jButtonid_pais_nacionalidadClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cargo_laboClienteUpdate")) {
				this.jButtonid_tipo_cargo_laboClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cargo_laboClienteBusqueda")) {
				this.jButtonid_tipo_cargo_laboClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduClienteUpdate")) {
				this.jButtonid_tipo_nivel_eduClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduClienteBusqueda")) {
				this.jButtonid_tipo_nivel_eduClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_profesionClienteUpdate")) {
				this.jButtonid_profesionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_profesionClienteBusqueda")) {
				this.jButtonid_profesionClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoClienteUpdate")) {
				this.jButtonid_tipo_generoClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoClienteBusqueda")) {
				this.jButtonid_tipo_generoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilClienteUpdate")) {
				this.jButtonid_estado_civilClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilClienteBusqueda")) {
				this.jButtonid_estado_civilClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_legalClienteUpdate")) {
				this.jButtonid_estado_legalClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_legalClienteBusqueda")) {
				this.jButtonid_estado_legalClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_nacimientoClienteBusqueda")) {
				this.jButtonfecha_nacimientoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_imagen_firmaClienteBusqueda")) {
				this.jButtonpath_imagen_firmaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("contactoClienteBusqueda")) {
				this.jButtoncontactoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableCliente")) {
				this.jButtonid_cuenta_contableClienteActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableClienteArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableClienteUpdate")) {
				this.jButtonid_cuenta_contableClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableClienteBusqueda")) {
				this.jButtonid_cuenta_contableClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_rutaClienteUpdate")) {
				this.jButtonid_rutaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_rutaClienteBusqueda")) {
				this.jButtonid_rutaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorClienteUpdate")) {
				this.jButtonid_vendedorClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorClienteBusqueda")) {
				this.jButtonid_vendedorClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_actividadClienteUpdate")) {
				this.jButtonid_centro_actividadClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_actividadClienteBusqueda")) {
				this.jButtonid_centro_actividadClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("representanteClienteBusqueda")) {
				this.jButtonrepresentanteClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_garantia_empresaClienteUpdate")) {
				this.jButtonid_tipo_garantia_empresaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_garantia_empresaClienteBusqueda")) {
				this.jButtonid_tipo_garantia_empresaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_garantiaClienteBusqueda")) {
				this.jButtonnombre_garantiaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_garantiaClienteBusqueda")) {
				this.jButtonvalor_garantiaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cate_tipo_afiliacionClienteUpdate")) {
				this.jButtonid_cate_tipo_afiliacionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cate_tipo_afiliacionClienteBusqueda")) {
				this.jButtonid_cate_tipo_afiliacionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cargaClienteBusqueda")) {
				this.jButtonnumero_cargaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_usadoClienteBusqueda")) {
				this.jButtoncredito_usadoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("limite_creditoClienteBusqueda")) {
				this.jButtonlimite_creditoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_disponibleClienteBusqueda")) {
				this.jButtoncredito_disponibleClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_documentosClienteBusqueda")) {
				this.jButtontotal_documentosClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_facturaClienteBusqueda")) {
				this.jButtonfecha_ultima_facturaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoClienteBusqueda")) {
				this.jButtondescuentoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_diaClienteUpdate")) {
				this.jButtonid_diaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_diaClienteBusqueda")) {
				this.jButtonid_diaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_pagoClienteBusqueda")) {
				this.jButtonhora_pagoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoClienteUpdate")) {
				this.jButtonid_empleadoClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoClienteBusqueda")) {
				this.jButtonid_empleadoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cobranzasClienteBusqueda")) {
				this.jButtoncobranzasClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("motivoClienteBusqueda")) {
				this.jButtonmotivoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("preferenciaClienteBusqueda")) {
				this.jButtonpreferenciaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_separacion_bienesClienteBusqueda")) {
				this.jButtoncon_separacion_bienesClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioClienteUpdate")) {
				this.jButtonid_tipo_precioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioClienteBusqueda")) {
				this.jButtonid_tipo_precioClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_lista_precioClienteUpdate")) {
				this.jButtonid_tipo_lista_precioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_lista_precioClienteBusqueda")) {
				this.jButtonid_tipo_lista_precioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("detalle_estadoClienteBusqueda")) {
				this.jButtondetalle_estadoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_contribuyente_especialClienteBusqueda")) {
				this.jButtones_contribuyente_especialClienteBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("BusquedaPorIdentificacionCliente")) {
				this.jButtonBusquedaPorIdentificacionClienteActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorNombreComercialCliente")) {
				this.jButtonBusquedaPorNombreComercialClienteActionPerformed(evt);
			}
			else if(sTipo.equals("BusquedaPorNombreCompletoCliente")) {
				this.jButtonBusquedaPorNombreCompletoClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoClienteCliente")) {
				this.jButtonFK_IdEstadoClienteClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoLegalCliente")) {
				this.jButtonFK_IdEstadoLegalClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdGrupoClienteCliente")) {
				this.jButtonFK_IdGrupoClienteClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdRutaCliente")) {
				this.jButtonFK_IdRutaClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPrecioCliente")) {
				this.jButtonFK_IdTipoPrecioClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTituloClienteCliente")) {
				this.jButtonFK_IdTituloClienteClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorCliente")) {
				this.jButtonFK_IdVendedorClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdZonaCliente")) {
				this.jButtonFK_IdZonaClienteActionPerformed(evt);
			}
			
			;
			
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessCliente();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				


				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Cliente clienteLocal=null;
			
			if(!this.getEsControlTabla()) {
				clienteLocal=this.cliente;
			} else {
				clienteLocal=this.clienteAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
							
				
				


				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteAnterior =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteAnterior =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
								
						
				


				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
								
				
				


				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteAnterior =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteAnterior =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteAnterior =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteAnterior =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
							
				
				


				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteAnterior =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.clienteAnterior =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
								
				
				


				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteAnterior =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteAnterior =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosCliente")) {
					jCheckBoxSeleccionarTodosClienteItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosCliente")) {
					jCheckBoxSeleccionadosClienteItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarCliente")) {
					
				}
				
				


				
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
												
				
				


				
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteAnterior =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.clienteAnterior =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_paisCliente")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente;
				}

				if(this.clienteSessionBean.getConGuardarRelaciones()) {
					//classes=ClienteConstantesFunciones.getClassesRelationshipsOfCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormCliente(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisCliente")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente;
				}

				if(this.clienteSessionBean.getConGuardarRelaciones()) {
					//classes=ClienteConstantesFunciones.getClassesRelationshipsOfCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormCliente(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.cliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.cliente);
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisCliente")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente;
				}

				if(this.clienteSessionBean.getConGuardarRelaciones()) {
					//classes=ClienteConstantesFunciones.getClassesRelationshipsOfCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormCliente(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Cliente.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Cliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteAnterior =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteAnterior =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarCliente")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosCliente.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.cliente =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.cliente =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.cliente);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarCliente")) {
				
				}
				
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarCliente")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosCliente.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarCliente")) {
			
			}
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessCliente();
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			if(sTipo.equals("NuevoCliente")) {
				jButtonNuevoClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarCliente")) {
				jButtonDuplicarClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarCliente")) {
				jButtonCopiarClienteActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormCliente")) {
				jButtonVerFormClienteActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesCliente")) {
				jButtonNuevoClienteActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarCliente")) {
				jButtonModificarClienteActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarCliente")) {
				jButtonActualizarClienteActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarCliente")) {
				jButtonEliminarClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarCliente")) {
				jButtonCancelarClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarCliente")) {
				jButtonCerrarClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosCliente")) {
				jButtonGuardarCambiosClienteActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosCliente")) {
				jButtonNuevoGuardarCambiosClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByCliente")) {
				jButtonAbrirOrderByClienteActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionCliente")) {
				jButtonRecargarInformacionClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresCliente")) {
				jButtonAnterioresClienteActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesCliente")) {
				jButtonSiguientesClienteActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idClienteBusqueda")) {
				this.jButtonidClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaClienteUpdate")) {
				this.jButtonid_empresaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaClienteBusqueda")) {
				this.jButtonid_empresaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalClienteUpdate")) {
				this.jButtonid_sucursalClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalClienteBusqueda")) {
				this.jButtonid_sucursalClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoClienteBusqueda")) {
				this.jButtoncodigoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_identificacionClienteUpdate")) {
				this.jButtonid_tipo_identificacionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_identificacionClienteBusqueda")) {
				this.jButtonid_tipo_identificacionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("identificacionClienteBusqueda")) {
				this.jButtonidentificacionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucClienteBusqueda")) {
				this.jButtonrucClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreClienteBusqueda")) {
				this.jButtonnombreClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("apellidoClienteBusqueda")) {
				this.jButtonapellidoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_completoClienteBusqueda")) {
				this.jButtonnombre_completoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_comercialClienteBusqueda")) {
				this.jButtonnombre_comercialClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoClienteBusqueda")) {
				this.jButtontelefonoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionClienteBusqueda")) {
				this.jButtondireccionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_proveClienteBusqueda")) {
				this.jButtones_proveClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_grupo_clienteClienteUpdate")) {
				this.jButtonid_grupo_clienteClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_grupo_clienteClienteBusqueda")) {
				this.jButtonid_grupo_clienteClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_titulo_clienteClienteUpdate")) {
				this.jButtonid_titulo_clienteClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_titulo_clienteClienteBusqueda")) {
				this.jButtonid_titulo_clienteClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_area_crClienteUpdate")) {
				this.jButtonid_area_crClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_area_crClienteBusqueda")) {
				this.jButtonid_area_crClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_clienteClienteUpdate")) {
				this.jButtonid_estado_clienteClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_clienteClienteBusqueda")) {
				this.jButtonid_estado_clienteClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacionClienteBusqueda")) {
				this.jButtonobservacionClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisClienteUpdate")) {
				this.jButtonid_paisClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisClienteBusqueda")) {
				this.jButtonid_paisClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_regionClienteUpdate")) {
				this.jButtonid_regionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_regionClienteBusqueda")) {
				this.jButtonid_regionClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_provinciaClienteUpdate")) {
				this.jButtonid_provinciaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_provinciaClienteBusqueda")) {
				this.jButtonid_provinciaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadClienteUpdate")) {
				this.jButtonid_ciudadClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadClienteBusqueda")) {
				this.jButtonid_ciudadClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaClienteUpdate")) {
				this.jButtonid_zonaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaClienteBusqueda")) {
				this.jButtonid_zonaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pais_nacionalidadClienteUpdate")) {
				this.jButtonid_pais_nacionalidadClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pais_nacionalidadClienteBusqueda")) {
				this.jButtonid_pais_nacionalidadClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cargo_laboClienteUpdate")) {
				this.jButtonid_tipo_cargo_laboClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cargo_laboClienteBusqueda")) {
				this.jButtonid_tipo_cargo_laboClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduClienteUpdate")) {
				this.jButtonid_tipo_nivel_eduClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduClienteBusqueda")) {
				this.jButtonid_tipo_nivel_eduClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_profesionClienteUpdate")) {
				this.jButtonid_profesionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_profesionClienteBusqueda")) {
				this.jButtonid_profesionClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoClienteUpdate")) {
				this.jButtonid_tipo_generoClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoClienteBusqueda")) {
				this.jButtonid_tipo_generoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilClienteUpdate")) {
				this.jButtonid_estado_civilClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilClienteBusqueda")) {
				this.jButtonid_estado_civilClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_legalClienteUpdate")) {
				this.jButtonid_estado_legalClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_legalClienteBusqueda")) {
				this.jButtonid_estado_legalClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_nacimientoClienteBusqueda")) {
				this.jButtonfecha_nacimientoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_imagen_firmaClienteBusqueda")) {
				this.jButtonpath_imagen_firmaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("contactoClienteBusqueda")) {
				this.jButtoncontactoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableCliente")) {
				this.jButtonid_cuenta_contableClienteActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableClienteArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableClienteUpdate")) {
				this.jButtonid_cuenta_contableClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableClienteBusqueda")) {
				this.jButtonid_cuenta_contableClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_rutaClienteUpdate")) {
				this.jButtonid_rutaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_rutaClienteBusqueda")) {
				this.jButtonid_rutaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorClienteUpdate")) {
				this.jButtonid_vendedorClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorClienteBusqueda")) {
				this.jButtonid_vendedorClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_actividadClienteUpdate")) {
				this.jButtonid_centro_actividadClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_actividadClienteBusqueda")) {
				this.jButtonid_centro_actividadClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("representanteClienteBusqueda")) {
				this.jButtonrepresentanteClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_garantia_empresaClienteUpdate")) {
				this.jButtonid_tipo_garantia_empresaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_garantia_empresaClienteBusqueda")) {
				this.jButtonid_tipo_garantia_empresaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_garantiaClienteBusqueda")) {
				this.jButtonnombre_garantiaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_garantiaClienteBusqueda")) {
				this.jButtonvalor_garantiaClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cate_tipo_afiliacionClienteUpdate")) {
				this.jButtonid_cate_tipo_afiliacionClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cate_tipo_afiliacionClienteBusqueda")) {
				this.jButtonid_cate_tipo_afiliacionClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cargaClienteBusqueda")) {
				this.jButtonnumero_cargaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_usadoClienteBusqueda")) {
				this.jButtoncredito_usadoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("limite_creditoClienteBusqueda")) {
				this.jButtonlimite_creditoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_disponibleClienteBusqueda")) {
				this.jButtoncredito_disponibleClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_documentosClienteBusqueda")) {
				this.jButtontotal_documentosClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_ultima_facturaClienteBusqueda")) {
				this.jButtonfecha_ultima_facturaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoClienteBusqueda")) {
				this.jButtondescuentoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_diaClienteUpdate")) {
				this.jButtonid_diaClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_diaClienteBusqueda")) {
				this.jButtonid_diaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_pagoClienteBusqueda")) {
				this.jButtonhora_pagoClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoClienteUpdate")) {
				this.jButtonid_empleadoClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoClienteBusqueda")) {
				this.jButtonid_empleadoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cobranzasClienteBusqueda")) {
				this.jButtoncobranzasClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("motivoClienteBusqueda")) {
				this.jButtonmotivoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("preferenciaClienteBusqueda")) {
				this.jButtonpreferenciaClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_separacion_bienesClienteBusqueda")) {
				this.jButtoncon_separacion_bienesClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioClienteUpdate")) {
				this.jButtonid_tipo_precioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioClienteBusqueda")) {
				this.jButtonid_tipo_precioClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_lista_precioClienteUpdate")) {
				this.jButtonid_tipo_lista_precioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_lista_precioClienteBusqueda")) {
				this.jButtonid_tipo_lista_precioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("detalle_estadoClienteBusqueda")) {
				this.jButtondetalle_estadoClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_contribuyente_especialClienteBusqueda")) {
				this.jButtones_contribuyente_especialClienteBusquedaActionPerformed(evt);
			}
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessCliente();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameCliente")) {
				closingInternalFrameCliente();
				
			} else if(sTipo.equals("jButtonCancelarCliente")) {
				JInternalFrameBase jInternalFrameDetalleFormCliente = (JInternalFrameBase)evt.getSource();
	            	
	            ClienteBeanSwingJInternalFrame jInternalFrameParent=(ClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormCliente.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarClienteActionPerformed(null);
			}
			
			ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.cliente,new Object(),this.clienteParameterGeneral,this.clienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.cliente)) {
			if(!esControlTabla) {
				if(ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);			
				}
				
				if(this.clienteSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualCliente(this.cliente,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.clienteReturnGeneral=clienteLogic.procesarEventosClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.clienteLogic.getClientes(),this.cliente,this.clienteParameterGeneral,this.isEsNuevoCliente,classes);//this.clienteLogic.getCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanCliente(this.clienteReturnGeneral,this.clienteBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.clienteSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanCliente(classes,this.clienteReturnGeneral,this.clienteBean,false);
					}
						
					if(this.clienteReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyCliente(this.clienteReturnGeneral.getCliente());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioCliente(this.clienteReturnGeneral.getCliente());	
					}
						
					if(this.clienteReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioCliente(this.clienteReturnGeneral.getCliente(),classes);//this.clienteBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioCliente(this.cliente,classes);//this.clienteBean);									
				}
			
				if(ClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualCliente(this.cliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysCliente(this.cliente);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.clienteAnterior!=null) {
						this.cliente=this.clienteAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.clienteReturnGeneral=clienteLogic.procesarEventosClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.clienteLogic.getClientes(),this.cliente,this.clienteParameterGeneral,this.isEsNuevoCliente,classes);//this.clienteLogic.getCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.clienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.clienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.clienteReturnGeneral.getCliente(),clienteLogic.getClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.clienteReturnGeneral.getCliente(),this.clientes);
				}
				//ARCHITECTURE
				
				//this.jTableDatosCliente.repaint();
				
				//((AbstractTableModel) this.jTableDatosCliente.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosCliente();
			}
		}
	}
	
	public void actualizarVisualTableDatosCliente() throws Exception {
		
		ClienteModel clienteModel=(ClienteModel)this.jTableDatosCliente.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			clienteModel.clientes=this.clienteLogic.getClientes();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			clienteModel.clientes=this.clientes;
		}
		
		
		((ClienteModel) this.jTableDatosCliente.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaCliente() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getclienteAnterior(),this.clienteLogic.getClientes());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getclienteAnterior(),this.clientes);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosCliente();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioCliente(Cliente cliente,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(ContactoCliente.class)) {
					this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.setContactoClientes(cliente.getContactoClientes());
					this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaContactoCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Bien.class)) {
					this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.setBiens(cliente.getBiens());
					this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.inicializarActualizarBindingTablaBien(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CargaFamiliar.class)) {
					this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.setCargaFamiliars(cliente.getCargaFamiliars());
					this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.inicializarActualizarBindingTablaCargaFamiliar(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ChequePostFechado.class)) {
					this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.setChequePostFechados(cliente.getChequePostFechados());
					this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaChequePostFechado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EMail.class)) {
					this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.setEMails(cliente.getEMails());
					this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.inicializarActualizarBindingTablaEMail(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaPersonal.class)) {
					this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.setReferenciaPersonals(cliente.getReferenciaPersonals());
					this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferenciaPersonal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GarantiaCliente.class)) {
					this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.setGarantiaClientes(cliente.getGarantiaClientes());
					this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaGarantiaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteArchivo.class)) {
					this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.setClienteArchivos(cliente.getClienteArchivos());
					this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.inicializarActualizarBindingTablaClienteArchivo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticasCliente.class)) {
					this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasCliente(cliente.getPoliticasCliente());
					this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticasCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FirmaCliente.class)) {
					this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.setFirmaClientes(cliente.getFirmaClientes());
					this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaFirmaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaComercial.class)) {
					this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.setReferenciaComercials(cliente.getReferenciaComercials());
					this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferenciaComercial(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Novedad.class)) {
					this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(cliente.getNovedads());
					this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.inicializarActualizarBindingTablaNovedad(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionLaboral.class)) {
					this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.setInformacionLaborals(cliente.getInformacionLaborals());
					this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.inicializarActualizarBindingTablaInformacionLaboral(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionFinanciera.class)) {
					this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.setInformacionFinancieras(cliente.getInformacionFinancieras());
					this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.inicializarActualizarBindingTablaInformacionFinanciera(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Telefono.class)) {
					this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.setTelefonos(cliente.getTelefonos());
					this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTelefono(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CuentaPorCobrar.class)) {
					this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.setCuentaPorCobrars(cliente.getCuentaPorCobrars());
					this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaPorCobrar(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Responsable.class)) {
					this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.setResponsables(cliente.getResponsables());
					this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsable(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Transportista.class)) {
					this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.setTransportistas(cliente.getTransportistas());
					this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaCliente.class)) {
					this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.setPoliticaClientes(cliente.getPoliticaClientes());
					this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Conyuge.class)) {
					this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.setConyuge(cliente.getConyuge());
					this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.inicializarActualizarBindingTablaConyuge(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaBancaria.class)) {
					this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.setReferenciaBancarias(cliente.getReferenciaBancarias());
					this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferenciaBancaria(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(BalanceGeneralCliente.class)) {
					this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.setBalanceGeneralClientes(cliente.getBalanceGeneralClientes());
					this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaBalanceGeneralCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DatoConstitucion.class)) {
					this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.setDatoConstitucions(cliente.getDatoConstitucions());
					this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDatoConstitucion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ActividadEconomica.class)) {
					this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.setActividadEconomicas(cliente.getActividadEconomicas());
					this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaActividadEconomica(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProveedorProducto.class)) {
					this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(cliente.getProveedorProductos());
					this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProveedorProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignatario.class)) {
					this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.setConsignatarios(cliente.getConsignatarios());
					this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignatario(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HobbyCliente.class)) {
					this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.setHobbyClientes(cliente.getHobbyClientes());
					this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaHobbyCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RepresentanteLegal.class)) {
					this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.setRepresentanteLegals(cliente.getRepresentanteLegals());
					this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.inicializarActualizarBindingTablaRepresentanteLegal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteCoa.class)) {
					this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.setClienteCoas(cliente.getClienteCoas());
					this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.inicializarActualizarBindingTablaClienteCoa(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Direccion.class)) {
					this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.setDireccions(cliente.getDireccions());
					this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDireccion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteImagen.class)) {
					this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.setClienteImagens(cliente.getClienteImagens());
					this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.inicializarActualizarBindingTablaClienteImagen(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SubCliente.class)) {
					this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.setSubClientes(cliente.getSubClientes());
					this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(cliente.getServicioClientes());
					this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionEconomica.class)) {
					this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.setInformacionEconomicas(cliente.getInformacionEconomicas());
					this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaInformacionEconomica(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(VehiculoCliente.class)) {
					this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.setVehiculoClientes(cliente.getVehiculoClientes());
					this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaVehiculoCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NegocioCliente.class)) {
					this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.setNegocioClientes(cliente.getNegocioClientes());
					this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaNegocioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Monto.class)) {
					this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.setMontos(cliente.getMontos());
					this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMonto(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.cliente,new Object(),generalEntityParameterGeneral,this.clienteReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.clienteSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ClienteConstantesFunciones.getClassesRelationshipsOfCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ClienteConstantesFunciones.getClassesRelationshipsFromStringsOfCliente(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.cliente,new Object(),generalEntityParameterGeneral,this.clienteReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioCliente(ClienteBean clienteBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(ContactoCliente.class)) {
					this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.setContactoClientes(cliente.getContactoClientes());
					this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaContactoCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Bien.class)) {
					this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.setBiens(cliente.getBiens());
					this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.inicializarActualizarBindingTablaBien(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CargaFamiliar.class)) {
					this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.setCargaFamiliars(cliente.getCargaFamiliars());
					this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.inicializarActualizarBindingTablaCargaFamiliar(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ChequePostFechado.class)) {
					this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.setChequePostFechados(cliente.getChequePostFechados());
					this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaChequePostFechado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EMail.class)) {
					this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.setEMails(cliente.getEMails());
					this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.inicializarActualizarBindingTablaEMail(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaPersonal.class)) {
					this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.setReferenciaPersonals(cliente.getReferenciaPersonals());
					this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferenciaPersonal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GarantiaCliente.class)) {
					this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.setGarantiaClientes(cliente.getGarantiaClientes());
					this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaGarantiaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteArchivo.class)) {
					this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.setClienteArchivos(cliente.getClienteArchivos());
					this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.inicializarActualizarBindingTablaClienteArchivo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticasCliente.class)) {
					this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.setPoliticasCliente(cliente.getPoliticasCliente());
					this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticasCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FirmaCliente.class)) {
					this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.setFirmaClientes(cliente.getFirmaClientes());
					this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaFirmaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaComercial.class)) {
					this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.setReferenciaComercials(cliente.getReferenciaComercials());
					this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferenciaComercial(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Novedad.class)) {
					this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.setNovedads(cliente.getNovedads());
					this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.inicializarActualizarBindingTablaNovedad(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionLaboral.class)) {
					this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.setInformacionLaborals(cliente.getInformacionLaborals());
					this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.inicializarActualizarBindingTablaInformacionLaboral(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionFinanciera.class)) {
					this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.setInformacionFinancieras(cliente.getInformacionFinancieras());
					this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.inicializarActualizarBindingTablaInformacionFinanciera(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Telefono.class)) {
					this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.setTelefonos(cliente.getTelefonos());
					this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTelefono(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CuentaPorCobrar.class)) {
					this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.setCuentaPorCobrars(cliente.getCuentaPorCobrars());
					this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaPorCobrar(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Responsable.class)) {
					this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.setResponsables(cliente.getResponsables());
					this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsable(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Transportista.class)) {
					this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.setTransportistas(cliente.getTransportistas());
					this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaCliente.class)) {
					this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.setPoliticaClientes(cliente.getPoliticaClientes());
					this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaPoliticaCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Conyuge.class)) {
					this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.setConyuge(cliente.getConyuge());
					this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.inicializarActualizarBindingTablaConyuge(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaBancaria.class)) {
					this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.setReferenciaBancarias(cliente.getReferenciaBancarias());
					this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.inicializarActualizarBindingTablaReferenciaBancaria(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(BalanceGeneralCliente.class)) {
					this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.setBalanceGeneralClientes(cliente.getBalanceGeneralClientes());
					this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaBalanceGeneralCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DatoConstitucion.class)) {
					this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.setDatoConstitucions(cliente.getDatoConstitucions());
					this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDatoConstitucion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ActividadEconomica.class)) {
					this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.setActividadEconomicas(cliente.getActividadEconomicas());
					this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaActividadEconomica(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProveedorProducto.class)) {
					this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.setProveedorProductos(cliente.getProveedorProductos());
					this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProveedorProducto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignatario.class)) {
					this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.setConsignatarios(cliente.getConsignatarios());
					this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignatario(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HobbyCliente.class)) {
					this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.setHobbyClientes(cliente.getHobbyClientes());
					this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaHobbyCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RepresentanteLegal.class)) {
					this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.setRepresentanteLegals(cliente.getRepresentanteLegals());
					this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.inicializarActualizarBindingTablaRepresentanteLegal(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteCoa.class)) {
					this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.setClienteCoas(cliente.getClienteCoas());
					this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.inicializarActualizarBindingTablaClienteCoa(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Direccion.class)) {
					this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.setDireccions(cliente.getDireccions());
					this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDireccion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteImagen.class)) {
					this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.setClienteImagens(cliente.getClienteImagens());
					this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.inicializarActualizarBindingTablaClienteImagen(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SubCliente.class)) {
					this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.setSubClientes(cliente.getSubClientes());
					this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.setServicioClientes(cliente.getServicioClientes());
					this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionEconomica.class)) {
					this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.setInformacionEconomicas(cliente.getInformacionEconomicas());
					this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaInformacionEconomica(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(VehiculoCliente.class)) {
					this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.setVehiculoClientes(cliente.getVehiculoClientes());
					this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaVehiculoCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NegocioCliente.class)) {
					this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.setNegocioClientes(cliente.getNegocioClientes());
					this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaNegocioCliente(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Monto.class)) {
					this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.setMontos(cliente.getMontos());
					this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMonto(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanCliente(ArrayList<Classe> classes,ClienteReturnGeneral clienteReturnGeneral,ClienteBean clienteBean,Boolean conDefault) throws Exception {
		
			this.clienteBean.setContactoClientes(clienteReturnGeneral.getCliente().getContactoClientes());
			this.clienteBean.setBiens(clienteReturnGeneral.getCliente().getBiens());
			this.clienteBean.setCargaFamiliars(clienteReturnGeneral.getCliente().getCargaFamiliars());
			this.clienteBean.setChequePostFechados(clienteReturnGeneral.getCliente().getChequePostFechados());
			this.clienteBean.setEMails(clienteReturnGeneral.getCliente().getEMails());
			this.clienteBean.setReferenciaPersonals(clienteReturnGeneral.getCliente().getReferenciaPersonals());
			this.clienteBean.setGarantiaClientes(clienteReturnGeneral.getCliente().getGarantiaClientes());
			this.clienteBean.setClienteArchivos(clienteReturnGeneral.getCliente().getClienteArchivos());
			this.clienteBean.setPoliticasCliente(clienteReturnGeneral.getCliente().getPoliticasCliente());
			this.clienteBean.setFirmaClientes(clienteReturnGeneral.getCliente().getFirmaClientes());
			this.clienteBean.setReferenciaComercials(clienteReturnGeneral.getCliente().getReferenciaComercials());
			this.clienteBean.setNovedads(clienteReturnGeneral.getCliente().getNovedads());
			this.clienteBean.setInformacionLaborals(clienteReturnGeneral.getCliente().getInformacionLaborals());
			this.clienteBean.setInformacionFinancieras(clienteReturnGeneral.getCliente().getInformacionFinancieras());
			this.clienteBean.setTelefonos(clienteReturnGeneral.getCliente().getTelefonos());
			this.clienteBean.setCuentaPorCobrars(clienteReturnGeneral.getCliente().getCuentaPorCobrars());
			this.clienteBean.setResponsables(clienteReturnGeneral.getCliente().getResponsables());
			this.clienteBean.setTransportistas(clienteReturnGeneral.getCliente().getTransportistas());
			this.clienteBean.setPoliticaClientes(clienteReturnGeneral.getCliente().getPoliticaClientes());
			this.clienteBean.setConyuge(clienteReturnGeneral.getCliente().getConyuge());
			this.clienteBean.setReferenciaBancarias(clienteReturnGeneral.getCliente().getReferenciaBancarias());
			this.clienteBean.setBalanceGeneralClientes(clienteReturnGeneral.getCliente().getBalanceGeneralClientes());
			this.clienteBean.setDatoConstitucions(clienteReturnGeneral.getCliente().getDatoConstitucions());
			this.clienteBean.setActividadEconomicas(clienteReturnGeneral.getCliente().getActividadEconomicas());
			this.clienteBean.setProveedorProductos(clienteReturnGeneral.getCliente().getProveedorProductos());
			this.clienteBean.setConsignatarios(clienteReturnGeneral.getCliente().getConsignatarios());
			this.clienteBean.setHobbyClientes(clienteReturnGeneral.getCliente().getHobbyClientes());
			this.clienteBean.setRepresentanteLegals(clienteReturnGeneral.getCliente().getRepresentanteLegals());
			this.clienteBean.setClienteCoas(clienteReturnGeneral.getCliente().getClienteCoas());
			this.clienteBean.setDireccions(clienteReturnGeneral.getCliente().getDireccions());
			this.clienteBean.setClienteImagens(clienteReturnGeneral.getCliente().getClienteImagens());
			this.clienteBean.setSubClientes(clienteReturnGeneral.getCliente().getSubClientes());
			this.clienteBean.setServicioClientes(clienteReturnGeneral.getCliente().getServicioClientes());
			this.clienteBean.setInformacionEconomicas(clienteReturnGeneral.getCliente().getInformacionEconomicas());
			this.clienteBean.setVehiculoClientes(clienteReturnGeneral.getCliente().getVehiculoClientes());
			this.clienteBean.setNegocioClientes(clienteReturnGeneral.getCliente().getNegocioClientes());
			this.clienteBean.setMontos(clienteReturnGeneral.getCliente().getMontos());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualCliente(Cliente cliente,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(ContactoCliente.class)) {
					cliente.setContactoClientes(this.jInternalFrameDetalleFormCliente.contactoclienteBeanSwingJInternalFrame.contactoclienteLogic.getContactoClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Bien.class)) {
					cliente.setBiens(this.jInternalFrameDetalleFormCliente.bienBeanSwingJInternalFrame.bienLogic.getBiens());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CargaFamiliar.class)) {
					cliente.setCargaFamiliars(this.jInternalFrameDetalleFormCliente.cargafamiliarBeanSwingJInternalFrame.cargafamiliarLogic.getCargaFamiliars());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ChequePostFechado.class)) {
					cliente.setChequePostFechados(this.jInternalFrameDetalleFormCliente.chequepostfechadoBeanSwingJInternalFrame.chequepostfechadoLogic.getChequePostFechados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EMail.class)) {
					cliente.setEMails(this.jInternalFrameDetalleFormCliente.emailBeanSwingJInternalFrame.emailLogic.getEMails());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaPersonal.class)) {
					cliente.setReferenciaPersonals(this.jInternalFrameDetalleFormCliente.referenciapersonalBeanSwingJInternalFrame.referenciapersonalLogic.getReferenciaPersonals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GarantiaCliente.class)) {
					cliente.setGarantiaClientes(this.jInternalFrameDetalleFormCliente.garantiaclienteBeanSwingJInternalFrame.garantiaclienteLogic.getGarantiaClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteArchivo.class)) {
					cliente.setClienteArchivos(this.jInternalFrameDetalleFormCliente.clientearchivoBeanSwingJInternalFrame.clientearchivoLogic.getClienteArchivos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticasCliente.class)) {
				cliente.setPoliticasCliente(this.jInternalFrameDetalleFormCliente.politicasclienteBeanSwingJInternalFrame.politicasclienteLogic.getPoliticasCliente());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FirmaCliente.class)) {
					cliente.setFirmaClientes(this.jInternalFrameDetalleFormCliente.firmaclienteBeanSwingJInternalFrame.firmaclienteLogic.getFirmaClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaComercial.class)) {
					cliente.setReferenciaComercials(this.jInternalFrameDetalleFormCliente.referenciacomercialBeanSwingJInternalFrame.referenciacomercialLogic.getReferenciaComercials());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Novedad.class)) {
					cliente.setNovedads(this.jInternalFrameDetalleFormCliente.novedadBeanSwingJInternalFrame.novedadLogic.getNovedads());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionLaboral.class)) {
					cliente.setInformacionLaborals(this.jInternalFrameDetalleFormCliente.informacionlaboralBeanSwingJInternalFrame.informacionlaboralLogic.getInformacionLaborals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionFinanciera.class)) {
					cliente.setInformacionFinancieras(this.jInternalFrameDetalleFormCliente.informacionfinancieraBeanSwingJInternalFrame.informacionfinancieraLogic.getInformacionFinancieras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Telefono.class)) {
					cliente.setTelefonos(this.jInternalFrameDetalleFormCliente.telefonoBeanSwingJInternalFrame.telefonoLogic.getTelefonos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CuentaPorCobrar.class)) {
					cliente.setCuentaPorCobrars(this.jInternalFrameDetalleFormCliente.cuentaporcobrarBeanSwingJInternalFrame.cuentaporcobrarLogic.getCuentaPorCobrars());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Responsable.class)) {
					cliente.setResponsables(this.jInternalFrameDetalleFormCliente.responsableBeanSwingJInternalFrame.responsableLogic.getResponsables());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Transportista.class)) {
					cliente.setTransportistas(this.jInternalFrameDetalleFormCliente.transportistaBeanSwingJInternalFrame.transportistaLogic.getTransportistas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PoliticaCliente.class)) {
					cliente.setPoliticaClientes(this.jInternalFrameDetalleFormCliente.politicaclienteBeanSwingJInternalFrame.politicaclienteLogic.getPoliticaClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Conyuge.class)) {
				cliente.setConyuge(this.jInternalFrameDetalleFormCliente.conyugeBeanSwingJInternalFrame.conyugeLogic.getConyuge());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ReferenciaBancaria.class)) {
					cliente.setReferenciaBancarias(this.jInternalFrameDetalleFormCliente.referenciabancariaBeanSwingJInternalFrame.referenciabancariaLogic.getReferenciaBancarias());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(BalanceGeneralCliente.class)) {
					cliente.setBalanceGeneralClientes(this.jInternalFrameDetalleFormCliente.balancegeneralclienteBeanSwingJInternalFrame.balancegeneralclienteLogic.getBalanceGeneralClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DatoConstitucion.class)) {
					cliente.setDatoConstitucions(this.jInternalFrameDetalleFormCliente.datoconstitucionBeanSwingJInternalFrame.datoconstitucionLogic.getDatoConstitucions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ActividadEconomica.class)) {
					cliente.setActividadEconomicas(this.jInternalFrameDetalleFormCliente.actividadeconomicaBeanSwingJInternalFrame.actividadeconomicaLogic.getActividadEconomicas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProveedorProducto.class)) {
					cliente.setProveedorProductos(this.jInternalFrameDetalleFormCliente.proveedorproductoBeanSwingJInternalFrame.proveedorproductoLogic.getProveedorProductos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Consignatario.class)) {
					cliente.setConsignatarios(this.jInternalFrameDetalleFormCliente.consignatarioBeanSwingJInternalFrame.consignatarioLogic.getConsignatarios());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HobbyCliente.class)) {
					cliente.setHobbyClientes(this.jInternalFrameDetalleFormCliente.hobbyclienteBeanSwingJInternalFrame.hobbyclienteLogic.getHobbyClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RepresentanteLegal.class)) {
					cliente.setRepresentanteLegals(this.jInternalFrameDetalleFormCliente.representantelegalBeanSwingJInternalFrame.representantelegalLogic.getRepresentanteLegals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteCoa.class)) {
					cliente.setClienteCoas(this.jInternalFrameDetalleFormCliente.clientecoaBeanSwingJInternalFrame.clientecoaLogic.getClienteCoas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Direccion.class)) {
					cliente.setDireccions(this.jInternalFrameDetalleFormCliente.direccionBeanSwingJInternalFrame.direccionLogic.getDireccions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ClienteImagen.class)) {
					cliente.setClienteImagens(this.jInternalFrameDetalleFormCliente.clienteimagenBeanSwingJInternalFrame.clienteimagenLogic.getClienteImagens());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SubCliente.class)) {
					cliente.setSubClientes(this.jInternalFrameDetalleFormCliente.subclienteBeanSwingJInternalFrame.subclienteLogic.getSubClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioCliente.class)) {
					cliente.setServicioClientes(this.jInternalFrameDetalleFormCliente.servicioclienteBeanSwingJInternalFrame.servicioclienteLogic.getServicioClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(InformacionEconomica.class)) {
					cliente.setInformacionEconomicas(this.jInternalFrameDetalleFormCliente.informacioneconomicaBeanSwingJInternalFrame.informacioneconomicaLogic.getInformacionEconomicas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(VehiculoCliente.class)) {
					cliente.setVehiculoClientes(this.jInternalFrameDetalleFormCliente.vehiculoclienteBeanSwingJInternalFrame.vehiculoclienteLogic.getVehiculoClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(NegocioCliente.class)) {
					cliente.setNegocioClientes(this.jInternalFrameDetalleFormCliente.negocioclienteBeanSwingJInternalFrame.negocioclienteLogic.getNegocioClientes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Monto.class)) {
					cliente.setMontos(this.jInternalFrameDetalleFormCliente.montoBeanSwingJInternalFrame.montoLogic.getMontos());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.cliente)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormCliente = new ClienteDetalleFormJInternalFrame(jDesktopPane,this.clienteSessionBean.getConGuardarRelaciones(),this.clienteSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormCliente);
		this.jInternalFrameDetalleFormCliente.setVisible(false);
		this.jInternalFrameDetalleFormCliente.setSelected(false);						
		
		this.jInternalFrameDetalleFormCliente.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormCliente.clienteLogic=this.clienteLogic;
		
		this.cargarCombosFrameForeignKeyCliente("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleCliente();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleCliente();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyCliente("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyCliente();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarCliente"));
		
		this.jInternalFrameDetalleFormCliente.jButtonModificarCliente.addActionListener(new ButtonActionListener(this,"ModificarCliente"));

		
		this.jInternalFrameDetalleFormCliente.jButtonModificarToolBarCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarCliente"));
					
		this.jInternalFrameDetalleFormCliente.jMenuItemModificarCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarCliente"));		
		
		
		
		this.jInternalFrameDetalleFormCliente.jButtonActualizarCliente.addActionListener (new ButtonActionListener(this,"ActualizarCliente"));
		
		
		this.jInternalFrameDetalleFormCliente.jButtonActualizarToolBarCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarCliente"));
						
		this.jInternalFrameDetalleFormCliente.jMenuItemActualizarCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarCliente"));		
		
		
		
		this.jInternalFrameDetalleFormCliente.jButtonEliminarCliente.addActionListener (new ButtonActionListener(this,"EliminarCliente"));
		
		
		this.jInternalFrameDetalleFormCliente.jButtonEliminarToolBarCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarCliente"));
								
		this.jInternalFrameDetalleFormCliente.jMenuItemEliminarCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarCliente"));		
		
		
		
		this.jInternalFrameDetalleFormCliente.jButtonCancelarCliente.addActionListener (new ButtonActionListener(this,"CancelarCliente"));
		
		
		this.jInternalFrameDetalleFormCliente.jButtonCancelarToolBarCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarCliente"));
					
		this.jInternalFrameDetalleFormCliente.jMenuItemCancelarCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarCliente"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormCliente.jMenuItemDetalleCerrarCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarCliente"));		
		
		
		
		this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosToolBarCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarCliente"));
		
		
		
		this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosToolBarCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarCliente"));
		
		
		
		this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioCliente"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonidClienteBusqueda.addActionListener(new ButtonActionListener(this,"idClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_empresaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_empresaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_sucursalClienteUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_sucursalClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncodigoClienteBusqueda.addActionListener(new ButtonActionListener(this,"codigoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_identificacionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_identificacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonidentificacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"identificacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonrucClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombreClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonapellidoClienteBusqueda.addActionListener(new ButtonActionListener(this,"apellidoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_completoClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_comercialClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_comercialClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtontelefonoClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondireccionClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtones_proveClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_proveClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_grupo_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_grupo_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_grupo_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_grupo_clienteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_titulo_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_titulo_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_titulo_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_titulo_clienteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_area_crClienteUpdate.addActionListener(new ButtonActionListener(this,"id_area_crClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_area_crClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_area_crClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_clienteClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonobservacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"observacionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_paisClienteUpdate.addActionListener(new ButtonActionListener(this,"id_paisClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_paisClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_paisClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_regionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_regionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_regionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_regionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_provinciaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_provinciaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_ciudadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_ciudadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_zonaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_zonaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_zonaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_pais_nacionalidadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_pais_nacionalidadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_cargo_laboClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cargo_laboClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_cargo_laboClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cargo_laboClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_nivel_eduClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_nivel_eduClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_profesionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_profesionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_profesionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_profesionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_generoClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_generoClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_civilClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_civilClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_legalClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_legalClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonfecha_nacimientoClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_nacimientoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonpath_imagen_firmaClienteBusqueda.addActionListener(new ButtonActionListener(this,"path_imagen_firmaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncontactoClienteBusqueda.addActionListener(new ButtonActionListener(this,"contactoClienteBusqueda"));
		//jButtonid_cuenta_contableCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableCliente.addActionListener(new ButtonActionListener(this,"id_cuenta_contableCliente"));
		//jButtonid_cuenta_contableClienteArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_rutaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_rutaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_rutaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_rutaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_vendedorClienteUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_vendedorClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_centro_actividadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_centro_actividadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonrepresentanteClienteBusqueda.addActionListener(new ButtonActionListener(this,"representanteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_garantia_empresaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_garantia_empresaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_garantia_empresaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_garantia_empresaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_garantiaClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_garantiaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonvalor_garantiaClienteBusqueda.addActionListener(new ButtonActionListener(this,"valor_garantiaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_cate_tipo_afiliacionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cate_tipo_afiliacionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_cate_tipo_afiliacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cate_tipo_afiliacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnumero_cargaClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_cargaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncredito_usadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"credito_usadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonlimite_creditoClienteBusqueda.addActionListener(new ButtonActionListener(this,"limite_creditoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncredito_disponibleClienteBusqueda.addActionListener(new ButtonActionListener(this,"credito_disponibleClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtontotal_documentosClienteBusqueda.addActionListener(new ButtonActionListener(this,"total_documentosClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonfecha_ultima_facturaClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_facturaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondescuentoClienteBusqueda.addActionListener(new ButtonActionListener(this,"descuentoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_diaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_diaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_diaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_diaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonhora_pagoClienteBusqueda.addActionListener(new ButtonActionListener(this,"hora_pagoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_empleadoClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_empleadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncobranzasClienteBusqueda.addActionListener(new ButtonActionListener(this,"cobranzasClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonmotivoClienteBusqueda.addActionListener(new ButtonActionListener(this,"motivoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonpreferenciaClienteBusqueda.addActionListener(new ButtonActionListener(this,"preferenciaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncon_separacion_bienesClienteBusqueda.addActionListener(new ButtonActionListener(this,"con_separacion_bienesClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_precioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_precioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_lista_precioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_lista_precioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondetalle_estadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"detalle_estadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtones_contribuyente_especialClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_contribuyente_especialClienteBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesCliente"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameCliente"));
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarCliente"));
		}
		
		this.jTableDatosCliente.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarCliente"));
		
		this.jTableDatosCliente.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarCliente"));
		
		this.jButtonNuevoCliente.addActionListener(new ButtonActionListener(this,"NuevoCliente"));
		
		this.jButtonDuplicarCliente.addActionListener(new ButtonActionListener(this,"DuplicarCliente"));
		
		this.jButtonCopiarCliente.addActionListener(new ButtonActionListener(this,"CopiarCliente"));
		
		this.jButtonVerFormCliente.addActionListener(new ButtonActionListener(this,"VerFormCliente"));
		
		
		this.jButtonNuevoToolBarCliente.addActionListener(new ButtonActionListener(this,"NuevoToolBarCliente"));
			
		this.jButtonDuplicarToolBarCliente.addActionListener(new ButtonActionListener(this,"DuplicarToolBarCliente"));
			
		this.jMenuItemNuevoCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoCliente"));
			
		this.jMenuItemDuplicarCliente.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarCliente"));		
		
		
		this.jButtonNuevoRelacionesCliente.addActionListener (new ButtonActionListener(this,"NuevoRelacionesCliente"));
		
		
		this.jButtonNuevoRelacionesToolBarCliente.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarCliente"));
			
		this.jMenuItemNuevoRelacionesCliente.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesCliente"));		
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonModificarCliente.addActionListener(new ButtonActionListener(this,"ModificarCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonModificarToolBarCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarCliente"));
			
			this.jInternalFrameDetalleFormCliente.jMenuItemModificarCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormCliente.jButtonActualizarCliente.addActionListener (new ButtonActionListener(this,"ActualizarCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonActualizarToolBarCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarCliente"));
				
			this.jInternalFrameDetalleFormCliente.jMenuItemActualizarCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonEliminarCliente.addActionListener (new ButtonActionListener(this,"EliminarCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonEliminarToolBarCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarCliente"));
						
			this.jInternalFrameDetalleFormCliente.jMenuItemEliminarCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonCancelarCliente.addActionListener (new ButtonActionListener(this,"CancelarCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonCancelarToolBarCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarCliente"));
			
			this.jInternalFrameDetalleFormCliente.jMenuItemCancelarCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarCliente"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarCliente.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarCliente"));		
		
		
		this.jButtonCerrarCliente.addActionListener (new ButtonActionListener(this,"CerrarCliente"));
		
		
		this.jButtonCerrarToolBarCliente.addActionListener (new ButtonActionListener(this,"CerrarToolBarCliente"));
			
		this.jMenuItemCerrarCliente.addActionListener (new ButtonActionListener(this,"MenuItemCerrarCliente"));
			
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jMenuItemDetalleCerrarCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosToolBarCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarCliente"));
		}
		
		this.jButtonCopiarToolBarCliente.addActionListener (new ButtonActionListener(this,"CopiarToolBarCliente"));
			
		this.jButtonVerFormToolBarCliente.addActionListener (new ButtonActionListener(this,"VerFormToolBarCliente"));
		
		this.jMenuItemGuardarCambiosCliente.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosCliente"));
			
		this.jMenuItemCopiarCliente.addActionListener (new ButtonActionListener(this,"MenuItemCopiarCliente"));		
		
		this.jMenuItemVerFormCliente.addActionListener (new ButtonActionListener(this,"MenuItemVerFormCliente"));		
		
		
		this.jButtonGuardarCambiosTablaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaCliente"));
		
		
		this.jButtonGuardarCambiosTablaToolBarCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarCliente"));
			
		this.jMenuItemGuardarCambiosTablaCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaCliente"));		
		
		
		
		this.jButtonRecargarInformacionCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionCliente"));
					
		this.jButtonRecargarInformacionToolBarCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarCliente"));
		
		this.jMenuItemRecargarInformacionCliente.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionCliente"));		
		
		
		
		this.jButtonAnterioresCliente.addActionListener (new ButtonActionListener(this,"AnterioresCliente"));
		
		
		this.jButtonAnterioresToolBarCliente.addActionListener (new ButtonActionListener(this,"AnterioresToolBarCliente"));
		
		this.jMenuItemAnterioresCliente.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresCliente"));		
		
		
		this.jButtonSiguientesCliente.addActionListener (new ButtonActionListener(this,"SiguientesCliente"));
		
		
		this.jButtonSiguientesToolBarCliente.addActionListener (new ButtonActionListener(this,"SiguientesToolBarCliente"));
			
		this.jMenuItemSiguientesCliente.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesCliente"));
			
		this.jMenuItemAbrirOrderByCliente.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByCliente"));
			
		this.jMenuItemMostrarOcultarCliente.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarCliente"));
			
		this.jMenuItemDetalleAbrirOrderByCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByCliente"));
			
		this.jMenuItemDetalleMostarOcultarCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarCliente"));		
		
		
		this.jButtonNuevoGuardarCambiosCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosCliente"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarCliente"));
			
		this.jMenuItemNuevoGuardarCambiosCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosCliente"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosCliente"));

		this.jCheckBoxSeleccionadosCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionadosCliente"));
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioCliente"));
		}
		
		
		this.jComboBoxTiposRelacionesCliente.addActionListener (new ButtonActionListener(this,"TiposRelacionesCliente"));
			
		this.jComboBoxTiposAccionesCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesCliente"));
					
		this.jComboBoxTiposSeleccionarCliente.addActionListener (new ButtonActionListener(this,"TiposSeleccionarCliente"));
			
		this.jTextFieldValorCampoGeneralCliente.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralCliente"));		
		
		
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonidClienteBusqueda.addActionListener(new ButtonActionListener(this,"idClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_empresaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_empresaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_sucursalClienteUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_sucursalClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncodigoClienteBusqueda.addActionListener(new ButtonActionListener(this,"codigoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_identificacionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_identificacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonidentificacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"identificacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonrucClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombreClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonapellidoClienteBusqueda.addActionListener(new ButtonActionListener(this,"apellidoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_completoClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_comercialClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_comercialClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtontelefonoClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondireccionClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtones_proveClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_proveClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_grupo_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_grupo_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_grupo_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_grupo_clienteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_titulo_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_titulo_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_titulo_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_titulo_clienteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_area_crClienteUpdate.addActionListener(new ButtonActionListener(this,"id_area_crClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_area_crClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_area_crClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_clienteClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonobservacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"observacionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_paisClienteUpdate.addActionListener(new ButtonActionListener(this,"id_paisClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_paisClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_paisClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_regionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_regionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_regionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_regionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_provinciaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_provinciaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_ciudadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_ciudadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_zonaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_zonaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_zonaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_pais_nacionalidadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_pais_nacionalidadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_cargo_laboClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cargo_laboClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_cargo_laboClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cargo_laboClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_nivel_eduClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_nivel_eduClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_profesionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_profesionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_profesionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_profesionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_generoClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_generoClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_civilClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_civilClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_legalClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_legalClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonfecha_nacimientoClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_nacimientoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonpath_imagen_firmaClienteBusqueda.addActionListener(new ButtonActionListener(this,"path_imagen_firmaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncontactoClienteBusqueda.addActionListener(new ButtonActionListener(this,"contactoClienteBusqueda"));
		//jButtonid_cuenta_contableCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableCliente.addActionListener(new ButtonActionListener(this,"id_cuenta_contableCliente"));
		//jButtonid_cuenta_contableClienteArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_rutaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_rutaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_rutaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_rutaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_vendedorClienteUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_vendedorClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_centro_actividadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_centro_actividadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonrepresentanteClienteBusqueda.addActionListener(new ButtonActionListener(this,"representanteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_garantia_empresaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_garantia_empresaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_garantia_empresaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_garantia_empresaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_garantiaClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_garantiaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonvalor_garantiaClienteBusqueda.addActionListener(new ButtonActionListener(this,"valor_garantiaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_cate_tipo_afiliacionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cate_tipo_afiliacionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_cate_tipo_afiliacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cate_tipo_afiliacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnumero_cargaClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_cargaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncredito_usadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"credito_usadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonlimite_creditoClienteBusqueda.addActionListener(new ButtonActionListener(this,"limite_creditoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncredito_disponibleClienteBusqueda.addActionListener(new ButtonActionListener(this,"credito_disponibleClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtontotal_documentosClienteBusqueda.addActionListener(new ButtonActionListener(this,"total_documentosClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonfecha_ultima_facturaClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_facturaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondescuentoClienteBusqueda.addActionListener(new ButtonActionListener(this,"descuentoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_diaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_diaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_diaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_diaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonhora_pagoClienteBusqueda.addActionListener(new ButtonActionListener(this,"hora_pagoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_empleadoClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_empleadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncobranzasClienteBusqueda.addActionListener(new ButtonActionListener(this,"cobranzasClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonmotivoClienteBusqueda.addActionListener(new ButtonActionListener(this,"motivoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonpreferenciaClienteBusqueda.addActionListener(new ButtonActionListener(this,"preferenciaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncon_separacion_bienesClienteBusqueda.addActionListener(new ButtonActionListener(this,"con_separacion_bienesClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_precioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_precioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_lista_precioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_lista_precioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondetalle_estadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"detalle_estadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtones_contribuyente_especialClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_contribuyente_especialClienteBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonBusquedaPorIdentificacionCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorIdentificacionCliente"));

			this.jButtonBusquedaPorNombreComercialCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreComercialCliente"));

			this.jButtonBusquedaPorNombreCompletoCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreCompletoCliente"));

			this.jButtonFK_IdEstadoClienteCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoClienteCliente"));

			this.jButtonFK_IdEstadoLegalCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoLegalCliente"));

			this.jButtonFK_IdGrupoClienteCliente.addActionListener(new ButtonActionListener(this,"FK_IdGrupoClienteCliente"));

			this.jButtonFK_IdRutaCliente.addActionListener(new ButtonActionListener(this,"FK_IdRutaCliente"));

			this.jButtonFK_IdTipoPrecioCliente.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioCliente"));

			this.jButtonFK_IdTituloClienteCliente.addActionListener(new ButtonActionListener(this,"FK_IdTituloClienteCliente"));

			this.jButtonFK_IdVendedorCliente.addActionListener(new ButtonActionListener(this,"FK_IdVendedorCliente"));

			this.jButtonFK_IdZonaCliente.addActionListener(new ButtonActionListener(this,"FK_IdZonaCliente"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoCliente!=null) {
				this.jInternalFrameReporteDinamicoCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoCliente"));
				this.jInternalFrameReporteDinamicoCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoCliente"));
				this.jInternalFrameReporteDinamicoCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoCliente"));
			}
			
			//this.jButtonCerrarReporteDinamicoCliente.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoCliente"));				
			//this.jButtonGenerarReporteDinamicoCliente.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoCliente"));
			//this.jButtonGenerarExcelReporteDinamicoCliente.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoCliente"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionCliente!=null) {
				this.jInternalFrameImportacionCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionCliente"));
				this.jInternalFrameImportacionCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionCliente"));
				this.jInternalFrameImportacionCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionCliente"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderByCliente"));
			
			this.jButtonAbrirOrderByToolBarCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarCliente"));			
			
			if(this.jInternalFrameOrderByCliente!=null) {
				this.jInternalFrameOrderByCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByCliente"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormCliente.jTabbedPaneRelacionesCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesCliente"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameCliente();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormCliente.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormCliente = (JInternalFrameBase)event.getSource();
	            	
	            ClienteBeanSwingJInternalFrame jInternalFrameParent=(ClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormCliente.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarClienteActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosCliente.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosCliente.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosCliente.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoCliente";
		inputMap = this.jButtonNuevoCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoClienteActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesCliente";
		inputMap = this.jButtonNuevoRelacionesCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoClienteActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarCliente";
		inputMap = this.jButtonModificarCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarCliente";
		inputMap = this.jButtonActualizarCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarCliente";
		inputMap = this.jButtonEliminarCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarCliente";
		inputMap = this.jButtonCancelarCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarCliente";
		inputMap = this.jButtonCerrarCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosCliente";
		inputMap = this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormCliente.jButtonGuardarCambiosCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosCliente.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosClienteItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonidClienteBusqueda.addActionListener(new ButtonActionListener(this,"idClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_empresaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_empresaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_sucursalClienteUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_sucursalClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncodigoClienteBusqueda.addActionListener(new ButtonActionListener(this,"codigoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_identificacionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_identificacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonidentificacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"identificacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonrucClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombreClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombreClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonapellidoClienteBusqueda.addActionListener(new ButtonActionListener(this,"apellidoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_completoClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_completoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_comercialClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_comercialClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtontelefonoClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondireccionClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtones_proveClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_proveClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_grupo_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_grupo_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_grupo_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_grupo_clienteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_titulo_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_titulo_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_titulo_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_titulo_clienteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_area_crClienteUpdate.addActionListener(new ButtonActionListener(this,"id_area_crClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_area_crClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_area_crClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_clienteClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_clienteClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_clienteClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_clienteClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonobservacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"observacionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_paisClienteUpdate.addActionListener(new ButtonActionListener(this,"id_paisClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_paisClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_paisClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_regionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_regionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_regionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_regionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_provinciaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_provinciaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_ciudadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_ciudadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_zonaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_zonaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_zonaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_pais_nacionalidadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_pais_nacionalidadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_cargo_laboClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cargo_laboClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_cargo_laboClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cargo_laboClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_nivel_eduClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_nivel_eduClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_profesionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_profesionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_profesionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_profesionClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_generoClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_generoClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_civilClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_civilClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_legalClienteUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_estado_legalClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonfecha_nacimientoClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_nacimientoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonpath_imagen_firmaClienteBusqueda.addActionListener(new ButtonActionListener(this,"path_imagen_firmaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncontactoClienteBusqueda.addActionListener(new ButtonActionListener(this,"contactoClienteBusqueda"));
		//jButtonid_cuenta_contableCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableCliente.addActionListener(new ButtonActionListener(this,"id_cuenta_contableCliente"));
		//jButtonid_cuenta_contableClienteArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_rutaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_rutaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_rutaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_rutaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_vendedorClienteUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_vendedorClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_centro_actividadClienteUpdate.addActionListener(new ButtonActionListener(this,"id_centro_actividadClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_centro_actividadClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_actividadClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonrepresentanteClienteBusqueda.addActionListener(new ButtonActionListener(this,"representanteClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_garantia_empresaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_garantia_empresaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_garantia_empresaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_garantia_empresaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnombre_garantiaClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_garantiaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonvalor_garantiaClienteBusqueda.addActionListener(new ButtonActionListener(this,"valor_garantiaClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_cate_tipo_afiliacionClienteUpdate.addActionListener(new ButtonActionListener(this,"id_cate_tipo_afiliacionClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_cate_tipo_afiliacionClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_cate_tipo_afiliacionClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonnumero_cargaClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_cargaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncredito_usadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"credito_usadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonlimite_creditoClienteBusqueda.addActionListener(new ButtonActionListener(this,"limite_creditoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncredito_disponibleClienteBusqueda.addActionListener(new ButtonActionListener(this,"credito_disponibleClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtontotal_documentosClienteBusqueda.addActionListener(new ButtonActionListener(this,"total_documentosClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonfecha_ultima_facturaClienteBusqueda.addActionListener(new ButtonActionListener(this,"fecha_ultima_facturaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondescuentoClienteBusqueda.addActionListener(new ButtonActionListener(this,"descuentoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_diaClienteUpdate.addActionListener(new ButtonActionListener(this,"id_diaClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_diaClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_diaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonhora_pagoClienteBusqueda.addActionListener(new ButtonActionListener(this,"hora_pagoClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_empleadoClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_empleadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncobranzasClienteBusqueda.addActionListener(new ButtonActionListener(this,"cobranzasClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonmotivoClienteBusqueda.addActionListener(new ButtonActionListener(this,"motivoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonpreferenciaClienteBusqueda.addActionListener(new ButtonActionListener(this,"preferenciaClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtoncon_separacion_bienesClienteBusqueda.addActionListener(new ButtonActionListener(this,"con_separacion_bienesClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_precioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_precioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_lista_precioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtonid_tipo_lista_precioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtondetalle_estadoClienteBusqueda.addActionListener(new ButtonActionListener(this,"detalle_estadoClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormCliente.jButtones_contribuyente_especialClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_contribuyente_especialClienteBusqueda"));
		
		
		this.jButtonBusquedaPorIdentificacionCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorIdentificacionCliente"));

		this.jButtonBusquedaPorNombreComercialCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreComercialCliente"));

		this.jButtonBusquedaPorNombreCompletoCliente.addActionListener(new ButtonActionListener(this,"BusquedaPorNombreCompletoCliente"));

		this.jButtonFK_IdEstadoClienteCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoClienteCliente"));

		this.jButtonFK_IdEstadoLegalCliente.addActionListener(new ButtonActionListener(this,"FK_IdEstadoLegalCliente"));

		this.jButtonFK_IdGrupoClienteCliente.addActionListener(new ButtonActionListener(this,"FK_IdGrupoClienteCliente"));

		this.jButtonFK_IdRutaCliente.addActionListener(new ButtonActionListener(this,"FK_IdRutaCliente"));

		this.jButtonFK_IdTipoPrecioCliente.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioCliente"));

		this.jButtonFK_IdTituloClienteCliente.addActionListener(new ButtonActionListener(this,"FK_IdTituloClienteCliente"));

		this.jButtonFK_IdVendedorCliente.addActionListener(new ButtonActionListener(this,"FK_IdVendedorCliente"));

		this.jButtonFK_IdZonaCliente.addActionListener(new ButtonActionListener(this,"FK_IdZonaCliente"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarClienteActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarCliente.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosCliente(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Cliente clienteAux:this.clienteLogic.getClientes()) {
					clienteAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Cliente clienteAux:clientes) {
					clienteAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Cliente clienteAux:this.clienteLogic.getClientes()) {
						clienteAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Cliente clienteAux:clientes) {
						clienteAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Cliente clienteAux:this.clienteLogic.getClientes()) {
					
						if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_ESPROVE)) {
							existe=true;
							clienteAux.setes_prove(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES)) {
							existe=true;
							clienteAux.setcon_separacion_bienes(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL)) {
							existe=true;
							clienteAux.setes_contribuyente_especial(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Cliente clienteAux:clientes) {
						
						if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_ESPROVE)) {
							existe=true;
							clienteAux.setes_prove(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES)) {
							existe=true;
							clienteAux.setcon_separacion_bienes(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL)) {
							existe=true;
							clienteAux.setes_contribuyente_especial(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosCliente.getSelectedRows();
			
			Cliente clienteLocal=new Cliente();
			
			//this.seleccionarTodosCliente(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLocal =(Cliente) this.clienteLogic.getClientes().toArray()[this.jTableDatosCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					clienteLocal =(Cliente) this.clientes.toArray()[this.jTableDatosCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				clienteLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Cliente clienteAux:this.clienteLogic.getClientes()) {
						clienteAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Cliente clienteAux:clientes) {
						clienteAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaCliente(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualClienteItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarClienteParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralClienteActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingCliente(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralCliente.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Cliente clienteAux:this.clienteLogic.getClientes()) {
				
						if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							clienteAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							clienteAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_RUC)) {
							existe=true;
							clienteAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							clienteAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_APELLIDO)) {
							existe=true;
							clienteAux.setapellido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
							existe=true;
							clienteAux.setnombre_completo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL)) {
							existe=true;
							clienteAux.setnombre_comercial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							clienteAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							clienteAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_OBSERVACION)) {
							existe=true;
							clienteAux.setobservacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_FECHANACIMIENTO)) {
							existe=true;
							clienteAux.setfecha_nacimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA)) {
							existe=true;
							clienteAux.setpath_imagen_firma(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CONTACTO)) {
							existe=true;
							clienteAux.setcontacto(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_REPRESENTANTE)) {
							existe=true;
							clienteAux.setrepresentante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBREGARANTIA)) {
							existe=true;
							clienteAux.setnombre_garantia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_VALORGARANTIA)) {
							existe=true;
							clienteAux.setvalor_garantia(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NUMEROCARGA)) {
							existe=true;
							clienteAux.setnumero_carga(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CREDITOUSADO)) {
							existe=true;
							clienteAux.setcredito_usado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_LIMITECREDITO)) {
							existe=true;
							clienteAux.setlimite_credito(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE)) {
							existe=true;
							clienteAux.setcredito_disponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS)) {
							existe=true;
							clienteAux.settotal_documentos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA)) {
							existe=true;
							clienteAux.setfecha_ultima_factura(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							clienteAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_HORAPAGO)) {
							existe=true;
							clienteAux.sethora_pago(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_COBRANZAS)) {
							existe=true;
							clienteAux.setcobranzas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_MOTIVO)) {
							existe=true;
							clienteAux.setmotivo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_PREFERENCIA)) {
							existe=true;
							clienteAux.setpreferencia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DETALLEESTADO)) {
							existe=true;
							clienteAux.setdetalle_estado(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Cliente clienteAux:clientes) {
					
						if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							clienteAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDENTIFICACION)) {
							existe=true;
							clienteAux.setidentificacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_RUC)) {
							existe=true;
							clienteAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							clienteAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_APELLIDO)) {
							existe=true;
							clienteAux.setapellido(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
							existe=true;
							clienteAux.setnombre_completo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL)) {
							existe=true;
							clienteAux.setnombre_comercial(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							clienteAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							clienteAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_OBSERVACION)) {
							existe=true;
							clienteAux.setobservacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_FECHANACIMIENTO)) {
							existe=true;
							clienteAux.setfecha_nacimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA)) {
							existe=true;
							clienteAux.setpath_imagen_firma(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CONTACTO)) {
							existe=true;
							clienteAux.setcontacto(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_REPRESENTANTE)) {
							existe=true;
							clienteAux.setrepresentante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBREGARANTIA)) {
							existe=true;
							clienteAux.setnombre_garantia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_VALORGARANTIA)) {
							existe=true;
							clienteAux.setvalor_garantia(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NUMEROCARGA)) {
							existe=true;
							clienteAux.setnumero_carga(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CREDITOUSADO)) {
							existe=true;
							clienteAux.setcredito_usado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_LIMITECREDITO)) {
							existe=true;
							clienteAux.setlimite_credito(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE)) {
							existe=true;
							clienteAux.setcredito_disponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS)) {
							existe=true;
							clienteAux.settotal_documentos(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA)) {
							existe=true;
							clienteAux.setfecha_ultima_factura(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							clienteAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_HORAPAGO)) {
							existe=true;
							clienteAux.sethora_pago(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_COBRANZAS)) {
							existe=true;
							clienteAux.setcobranzas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_MOTIVO)) {
							existe=true;
							clienteAux.setmotivo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_PREFERENCIA)) {
							existe=true;
							clienteAux.setpreferencia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DETALLEESTADO)) {
							existe=true;
							clienteAux.setdetalle_estado(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesClienteActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioCliente=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesCliente.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteCliente) {				
					conSplash=true;//false;										
					
					//this.startProcessCliente(conSplash);
				
					this.generarReporteClientesSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoClientesSeleccionados();
				//this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoClientesSeleccionados(false);
				//this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoClientesSeleccionados(true);
				//this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessCliente();
				
				this.exportarClientesSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionClientes();
				//this.importarClientes();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessCliente();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelClientesSeleccionados();
				//this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessCliente();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoCliente)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyCliente(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.setSelectedIndex(0);					
				}	
			} 			
			else if(ClienteBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteCliente) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessCliente(conSplash);
					
						//this.actualizarParametrosGeneralCliente();
						
						this.generarReporteProcesoAccionClientesSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ClienteBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO ClienteS SELECCIONADOS?", "MANTENIMIENTO DE Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessCliente();
				
						this.actualizarParametrosGeneralCliente();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.clienteReturnGeneral=clienteLogic.procesarAccionClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.clienteLogic.getClientes(),this.clienteParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralCliente();
					
					ClienteBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormCliente.jComboBoxTiposAccionesFormularioCliente.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessCliente(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesClienteActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessCliente();
			
			if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
			Cliente cliente=new Cliente();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesCliente.getSelectedItem();
			
			
			
			
			clientesSeleccionados=this.getClientesSeleccionados(true);
			//this.sTipoAccion;
			
			if(clientesSeleccionados.size()==1) {
				for(Cliente clienteAux:clientesSeleccionados) {
					cliente=clienteAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Contacto Cliente")) {
					jButtonContactoClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Bien")) {
					jButtonBienActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Carga Familiar")) {
					jButtonCargaFamiliarActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Cheque Post Fechado")) {
					jButtonChequePostFechadoActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("E Mail")) {
					jButtonEMailActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Referencia Personal")) {
					jButtonReferenciaPersonalActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Garantia Cliente")) {
					jButtonGarantiaClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Cliente Archivo")) {
					jButtonClienteArchivoActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Politicas Cliente")) {
					jButtonPoliticasClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Firma Cliente")) {
					jButtonFirmaClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Referencia Comercial")) {
					jButtonReferenciaComercialActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Novedad")) {
					jButtonNovedadActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Informacion Laboral")) {
					jButtonInformacionLaboralActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Informacion Financiera")) {
					jButtonInformacionFinancieraActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Telefono")) {
					jButtonTelefonoActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Cuenta Por Cobrar")) {
					jButtonCuentaPorCobrarActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Responsable")) {
					jButtonResponsableActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Transportista")) {
					jButtonTransportistaActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Politica Cliente")) {
					jButtonPoliticaClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Conyuge")) {
					jButtonConyugeActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Referencia Bancaria")) {
					jButtonReferenciaBancariaActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Balance General Cliente")) {
					jButtonBalanceGeneralClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Dato Constitucion")) {
					jButtonDatoConstitucionActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Actividad Economica")) {
					jButtonActividadEconomicaActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Producto Proveedor")) {
					jButtonProveedorProductoActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Consignatario")) {
					jButtonConsignatarioActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Hobby Cliente")) {
					jButtonHobbyClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Representante Legal")) {
					jButtonRepresentanteLegalActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Coa")) {
					jButtonClienteCoaActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Direccion")) {
					jButtonDireccionActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Cliente Imagen")) {
					jButtonClienteImagenActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Sub Cliente")) {
					jButtonSubClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Servicio Cliente")) {
					jButtonServicioClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Informacion Economica")) {
					jButtonInformacionEconomicaActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Vehiculo Cliente")) {
					jButtonVehiculoClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Negocio Cliente")) {
					jButtonNegocioClienteActionPerformed(null,rowIndex,true,false,cliente);
				}
				else if(this.sTipoRelacion.equals("Monto De Facturacion")) {
					jButtonMontoActionPerformed(null,rowIndex,true,false,cliente);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessCliente();
			
      		//this.finishProcessCliente(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarClienteReturnGeneral() throws Exception {
		if(this.clienteReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.clienteReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.clienteReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.clienteReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.clienteReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.clienteReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingCliente(false);
		}
		
		if(this.clienteReturnGeneral.getConRetornoLista() || this.clienteReturnGeneral.getConRetornoObjeto()) {
			if(this.clienteReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.clienteLogic.setClientes(this.clienteReturnGeneral.getClientes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.clienteReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.clienteLogic.setCliente(this.clienteReturnGeneral.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingCliente(false);
		}
	}
	
	public void actualizarParametrosGeneralCliente() throws Exception {
		
		
	}
	
	public ArrayList<Cliente> getClientesSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioCliente) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Cliente clienteAux:clienteLogic.getClientes()) {
					if(clienteAux.getIsSelected()) {
						clientesSeleccionados.add(clienteAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Cliente clienteAux:this.clientes) {
					if(clienteAux.getIsSelected()) {
						clientesSeleccionados.add(clienteAux);				
					}
				}
			}
			
			if(clientesSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						clientesSeleccionados.addAll(this.clienteLogic.getClientes());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						clientesSeleccionados.addAll(this.clientes);				
					}
				}
			}
		} else {
			clientesSeleccionados.add(this.cliente);
		}
		
		return clientesSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoClientesSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoClientesSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesClientesSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesClientesSeleccionados() throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteClientes("Todos",clientesSeleccionados);
		
	}	
	
	public void generarReporteNormalClientesSeleccionados() throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteClientes("Todos",clientesSeleccionados);
	}		
	
	public void generarReporteProcesoAccionClientesSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteClientes("Todos",clientesSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoClientesSeleccionados() throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
		
		
		this.abrirInicializarFrameReporteDinamicoCliente();
		
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoCliente();
		
		
		//this.generarReporteClientes("Todos",clientesSeleccionados ,clienteImplementable,clienteImplementableHome);
	}
	
	public void mostrarImportacionClientes() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionCliente();
		
		this.abrirFrameImportacionCliente();		
		
			
		//this.generarReporteClientes("Todos",clientesSeleccionados ,clienteImplementable,clienteImplementableHome);
	}
	
	public void importarClientes() throws Exception {		
	
	}
	
	public void exportarClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelClientesSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoClientesSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlClientesSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoClientesSeleccionados() throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"cliente."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarCliente(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Cliente clienteAux:clientesSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarCliente(clienteAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//clienteAux.setsDetalleGeneralEntityReporte(clienteAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarCliente(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDENTIFICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_APELLIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_ESPROVE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDAREACR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_OBSERVACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDREGION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDPROVINCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDCIUDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDZONA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDPROFESION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTIPOGENERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDESTADOCIVIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDESTADOLEGAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_FECHANACIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_CONTACTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDRUTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_REPRESENTANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_NOMBREGARANTIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_VALORGARANTIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_NUMEROCARGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_CREDITOUSADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_LIMITECREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDDIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_HORAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_COBRANZAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_MOTIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_PREFERENCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTIPOPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_DETALLEESTADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarCliente(Cliente cliente,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=cliente.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettipoidentificacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getidentificacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getapellido();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getnombre_completo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getnombre_comercial();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getes_prove().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getgrupocliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettitulocliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getareacr_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getestadocliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getobservacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getregion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getprovincia_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getciudad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getzona_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getpaisnacionalidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettipocargolabo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettiponiveledu_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getprofesion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettipogenero_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getestadocivil_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getestadolegal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getfecha_nacimiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getpath_imagen_firma();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcontacto();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getruta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcentroactividad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getrepresentante();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettipogarantiaempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getnombre_garantia();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getvalor_garantia().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcatetipoafiliacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getnumero_carga().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcredito_usado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getlimite_credito().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcredito_disponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettotal_documentos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getfecha_ultima_factura().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getdia_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gethora_pago().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcobranzas();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getmotivo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getpreferencia();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getcon_separacion_bienes().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettipoprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.gettipolistaprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getdetalle_estado();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=cliente.getes_contribuyente_especial().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelClientesSeleccionados() throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"cliente.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Clientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelCliente(row);				
				iRow++;
			}				
			
			for(Cliente clienteAux:clientesSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelCliente(clienteAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlClientesSeleccionados() throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();		
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"cliente.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("clientes");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("cliente");
			//elementRoot.appendChild(element);
		
			for(Cliente clienteAux:clientesSeleccionados) {
				element = document.createElement("cliente");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlCliente(clienteAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelCliente(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDENTIFICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_APELLIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_ESPROVE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDAREACR);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_OBSERVACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDREGION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPROVINCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCIUDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDZONA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDPROFESION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOGENERO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOCIVIL);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDESTADOLEGAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_FECHANACIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_CONTACTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDRUTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_REPRESENTANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_NOMBREGARANTIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_VALORGARANTIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_NUMEROCARGA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_CREDITOUSADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_LIMITECREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_CREDITODISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_TOTALDOCUMENTOS);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDDIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_HORAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_COBRANZAS);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_MOTIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_PREFERENCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_DETALLEESTADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelCliente(Cliente cliente,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettipoidentificacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getidentificacion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getapellido());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getnombre_completo());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getnombre_comercial());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getes_prove());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getgrupocliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettitulocliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getareacr_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getestadocliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getobservacion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getregion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getprovincia_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getciudad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getzona_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getpaisnacionalidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettipocargolabo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettiponiveledu_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getprofesion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettipogenero_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getestadocivil_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getestadolegal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getfecha_nacimiento());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getpath_imagen_firma());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcontacto());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getruta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcentroactividad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getrepresentante());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettipogarantiaempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getnombre_garantia());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getvalor_garantia());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcatetipoafiliacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getnumero_carga());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcredito_usado());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getlimite_credito());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcredito_disponible());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettotal_documentos());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getfecha_ultima_factura());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getdia_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gethora_pago());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcobranzas());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getmotivo());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getpreferencia());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getcon_separacion_bienes());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettipoprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.gettipolistaprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getdetalle_estado());
		cell = row.createCell(iColumn++);cell.setCellValue(cliente.getes_contribuyente_especial());				
	}
	
	public void setFilaDatosExportarXmlCliente(Cliente cliente,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ClienteConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(cliente.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ClienteConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(cliente.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ClienteConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(cliente.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ClienteConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(cliente.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementcodigo = document.createElement(ClienteConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(cliente.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementtipoidentificacion_descripcion = document.createElement(ClienteConstantesFunciones.IDTIPOIDENTIFICACION);
		elementtipoidentificacion_descripcion.appendChild(document.createTextNode(cliente.gettipoidentificacion_descripcion()));
		element.appendChild(elementtipoidentificacion_descripcion);

		Element elementidentificacion = document.createElement(ClienteConstantesFunciones.IDENTIFICACION);
		elementidentificacion.appendChild(document.createTextNode(cliente.getidentificacion().trim()));
		element.appendChild(elementidentificacion);

		Element elementruc = document.createElement(ClienteConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(cliente.getruc().trim()));
		element.appendChild(elementruc);

		Element elementnombre = document.createElement(ClienteConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(cliente.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementapellido = document.createElement(ClienteConstantesFunciones.APELLIDO);
		elementapellido.appendChild(document.createTextNode(cliente.getapellido().trim()));
		element.appendChild(elementapellido);

		Element elementnombre_completo = document.createElement(ClienteConstantesFunciones.NOMBRECOMPLETO);
		elementnombre_completo.appendChild(document.createTextNode(cliente.getnombre_completo().trim()));
		element.appendChild(elementnombre_completo);

		Element elementnombre_comercial = document.createElement(ClienteConstantesFunciones.NOMBRECOMERCIAL);
		elementnombre_comercial.appendChild(document.createTextNode(cliente.getnombre_comercial().trim()));
		element.appendChild(elementnombre_comercial);

		Element elementtelefono = document.createElement(ClienteConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(cliente.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementdireccion = document.createElement(ClienteConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(cliente.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementes_prove = document.createElement(ClienteConstantesFunciones.ESPROVE);
		elementes_prove.appendChild(document.createTextNode(cliente.getes_prove().toString().trim()));
		element.appendChild(elementes_prove);

		Element elementgrupocliente_descripcion = document.createElement(ClienteConstantesFunciones.IDGRUPOCLIENTE);
		elementgrupocliente_descripcion.appendChild(document.createTextNode(cliente.getgrupocliente_descripcion()));
		element.appendChild(elementgrupocliente_descripcion);

		Element elementtitulocliente_descripcion = document.createElement(ClienteConstantesFunciones.IDTITULOCLIENTE);
		elementtitulocliente_descripcion.appendChild(document.createTextNode(cliente.gettitulocliente_descripcion()));
		element.appendChild(elementtitulocliente_descripcion);

		Element elementareacr_descripcion = document.createElement(ClienteConstantesFunciones.IDAREACR);
		elementareacr_descripcion.appendChild(document.createTextNode(cliente.getareacr_descripcion()));
		element.appendChild(elementareacr_descripcion);

		Element elementestadocliente_descripcion = document.createElement(ClienteConstantesFunciones.IDESTADOCLIENTE);
		elementestadocliente_descripcion.appendChild(document.createTextNode(cliente.getestadocliente_descripcion()));
		element.appendChild(elementestadocliente_descripcion);

		Element elementobservacion = document.createElement(ClienteConstantesFunciones.OBSERVACION);
		elementobservacion.appendChild(document.createTextNode(cliente.getobservacion().trim()));
		element.appendChild(elementobservacion);

		Element elementpais_descripcion = document.createElement(ClienteConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(cliente.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementregion_descripcion = document.createElement(ClienteConstantesFunciones.IDREGION);
		elementregion_descripcion.appendChild(document.createTextNode(cliente.getregion_descripcion()));
		element.appendChild(elementregion_descripcion);

		Element elementprovincia_descripcion = document.createElement(ClienteConstantesFunciones.IDPROVINCIA);
		elementprovincia_descripcion.appendChild(document.createTextNode(cliente.getprovincia_descripcion()));
		element.appendChild(elementprovincia_descripcion);

		Element elementciudad_descripcion = document.createElement(ClienteConstantesFunciones.IDCIUDAD);
		elementciudad_descripcion.appendChild(document.createTextNode(cliente.getciudad_descripcion()));
		element.appendChild(elementciudad_descripcion);

		Element elementzona_descripcion = document.createElement(ClienteConstantesFunciones.IDZONA);
		elementzona_descripcion.appendChild(document.createTextNode(cliente.getzona_descripcion()));
		element.appendChild(elementzona_descripcion);

		Element elementpaisnacionalidad_descripcion = document.createElement(ClienteConstantesFunciones.IDPAISNACIONALIDAD);
		elementpaisnacionalidad_descripcion.appendChild(document.createTextNode(cliente.getpaisnacionalidad_descripcion()));
		element.appendChild(elementpaisnacionalidad_descripcion);

		Element elementtipocargolabo_descripcion = document.createElement(ClienteConstantesFunciones.IDTIPOCARGOLABO);
		elementtipocargolabo_descripcion.appendChild(document.createTextNode(cliente.gettipocargolabo_descripcion()));
		element.appendChild(elementtipocargolabo_descripcion);

		Element elementtiponiveledu_descripcion = document.createElement(ClienteConstantesFunciones.IDTIPONIVELEDU);
		elementtiponiveledu_descripcion.appendChild(document.createTextNode(cliente.gettiponiveledu_descripcion()));
		element.appendChild(elementtiponiveledu_descripcion);

		Element elementprofesion_descripcion = document.createElement(ClienteConstantesFunciones.IDPROFESION);
		elementprofesion_descripcion.appendChild(document.createTextNode(cliente.getprofesion_descripcion()));
		element.appendChild(elementprofesion_descripcion);

		Element elementtipogenero_descripcion = document.createElement(ClienteConstantesFunciones.IDTIPOGENERO);
		elementtipogenero_descripcion.appendChild(document.createTextNode(cliente.gettipogenero_descripcion()));
		element.appendChild(elementtipogenero_descripcion);

		Element elementestadocivil_descripcion = document.createElement(ClienteConstantesFunciones.IDESTADOCIVIL);
		elementestadocivil_descripcion.appendChild(document.createTextNode(cliente.getestadocivil_descripcion()));
		element.appendChild(elementestadocivil_descripcion);

		Element elementestadolegal_descripcion = document.createElement(ClienteConstantesFunciones.IDESTADOLEGAL);
		elementestadolegal_descripcion.appendChild(document.createTextNode(cliente.getestadolegal_descripcion()));
		element.appendChild(elementestadolegal_descripcion);

		Element elementfecha_nacimiento = document.createElement(ClienteConstantesFunciones.FECHANACIMIENTO);
		elementfecha_nacimiento.appendChild(document.createTextNode(cliente.getfecha_nacimiento().toString().trim()));
		element.appendChild(elementfecha_nacimiento);

		Element elementpath_imagen_firma = document.createElement(ClienteConstantesFunciones.PATHIMAGENFIRMA);
		elementpath_imagen_firma.appendChild(document.createTextNode(cliente.getpath_imagen_firma().trim()));
		element.appendChild(elementpath_imagen_firma);

		Element elementcontacto = document.createElement(ClienteConstantesFunciones.CONTACTO);
		elementcontacto.appendChild(document.createTextNode(cliente.getcontacto().trim()));
		element.appendChild(elementcontacto);

		Element elementcuentacontable_descripcion = document.createElement(ClienteConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(cliente.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementruta_descripcion = document.createElement(ClienteConstantesFunciones.IDRUTA);
		elementruta_descripcion.appendChild(document.createTextNode(cliente.getruta_descripcion()));
		element.appendChild(elementruta_descripcion);

		Element elementvendedor_descripcion = document.createElement(ClienteConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(cliente.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementcentroactividad_descripcion = document.createElement(ClienteConstantesFunciones.IDCENTROACTIVIDAD);
		elementcentroactividad_descripcion.appendChild(document.createTextNode(cliente.getcentroactividad_descripcion()));
		element.appendChild(elementcentroactividad_descripcion);

		Element elementrepresentante = document.createElement(ClienteConstantesFunciones.REPRESENTANTE);
		elementrepresentante.appendChild(document.createTextNode(cliente.getrepresentante().trim()));
		element.appendChild(elementrepresentante);

		Element elementtipogarantiaempresa_descripcion = document.createElement(ClienteConstantesFunciones.IDTIPOGARANTIAEMPRESA);
		elementtipogarantiaempresa_descripcion.appendChild(document.createTextNode(cliente.gettipogarantiaempresa_descripcion()));
		element.appendChild(elementtipogarantiaempresa_descripcion);

		Element elementnombre_garantia = document.createElement(ClienteConstantesFunciones.NOMBREGARANTIA);
		elementnombre_garantia.appendChild(document.createTextNode(cliente.getnombre_garantia().trim()));
		element.appendChild(elementnombre_garantia);

		Element elementvalor_garantia = document.createElement(ClienteConstantesFunciones.VALORGARANTIA);
		elementvalor_garantia.appendChild(document.createTextNode(cliente.getvalor_garantia().toString().trim()));
		element.appendChild(elementvalor_garantia);

		Element elementcatetipoafiliacion_descripcion = document.createElement(ClienteConstantesFunciones.IDCATETIPOAFILIACION);
		elementcatetipoafiliacion_descripcion.appendChild(document.createTextNode(cliente.getcatetipoafiliacion_descripcion()));
		element.appendChild(elementcatetipoafiliacion_descripcion);

		Element elementnumero_carga = document.createElement(ClienteConstantesFunciones.NUMEROCARGA);
		elementnumero_carga.appendChild(document.createTextNode(cliente.getnumero_carga().toString().trim()));
		element.appendChild(elementnumero_carga);

		Element elementcredito_usado = document.createElement(ClienteConstantesFunciones.CREDITOUSADO);
		elementcredito_usado.appendChild(document.createTextNode(cliente.getcredito_usado().toString().trim()));
		element.appendChild(elementcredito_usado);

		Element elementlimite_credito = document.createElement(ClienteConstantesFunciones.LIMITECREDITO);
		elementlimite_credito.appendChild(document.createTextNode(cliente.getlimite_credito().toString().trim()));
		element.appendChild(elementlimite_credito);

		Element elementcredito_disponible = document.createElement(ClienteConstantesFunciones.CREDITODISPONIBLE);
		elementcredito_disponible.appendChild(document.createTextNode(cliente.getcredito_disponible().toString().trim()));
		element.appendChild(elementcredito_disponible);

		Element elementtotal_documentos = document.createElement(ClienteConstantesFunciones.TOTALDOCUMENTOS);
		elementtotal_documentos.appendChild(document.createTextNode(cliente.gettotal_documentos().toString().trim()));
		element.appendChild(elementtotal_documentos);

		Element elementfecha_ultima_factura = document.createElement(ClienteConstantesFunciones.FECHAULTIMAFACTURA);
		elementfecha_ultima_factura.appendChild(document.createTextNode(cliente.getfecha_ultima_factura().toString().trim()));
		element.appendChild(elementfecha_ultima_factura);

		Element elementdescuento = document.createElement(ClienteConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(cliente.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementdia_descripcion = document.createElement(ClienteConstantesFunciones.IDDIA);
		elementdia_descripcion.appendChild(document.createTextNode(cliente.getdia_descripcion()));
		element.appendChild(elementdia_descripcion);

		Element elementhora_pago = document.createElement(ClienteConstantesFunciones.HORAPAGO);
		elementhora_pago.appendChild(document.createTextNode(cliente.gethora_pago().toString().trim()));
		element.appendChild(elementhora_pago);

		Element elementempleado_descripcion = document.createElement(ClienteConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(cliente.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementcobranzas = document.createElement(ClienteConstantesFunciones.COBRANZAS);
		elementcobranzas.appendChild(document.createTextNode(cliente.getcobranzas().trim()));
		element.appendChild(elementcobranzas);

		Element elementmotivo = document.createElement(ClienteConstantesFunciones.MOTIVO);
		elementmotivo.appendChild(document.createTextNode(cliente.getmotivo().trim()));
		element.appendChild(elementmotivo);

		Element elementpreferencia = document.createElement(ClienteConstantesFunciones.PREFERENCIA);
		elementpreferencia.appendChild(document.createTextNode(cliente.getpreferencia().trim()));
		element.appendChild(elementpreferencia);

		Element elementcon_separacion_bienes = document.createElement(ClienteConstantesFunciones.CONSEPARACIONBIENES);
		elementcon_separacion_bienes.appendChild(document.createTextNode(cliente.getcon_separacion_bienes().toString().trim()));
		element.appendChild(elementcon_separacion_bienes);

		Element elementtipoprecio_descripcion = document.createElement(ClienteConstantesFunciones.IDTIPOPRECIO);
		elementtipoprecio_descripcion.appendChild(document.createTextNode(cliente.gettipoprecio_descripcion()));
		element.appendChild(elementtipoprecio_descripcion);

		Element elementtipolistaprecio_descripcion = document.createElement(ClienteConstantesFunciones.IDTIPOLISTAPRECIO);
		elementtipolistaprecio_descripcion.appendChild(document.createTextNode(cliente.gettipolistaprecio_descripcion()));
		element.appendChild(elementtipolistaprecio_descripcion);

		Element elementdetalle_estado = document.createElement(ClienteConstantesFunciones.DETALLEESTADO);
		elementdetalle_estado.appendChild(document.createTextNode(cliente.getdetalle_estado().trim()));
		element.appendChild(elementdetalle_estado);

		Element elementes_contribuyente_especial = document.createElement(ClienteConstantesFunciones.ESCONTRIBUYENTEESPECIAL);
		elementes_contribuyente_especial.appendChild(document.createTextNode(cliente.getes_contribuyente_especial().toString().trim()));
		element.appendChild(elementes_contribuyente_especial);
	}
	
	public void generarReporteGroupGenericoClientesSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Cliente> clientesSeleccionados=new ArrayList<Cliente>();
		
		clientesSeleccionados=this.getClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoCliente(clientesSeleccionados);
		
		this.generarReporteClientes("Todos",clientesSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoCliente(ArrayList<Cliente> clientesSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Cliente clienteAux:clientesSeleccionados) {
				clienteAux.setsDetalleGeneralEntityReporte(clienteAux.toString());
			
				if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTIPOIDENTIFICACION)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettipoidentificacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDENTIFICACION)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getidentificacion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_RUC)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_APELLIDO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getapellido());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRECOMPLETO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getnombre_completo());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBRECOMERCIAL)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getnombre_comercial());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_ESPROVE)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(clienteAux.getes_prove()));
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDGRUPOCLIENTE)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getgrupocliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTITULOCLIENTE)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettitulocliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDAREACR)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getareacr_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDESTADOCLIENTE)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getestadocliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_OBSERVACION)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getobservacion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDREGION)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getregion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDPROVINCIA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getprovincia_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDCIUDAD)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getciudad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDZONA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getzona_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDPAISNACIONALIDAD)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getpaisnacionalidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTIPOCARGOLABO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettipocargolabo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTIPONIVELEDU)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettiponiveledu_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDPROFESION)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getprofesion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTIPOGENERO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettipogenero_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDESTADOCIVIL)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getestadocivil_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDESTADOLEGAL)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getestadolegal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_FECHANACIMIENTO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(clienteAux.getfecha_nacimiento()));
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_PATHIMAGENFIRMA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getpath_imagen_firma());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CONTACTO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getcontacto());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDRUTA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getruta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDCENTROACTIVIDAD)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getcentroactividad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_REPRESENTANTE)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getrepresentante());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTIPOGARANTIAEMPRESA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettipogarantiaempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NOMBREGARANTIA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getnombre_garantia());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDCATETIPOAFILIACION)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getcatetipoafiliacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_NUMEROCARGA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getnumero_carga().toString());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_FECHAULTIMAFACTURA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(clienteAux.getfecha_ultima_factura()));
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDDIA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getdia_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_HORAPAGO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gethora_pago().toString());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_COBRANZAS)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getcobranzas());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_MOTIVO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getmotivo());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_PREFERENCIA)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getpreferencia());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_CONSEPARACIONBIENES)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(clienteAux.getcon_separacion_bienes()));
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTIPOPRECIO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettipoprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_IDTIPOLISTAPRECIO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.gettipolistaprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_DETALLEESTADO)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(clienteAux.getdetalle_estado());
				}
				 else if(sTipoSeleccionar.equals(ClienteConstantesFunciones.LABEL_ESCONTRIBUYENTEESPECIAL)) {
					existe=true;
					clienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(clienteAux.getes_contribuyente_especial()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesCliente(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoCliente=true;
				this.isVisibilidadCeldaNuevoRelacionesCliente=true;
				this.isVisibilidadCeldaGuardarCambiosCliente=true;
			}
			
			this.isVisibilidadCeldaModificarCliente=false;
			this.isVisibilidadCeldaActualizarCliente=false;
			this.isVisibilidadCeldaEliminarCliente=false;
			this.isVisibilidadCeldaCancelarCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarCliente=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
			this.isVisibilidadCeldaGuardarCambiosCliente=false;
			this.isVisibilidadCeldaModificarCliente=false;
			this.isVisibilidadCeldaActualizarCliente=true;
			this.isVisibilidadCeldaEliminarCliente=false;
			this.isVisibilidadCeldaCancelarCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarCliente=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
			this.isVisibilidadCeldaGuardarCambiosCliente=false;
			this.isVisibilidadCeldaModificarCliente=false;
			this.isVisibilidadCeldaActualizarCliente=true;
			this.isVisibilidadCeldaEliminarCliente=true;
			this.isVisibilidadCeldaCancelarCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarCliente=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
			this.isVisibilidadCeldaGuardarCambiosCliente=false;
			this.isVisibilidadCeldaModificarCliente=false;
			this.isVisibilidadCeldaActualizarCliente=true;
			this.isVisibilidadCeldaEliminarCliente=false;
			this.isVisibilidadCeldaCancelarCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarCliente=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesCliente=true;
			this.isVisibilidadCeldaGuardarCambiosCliente=true;
			this.isVisibilidadCeldaModificarCliente=false;
			this.isVisibilidadCeldaActualizarCliente=false;
			this.isVisibilidadCeldaEliminarCliente=false;
			this.isVisibilidadCeldaCancelarCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarCliente=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
			this.isVisibilidadCeldaGuardarCambiosCliente=false;
			this.isVisibilidadCeldaActualizarCliente=false;
			this.isVisibilidadCeldaEliminarCliente=false;
			this.isVisibilidadCeldaCancelarCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarCliente=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
			this.isVisibilidadCeldaGuardarCambiosCliente=false;
			this.isVisibilidadCeldaModificarCliente=true;
			this.isVisibilidadCeldaActualizarCliente=false;
			this.isVisibilidadCeldaEliminarCliente=false;
			this.isVisibilidadCeldaCancelarCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarCliente=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ClienteJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesCliente=true;
			this.isVisibilidadCeldaGuardarCambiosCliente=true;
		} else {
			this.actualizarEstadoPanelsCliente(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarCliente=false;
			//this.isVisibilidadCeldaVerFormCliente=false;
			this.isVisibilidadCeldaDuplicarCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!clienteSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
		} else {
			this.isVisibilidadCeldaNuevoCliente=false;
			this.isVisibilidadCeldaGuardarCambiosCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(clienteSessionBean.getEsGuardarRelacionado()) {
			if(!clienteSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesCliente=false;												
			}
			
			this.jButtonCerrarCliente.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesCliente=false;
		}
		
		if(!this.permiteMantenimiento(this.cliente)) {
			this.isVisibilidadCeldaActualizarCliente=false;
			this.isVisibilidadCeldaEliminarCliente=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesCliente() {
		this.isVisibilidadCeldaNuevoCliente=false;
		this.isVisibilidadCeldaGuardarCambiosCliente=false;
	}
	
	public void actualizarEstadoPanelsCliente(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionCliente!=null) {
				this.jScrollPanelDatosEdicionCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCliente!=null) {
				this.jScrollPanelDatosCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionCliente!=null) {
				this.jPanelPaginacionCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionCliente!=null) {
				this.jScrollPanelDatosEdicionCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosCliente!=null) {
				this.jScrollPanelDatosCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionCliente!=null) {
				this.jPanelPaginacionCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionCliente!=null) {
				this.jScrollPanelDatosEdicionCliente.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosCliente!=null) {
				this.jScrollPanelDatosCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionCliente!=null) {
				this.jPanelPaginacionCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionCliente!=null) {
				this.jScrollPanelDatosEdicionCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosCliente!=null) {
				this.jScrollPanelDatosCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionCliente!=null) {
				this.jPanelPaginacionCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionCliente!=null) {
				this.jScrollPanelDatosEdicionCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCliente!=null) {
				this.jScrollPanelDatosCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionCliente!=null) {
				this.jPanelPaginacionCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionCliente!=null) {
				this.jScrollPanelDatosEdicionCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCliente!=null) {
				this.jScrollPanelDatosCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionCliente!=null) {
				this.jPanelPaginacionCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionCliente!=null) {
				this.jScrollPanelDatosEdicionCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosCliente!=null) {
				this.jScrollPanelDatosCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionCliente!=null) {
				this.jPanelPaginacionCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.clienteSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasCliente!=null) {
					this.jTabbedPaneBusquedasCliente.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.clienteSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasCliente!=null) {
				this.jTabbedPaneBusquedasCliente.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesCliente!=null) {
				this.jPanelParametrosReportesCliente.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadBusquedaPorIdentificacion=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaSucursalNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoIdentificacion(Boolean isParaTipoIdentificacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoIdentificacionNegation=!isParaTipoIdentificacion;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaGrupoCliente(Boolean isParaGrupoCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaGrupoClienteNegation=!isParaGrupoCliente;

			this.isVisibilidadBusquedaPorIdentificacion=isParaGrupoClienteNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaGrupoClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaGrupoClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaGrupoClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaGrupoClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaGrupoCliente;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaGrupoClienteNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaGrupoClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaGrupoClienteNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaGrupoClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaGrupoClienteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTituloCliente(Boolean isParaTituloCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTituloClienteNegation=!isParaTituloCliente;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTituloClienteNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTituloClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTituloClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTituloClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTituloClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTituloClienteNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTituloClienteNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTituloClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTituloCliente;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTituloClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTituloClienteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaAreaCr(Boolean isParaAreaCr){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAreaCrNegation=!isParaAreaCr;

			this.isVisibilidadBusquedaPorIdentificacion=isParaAreaCrNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaAreaCrNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaAreaCrNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaAreaCrNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoCliente(Boolean isParaEstadoCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoClienteNegation=!isParaEstadoCliente;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEstadoClienteNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaEstadoClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEstadoClienteNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaEstadoCliente;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEstadoClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaEstadoClienteNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaEstadoClienteNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaEstadoClienteNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaEstadoClienteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadBusquedaPorIdentificacion=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaPaisNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaRegion(Boolean isParaRegion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaRegionNegation=!isParaRegion;

			this.isVisibilidadBusquedaPorIdentificacion=isParaRegionNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaRegionNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaRegionNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaProvincia(Boolean isParaProvincia){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProvinciaNegation=!isParaProvincia;

			this.isVisibilidadBusquedaPorIdentificacion=isParaProvinciaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaProvinciaNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaProvinciaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudad(Boolean isParaCiudad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadNegation=!isParaCiudad;

			this.isVisibilidadBusquedaPorIdentificacion=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaCiudadNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaZona(Boolean isParaZona){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaZonaNegation=!isParaZona;

			this.isVisibilidadBusquedaPorIdentificacion=isParaZonaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaZonaNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaZonaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaZona;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaPaisNacionalidad(Boolean isParaPaisNacionalidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNacionalidadNegation=!isParaPaisNacionalidad;

			this.isVisibilidadBusquedaPorIdentificacion=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCargoLabo(Boolean isParaTipoCargoLabo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCargoLaboNegation=!isParaTipoCargoLabo;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTipoCargoLaboNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoNivelEdu(Boolean isParaTipoNivelEdu){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoNivelEduNegation=!isParaTipoNivelEdu;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaProfesion(Boolean isParaProfesion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProfesionNegation=!isParaProfesion;

			this.isVisibilidadBusquedaPorIdentificacion=isParaProfesionNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaProfesionNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaProfesionNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaProfesionNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGenero(Boolean isParaTipoGenero){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGeneroNegation=!isParaTipoGenero;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTipoGeneroNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoGeneroNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoCivil(Boolean isParaEstadoCivil){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoCivilNegation=!isParaEstadoCivil;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaEstadoCivilNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEstadoCivilNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoLegal(Boolean isParaEstadoLegal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoLegalNegation=!isParaEstadoLegal;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEstadoLegalNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaEstadoLegalNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEstadoLegalNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEstadoLegal;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadBusquedaPorIdentificacion=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaCuentaContableNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaRuta(Boolean isParaRuta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaRutaNegation=!isParaRuta;

			this.isVisibilidadBusquedaPorIdentificacion=isParaRutaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaRutaNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaRutaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaRuta;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadBusquedaPorIdentificacion=isParaVendedorNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaVendedorNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaVendedorNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroActividad(Boolean isParaCentroActividad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroActividadNegation=!isParaCentroActividad;

			this.isVisibilidadBusquedaPorIdentificacion=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaCentroActividadNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaCentroActividadNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGarantiaEmpresa(Boolean isParaTipoGarantiaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGarantiaEmpresaNegation=!isParaTipoGarantiaEmpresa;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTipoGarantiaEmpresaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCateTipoAfiliacion(Boolean isParaCateTipoAfiliacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCateTipoAfiliacionNegation=!isParaCateTipoAfiliacion;

			this.isVisibilidadBusquedaPorIdentificacion=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaCateTipoAfiliacionNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaDia(Boolean isParaDia){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaDiaNegation=!isParaDia;

			this.isVisibilidadBusquedaPorIdentificacion=isParaDiaNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaDiaNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaDiaNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadBusquedaPorIdentificacion=isParaEmpleadoNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaEmpleadoNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaEmpleadoNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPrecio(Boolean isParaTipoPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPrecioNegation=!isParaTipoPrecio;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoPrecioNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTipoPrecioNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoPrecioNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoPrecio;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoListaPrecio(Boolean isParaTipoListaPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoListaPrecioNegation=!isParaTipoListaPrecio;

			this.isVisibilidadBusquedaPorIdentificacion=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadBusquedaPorIdentificacion) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorIdentificacionCliente);}

			this.isVisibilidadBusquedaPorNombreComercial=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadBusquedaPorNombreComercial) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreComercialCliente);}

			this.isVisibilidadBusquedaPorNombreCompleto=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadBusquedaPorNombreCompleto) {this.jTabbedPaneBusquedasCliente.remove(jPanelBusquedaPorNombreCompletoCliente);}

			this.isVisibilidadFK_IdEstadoCliente=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoClienteCliente);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdEstadoLegalCliente);}

			this.isVisibilidadFK_IdGrupoCliente=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdGrupoCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdGrupoClienteCliente);}

			this.isVisibilidadFK_IdRuta=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdRutaCliente);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTipoPrecioCliente);}

			this.isVisibilidadFK_IdTituloCliente=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdTituloCliente) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdTituloClienteCliente);}

			this.isVisibilidadFK_IdVendedor=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdVendedorCliente);}

			this.isVisibilidadFK_IdZona=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasCliente.remove(jPanelFK_IdZonaCliente);}
		}
		
	}
	
	

	public String registrarSesionClienteParaInformacionLaborales() throws Exception {
		Boolean isPaginaPopupInformacionLaboral=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean=new InformacionLaboralSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+InformacionLaboralConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupInformacionLaboral=this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeInformacionLaboral(false);
			this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeInformacionLaboral(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.informacionlaboralSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaTransportistas() throws Exception {
		Boolean isPaginaPopupTransportista=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.transportistaSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.transportistaSessionBean=new TransportistaSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.transportistaSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TransportistaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.transportistaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupTransportista=this.jInternalFrameDetalleFormCliente.transportistaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.transportistaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTransportista(true);
			this.jInternalFrameDetalleFormCliente.transportistaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTransportista(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.transportistaSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.transportistaSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaNovedades() throws Exception {
		Boolean isPaginaPopupNovedad=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.novedadSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.novedadSessionBean=new NovedadSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.novedadSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+NovedadConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.novedadSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupNovedad=this.jInternalFrameDetalleFormCliente.novedadSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.novedadSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeNovedad(true);
			this.jInternalFrameDetalleFormCliente.novedadSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeNovedad(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.novedadSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.novedadSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaPoliticasClientes() throws Exception {
		Boolean isPaginaPopupPoliticasCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean=new PoliticasClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PoliticasClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPoliticasCliente=this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePoliticasCliente(true);
			this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePoliticasCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.politicasclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaReferenciaPersonales() throws Exception {
		Boolean isPaginaPopupReferenciaPersonal=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean=new ReferenciaPersonalSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ReferenciaPersonalConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupReferenciaPersonal=this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeReferenciaPersonal(false);
			this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeReferenciaPersonal(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.referenciapersonalSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaBalanceGeneralClientes() throws Exception {
		Boolean isPaginaPopupBalanceGeneralCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean=new BalanceGeneralClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+BalanceGeneralClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupBalanceGeneralCliente=this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeBalanceGeneralCliente(true);
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeBalanceGeneralCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.balancegeneralclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaPoliticaClientes() throws Exception {
		Boolean isPaginaPopupPoliticaCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean=new PoliticaClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PoliticaClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPoliticaCliente=this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePoliticaCliente(true);
			this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePoliticaCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.politicaclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaVehiculoClientes() throws Exception {
		Boolean isPaginaPopupVehiculoCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean=new VehiculoClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+VehiculoClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupVehiculoCliente=this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeVehiculoCliente(true);
			this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeVehiculoCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.vehiculoclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaResponsables() throws Exception {
		Boolean isPaginaPopupResponsable=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.responsableSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.responsableSessionBean=new ResponsableSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.responsableSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ResponsableConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.responsableSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupResponsable=this.jInternalFrameDetalleFormCliente.responsableSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.responsableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeResponsable(true);
			this.jInternalFrameDetalleFormCliente.responsableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeResponsable(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.responsableSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.responsableSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaInformacionFinancieras() throws Exception {
		Boolean isPaginaPopupInformacionFinanciera=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean=new InformacionFinancieraSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+InformacionFinancieraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupInformacionFinanciera=this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeInformacionFinanciera(false);
			this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeInformacionFinanciera(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.informacionfinancieraSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaConsignatarios() throws Exception {
		Boolean isPaginaPopupConsignatario=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.consignatarioSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.consignatarioSessionBean=new ConsignatarioSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.consignatarioSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ConsignatarioConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.consignatarioSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupConsignatario=this.jInternalFrameDetalleFormCliente.consignatarioSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.consignatarioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeConsignatario(true);
			this.jInternalFrameDetalleFormCliente.consignatarioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeConsignatario(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.consignatarioSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.consignatarioSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaClienteImagenes() throws Exception {
		Boolean isPaginaPopupClienteImagen=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean=new ClienteImagenSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteImagenConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupClienteImagen=this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeClienteImagen(true);
			this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeClienteImagen(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.clienteimagenSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaGarantiaClientes() throws Exception {
		Boolean isPaginaPopupGarantiaCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean=new GarantiaClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+GarantiaClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupGarantiaCliente=this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeGarantiaCliente(true);
			this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeGarantiaCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.garantiaclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaInformacionEconomicas() throws Exception {
		Boolean isPaginaPopupInformacionEconomica=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean=new InformacionEconomicaSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+InformacionEconomicaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupInformacionEconomica=this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeInformacionEconomica(false);
			this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeInformacionEconomica(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.informacioneconomicaSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaReferenciaComerciales() throws Exception {
		Boolean isPaginaPopupReferenciaComercial=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean=new ReferenciaComercialSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ReferenciaComercialConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupReferenciaComercial=this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeReferenciaComercial(false);
			this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeReferenciaComercial(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.referenciacomercialSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaBienes() throws Exception {
		Boolean isPaginaPopupBien=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.bienSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.bienSessionBean=new BienSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.bienSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+BienConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.bienSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupBien=this.jInternalFrameDetalleFormCliente.bienSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.bienSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.bienSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeBien(false);
			this.jInternalFrameDetalleFormCliente.bienSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeBien(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.bienSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.bienSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaProveedorProductos() throws Exception {
		Boolean isPaginaPopupProveedorProducto=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean=new ProveedorProductoSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProveedorProductoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProveedorProducto=this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProveedorProducto(true);
			this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProveedorProducto(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.proveedorproductoSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaServicioClientes() throws Exception {
		Boolean isPaginaPopupServicioCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean=new ServicioClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ServicioClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupServicioCliente=this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeServicioCliente(true);
			this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeServicioCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.servicioclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaContactoClientes() throws Exception {
		Boolean isPaginaPopupContactoCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean=new ContactoClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ContactoClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupContactoCliente=this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeContactoCliente(true);
			this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeContactoCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.contactoclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaDatoConstituciones() throws Exception {
		Boolean isPaginaPopupDatoConstitucion=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean=new DatoConstitucionSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DatoConstitucionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDatoConstitucion=this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDatoConstitucion(false);
			this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDatoConstitucion(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.datoconstitucionSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaClienteCoas() throws Exception {
		Boolean isPaginaPopupClienteCoa=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.clientecoaSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.clientecoaSessionBean=new ClienteCoaSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.clientecoaSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteCoaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.clientecoaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupClienteCoa=this.jInternalFrameDetalleFormCliente.clientecoaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.clientecoaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeClienteCoa(true);
			this.jInternalFrameDetalleFormCliente.clientecoaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeClienteCoa(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.clientecoaSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.clientecoaSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaHobbyClientes() throws Exception {
		Boolean isPaginaPopupHobbyCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean=new HobbyClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+HobbyClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupHobbyCliente=this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeHobbyCliente(true);
			this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeHobbyCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.hobbyclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaCargaFamiliares() throws Exception {
		Boolean isPaginaPopupCargaFamiliar=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean=new CargaFamiliarSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CargaFamiliarConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCargaFamiliar=this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCargaFamiliar(true);
			this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCargaFamiliar(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.cargafamiliarSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaEMailes() throws Exception {
		Boolean isPaginaPopupEMail=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.emailSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.emailSessionBean=new EMailSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.emailSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EMailConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.emailSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEMail=this.jInternalFrameDetalleFormCliente.emailSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.emailSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEMail(true);
			this.jInternalFrameDetalleFormCliente.emailSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEMail(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.emailSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.emailSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaConyuges() throws Exception {
		Boolean isPaginaPopupConyuge=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.conyugeSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.conyugeSessionBean=new ConyugeSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.conyugeSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ConyugeConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.conyugeSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupConyuge=this.jInternalFrameDetalleFormCliente.conyugeSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.conyugeSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.conyugeSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeConyuge(false);
			this.jInternalFrameDetalleFormCliente.conyugeSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeConyuge(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.conyugeSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.conyugeSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaCuentaPorCobrares() throws Exception {
		Boolean isPaginaPopupCuentaPorCobrar=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean=new CuentaPorCobrarSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaPorCobrarConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCuentaPorCobrar=this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaPorCobrar(true);
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaPorCobrar(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.cuentaporcobrarSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaFirmaClientes() throws Exception {
		Boolean isPaginaPopupFirmaCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean=new FirmaClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FirmaClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFirmaCliente=this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFirmaCliente(true);
			this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFirmaCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.firmaclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaRepresentanteLegales() throws Exception {
		Boolean isPaginaPopupRepresentanteLegal=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.representantelegalSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.representantelegalSessionBean=new RepresentanteLegalSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RepresentanteLegalConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRepresentanteLegal=this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRepresentanteLegal(false);
			this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRepresentanteLegal(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.representantelegalSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaTelefonos() throws Exception {
		Boolean isPaginaPopupTelefono=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.telefonoSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.telefonoSessionBean=new TelefonoSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.telefonoSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TelefonoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.telefonoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupTelefono=this.jInternalFrameDetalleFormCliente.telefonoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.telefonoSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.telefonoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTelefono(false);
			this.jInternalFrameDetalleFormCliente.telefonoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTelefono(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.telefonoSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.telefonoSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaNegocioClientes() throws Exception {
		Boolean isPaginaPopupNegocioCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean=new NegocioClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+NegocioClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupNegocioCliente=this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeNegocioCliente(true);
			this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeNegocioCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.negocioclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaReferenciaBancarias() throws Exception {
		Boolean isPaginaPopupReferenciaBancaria=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean=new ReferenciaBancariaSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ReferenciaBancariaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupReferenciaBancaria=this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeReferenciaBancaria(false);
			this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeReferenciaBancaria(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.referenciabancariaSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaMontos() throws Exception {
		Boolean isPaginaPopupMonto=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.montoSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.montoSessionBean=new MontoSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.montoSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+MontoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.montoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupMonto=this.jInternalFrameDetalleFormCliente.montoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.montoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeMonto(true);
			this.jInternalFrameDetalleFormCliente.montoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeMonto(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.montoSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.montoSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaClienteArchivos() throws Exception {
		Boolean isPaginaPopupClienteArchivo=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean=new ClienteArchivoSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteArchivoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupClienteArchivo=this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeClienteArchivo(true);
			this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeClienteArchivo(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.clientearchivoSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaActividadEconomicas() throws Exception {
		Boolean isPaginaPopupActividadEconomica=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean=new ActividadEconomicaSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ActividadEconomicaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupActividadEconomica=this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeActividadEconomica(true);
			this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeActividadEconomica(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.actividadeconomicaSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaDirecciones() throws Exception {
		Boolean isPaginaPopupDireccion=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.direccionSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.direccionSessionBean=new DireccionSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.direccionSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DireccionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.direccionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDireccion=this.jInternalFrameDetalleFormCliente.direccionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.direccionSessionBean.setPaginaPopupVariables(true);
			this.jInternalFrameDetalleFormCliente.direccionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDireccion(false);
			this.jInternalFrameDetalleFormCliente.direccionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDireccion(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.direccionSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.direccionSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaChequePostFechados() throws Exception {
		Boolean isPaginaPopupChequePostFechado=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean=new ChequePostFechadoSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ChequePostFechadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupChequePostFechado=this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeChequePostFechado(true);
			this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeChequePostFechado(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.chequepostfechadoSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionClienteParaSubClientes() throws Exception {
		Boolean isPaginaPopupSubCliente=false;

		try {

			if(this.clienteSessionBean==null) {
				this.clienteSessionBean=new ClienteSessionBean();
			}

			if(this.jInternalFrameDetalleFormCliente.subclienteSessionBean==null) {
				this.jInternalFrameDetalleFormCliente.subclienteSessionBean=new SubClienteSessionBean();
			}

			this.jInternalFrameDetalleFormCliente.subclienteSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+SubClienteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormCliente.subclienteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupSubCliente=this.jInternalFrameDetalleFormCliente.subclienteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormCliente.subclienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeSubCliente(true);
			this.jInternalFrameDetalleFormCliente.subclienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeSubCliente(ClienteConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormCliente.subclienteSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			this.jInternalFrameDetalleFormCliente.subclienteSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionClienteParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(clienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.clienteFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ClienteConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionCliente(true);
			//cuentacontableSessionBean.setlidClienteActual(this.idClienteActual);

			clienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyCliente(true);
			clienteSessionBean.setlIdClienteActualForeignKey(this.idClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ClienteSessionBean clienteSessionBean=new ClienteSessionBean();
		
		if(this.clienteSessionBean==null) {
			this.clienteSessionBean=new ClienteSessionBean();
		}
		
		this.clienteSessionBean.setsUltimaBusquedaCliente(this.getsAccionBusqueda());
		this.clienteSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.clienteSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("BusquedaPorIdentificacion")) {
			clienteSessionBean.setidentificacion(this.getidentificacionBusquedaPorIdentificacion());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorNombreComercial")) {
			clienteSessionBean.setnombre_comercial(this.getnombre_comercialBusquedaPorNombreComercial());	
		}
		else if(this.getsAccionBusqueda().equals("BusquedaPorNombreCompleto")) {
			clienteSessionBean.setnombre_completo(this.getnombre_completoBusquedaPorNombreCompleto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			clienteSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoCliente")) {
			clienteSessionBean.setid_estado_cliente(this.getid_estado_clienteFK_IdEstadoCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoLegal")) {
			clienteSessionBean.setid_estado_legal(this.getid_estado_legalFK_IdEstadoLegal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdGrupoCliente")) {
			clienteSessionBean.setid_grupo_cliente(this.getid_grupo_clienteFK_IdGrupoCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdRuta")) {
			clienteSessionBean.setid_ruta(this.getid_rutaFK_IdRuta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			clienteSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
			clienteSessionBean.setid_tipo_precio(this.getid_tipo_precioFK_IdTipoPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTituloCliente")) {
			clienteSessionBean.setid_titulo_cliente(this.getid_titulo_clienteFK_IdTituloCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			clienteSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
			clienteSessionBean.setid_zona(this.getid_zonaFK_IdZona());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ClienteSessionBean clienteSessionBean=new ClienteSessionBean();
		
		if(this.clienteSessionBean==null) {
			this.clienteSessionBean=new ClienteSessionBean();
		}
		
		if(this.clienteSessionBean.getsUltimaBusquedaCliente()!=null&&!this.clienteSessionBean.getsUltimaBusquedaCliente().equals("")) {
			this.setsAccionBusqueda(clienteSessionBean.getsUltimaBusquedaCliente());
			this.setiNumeroPaginacion(clienteSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(clienteSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("BusquedaPorIdentificacion")) {
				this.setidentificacionBusquedaPorIdentificacion(clienteSessionBean.getidentificacion());
				clienteSessionBean.setidentificacion("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombreComercial")) {
				this.setnombre_comercialBusquedaPorNombreComercial(clienteSessionBean.getnombre_comercial());
				clienteSessionBean.setnombre_comercial("");
			}
			 else if(this.getsAccionBusqueda().equals("BusquedaPorNombreCompleto")) {
				this.setnombre_completoBusquedaPorNombreCompleto(clienteSessionBean.getnombre_completo());
				clienteSessionBean.setnombre_completo("");
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(clienteSessionBean.getid_empresa());
				clienteSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoCliente")) {
				this.setid_estado_clienteFK_IdEstadoCliente(clienteSessionBean.getid_estado_cliente());
				clienteSessionBean.setid_estado_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoLegal")) {
				this.setid_estado_legalFK_IdEstadoLegal(clienteSessionBean.getid_estado_legal());
				clienteSessionBean.setid_estado_legal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdGrupoCliente")) {
				this.setid_grupo_clienteFK_IdGrupoCliente(clienteSessionBean.getid_grupo_cliente());
				clienteSessionBean.setid_grupo_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdRuta")) {
				this.setid_rutaFK_IdRuta(clienteSessionBean.getid_ruta());
				clienteSessionBean.setid_ruta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(clienteSessionBean.getid_sucursal());
				clienteSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
				this.setid_tipo_precioFK_IdTipoPrecio(clienteSessionBean.getid_tipo_precio());
				clienteSessionBean.setid_tipo_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTituloCliente")) {
				this.setid_titulo_clienteFK_IdTituloCliente(clienteSessionBean.getid_titulo_cliente());
				clienteSessionBean.setid_titulo_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(clienteSessionBean.getid_vendedor());
				clienteSessionBean.setid_vendedor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
				this.setid_zonaFK_IdZona(clienteSessionBean.getid_zona());
				clienteSessionBean.setid_zona(-1L);
			}
		}
		
		this.clienteSessionBean.setsUltimaBusquedaCliente("");
		this.clienteSessionBean.setiNumeroPaginacion(ClienteConstantesFunciones.INUMEROPAGINACION);
		this.clienteSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaCliente(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioCliente() {
		this.updateBorderResaltarBusquedasFormularioCliente();
		this.updateVisibilidadBusquedasFormularioCliente();
		this.updateHabilitarBusquedasFormularioCliente();
	}
	
	public void updateBorderResaltarBusquedasFormularioCliente() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasCliente.getComponents().length>0) {
	

		if(this.clienteConstantesFunciones.resaltarBusquedaPorIdentificacionCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarBusquedaPorIdentificacionCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarBusquedaPorNombreComercialCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreComercialCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarBusquedaPorNombreComercialCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarBusquedaPorNombreCompletoCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarBusquedaPorNombreCompletoCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdEstadoClienteCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoClienteCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdEstadoClienteCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdEstadoLegalCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdEstadoLegalCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdGrupoClienteCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdGrupoClienteCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdGrupoClienteCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdRutaCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdRutaCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdRutaCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdTipoPrecioCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTipoPrecioCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdTipoPrecioCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdTituloClienteCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTituloClienteCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdTituloClienteCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdVendedorCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdVendedorCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdVendedorCliente);
			}
		}

		if(this.clienteConstantesFunciones.resaltarFK_IdZonaCliente!=null) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdZonaCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdZonaCliente);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioCliente() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarBusquedaPorIdentificacionCliente);
			if(!this.clienteConstantesFunciones.mostrarBusquedaPorIdentificacionCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreComercialCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarBusquedaPorNombreComercialCliente);
			if(!this.clienteConstantesFunciones.mostrarBusquedaPorNombreComercialCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarBusquedaPorNombreCompletoCliente);
			if(!this.clienteConstantesFunciones.mostrarBusquedaPorNombreCompletoCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoClienteCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdEstadoClienteCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdEstadoClienteCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdEstadoLegalCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdEstadoLegalCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdGrupoClienteCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdGrupoClienteCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdGrupoClienteCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdRutaCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdRutaCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdRutaCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTipoPrecioCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdTipoPrecioCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdTipoPrecioCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTituloClienteCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdTituloClienteCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdTituloClienteCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdVendedorCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdVendedorCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdVendedorCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdZonaCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteConstantesFunciones.mostrarFK_IdZonaCliente);
			if(!this.clienteConstantesFunciones.mostrarFK_IdZonaCliente && index>-1) {
				this.jTabbedPaneBusquedasCliente.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioCliente() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarBusquedaPorIdentificacionCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarBusquedaPorIdentificacionCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreComercialCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarBusquedaPorNombreComercialCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarBusquedaPorNombreComercialCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarBusquedaPorNombreCompletoCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarBusquedaPorNombreCompletoCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoClienteCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdEstadoClienteCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdEstadoClienteCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdEstadoLegalCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdEstadoLegalCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdGrupoClienteCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdGrupoClienteCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdGrupoClienteCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdRutaCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdRutaCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdRutaCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTipoPrecioCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdTipoPrecioCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdTipoPrecioCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTituloClienteCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdTituloClienteCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdTituloClienteCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdVendedorCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdVendedorCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdVendedorCliente);
			}

			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdZonaCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteConstantesFunciones.activarFK_IdZonaCliente);
				this.jTabbedPaneBusquedasCliente.setEnabledAt(index,this.clienteConstantesFunciones.activarFK_IdZonaCliente);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaCliente(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("BusquedaPorIdentificacion")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorIdentificacionCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarBusquedaPorIdentificacionCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarBusquedaPorIdentificacionCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorNombreComercial")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreComercialCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarBusquedaPorNombreComercialCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarBusquedaPorNombreComercialCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("BusquedaPorNombreCompleto")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelBusquedaPorNombreCompletoCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarBusquedaPorNombreCompletoCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarBusquedaPorNombreCompletoCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoCliente")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoClienteCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdEstadoClienteCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdEstadoClienteCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoLegal")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdEstadoLegalCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdEstadoLegalCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdEstadoLegalCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdGrupoCliente")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdGrupoClienteCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdGrupoClienteCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdGrupoClienteCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdRuta")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdRutaCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdRutaCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdRutaCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPrecio")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTipoPrecioCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdTipoPrecioCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdTipoPrecioCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTituloCliente")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdTituloClienteCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdTituloClienteCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdTituloClienteCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdVendedorCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdVendedorCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdVendedorCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdZona")) {
			index= this.jTabbedPaneBusquedasCliente.indexOfComponent(this.jPanelFK_IdZonaCliente);

			this.jTabbedPaneBusquedasCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasCliente.getComponent(index);

			this.clienteConstantesFunciones.setResaltarFK_IdZonaCliente(resaltar);

			jPanel.setBorder(this.clienteConstantesFunciones.resaltarFK_IdZonaCliente);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarCliente.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioCliente() throws Exception {

		if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioCliente();
		this.updateVisibilidadResaltarControlesFormularioCliente();
		this.updateHabilitarResaltarControlesFormularioCliente();
		
	}
	
	public void updateBorderResaltarControlesFormularioCliente() throws Exception {
		if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.clienteConstantesFunciones.resaltaridCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jLabelidCliente.setBorder(this.clienteConstantesFunciones.resaltaridCliente);}
		if(this.clienteConstantesFunciones.resaltarid_empresaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setBorder(this.clienteConstantesFunciones.resaltarid_empresaCliente);}
		if(this.clienteConstantesFunciones.resaltarid_sucursalCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setBorder(this.clienteConstantesFunciones.resaltarid_sucursalCliente);}
		if(this.clienteConstantesFunciones.resaltarcodigoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.setBorder(this.clienteConstantesFunciones.resaltarcodigoCliente);}
		if(this.clienteConstantesFunciones.resaltarid_tipo_identificacionCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setBorder(this.clienteConstantesFunciones.resaltarid_tipo_identificacionCliente);}
		if(this.clienteConstantesFunciones.resaltaridentificacionCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.setBorder(this.clienteConstantesFunciones.resaltaridentificacionCliente);}
		if(this.clienteConstantesFunciones.resaltarrucCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.setBorder(this.clienteConstantesFunciones.resaltarrucCliente);}
		if(this.clienteConstantesFunciones.resaltarnombreCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.setBorder(this.clienteConstantesFunciones.resaltarnombreCliente);}
		if(this.clienteConstantesFunciones.resaltarapellidoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.setBorder(this.clienteConstantesFunciones.resaltarapellidoCliente);}
		if(this.clienteConstantesFunciones.resaltarnombre_completoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.setBorder(this.clienteConstantesFunciones.resaltarnombre_completoCliente);}
		if(this.clienteConstantesFunciones.resaltarnombre_comercialCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.setBorder(this.clienteConstantesFunciones.resaltarnombre_comercialCliente);}
		if(this.clienteConstantesFunciones.resaltartelefonoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.setBorder(this.clienteConstantesFunciones.resaltartelefonoCliente);}
		if(this.clienteConstantesFunciones.resaltardireccionCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.setBorder(this.clienteConstantesFunciones.resaltardireccionCliente);}
		if(this.clienteConstantesFunciones.resaltares_proveCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setBorderPainted(true);this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setBorder(this.clienteConstantesFunciones.resaltares_proveCliente);}
		if(this.clienteConstantesFunciones.resaltarid_grupo_clienteCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setBorder(this.clienteConstantesFunciones.resaltarid_grupo_clienteCliente);}
		if(this.clienteConstantesFunciones.resaltarid_titulo_clienteCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setBorder(this.clienteConstantesFunciones.resaltarid_titulo_clienteCliente);}
		if(this.clienteConstantesFunciones.resaltarid_area_crCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setBorder(this.clienteConstantesFunciones.resaltarid_area_crCliente);}
		if(this.clienteConstantesFunciones.resaltarid_estado_clienteCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setBorder(this.clienteConstantesFunciones.resaltarid_estado_clienteCliente);}
		if(this.clienteConstantesFunciones.resaltarobservacionCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.setBorder(this.clienteConstantesFunciones.resaltarobservacionCliente);}
		if(this.clienteConstantesFunciones.resaltarid_paisCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setBorder(this.clienteConstantesFunciones.resaltarid_paisCliente);}
		if(this.clienteConstantesFunciones.resaltarid_regionCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setBorder(this.clienteConstantesFunciones.resaltarid_regionCliente);}
		if(this.clienteConstantesFunciones.resaltarid_provinciaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setBorder(this.clienteConstantesFunciones.resaltarid_provinciaCliente);}
		if(this.clienteConstantesFunciones.resaltarid_ciudadCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setBorder(this.clienteConstantesFunciones.resaltarid_ciudadCliente);}
		if(this.clienteConstantesFunciones.resaltarid_zonaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setBorder(this.clienteConstantesFunciones.resaltarid_zonaCliente);}
		if(this.clienteConstantesFunciones.resaltarid_pais_nacionalidadCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setBorder(this.clienteConstantesFunciones.resaltarid_pais_nacionalidadCliente);}
		if(this.clienteConstantesFunciones.resaltarid_tipo_cargo_laboCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setBorder(this.clienteConstantesFunciones.resaltarid_tipo_cargo_laboCliente);}
		if(this.clienteConstantesFunciones.resaltarid_tipo_nivel_eduCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setBorder(this.clienteConstantesFunciones.resaltarid_tipo_nivel_eduCliente);}
		if(this.clienteConstantesFunciones.resaltarid_profesionCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setBorder(this.clienteConstantesFunciones.resaltarid_profesionCliente);}
		if(this.clienteConstantesFunciones.resaltarid_tipo_generoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setBorder(this.clienteConstantesFunciones.resaltarid_tipo_generoCliente);}
		if(this.clienteConstantesFunciones.resaltarid_estado_civilCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setBorder(this.clienteConstantesFunciones.resaltarid_estado_civilCliente);}
		if(this.clienteConstantesFunciones.resaltarid_estado_legalCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setBorder(this.clienteConstantesFunciones.resaltarid_estado_legalCliente);}
		if(this.clienteConstantesFunciones.resaltarfecha_nacimientoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.setBorder(this.clienteConstantesFunciones.resaltarfecha_nacimientoCliente);}
		if(this.clienteConstantesFunciones.resaltarpath_imagen_firmaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.setBorder(this.clienteConstantesFunciones.resaltarpath_imagen_firmaCliente);}
		if(this.clienteConstantesFunciones.resaltarcontactoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.setBorder(this.clienteConstantesFunciones.resaltarcontactoCliente);}
		if(this.clienteConstantesFunciones.resaltarid_cuenta_contableCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setBorder(this.clienteConstantesFunciones.resaltarid_cuenta_contableCliente);}
		if(this.clienteConstantesFunciones.resaltarid_rutaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setBorder(this.clienteConstantesFunciones.resaltarid_rutaCliente);}
		if(this.clienteConstantesFunciones.resaltarid_vendedorCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setBorder(this.clienteConstantesFunciones.resaltarid_vendedorCliente);}
		if(this.clienteConstantesFunciones.resaltarid_centro_actividadCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setBorder(this.clienteConstantesFunciones.resaltarid_centro_actividadCliente);}
		if(this.clienteConstantesFunciones.resaltarrepresentanteCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.setBorder(this.clienteConstantesFunciones.resaltarrepresentanteCliente);}
		if(this.clienteConstantesFunciones.resaltarid_tipo_garantia_empresaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setBorder(this.clienteConstantesFunciones.resaltarid_tipo_garantia_empresaCliente);}
		if(this.clienteConstantesFunciones.resaltarnombre_garantiaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.setBorder(this.clienteConstantesFunciones.resaltarnombre_garantiaCliente);}
		if(this.clienteConstantesFunciones.resaltarvalor_garantiaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.setBorder(this.clienteConstantesFunciones.resaltarvalor_garantiaCliente);}
		if(this.clienteConstantesFunciones.resaltarid_cate_tipo_afiliacionCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setBorder(this.clienteConstantesFunciones.resaltarid_cate_tipo_afiliacionCliente);}
		if(this.clienteConstantesFunciones.resaltarnumero_cargaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.setBorder(this.clienteConstantesFunciones.resaltarnumero_cargaCliente);}
		if(this.clienteConstantesFunciones.resaltarcredito_usadoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.setBorder(this.clienteConstantesFunciones.resaltarcredito_usadoCliente);}
		if(this.clienteConstantesFunciones.resaltarlimite_creditoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.setBorder(this.clienteConstantesFunciones.resaltarlimite_creditoCliente);}
		if(this.clienteConstantesFunciones.resaltarcredito_disponibleCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.setBorder(this.clienteConstantesFunciones.resaltarcredito_disponibleCliente);}
		if(this.clienteConstantesFunciones.resaltartotal_documentosCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.setBorder(this.clienteConstantesFunciones.resaltartotal_documentosCliente);}
		if(this.clienteConstantesFunciones.resaltarfecha_ultima_facturaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.setBorder(this.clienteConstantesFunciones.resaltarfecha_ultima_facturaCliente);}
		if(this.clienteConstantesFunciones.resaltardescuentoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.setBorder(this.clienteConstantesFunciones.resaltardescuentoCliente);}
		if(this.clienteConstantesFunciones.resaltarid_diaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setBorder(this.clienteConstantesFunciones.resaltarid_diaCliente);}
		if(this.clienteConstantesFunciones.resaltarhora_pagoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.setBorder(this.clienteConstantesFunciones.resaltarhora_pagoCliente);}
		if(this.clienteConstantesFunciones.resaltarid_empleadoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setBorder(this.clienteConstantesFunciones.resaltarid_empleadoCliente);}
		if(this.clienteConstantesFunciones.resaltarcobranzasCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.setBorder(this.clienteConstantesFunciones.resaltarcobranzasCliente);}
		if(this.clienteConstantesFunciones.resaltarmotivoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.setBorder(this.clienteConstantesFunciones.resaltarmotivoCliente);}
		if(this.clienteConstantesFunciones.resaltarpreferenciaCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.setBorder(this.clienteConstantesFunciones.resaltarpreferenciaCliente);}
		if(this.clienteConstantesFunciones.resaltarcon_separacion_bienesCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setBorderPainted(true);this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setBorder(this.clienteConstantesFunciones.resaltarcon_separacion_bienesCliente);}
		if(this.clienteConstantesFunciones.resaltarid_tipo_precioCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setBorder(this.clienteConstantesFunciones.resaltarid_tipo_precioCliente);}
		if(this.clienteConstantesFunciones.resaltarid_tipo_lista_precioCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setBorder(this.clienteConstantesFunciones.resaltarid_tipo_lista_precioCliente);}
		if(this.clienteConstantesFunciones.resaltardetalle_estadoCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.setBorder(this.clienteConstantesFunciones.resaltardetalle_estadoCliente);}
		if(this.clienteConstantesFunciones.resaltares_contribuyente_especialCliente!=null && this.jInternalFrameDetalleFormCliente!=null) {this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setBorderPainted(true);this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setBorder(this.clienteConstantesFunciones.resaltares_contribuyente_especialCliente);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioCliente() throws Exception {		
		if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
	
		//this.jInternalFrameDetalleFormCliente.jLabelidCliente.setVisible(this.clienteConstantesFunciones.mostraridCliente);
		this.jInternalFrameDetalleFormCliente.jPanelidCliente.setVisible(this.clienteConstantesFunciones.mostraridCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_empresaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_empresaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_empresaCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setVisible(this.clienteConstantesFunciones.mostrarid_sucursalCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_sucursalCliente.setVisible(this.clienteConstantesFunciones.mostrarid_sucursalCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.setVisible(this.clienteConstantesFunciones.mostrarcodigoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelcodigoCliente.setVisible(this.clienteConstantesFunciones.mostrarcodigoCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_identificacionCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_tipo_identificacionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_identificacionCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.setVisible(this.clienteConstantesFunciones.mostraridentificacionCliente);
		this.jInternalFrameDetalleFormCliente.jPanelidentificacionCliente.setVisible(this.clienteConstantesFunciones.mostraridentificacionCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.setVisible(this.clienteConstantesFunciones.mostrarrucCliente);
		this.jInternalFrameDetalleFormCliente.jPanelrucCliente.setVisible(this.clienteConstantesFunciones.mostrarrucCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.setVisible(this.clienteConstantesFunciones.mostrarnombreCliente);
		this.jInternalFrameDetalleFormCliente.jPanelnombreCliente.setVisible(this.clienteConstantesFunciones.mostrarnombreCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.setVisible(this.clienteConstantesFunciones.mostrarapellidoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelapellidoCliente.setVisible(this.clienteConstantesFunciones.mostrarapellidoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.setVisible(this.clienteConstantesFunciones.mostrarnombre_completoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelnombre_completoCliente.setVisible(this.clienteConstantesFunciones.mostrarnombre_completoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.setVisible(this.clienteConstantesFunciones.mostrarnombre_comercialCliente);
		this.jInternalFrameDetalleFormCliente.jPanelnombre_comercialCliente.setVisible(this.clienteConstantesFunciones.mostrarnombre_comercialCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.setVisible(this.clienteConstantesFunciones.mostrartelefonoCliente);
		this.jInternalFrameDetalleFormCliente.jPaneltelefonoCliente.setVisible(this.clienteConstantesFunciones.mostrartelefonoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.setVisible(this.clienteConstantesFunciones.mostrardireccionCliente);
		this.jInternalFrameDetalleFormCliente.jPaneldireccionCliente.setVisible(this.clienteConstantesFunciones.mostrardireccionCliente);
		//this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setVisible(this.clienteConstantesFunciones.mostrares_proveCliente);
		this.jInternalFrameDetalleFormCliente.jPaneles_proveCliente.setVisible(this.clienteConstantesFunciones.mostrares_proveCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setVisible(this.clienteConstantesFunciones.mostrarid_grupo_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_grupo_clienteCliente.setVisible(this.clienteConstantesFunciones.mostrarid_grupo_clienteCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setVisible(this.clienteConstantesFunciones.mostrarid_titulo_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_titulo_clienteCliente.setVisible(this.clienteConstantesFunciones.mostrarid_titulo_clienteCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setVisible(this.clienteConstantesFunciones.mostrarid_area_crCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_area_crCliente.setVisible(this.clienteConstantesFunciones.mostrarid_area_crCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setVisible(this.clienteConstantesFunciones.mostrarid_estado_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_estado_clienteCliente.setVisible(this.clienteConstantesFunciones.mostrarid_estado_clienteCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.setVisible(this.clienteConstantesFunciones.mostrarobservacionCliente);
		this.jInternalFrameDetalleFormCliente.jPanelobservacionCliente.setVisible(this.clienteConstantesFunciones.mostrarobservacionCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setVisible(this.clienteConstantesFunciones.mostrarid_paisCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_paisCliente.setVisible(this.clienteConstantesFunciones.mostrarid_paisCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_regionCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_regionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_regionCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_provinciaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_provinciaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_provinciaCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setVisible(this.clienteConstantesFunciones.mostrarid_ciudadCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_ciudadCliente.setVisible(this.clienteConstantesFunciones.mostrarid_ciudadCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_zonaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_zonaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_zonaCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setVisible(this.clienteConstantesFunciones.mostrarid_pais_nacionalidadCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_pais_nacionalidadCliente.setVisible(this.clienteConstantesFunciones.mostrarid_pais_nacionalidadCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_cargo_laboCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_tipo_cargo_laboCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_cargo_laboCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_nivel_eduCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_tipo_nivel_eduCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_nivel_eduCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_profesionCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_profesionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_profesionCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_generoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_tipo_generoCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_generoCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setVisible(this.clienteConstantesFunciones.mostrarid_estado_civilCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_estado_civilCliente.setVisible(this.clienteConstantesFunciones.mostrarid_estado_civilCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setVisible(this.clienteConstantesFunciones.mostrarid_estado_legalCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_estado_legalCliente.setVisible(this.clienteConstantesFunciones.mostrarid_estado_legalCliente);
		//this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.setVisible(this.clienteConstantesFunciones.mostrarfecha_nacimientoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelfecha_nacimientoCliente.setVisible(this.clienteConstantesFunciones.mostrarfecha_nacimientoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.setVisible(this.clienteConstantesFunciones.mostrarpath_imagen_firmaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelpath_imagen_firmaCliente.setVisible(this.clienteConstantesFunciones.mostrarpath_imagen_firmaCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.setVisible(this.clienteConstantesFunciones.mostrarcontactoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelcontactoCliente.setVisible(this.clienteConstantesFunciones.mostrarcontactoCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setVisible(this.clienteConstantesFunciones.mostrarid_cuenta_contableCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_cuenta_contableCliente.setVisible(this.clienteConstantesFunciones.mostrarid_cuenta_contableCliente);
			this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableCliente.setVisible(this.clienteConstantesFunciones.mostrarid_cuenta_contableCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_rutaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_rutaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_rutaCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setVisible(this.clienteConstantesFunciones.mostrarid_vendedorCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_vendedorCliente.setVisible(this.clienteConstantesFunciones.mostrarid_vendedorCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setVisible(this.clienteConstantesFunciones.mostrarid_centro_actividadCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_centro_actividadCliente.setVisible(this.clienteConstantesFunciones.mostrarid_centro_actividadCliente);
		//this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.setVisible(this.clienteConstantesFunciones.mostrarrepresentanteCliente);
		this.jInternalFrameDetalleFormCliente.jPanelrepresentanteCliente.setVisible(this.clienteConstantesFunciones.mostrarrepresentanteCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_garantia_empresaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_tipo_garantia_empresaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_garantia_empresaCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.setVisible(this.clienteConstantesFunciones.mostrarnombre_garantiaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelnombre_garantiaCliente.setVisible(this.clienteConstantesFunciones.mostrarnombre_garantiaCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.setVisible(this.clienteConstantesFunciones.mostrarvalor_garantiaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelvalor_garantiaCliente.setVisible(this.clienteConstantesFunciones.mostrarvalor_garantiaCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_cate_tipo_afiliacionCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_cate_tipo_afiliacionCliente.setVisible(this.clienteConstantesFunciones.mostrarid_cate_tipo_afiliacionCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.setVisible(this.clienteConstantesFunciones.mostrarnumero_cargaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelnumero_cargaCliente.setVisible(this.clienteConstantesFunciones.mostrarnumero_cargaCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.setVisible(this.clienteConstantesFunciones.mostrarcredito_usadoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelcredito_usadoCliente.setVisible(this.clienteConstantesFunciones.mostrarcredito_usadoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.setVisible(this.clienteConstantesFunciones.mostrarlimite_creditoCliente);
		this.jInternalFrameDetalleFormCliente.jPanellimite_creditoCliente.setVisible(this.clienteConstantesFunciones.mostrarlimite_creditoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.setVisible(this.clienteConstantesFunciones.mostrarcredito_disponibleCliente);
		this.jInternalFrameDetalleFormCliente.jPanelcredito_disponibleCliente.setVisible(this.clienteConstantesFunciones.mostrarcredito_disponibleCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.setVisible(this.clienteConstantesFunciones.mostrartotal_documentosCliente);
		this.jInternalFrameDetalleFormCliente.jPaneltotal_documentosCliente.setVisible(this.clienteConstantesFunciones.mostrartotal_documentosCliente);
		//this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.setVisible(this.clienteConstantesFunciones.mostrarfecha_ultima_facturaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelfecha_ultima_facturaCliente.setVisible(this.clienteConstantesFunciones.mostrarfecha_ultima_facturaCliente);
		//this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.setVisible(this.clienteConstantesFunciones.mostrardescuentoCliente);
		this.jInternalFrameDetalleFormCliente.jPaneldescuentoCliente.setVisible(this.clienteConstantesFunciones.mostrardescuentoCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_diaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_diaCliente.setVisible(this.clienteConstantesFunciones.mostrarid_diaCliente);
		//this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.setVisible(this.clienteConstantesFunciones.mostrarhora_pagoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelhora_pagoCliente.setVisible(this.clienteConstantesFunciones.mostrarhora_pagoCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setVisible(this.clienteConstantesFunciones.mostrarid_empleadoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_empleadoCliente.setVisible(this.clienteConstantesFunciones.mostrarid_empleadoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.setVisible(this.clienteConstantesFunciones.mostrarcobranzasCliente);
		this.jInternalFrameDetalleFormCliente.jPanelcobranzasCliente.setVisible(this.clienteConstantesFunciones.mostrarcobranzasCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.setVisible(this.clienteConstantesFunciones.mostrarmotivoCliente);
		this.jInternalFrameDetalleFormCliente.jPanelmotivoCliente.setVisible(this.clienteConstantesFunciones.mostrarmotivoCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.setVisible(this.clienteConstantesFunciones.mostrarpreferenciaCliente);
		this.jInternalFrameDetalleFormCliente.jPanelpreferenciaCliente.setVisible(this.clienteConstantesFunciones.mostrarpreferenciaCliente);
		//this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setVisible(this.clienteConstantesFunciones.mostrarcon_separacion_bienesCliente);
		this.jInternalFrameDetalleFormCliente.jPanelcon_separacion_bienesCliente.setVisible(this.clienteConstantesFunciones.mostrarcon_separacion_bienesCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_precioCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_tipo_precioCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_precioCliente);
		//this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_lista_precioCliente);
		this.jInternalFrameDetalleFormCliente.jPanelid_tipo_lista_precioCliente.setVisible(this.clienteConstantesFunciones.mostrarid_tipo_lista_precioCliente);
		//this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.setVisible(this.clienteConstantesFunciones.mostrardetalle_estadoCliente);
		this.jInternalFrameDetalleFormCliente.jPaneldetalle_estadoCliente.setVisible(this.clienteConstantesFunciones.mostrardetalle_estadoCliente);
		//this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setVisible(this.clienteConstantesFunciones.mostrares_contribuyente_especialCliente);
		this.jInternalFrameDetalleFormCliente.jPaneles_contribuyente_especialCliente.setVisible(this.clienteConstantesFunciones.mostrares_contribuyente_especialCliente);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioCliente() throws Exception {
		if(this.jInternalFrameDetalleFormCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormCliente!=null) {
	
		this.jInternalFrameDetalleFormCliente.jLabelidCliente.setEnabled(this.clienteConstantesFunciones.activaridCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_empresaCliente.setEnabled(this.clienteConstantesFunciones.activarid_empresaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_sucursalCliente.setEnabled(this.clienteConstantesFunciones.activarid_sucursalCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldcodigoCliente.setEnabled(this.clienteConstantesFunciones.activarcodigoCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_identificacionCliente.setEnabled(this.clienteConstantesFunciones.activarid_tipo_identificacionCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldidentificacionCliente.setEnabled(this.clienteConstantesFunciones.activaridentificacionCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldrucCliente.setEnabled(this.clienteConstantesFunciones.activarrucCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreanombreCliente.setEnabled(this.clienteConstantesFunciones.activarnombreCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreaapellidoCliente.setEnabled(this.clienteConstantesFunciones.activarapellidoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreanombre_completoCliente.setEnabled(this.clienteConstantesFunciones.activarnombre_completoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreanombre_comercialCliente.setEnabled(this.clienteConstantesFunciones.activarnombre_comercialCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldtelefonoCliente.setEnabled(this.clienteConstantesFunciones.activartelefonoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreadireccionCliente.setEnabled(this.clienteConstantesFunciones.activardireccionCliente);
		this.jInternalFrameDetalleFormCliente.jCheckBoxes_proveCliente.setEnabled(this.clienteConstantesFunciones.activares_proveCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_grupo_clienteCliente.setEnabled(this.clienteConstantesFunciones.activarid_grupo_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_titulo_clienteCliente.setEnabled(this.clienteConstantesFunciones.activarid_titulo_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_area_crCliente.setEnabled(this.clienteConstantesFunciones.activarid_area_crCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_clienteCliente.setEnabled(this.clienteConstantesFunciones.activarid_estado_clienteCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreaobservacionCliente.setEnabled(this.clienteConstantesFunciones.activarobservacionCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_paisCliente.setEnabled(this.clienteConstantesFunciones.activarid_paisCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_regionCliente.setEnabled(this.clienteConstantesFunciones.activarid_regionCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_provinciaCliente.setEnabled(this.clienteConstantesFunciones.activarid_provinciaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_ciudadCliente.setEnabled(this.clienteConstantesFunciones.activarid_ciudadCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_zonaCliente.setEnabled(this.clienteConstantesFunciones.activarid_zonaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_pais_nacionalidadCliente.setEnabled(this.clienteConstantesFunciones.activarid_pais_nacionalidadCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_cargo_laboCliente.setEnabled(this.clienteConstantesFunciones.activarid_tipo_cargo_laboCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_nivel_eduCliente.setEnabled(this.clienteConstantesFunciones.activarid_tipo_nivel_eduCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_profesionCliente.setEnabled(this.clienteConstantesFunciones.activarid_profesionCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_generoCliente.setEnabled(this.clienteConstantesFunciones.activarid_tipo_generoCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_civilCliente.setEnabled(this.clienteConstantesFunciones.activarid_estado_civilCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_estado_legalCliente.setEnabled(this.clienteConstantesFunciones.activarid_estado_legalCliente);
		this.jInternalFrameDetalleFormCliente.jDateChooserfecha_nacimientoCliente.setEnabled(this.clienteConstantesFunciones.activarfecha_nacimientoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreapath_imagen_firmaCliente.setEnabled(this.clienteConstantesFunciones.activarpath_imagen_firmaCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreacontactoCliente.setEnabled(this.clienteConstantesFunciones.activarcontactoCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_cuenta_contableCliente.setEnabled(this.clienteConstantesFunciones.activarid_cuenta_contableCliente);
			this.jInternalFrameDetalleFormCliente.jButtonid_cuenta_contableCliente.setEnabled(this.clienteConstantesFunciones.activarid_cuenta_contableCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_rutaCliente.setEnabled(this.clienteConstantesFunciones.activarid_rutaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_vendedorCliente.setEnabled(this.clienteConstantesFunciones.activarid_vendedorCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_centro_actividadCliente.setEnabled(this.clienteConstantesFunciones.activarid_centro_actividadCliente);
		this.jInternalFrameDetalleFormCliente.jTextArearepresentanteCliente.setEnabled(this.clienteConstantesFunciones.activarrepresentanteCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_garantia_empresaCliente.setEnabled(this.clienteConstantesFunciones.activarid_tipo_garantia_empresaCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreanombre_garantiaCliente.setEnabled(this.clienteConstantesFunciones.activarnombre_garantiaCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldvalor_garantiaCliente.setEnabled(this.clienteConstantesFunciones.activarvalor_garantiaCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_cate_tipo_afiliacionCliente.setEnabled(this.clienteConstantesFunciones.activarid_cate_tipo_afiliacionCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldnumero_cargaCliente.setEnabled(this.clienteConstantesFunciones.activarnumero_cargaCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldcredito_usadoCliente.setEnabled(this.clienteConstantesFunciones.activarcredito_usadoCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldlimite_creditoCliente.setEnabled(this.clienteConstantesFunciones.activarlimite_creditoCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldcredito_disponibleCliente.setEnabled(this.clienteConstantesFunciones.activarcredito_disponibleCliente);
		this.jInternalFrameDetalleFormCliente.jTextFieldtotal_documentosCliente.setEnabled(this.clienteConstantesFunciones.activartotal_documentosCliente);
		this.jInternalFrameDetalleFormCliente.jDateChooserfecha_ultima_facturaCliente.setEnabled(this.clienteConstantesFunciones.activarfecha_ultima_facturaCliente);
		this.jInternalFrameDetalleFormCliente.jTextFielddescuentoCliente.setEnabled(this.clienteConstantesFunciones.activardescuentoCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_diaCliente.setEnabled(this.clienteConstantesFunciones.activarid_diaCliente);
		this.jInternalFrameDetalleFormCliente.jSpinnerhora_pagoCliente.setEnabled(this.clienteConstantesFunciones.activarhora_pagoCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_empleadoCliente.setEnabled(this.clienteConstantesFunciones.activarid_empleadoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreacobranzasCliente.setEnabled(this.clienteConstantesFunciones.activarcobranzasCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreamotivoCliente.setEnabled(this.clienteConstantesFunciones.activarmotivoCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreapreferenciaCliente.setEnabled(this.clienteConstantesFunciones.activarpreferenciaCliente);
		this.jInternalFrameDetalleFormCliente.jCheckBoxcon_separacion_bienesCliente.setEnabled(this.clienteConstantesFunciones.activarcon_separacion_bienesCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_precioCliente.setEnabled(this.clienteConstantesFunciones.activarid_tipo_precioCliente);
		this.jInternalFrameDetalleFormCliente.jComboBoxid_tipo_lista_precioCliente.setEnabled(this.clienteConstantesFunciones.activarid_tipo_lista_precioCliente);
		this.jInternalFrameDetalleFormCliente.jTextAreadetalle_estadoCliente.setEnabled(this.clienteConstantesFunciones.activardetalle_estadoCliente);
		this.jInternalFrameDetalleFormCliente.jCheckBoxes_contribuyente_especialCliente.setEnabled(this.clienteConstantesFunciones.activares_contribuyente_especialCliente);
		}
	}
	
		
}