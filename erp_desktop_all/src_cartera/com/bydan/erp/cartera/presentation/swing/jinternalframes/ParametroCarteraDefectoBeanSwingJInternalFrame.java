/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.cartera.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.cartera.util.ParametroCarteraDefectoConstantesFunciones;
import com.bydan.erp.cartera.util.ParametroCarteraDefectoParameterReturnGeneral;
//import com.bydan.erp.cartera.util.ParametroCarteraDefectoParameterGeneral;
//import com.bydan.erp.cartera.presentation.report.source.ParametroCarteraDefectoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.cartera.resources.reportes.AuxiliarReportes;


import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.cartera.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroCarteraDefectoBeanSwingJInternalFrame extends ParametroCarteraDefectoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroCarteraDefectoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroCarteraDefecto> parametrocarteradefectoValidator = new ClassValidator<ParametroCarteraDefecto>(ParametroCarteraDefecto.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroCarteraDefecto parametrocarteradefecto;	
	public ParametroCarteraDefecto parametrocarteradefectoAux;
	public ParametroCarteraDefecto parametrocarteradefectoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroCarteraDefecto parametrocarteradefectoTotales;
	public Long idParametroCarteraDefectoActual;
	public Long iIdNuevoParametroCarteraDefecto=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboRegion="";

	public List<Region> regionsForeignKey;

	public List<Region> getregionsForeignKey() {
		return regionsForeignKey;
	}

	public void setregionsForeignKey(List<Region> regionsForeignKey) {
		this.regionsForeignKey = regionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Region regionForeignKey;

	public Region getregionForeignKey() {
		return regionForeignKey;
	}

	public void setregionForeignKey(Region regionForeignKey) {
		this.regionForeignKey = regionForeignKey;
	}

	public String sFinalQueryComboProvincia="";

	public List<Provincia> provinciasForeignKey;

	public List<Provincia> getprovinciasForeignKey() {
		return provinciasForeignKey;
	}

	public void setprovinciasForeignKey(List<Provincia> provinciasForeignKey) {
		this.provinciasForeignKey = provinciasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Provincia provinciaForeignKey;

	public Provincia getprovinciaForeignKey() {
		return provinciaForeignKey;
	}

	public void setprovinciaForeignKey(Provincia provinciaForeignKey) {
		this.provinciaForeignKey = provinciaForeignKey;
	}

	public String sFinalQueryComboCiudad="";

	public List<Ciudad> ciudadsForeignKey;

	public List<Ciudad> getciudadsForeignKey() {
		return ciudadsForeignKey;
	}

	public void setciudadsForeignKey(List<Ciudad> ciudadsForeignKey) {
		this.ciudadsForeignKey = ciudadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadForeignKey;

	public Ciudad getciudadForeignKey() {
		return ciudadForeignKey;
	}

	public void setciudadForeignKey(Ciudad ciudadForeignKey) {
		this.ciudadForeignKey = ciudadForeignKey;
	}

	public String sFinalQueryComboZona="";

	public List<Zona> zonasForeignKey;

	public List<Zona> getzonasForeignKey() {
		return zonasForeignKey;
	}

	public void setzonasForeignKey(List<Zona> zonasForeignKey) {
		this.zonasForeignKey = zonasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Zona zonaForeignKey;

	public Zona getzonaForeignKey() {
		return zonaForeignKey;
	}

	public void setzonaForeignKey(Zona zonaForeignKey) {
		this.zonaForeignKey = zonaForeignKey;
	}

	public String sFinalQueryComboTipoIdentificacion="";

	public List<TipoIdentificacion> tipoidentificacionsForeignKey;

	public List<TipoIdentificacion> gettipoidentificacionsForeignKey() {
		return tipoidentificacionsForeignKey;
	}

	public void settipoidentificacionsForeignKey(List<TipoIdentificacion> tipoidentificacionsForeignKey) {
		this.tipoidentificacionsForeignKey = tipoidentificacionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoIdentificacion tipoidentificacionForeignKey;

	public TipoIdentificacion gettipoidentificacionForeignKey() {
		return tipoidentificacionForeignKey;
	}

	public void settipoidentificacionForeignKey(TipoIdentificacion tipoidentificacionForeignKey) {
		this.tipoidentificacionForeignKey = tipoidentificacionForeignKey;
	}

	public String sFinalQueryComboTipoNivelEdu="";

	public List<TipoNivelEdu> tiponiveledusForeignKey;

	public List<TipoNivelEdu> gettiponiveledusForeignKey() {
		return tiponiveledusForeignKey;
	}

	public void settiponiveledusForeignKey(List<TipoNivelEdu> tiponiveledusForeignKey) {
		this.tiponiveledusForeignKey = tiponiveledusForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoNivelEdu tiponiveleduForeignKey;

	public TipoNivelEdu gettiponiveleduForeignKey() {
		return tiponiveleduForeignKey;
	}

	public void settiponiveleduForeignKey(TipoNivelEdu tiponiveleduForeignKey) {
		this.tiponiveleduForeignKey = tiponiveleduForeignKey;
	}

	public String sFinalQueryComboPaisNacionalidad="";

	public List<Pais> paisnacionalidadsForeignKey;

	public List<Pais> getpaisnacionalidadsForeignKey() {
		return paisnacionalidadsForeignKey;
	}

	public void setpaisnacionalidadsForeignKey(List<Pais> paisnacionalidadsForeignKey) {
		this.paisnacionalidadsForeignKey = paisnacionalidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisnacionalidadForeignKey;

	public Pais getpaisnacionalidadForeignKey() {
		return paisnacionalidadForeignKey;
	}

	public void setpaisnacionalidadForeignKey(Pais paisnacionalidadForeignKey) {
		this.paisnacionalidadForeignKey = paisnacionalidadForeignKey;
	}

	public String sFinalQueryComboTipoGenero="";

	public List<TipoGenero> tipogenerosForeignKey;

	public List<TipoGenero> gettipogenerosForeignKey() {
		return tipogenerosForeignKey;
	}

	public void settipogenerosForeignKey(List<TipoGenero> tipogenerosForeignKey) {
		this.tipogenerosForeignKey = tipogenerosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGenero tipogeneroForeignKey;

	public TipoGenero gettipogeneroForeignKey() {
		return tipogeneroForeignKey;
	}

	public void settipogeneroForeignKey(TipoGenero tipogeneroForeignKey) {
		this.tipogeneroForeignKey = tipogeneroForeignKey;
	}

	public String sFinalQueryComboEstadoCivil="";

	public List<EstadoCivil> estadocivilsForeignKey;

	public List<EstadoCivil> getestadocivilsForeignKey() {
		return estadocivilsForeignKey;
	}

	public void setestadocivilsForeignKey(List<EstadoCivil> estadocivilsForeignKey) {
		this.estadocivilsForeignKey = estadocivilsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoCivil estadocivilForeignKey;

	public EstadoCivil getestadocivilForeignKey() {
		return estadocivilForeignKey;
	}

	public void setestadocivilForeignKey(EstadoCivil estadocivilForeignKey) {
		this.estadocivilForeignKey = estadocivilForeignKey;
	}

	public String sFinalQueryComboEstadoLegal="";

	public List<EstadoLegal> estadolegalsForeignKey;

	public List<EstadoLegal> getestadolegalsForeignKey() {
		return estadolegalsForeignKey;
	}

	public void setestadolegalsForeignKey(List<EstadoLegal> estadolegalsForeignKey) {
		this.estadolegalsForeignKey = estadolegalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoLegal estadolegalForeignKey;

	public EstadoLegal getestadolegalForeignKey() {
		return estadolegalForeignKey;
	}

	public void setestadolegalForeignKey(EstadoLegal estadolegalForeignKey) {
		this.estadolegalForeignKey = estadolegalForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboRuta="";

	public List<Ruta> rutasForeignKey;

	public List<Ruta> getrutasForeignKey() {
		return rutasForeignKey;
	}

	public void setrutasForeignKey(List<Ruta> rutasForeignKey) {
		this.rutasForeignKey = rutasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ruta rutaForeignKey;

	public Ruta getrutaForeignKey() {
		return rutaForeignKey;
	}

	public void setrutaForeignKey(Ruta rutaForeignKey) {
		this.rutaForeignKey = rutaForeignKey;
	}

	public String sFinalQueryComboDia="";

	public List<Dia> diasForeignKey;

	public List<Dia> getdiasForeignKey() {
		return diasForeignKey;
	}

	public void setdiasForeignKey(List<Dia> diasForeignKey) {
		this.diasForeignKey = diasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Dia diaForeignKey;

	public Dia getdiaForeignKey() {
		return diaForeignKey;
	}

	public void setdiaForeignKey(Dia diaForeignKey) {
		this.diaForeignKey = diaForeignKey;
	}

	public String sFinalQueryComboTipoPrecio="";

	public List<TipoPrecio> tipopreciosForeignKey;

	public List<TipoPrecio> gettipopreciosForeignKey() {
		return tipopreciosForeignKey;
	}

	public void settipopreciosForeignKey(List<TipoPrecio> tipopreciosForeignKey) {
		this.tipopreciosForeignKey = tipopreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPrecio tipoprecioForeignKey;

	public TipoPrecio gettipoprecioForeignKey() {
		return tipoprecioForeignKey;
	}

	public void settipoprecioForeignKey(TipoPrecio tipoprecioForeignKey) {
		this.tipoprecioForeignKey = tipoprecioForeignKey;
	}

	public String sFinalQueryComboTipoListaPrecio="";

	public List<TipoListaPrecio> tipolistapreciosForeignKey;

	public List<TipoListaPrecio> gettipolistapreciosForeignKey() {
		return tipolistapreciosForeignKey;
	}

	public void settipolistapreciosForeignKey(List<TipoListaPrecio> tipolistapreciosForeignKey) {
		this.tipolistapreciosForeignKey = tipolistapreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoListaPrecio tipolistaprecioForeignKey;

	public TipoListaPrecio gettipolistaprecioForeignKey() {
		return tipolistaprecioForeignKey;
	}

	public void settipolistaprecioForeignKey(TipoListaPrecio tipolistaprecioForeignKey) {
		this.tipolistaprecioForeignKey = tipolistaprecioForeignKey;
	}

		
	
	
	
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroCarteraDefecto;
	public Boolean isPermisoNuevoParametroCarteraDefecto;
	public Boolean isPermisoActualizarParametroCarteraDefecto;
	public Boolean isPermisoActualizarOriginalParametroCarteraDefecto;
	public Boolean isPermisoEliminarParametroCarteraDefecto;
	public Boolean isPermisoGuardarCambiosParametroCarteraDefecto;
	public Boolean isPermisoConsultaParametroCarteraDefecto;
	public Boolean isPermisoBusquedaParametroCarteraDefecto;
	public Boolean isPermisoReporteParametroCarteraDefecto;
	public Boolean isPermisoPaginacionMedioParametroCarteraDefecto;
	public Boolean isPermisoPaginacionAltoParametroCarteraDefecto;
	public Boolean isPermisoPaginacionTodoParametroCarteraDefecto;
	public Boolean isPermisoCopiarParametroCarteraDefecto;
	public Boolean isPermisoVerFormParametroCarteraDefecto;
	public Boolean isPermisoDuplicarParametroCarteraDefecto;
	public Boolean isPermisoOrdenParametroCarteraDefecto;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroCarteraDefectoParameterReturnGeneral parametrocarteradefectoReturnGeneral;
	public ParametroCarteraDefectoParameterReturnGeneral parametrocarteradefectoParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroCarteraDefecto=false;
	public Boolean esParaAccionDesdeFormularioParametroCarteraDefecto=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroCarteraDefectoSessionBeanAdditional parametrocarteradefectoSessionBeanAdditional=null;
	
	public ParametroCarteraDefectoSessionBeanAdditional getParametroCarteraDefectoSessionBeanAdditional() {
		return this.parametrocarteradefectoSessionBeanAdditional;
	}
	
	public void setParametroCarteraDefectoSessionBeanAdditional(ParametroCarteraDefectoSessionBeanAdditional parametrocarteradefectoSessionBeanAdditional) {
		try {
			this.parametrocarteradefectoSessionBeanAdditional=parametrocarteradefectoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroCarteraDefectoBeanSwingJInternalFrameAdditional parametrocarteradefectoBeanSwingJInternalFrameAdditional=null;
	//public class ParametroCarteraDefectoBeanSwingJInternalFrame
	
	public ParametroCarteraDefectoBeanSwingJInternalFrameAdditional getParametroCarteraDefectoBeanSwingJInternalFrameAdditional() {
		return this.parametrocarteradefectoBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroCarteraDefectoBeanSwingJInternalFrameAdditional(ParametroCarteraDefectoBeanSwingJInternalFrameAdditional parametrocarteradefectoBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrocarteradefectoBeanSwingJInternalFrameAdditional=parametrocarteradefectoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroCarteraDefectoLogic parametrocarteradefectoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroCarteraDefecto parametrocarteradefectoBean;
	public ParametroCarteraDefectoConstantesFunciones parametrocarteradefectoConstantesFunciones;
	//public ParametroCarteraDefectoParameterReturnGeneral parametrocarteradefectoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public PaisLogic paisLogic;
	public RegionLogic regionLogic;
	public ProvinciaLogic provinciaLogic;
	public CiudadLogic ciudadLogic;
	public ZonaLogic zonaLogic;
	public TipoIdentificacionLogic tipoidentificacionLogic;
	public TipoNivelEduLogic tiponiveleduLogic;
	public PaisLogic paisnacionalidadLogic;
	public TipoGeneroLogic tipogeneroLogic;
	public EstadoCivilLogic estadocivilLogic;
	public EstadoLegalLogic estadolegalLogic;
	public CuentaContableLogic cuentacontableLogic;
	public VendedorLogic vendedorLogic;
	public RutaLogic rutaLogic;
	public DiaLogic diaLogic;
	public TipoPrecioLogic tipoprecioLogic;
	public TipoListaPrecioLogic tipolistaprecioLogic;
	
	//PARAMETROS
	
	
	//public List<ParametroCarteraDefecto> parametrocarteradefectos;	
	//public List<ParametroCarteraDefecto> parametrocarteradefectosEliminados;
	//public List<ParametroCarteraDefecto> parametrocarteradefectosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
	public Boolean isVisibilidadCeldaDuplicarParametroCarteraDefecto=true;
	public Boolean isVisibilidadCeldaCopiarParametroCarteraDefecto=true;
	public Boolean isVisibilidadCeldaVerFormParametroCarteraDefecto=true;
	public Boolean isVisibilidadCeldaOrdenParametroCarteraDefecto=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
	public Boolean isVisibilidadCeldaModificarParametroCarteraDefecto=false;
	public Boolean isVisibilidadCeldaActualizarParametroCarteraDefecto=false;
	public Boolean isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
	public Boolean isVisibilidadCeldaCancelarParametroCarteraDefecto=false;
	public Boolean isVisibilidadCeldaGuardarParametroCarteraDefecto=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;	
	
	
	public Boolean isVisibilidadFK_IdCiudad=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdDia=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoCivil=false;
	public Boolean isVisibilidadFK_IdEstadoLegal=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdPaisNacionalidad=false;
	public Boolean isVisibilidadFK_IdProvincia=false;
	public Boolean isVisibilidadFK_IdRegion=false;
	public Boolean isVisibilidadFK_IdRuta=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoGenero=false;
	public Boolean isVisibilidadFK_IdTipoIdentificacion=false;
	public Boolean isVisibilidadFK_IdTipoListaPrecio=false;
	public Boolean isVisibilidadFK_IdTipoNivelEdu=false;
	public Boolean isVisibilidadFK_IdTipoPrecio=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	public Boolean isVisibilidadFK_IdZona=false;
	
	public Long getiIdNuevoParametroCarteraDefecto() {
		return this.iIdNuevoParametroCarteraDefecto;
	}

	public void setiIdNuevoParametroCarteraDefecto(Long iIdNuevoParametroCarteraDefecto) {
		this.iIdNuevoParametroCarteraDefecto = iIdNuevoParametroCarteraDefecto;
	}
	
	public Long getidParametroCarteraDefectoActual() {
		return this.idParametroCarteraDefectoActual;
	}

	public void setidParametroCarteraDefectoActual(Long idParametroCarteraDefectoActual) {
		this.idParametroCarteraDefectoActual = idParametroCarteraDefectoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroCarteraDefecto getparametrocarteradefecto() {
		return this.parametrocarteradefecto;
	}

	public void setparametrocarteradefecto(ParametroCarteraDefecto parametrocarteradefecto) {
		this.parametrocarteradefecto = parametrocarteradefecto;
	}
	
	public ParametroCarteraDefecto getparametrocarteradefectoAux() {
		return this.parametrocarteradefectoAux;
	}

	public void setparametrocarteradefectoAux(ParametroCarteraDefecto parametrocarteradefectoAux) {
		this.parametrocarteradefectoAux = parametrocarteradefectoAux;
	}				
	
	public ParametroCarteraDefecto getparametrocarteradefectoAnterior() {
		return this.parametrocarteradefectoAnterior;
	}

	public void setparametrocarteradefectoAnterior(ParametroCarteraDefecto parametrocarteradefectoAnterior) {
		this.parametrocarteradefectoAnterior = parametrocarteradefectoAnterior;
	}	
	
	public ParametroCarteraDefecto getparametrocarteradefectoTotales() {
		return this.parametrocarteradefectoTotales;
	}

	public void setparametrocarteradefectoTotales(ParametroCarteraDefecto parametrocarteradefectoTotales) {
		this.parametrocarteradefectoTotales = parametrocarteradefectoTotales;
	}	
	
	public ParametroCarteraDefecto getparametrocarteradefectoBean() {
		return this.parametrocarteradefectoBean;
	}

	public void setparametrocarteradefectoBean(ParametroCarteraDefecto parametrocarteradefectoBean) {
		this.parametrocarteradefectoBean = parametrocarteradefectoBean;
	}	
	
	public ParametroCarteraDefectoParameterReturnGeneral getparametrocarteradefectoReturnGeneral() {
		return this.parametrocarteradefectoReturnGeneral;
	}

	public void setparametrocarteradefectoReturnGeneral(ParametroCarteraDefectoParameterReturnGeneral parametrocarteradefectoReturnGeneral) {
		this.parametrocarteradefectoReturnGeneral = parametrocarteradefectoReturnGeneral;
	}	
	
	
	public Long id_ciudadFK_IdCiudad=-1L;

	public Long getid_ciudadFK_IdCiudad() {
		return this.id_ciudadFK_IdCiudad;
	}

	public void setid_ciudadFK_IdCiudad(Long id_ciudadFK_IdCiudad) {
		this.id_ciudadFK_IdCiudad = id_ciudadFK_IdCiudad;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=-1L;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_diaFK_IdDia=-1L;

	public Long getid_diaFK_IdDia() {
		return this.id_diaFK_IdDia;
	}

	public void setid_diaFK_IdDia(Long id_diaFK_IdDia) {
		this.id_diaFK_IdDia = id_diaFK_IdDia;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_civilFK_IdEstadoCivil=-1L;

	public Long getid_estado_civilFK_IdEstadoCivil() {
		return this.id_estado_civilFK_IdEstadoCivil;
	}

	public void setid_estado_civilFK_IdEstadoCivil(Long id_estado_civilFK_IdEstadoCivil) {
		this.id_estado_civilFK_IdEstadoCivil = id_estado_civilFK_IdEstadoCivil;
	}

	public Long id_estado_legalFK_IdEstadoLegal=-1L;

	public Long getid_estado_legalFK_IdEstadoLegal() {
		return this.id_estado_legalFK_IdEstadoLegal;
	}

	public void setid_estado_legalFK_IdEstadoLegal(Long id_estado_legalFK_IdEstadoLegal) {
		this.id_estado_legalFK_IdEstadoLegal = id_estado_legalFK_IdEstadoLegal;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_pais_nacionalidadFK_IdPaisNacionalidad=-1L;

	public Long getid_pais_nacionalidadFK_IdPaisNacionalidad() {
		return this.id_pais_nacionalidadFK_IdPaisNacionalidad;
	}

	public void setid_pais_nacionalidadFK_IdPaisNacionalidad(Long id_pais_nacionalidadFK_IdPaisNacionalidad) {
		this.id_pais_nacionalidadFK_IdPaisNacionalidad = id_pais_nacionalidadFK_IdPaisNacionalidad;
	}

	public Long id_provinciaFK_IdProvincia=-1L;

	public Long getid_provinciaFK_IdProvincia() {
		return this.id_provinciaFK_IdProvincia;
	}

	public void setid_provinciaFK_IdProvincia(Long id_provinciaFK_IdProvincia) {
		this.id_provinciaFK_IdProvincia = id_provinciaFK_IdProvincia;
	}

	public Long id_regionFK_IdRegion=-1L;

	public Long getid_regionFK_IdRegion() {
		return this.id_regionFK_IdRegion;
	}

	public void setid_regionFK_IdRegion(Long id_regionFK_IdRegion) {
		this.id_regionFK_IdRegion = id_regionFK_IdRegion;
	}

	public Long id_rutaFK_IdRuta=-1L;

	public Long getid_rutaFK_IdRuta() {
		return this.id_rutaFK_IdRuta;
	}

	public void setid_rutaFK_IdRuta(Long id_rutaFK_IdRuta) {
		this.id_rutaFK_IdRuta = id_rutaFK_IdRuta;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_generoFK_IdTipoGenero=-1L;

	public Long getid_tipo_generoFK_IdTipoGenero() {
		return this.id_tipo_generoFK_IdTipoGenero;
	}

	public void setid_tipo_generoFK_IdTipoGenero(Long id_tipo_generoFK_IdTipoGenero) {
		this.id_tipo_generoFK_IdTipoGenero = id_tipo_generoFK_IdTipoGenero;
	}

	public Long id_tipo_identificacionFK_IdTipoIdentificacion=-1L;

	public Long getid_tipo_identificacionFK_IdTipoIdentificacion() {
		return this.id_tipo_identificacionFK_IdTipoIdentificacion;
	}

	public void setid_tipo_identificacionFK_IdTipoIdentificacion(Long id_tipo_identificacionFK_IdTipoIdentificacion) {
		this.id_tipo_identificacionFK_IdTipoIdentificacion = id_tipo_identificacionFK_IdTipoIdentificacion;
	}

	public Long id_tipo_lista_precioFK_IdTipoListaPrecio=-1L;

	public Long getid_tipo_lista_precioFK_IdTipoListaPrecio() {
		return this.id_tipo_lista_precioFK_IdTipoListaPrecio;
	}

	public void setid_tipo_lista_precioFK_IdTipoListaPrecio(Long id_tipo_lista_precioFK_IdTipoListaPrecio) {
		this.id_tipo_lista_precioFK_IdTipoListaPrecio = id_tipo_lista_precioFK_IdTipoListaPrecio;
	}

	public Long id_tipo_nivel_eduFK_IdTipoNivelEdu=-1L;

	public Long getid_tipo_nivel_eduFK_IdTipoNivelEdu() {
		return this.id_tipo_nivel_eduFK_IdTipoNivelEdu;
	}

	public void setid_tipo_nivel_eduFK_IdTipoNivelEdu(Long id_tipo_nivel_eduFK_IdTipoNivelEdu) {
		this.id_tipo_nivel_eduFK_IdTipoNivelEdu = id_tipo_nivel_eduFK_IdTipoNivelEdu;
	}

	public Long id_tipo_precioFK_IdTipoPrecio=-1L;

	public Long getid_tipo_precioFK_IdTipoPrecio() {
		return this.id_tipo_precioFK_IdTipoPrecio;
	}

	public void setid_tipo_precioFK_IdTipoPrecio(Long id_tipo_precioFK_IdTipoPrecio) {
		this.id_tipo_precioFK_IdTipoPrecio = id_tipo_precioFK_IdTipoPrecio;
	}

	public Long id_vendedorFK_IdVendedor=-1L;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

	public Long id_zonaFK_IdZona=-1L;

	public Long getid_zonaFK_IdZona() {
		return this.id_zonaFK_IdZona;
	}

	public void setid_zonaFK_IdZona(Long id_zonaFK_IdZona) {
		this.id_zonaFK_IdZona = id_zonaFK_IdZona;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroCarteraDefectoLogic getParametroCarteraDefectoLogic()	{		
		return parametrocarteradefectoLogic;
	}

	public void setParametroCarteraDefectoLogic(ParametroCarteraDefectoLogic parametrocarteradefectoLogic) {
		this.parametrocarteradefectoLogic = parametrocarteradefectoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroCarteraDefecto() {
		return isEsNuevoParametroCarteraDefecto;
	}

	public void setIsEsNuevoParametroCarteraDefecto(Boolean isEsNuevoParametroCarteraDefecto) {
		this.isEsNuevoParametroCarteraDefecto = isEsNuevoParametroCarteraDefecto;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroCarteraDefecto() {
		return esParaAccionDesdeFormularioParametroCarteraDefecto;
	}
	
	public void setEsParaAccionDesdeFormularioParametroCarteraDefecto(Boolean esParaAccionDesdeFormularioParametroCarteraDefecto) {
		this.esParaAccionDesdeFormularioParametroCarteraDefecto = esParaAccionDesdeFormularioParametroCarteraDefecto;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosRegionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.regionsForeignKey=new ArrayList<Region>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			RegionLogic regionLogic=new RegionLogic();

			//regionLogic.getRegionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionRegion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//regionLogic.getRegionDataAccess().setIsForForeingKeyData(true);

					regionLogic.getTodosRegionsWithConnection(sFinalQuery,new Pagination());

					this.regionsForeignKey=regionLogic.getRegions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaRegion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					regionLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidRegionActual());
					this.regionsForeignKey.add(regionLogic.getRegion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProvinciasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.provinciasForeignKey=new ArrayList<Provincia>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProvinciaLogic provinciaLogic=new ProvinciaLogic();

			//provinciaLogic.getProvinciaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//provinciaLogic.getProvinciaDataAccess().setIsForForeingKeyData(true);

					provinciaLogic.getTodosProvinciasWithConnection(sFinalQuery,new Pagination());

					this.provinciasForeignKey=provinciaLogic.getProvincias();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProvincia(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					provinciaLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidProvinciaActual());
					this.provinciasForeignKey.add(provinciaLogic.getProvincia());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadsForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadsForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidCiudadActual());
					this.ciudadsForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosZonasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.zonasForeignKey=new ArrayList<Zona>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ZonaLogic zonaLogic=new ZonaLogic();

			//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

					zonaLogic.getTodosZonasWithConnection(sFinalQuery,new Pagination());

					this.zonasForeignKey=zonaLogic.getZonas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaZona(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					zonaLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidZonaActual());
					this.zonasForeignKey.add(zonaLogic.getZona());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoIdentificacionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoIdentificacionLogic tipoidentificacionLogic=new TipoIdentificacionLogic();

			//tipoidentificacionLogic.getTipoIdentificacionDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoidentificacionLogic.getTipoIdentificacionDataAccess().setIsForForeingKeyData(true);

					tipoidentificacionLogic.getTodosTipoIdentificacionsWithConnection(sFinalQuery,new Pagination());

					this.tipoidentificacionsForeignKey=tipoidentificacionLogic.getTipoIdentificacions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoIdentificacion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoidentificacionLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidTipoIdentificacionActual());
					this.tipoidentificacionsForeignKey.add(tipoidentificacionLogic.getTipoIdentificacion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoNivelEdusForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoNivelEduLogic tiponiveleduLogic=new TipoNivelEduLogic();

			//tiponiveleduLogic.getTipoNivelEduDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiponiveleduLogic.getTipoNivelEduDataAccess().setIsForForeingKeyData(true);

					tiponiveleduLogic.getTodosTipoNivelEdusWithConnection(sFinalQuery,new Pagination());

					this.tiponiveledusForeignKey=tiponiveleduLogic.getTipoNivelEdus();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoNivelEdu(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiponiveleduLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidTipoNivelEduActual());
					this.tiponiveledusForeignKey.add(tiponiveleduLogic.getTipoNivelEdu());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaisNacionalidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paisnacionalidadsForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisnacionalidadLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paisnacionalidadsForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPaisNacionalidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidPaisNacionalidadActual());
					this.paisnacionalidadsForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGenerosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGeneroLogic tipogeneroLogic=new TipoGeneroLogic();

			//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogeneroLogic.getTipoGeneroDataAccess().setIsForForeingKeyData(true);

					tipogeneroLogic.getTodosTipoGenerosWithConnection(sFinalQuery,new Pagination());

					this.tipogenerosForeignKey=tipogeneroLogic.getTipoGeneros();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGenero(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogeneroLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidTipoGeneroActual());
					this.tipogenerosForeignKey.add(tipogeneroLogic.getTipoGenero());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoCivilsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoCivilLogic estadocivilLogic=new EstadoCivilLogic();

			//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadocivilLogic.getEstadoCivilDataAccess().setIsForForeingKeyData(true);

					estadocivilLogic.getTodosEstadoCivilsWithConnection(sFinalQuery,new Pagination());

					this.estadocivilsForeignKey=estadocivilLogic.getEstadoCivils();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoCivil(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadocivilLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidEstadoCivilActual());
					this.estadocivilsForeignKey.add(estadocivilLogic.getEstadoCivil());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoLegalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadolegalsForeignKey=new ArrayList<EstadoLegal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoLegalLogic estadolegalLogic=new EstadoLegalLogic();

			//estadolegalLogic.getEstadoLegalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadolegalLogic.getEstadoLegalDataAccess().setIsForForeingKeyData(true);

					estadolegalLogic.getTodosEstadoLegalsWithConnection(sFinalQuery,new Pagination());

					this.estadolegalsForeignKey=estadolegalLogic.getEstadoLegals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoLegal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadolegalLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidEstadoLegalActual());
					this.estadolegalsForeignKey.add(estadolegalLogic.getEstadoLegal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosRutasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.rutasForeignKey=new ArrayList<Ruta>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			RutaLogic rutaLogic=new RutaLogic();

			//rutaLogic.getRutaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionRuta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//rutaLogic.getRutaDataAccess().setIsForForeingKeyData(true);

					rutaLogic.getTodosRutasWithConnection(sFinalQuery,new Pagination());

					this.rutasForeignKey=rutaLogic.getRutas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaRuta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					rutaLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidRutaActual());
					this.rutasForeignKey.add(rutaLogic.getRuta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosDiasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.diasForeignKey=new ArrayList<Dia>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			DiaLogic diaLogic=new DiaLogic();

			//diaLogic.getDiaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionDia()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//diaLogic.getDiaDataAccess().setIsForForeingKeyData(true);

					diaLogic.getTodosDiasWithConnection(sFinalQuery,new Pagination());

					this.diasForeignKey=diaLogic.getDias();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaDia(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					diaLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidDiaActual());
					this.diasForeignKey.add(diaLogic.getDia());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPrecioLogic tipoprecioLogic=new TipoPrecioLogic();

			//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

					tipoprecioLogic.getTodosTipoPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipopreciosForeignKey=tipoprecioLogic.getTipoPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidTipoPrecioActual());
					this.tipopreciosForeignKey.add(tipoprecioLogic.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoListaPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipolistapreciosForeignKey=new ArrayList<TipoListaPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoListaPrecioLogic tipolistaprecioLogic=new TipoListaPrecioLogic();

			//tipolistaprecioLogic.getTipoListaPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoListaPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipolistaprecioLogic.getTipoListaPrecioDataAccess().setIsForForeingKeyData(true);

					tipolistaprecioLogic.getTodosTipoListaPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipolistapreciosForeignKey=tipolistaprecioLogic.getTipoListaPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoListaPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipolistaprecioLogic.getEntityWithConnection(parametrocarteradefectoSessionBean.getlidTipoListaPrecioActual());
					this.tipolistapreciosForeignKey.add(tipolistaprecioLogic.getTipoListaPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroCarteraDefecto.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroCarteraDefectoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroCarteraDefectoGenerico!=null && jComboBoxid_empresaParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalParametroCarteraDefecto.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalParametroCarteraDefectoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalParametroCarteraDefectoGenerico!=null && jComboBoxid_sucursalParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisParametroCarteraDefecto.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisTemp!=null && jComboBoxid_paisFK_IdPaisParametroCarteraDefecto!=null) {
						jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.setSelectedItem(paisTemp);
					} else {
						if(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto!=null) {
							//jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.setSelectedItem(paisTemp);
							if(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisParametroCarteraDefectoGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisParametroCarteraDefectoGenerico!=null && jComboBoxid_paisParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_paisParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualRegionForeignKey(Long idRegionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Region  regionTemp=null;

			for(Region regionAux:regionsForeignKey) {
				if(regionAux.getId()!=null && regionAux.getId().equals(idRegionSeleccionado)) {
					regionTemp=regionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(regionTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setRegion(regionTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setSelectedItem(regionTemp);
					}
				} else {
					//jComboBoxid_regionParametroCarteraDefecto.setSelectedItem(regionTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdRegion") || sFormularioTipoBusqueda.equals("Todos")){
					if(regionTemp!=null && jComboBoxid_regionFK_IdRegionParametroCarteraDefecto!=null) {
						jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.setSelectedItem(regionTemp);
					} else {
						if(jComboBoxid_regionFK_IdRegionParametroCarteraDefecto!=null) {
							//jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.setSelectedItem(regionTemp);
							if(jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualRegionForeignKeyDescripcion(Long idRegionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Region  regionTemp=null;

			for(Region regionAux:regionsForeignKey) {
				if(regionAux.getId()!=null && regionAux.getId().equals(idRegionSeleccionado)) {
					regionTemp=regionAux;
					break;
				}
			}


			sDescripcion=RegionConstantesFunciones.getRegionDescripcion(regionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualRegionForeignKeyGenerico(Long idRegionSeleccionado,JComboBox jComboBoxid_regionParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Region  regionTemp=null;

			for(Region regionAux:regionsForeignKey) {
				if(regionAux.getId()!=null && regionAux.getId().equals(idRegionSeleccionado)) {
					regionTemp=regionAux;
					break;
				}
			}

			if(regionTemp!=null) {
				jComboBoxid_regionParametroCarteraDefectoGenerico.setSelectedItem(regionTemp);
			} else {
				if(jComboBoxid_regionParametroCarteraDefectoGenerico!=null && jComboBoxid_regionParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_regionParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProvinciaForeignKey(Long idProvinciaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(provinciaTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setProvincia(provinciaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setSelectedItem(provinciaTemp);
					}
				} else {
					//jComboBoxid_provinciaParametroCarteraDefecto.setSelectedItem(provinciaTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProvincia") || sFormularioTipoBusqueda.equals("Todos")){
					if(provinciaTemp!=null && jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto!=null) {
						jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.setSelectedItem(provinciaTemp);
					} else {
						if(jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto!=null) {
							//jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.setSelectedItem(provinciaTemp);
							if(jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProvinciaForeignKeyDescripcion(Long idProvinciaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}


			sDescripcion=ProvinciaConstantesFunciones.getProvinciaDescripcion(provinciaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProvinciaForeignKeyGenerico(Long idProvinciaSeleccionado,JComboBox jComboBoxid_provinciaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Provincia  provinciaTemp=null;

			for(Provincia provinciaAux:provinciasForeignKey) {
				if(provinciaAux.getId()!=null && provinciaAux.getId().equals(idProvinciaSeleccionado)) {
					provinciaTemp=provinciaAux;
					break;
				}
			}

			if(provinciaTemp!=null) {
				jComboBoxid_provinciaParametroCarteraDefectoGenerico.setSelectedItem(provinciaTemp);
			} else {
				if(jComboBoxid_provinciaParametroCarteraDefectoGenerico!=null && jComboBoxid_provinciaParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_provinciaParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadForeignKey(Long idCiudadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setCiudad(ciudadTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setSelectedItem(ciudadTemp);
					}
				} else {
					//jComboBoxid_ciudadParametroCarteraDefecto.setSelectedItem(ciudadTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){
					if(ciudadTemp!=null && jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto!=null) {
						jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.setSelectedItem(ciudadTemp);
					} else {
						if(jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto!=null) {
							//jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.setSelectedItem(ciudadTemp);
							if(jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadForeignKeyDescripcion(Long idCiudadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadForeignKeyGenerico(Long idCiudadSeleccionado,JComboBox jComboBoxid_ciudadParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(ciudadTemp!=null) {
				jComboBoxid_ciudadParametroCarteraDefectoGenerico.setSelectedItem(ciudadTemp);
			} else {
				if(jComboBoxid_ciudadParametroCarteraDefectoGenerico!=null && jComboBoxid_ciudadParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_ciudadParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualZonaForeignKey(Long idZonaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(zonaTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setZona(zonaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setSelectedItem(zonaTemp);
					}
				} else {
					//jComboBoxid_zonaParametroCarteraDefecto.setSelectedItem(zonaTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){
					if(zonaTemp!=null && jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto!=null) {
						jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.setSelectedItem(zonaTemp);
					} else {
						if(jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto!=null) {
							//jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.setSelectedItem(zonaTemp);
							if(jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualZonaForeignKeyDescripcion(Long idZonaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}


			sDescripcion=ZonaConstantesFunciones.getZonaDescripcion(zonaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualZonaForeignKeyGenerico(Long idZonaSeleccionado,JComboBox jComboBoxid_zonaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(zonaTemp!=null) {
				jComboBoxid_zonaParametroCarteraDefectoGenerico.setSelectedItem(zonaTemp);
			} else {
				if(jComboBoxid_zonaParametroCarteraDefectoGenerico!=null && jComboBoxid_zonaParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_zonaParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoIdentificacionForeignKey(Long idTipoIdentificacionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoidentificacionTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setTipoIdentificacion(tipoidentificacionTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setSelectedItem(tipoidentificacionTemp);
					}
				} else {
					//jComboBoxid_tipo_identificacionParametroCarteraDefecto.setSelectedItem(tipoidentificacionTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoIdentificacion") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoidentificacionTemp!=null && jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto!=null) {
						jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.setSelectedItem(tipoidentificacionTemp);
					} else {
						if(jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto!=null) {
							//jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.setSelectedItem(tipoidentificacionTemp);
							if(jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoIdentificacionForeignKeyDescripcion(Long idTipoIdentificacionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}


			sDescripcion=TipoIdentificacionConstantesFunciones.getTipoIdentificacionDescripcion(tipoidentificacionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoIdentificacionForeignKeyGenerico(Long idTipoIdentificacionSeleccionado,JComboBox jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionTemp=null;

			for(TipoIdentificacion tipoidentificacionAux:tipoidentificacionsForeignKey) {
				if(tipoidentificacionAux.getId()!=null && tipoidentificacionAux.getId().equals(idTipoIdentificacionSeleccionado)) {
					tipoidentificacionTemp=tipoidentificacionAux;
					break;
				}
			}

			if(tipoidentificacionTemp!=null) {
				jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico.setSelectedItem(tipoidentificacionTemp);
			} else {
				if(jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico!=null && jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoNivelEduForeignKey(Long idTipoNivelEduSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiponiveleduTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setTipoNivelEdu(tiponiveleduTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setSelectedItem(tiponiveleduTemp);
					}
				} else {
					//jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setSelectedItem(tiponiveleduTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoNivelEdu") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiponiveleduTemp!=null && jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto!=null) {
						jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.setSelectedItem(tiponiveleduTemp);
					} else {
						if(jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto!=null) {
							//jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.setSelectedItem(tiponiveleduTemp);
							if(jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoNivelEduForeignKeyDescripcion(Long idTipoNivelEduSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}


			sDescripcion=TipoNivelEduConstantesFunciones.getTipoNivelEduDescripcion(tiponiveleduTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoNivelEduForeignKeyGenerico(Long idTipoNivelEduSeleccionado,JComboBox jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduTemp=null;

			for(TipoNivelEdu tiponiveleduAux:tiponiveledusForeignKey) {
				if(tiponiveleduAux.getId()!=null && tiponiveleduAux.getId().equals(idTipoNivelEduSeleccionado)) {
					tiponiveleduTemp=tiponiveleduAux;
					break;
				}
			}

			if(tiponiveleduTemp!=null) {
				jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico.setSelectedItem(tiponiveleduTemp);
			} else {
				if(jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico!=null && jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisNacionalidadForeignKey(Long idPaisNacionalidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisnacionalidadTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setPaisNacionalidad(paisnacionalidadTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setSelectedItem(paisnacionalidadTemp);
					}
				} else {
					//jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setSelectedItem(paisnacionalidadTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPaisNacionalidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisnacionalidadTemp!=null && jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto!=null) {
						jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.setSelectedItem(paisnacionalidadTemp);
					} else {
						if(jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto!=null) {
							//jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.setSelectedItem(paisnacionalidadTemp);
							if(jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisNacionalidadForeignKeyDescripcion(Long idPaisNacionalidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisnacionalidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisNacionalidadForeignKeyGenerico(Long idPaisNacionalidadSeleccionado,JComboBox jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Pais  paisnacionalidadTemp=null;

			for(Pais paisnacionalidadAux:paisnacionalidadsForeignKey) {
				if(paisnacionalidadAux.getId()!=null && paisnacionalidadAux.getId().equals(idPaisNacionalidadSeleccionado)) {
					paisnacionalidadTemp=paisnacionalidadAux;
					break;
				}
			}

			if(paisnacionalidadTemp!=null) {
				jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico.setSelectedItem(paisnacionalidadTemp);
			} else {
				if(jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico!=null && jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGeneroForeignKey(Long idTipoGeneroSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogeneroTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setTipoGenero(tipogeneroTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setSelectedItem(tipogeneroTemp);
					}
				} else {
					//jComboBoxid_tipo_generoParametroCarteraDefecto.setSelectedItem(tipogeneroTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoGenero") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipogeneroTemp!=null && jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto!=null) {
						jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.setSelectedItem(tipogeneroTemp);
					} else {
						if(jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto!=null) {
							//jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.setSelectedItem(tipogeneroTemp);
							if(jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGeneroForeignKeyDescripcion(Long idTipoGeneroSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}


			sDescripcion=TipoGeneroConstantesFunciones.getTipoGeneroDescripcion(tipogeneroTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGeneroForeignKeyGenerico(Long idTipoGeneroSeleccionado,JComboBox jComboBoxid_tipo_generoParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroTemp=null;

			for(TipoGenero tipogeneroAux:tipogenerosForeignKey) {
				if(tipogeneroAux.getId()!=null && tipogeneroAux.getId().equals(idTipoGeneroSeleccionado)) {
					tipogeneroTemp=tipogeneroAux;
					break;
				}
			}

			if(tipogeneroTemp!=null) {
				jComboBoxid_tipo_generoParametroCarteraDefectoGenerico.setSelectedItem(tipogeneroTemp);
			} else {
				if(jComboBoxid_tipo_generoParametroCarteraDefectoGenerico!=null && jComboBoxid_tipo_generoParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_generoParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoCivilForeignKey(Long idEstadoCivilSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadocivilTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setEstadoCivil(estadocivilTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setSelectedItem(estadocivilTemp);
					}
				} else {
					//jComboBoxid_estado_civilParametroCarteraDefecto.setSelectedItem(estadocivilTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoCivil") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadocivilTemp!=null && jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto!=null) {
						jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.setSelectedItem(estadocivilTemp);
					} else {
						if(jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto!=null) {
							//jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.setSelectedItem(estadocivilTemp);
							if(jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoCivilForeignKeyDescripcion(Long idEstadoCivilSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}


			sDescripcion=EstadoCivilConstantesFunciones.getEstadoCivilDescripcion(estadocivilTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoCivilForeignKeyGenerico(Long idEstadoCivilSeleccionado,JComboBox jComboBoxid_estado_civilParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilTemp=null;

			for(EstadoCivil estadocivilAux:estadocivilsForeignKey) {
				if(estadocivilAux.getId()!=null && estadocivilAux.getId().equals(idEstadoCivilSeleccionado)) {
					estadocivilTemp=estadocivilAux;
					break;
				}
			}

			if(estadocivilTemp!=null) {
				jComboBoxid_estado_civilParametroCarteraDefectoGenerico.setSelectedItem(estadocivilTemp);
			} else {
				if(jComboBoxid_estado_civilParametroCarteraDefectoGenerico!=null && jComboBoxid_estado_civilParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_estado_civilParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoLegalForeignKey(Long idEstadoLegalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadolegalTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setEstadoLegal(estadolegalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setSelectedItem(estadolegalTemp);
					}
				} else {
					//jComboBoxid_estado_legalParametroCarteraDefecto.setSelectedItem(estadolegalTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoLegal") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadolegalTemp!=null && jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto!=null) {
						jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.setSelectedItem(estadolegalTemp);
					} else {
						if(jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto!=null) {
							//jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.setSelectedItem(estadolegalTemp);
							if(jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoLegalForeignKeyDescripcion(Long idEstadoLegalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}


			sDescripcion=EstadoLegalConstantesFunciones.getEstadoLegalDescripcion(estadolegalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoLegalForeignKeyGenerico(Long idEstadoLegalSeleccionado,JComboBox jComboBoxid_estado_legalParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalTemp=null;

			for(EstadoLegal estadolegalAux:estadolegalsForeignKey) {
				if(estadolegalAux.getId()!=null && estadolegalAux.getId().equals(idEstadoLegalSeleccionado)) {
					estadolegalTemp=estadolegalAux;
					break;
				}
			}

			if(estadolegalTemp!=null) {
				jComboBoxid_estado_legalParametroCarteraDefectoGenerico.setSelectedItem(estadolegalTemp);
			} else {
				if(jComboBoxid_estado_legalParametroCarteraDefectoGenerico!=null && jComboBoxid_estado_legalParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_estado_legalParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableParametroCarteraDefecto.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableTemp!=null && jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto!=null) {
						jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.setSelectedItem(cuentacontableTemp);
					} else {
						if(jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto!=null) {
							//jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.setSelectedItem(cuentacontableTemp);
							if(jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico!=null && jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorParametroCarteraDefecto.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto!=null) {
						jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto!=null) {
							//jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorParametroCarteraDefectoGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorParametroCarteraDefectoGenerico!=null && jComboBoxid_vendedorParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_vendedorParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualRutaForeignKey(Long idRutaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ruta  rutaTemp=null;

			for(Ruta rutaAux:rutasForeignKey) {
				if(rutaAux.getId()!=null && rutaAux.getId().equals(idRutaSeleccionado)) {
					rutaTemp=rutaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(rutaTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setRuta(rutaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setSelectedItem(rutaTemp);
					}
				} else {
					//jComboBoxid_rutaParametroCarteraDefecto.setSelectedItem(rutaTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdRuta") || sFormularioTipoBusqueda.equals("Todos")){
					if(rutaTemp!=null && jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto!=null) {
						jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.setSelectedItem(rutaTemp);
					} else {
						if(jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto!=null) {
							//jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.setSelectedItem(rutaTemp);
							if(jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualRutaForeignKeyDescripcion(Long idRutaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ruta  rutaTemp=null;

			for(Ruta rutaAux:rutasForeignKey) {
				if(rutaAux.getId()!=null && rutaAux.getId().equals(idRutaSeleccionado)) {
					rutaTemp=rutaAux;
					break;
				}
			}


			sDescripcion=RutaConstantesFunciones.getRutaDescripcion(rutaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualRutaForeignKeyGenerico(Long idRutaSeleccionado,JComboBox jComboBoxid_rutaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Ruta  rutaTemp=null;

			for(Ruta rutaAux:rutasForeignKey) {
				if(rutaAux.getId()!=null && rutaAux.getId().equals(idRutaSeleccionado)) {
					rutaTemp=rutaAux;
					break;
				}
			}

			if(rutaTemp!=null) {
				jComboBoxid_rutaParametroCarteraDefectoGenerico.setSelectedItem(rutaTemp);
			} else {
				if(jComboBoxid_rutaParametroCarteraDefectoGenerico!=null && jComboBoxid_rutaParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_rutaParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualDiaForeignKey(Long idDiaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Dia  diaTemp=null;

			for(Dia diaAux:diasForeignKey) {
				if(diaAux.getId()!=null && diaAux.getId().equals(idDiaSeleccionado)) {
					diaTemp=diaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(diaTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setDia(diaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setSelectedItem(diaTemp);
					}
				} else {
					//jComboBoxid_diaParametroCarteraDefecto.setSelectedItem(diaTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdDia") || sFormularioTipoBusqueda.equals("Todos")){
					if(diaTemp!=null && jComboBoxid_diaFK_IdDiaParametroCarteraDefecto!=null) {
						jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.setSelectedItem(diaTemp);
					} else {
						if(jComboBoxid_diaFK_IdDiaParametroCarteraDefecto!=null) {
							//jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.setSelectedItem(diaTemp);
							if(jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualDiaForeignKeyDescripcion(Long idDiaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Dia  diaTemp=null;

			for(Dia diaAux:diasForeignKey) {
				if(diaAux.getId()!=null && diaAux.getId().equals(idDiaSeleccionado)) {
					diaTemp=diaAux;
					break;
				}
			}


			sDescripcion=DiaConstantesFunciones.getDiaDescripcion(diaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualDiaForeignKeyGenerico(Long idDiaSeleccionado,JComboBox jComboBoxid_diaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Dia  diaTemp=null;

			for(Dia diaAux:diasForeignKey) {
				if(diaAux.getId()!=null && diaAux.getId().equals(idDiaSeleccionado)) {
					diaTemp=diaAux;
					break;
				}
			}

			if(diaTemp!=null) {
				jComboBoxid_diaParametroCarteraDefectoGenerico.setSelectedItem(diaTemp);
			} else {
				if(jComboBoxid_diaParametroCarteraDefectoGenerico!=null && jComboBoxid_diaParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_diaParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPrecioForeignKey(Long idTipoPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprecioTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setTipoPrecio(tipoprecioTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setSelectedItem(tipoprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_precioParametroCarteraDefecto.setSelectedItem(tipoprecioTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprecioTemp!=null && jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto!=null) {
						jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.setSelectedItem(tipoprecioTemp);
					} else {
						if(jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto!=null) {
							//jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.setSelectedItem(tipoprecioTemp);
							if(jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPrecioForeignKeyDescripcion(Long idTipoPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}


			sDescripcion=TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPrecioForeignKeyGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxid_tipo_precioParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(tipoprecioTemp!=null) {
				jComboBoxid_tipo_precioParametroCarteraDefectoGenerico.setSelectedItem(tipoprecioTemp);
			} else {
				if(jComboBoxid_tipo_precioParametroCarteraDefectoGenerico!=null && jComboBoxid_tipo_precioParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_precioParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoListaPrecioForeignKey(Long idTipoListaPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoListaPrecio  tipolistaprecioTemp=null;

			for(TipoListaPrecio tipolistaprecioAux:tipolistapreciosForeignKey) {
				if(tipolistaprecioAux.getId()!=null && tipolistaprecioAux.getId().equals(idTipoListaPrecioSeleccionado)) {
					tipolistaprecioTemp=tipolistaprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipolistaprecioTemp!=null) {

					if(this.parametrocarteradefecto!=null) {
						this.parametrocarteradefecto.setTipoListaPrecio(tipolistaprecioTemp);
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setSelectedItem(tipolistaprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setSelectedItem(tipolistaprecioTemp);
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoListaPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipolistaprecioTemp!=null && jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto!=null) {
						jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.setSelectedItem(tipolistaprecioTemp);
					} else {
						if(jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto!=null) {
							//jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.setSelectedItem(tipolistaprecioTemp);
							if(jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.getItemCount()>0) {
								jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoListaPrecioForeignKeyDescripcion(Long idTipoListaPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoListaPrecio  tipolistaprecioTemp=null;

			for(TipoListaPrecio tipolistaprecioAux:tipolistapreciosForeignKey) {
				if(tipolistaprecioAux.getId()!=null && tipolistaprecioAux.getId().equals(idTipoListaPrecioSeleccionado)) {
					tipolistaprecioTemp=tipolistaprecioAux;
					break;
				}
			}


			sDescripcion=TipoListaPrecioConstantesFunciones.getTipoListaPrecioDescripcion(tipolistaprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoListaPrecioForeignKeyGenerico(Long idTipoListaPrecioSeleccionado,JComboBox jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoListaPrecio  tipolistaprecioTemp=null;

			for(TipoListaPrecio tipolistaprecioAux:tipolistapreciosForeignKey) {
				if(tipolistaprecioAux.getId()!=null && tipolistaprecioAux.getId().equals(idTipoListaPrecioSeleccionado)) {
					tipolistaprecioTemp=tipolistaprecioAux;
					break;
				}
			}

			if(tipolistaprecioTemp!=null) {
				jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico.setSelectedItem(tipolistaprecioTemp);
			} else {
				if(jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico!=null && jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_empresaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroCarteraDefectoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrocarteradefecto.setid_empresa(empresaAux.getId());
				parametrocarteradefecto.setempresa_descripcion(ParametroCarteraDefectoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametrocarteradefecto.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_sucursalParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalParametroCarteraDefectoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrocarteradefecto.setid_sucursal(sucursalAux.getId());
				parametrocarteradefecto.setsucursal_descripcion(ParametroCarteraDefectoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				parametrocarteradefecto.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_paisParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisParametroCarteraDefectoGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				parametrocarteradefecto.setid_pais(paisAux.getId());
				parametrocarteradefecto.setpais_descripcion(ParametroCarteraDefectoConstantesFunciones.getPaisDescripcion(paisAux));
				parametrocarteradefecto.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarRegionForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_regionParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Region  regionAux=new Region();

			if(jComboBoxid_regionParametroCarteraDefectoGenerico==null) {
				regionAux=(Region)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.getSelectedItem();
			} else {
				regionAux=(Region)jComboBoxid_regionParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(regionAux!=null && regionAux.getId()!=null) {
				parametrocarteradefecto.setid_region(regionAux.getId());
				parametrocarteradefecto.setregion_descripcion(ParametroCarteraDefectoConstantesFunciones.getRegionDescripcion(regionAux));
				parametrocarteradefecto.setRegion(regionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProvinciaForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_provinciaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Provincia  provinciaAux=new Provincia();

			if(jComboBoxid_provinciaParametroCarteraDefectoGenerico==null) {
				provinciaAux=(Provincia)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.getSelectedItem();
			} else {
				provinciaAux=(Provincia)jComboBoxid_provinciaParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(provinciaAux!=null && provinciaAux.getId()!=null) {
				parametrocarteradefecto.setid_provincia(provinciaAux.getId());
				parametrocarteradefecto.setprovincia_descripcion(ParametroCarteraDefectoConstantesFunciones.getProvinciaDescripcion(provinciaAux));
				parametrocarteradefecto.setProvincia(provinciaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_ciudadParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudadParametroCarteraDefectoGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudadParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(ciudadAux!=null && ciudadAux.getId()!=null) {
				parametrocarteradefecto.setid_ciudad(ciudadAux.getId());
				parametrocarteradefecto.setciudad_descripcion(ParametroCarteraDefectoConstantesFunciones.getCiudadDescripcion(ciudadAux));
				parametrocarteradefecto.setCiudad(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarZonaForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_zonaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Zona  zonaAux=new Zona();

			if(jComboBoxid_zonaParametroCarteraDefectoGenerico==null) {
				zonaAux=(Zona)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.getSelectedItem();
			} else {
				zonaAux=(Zona)jComboBoxid_zonaParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(zonaAux!=null && zonaAux.getId()!=null) {
				parametrocarteradefecto.setid_zona(zonaAux.getId());
				parametrocarteradefecto.setzona_descripcion(ParametroCarteraDefectoConstantesFunciones.getZonaDescripcion(zonaAux));
				parametrocarteradefecto.setZona(zonaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoIdentificacionForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoIdentificacion  tipoidentificacionAux=new TipoIdentificacion();

			if(jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico==null) {
				tipoidentificacionAux=(TipoIdentificacion)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.getSelectedItem();
			} else {
				tipoidentificacionAux=(TipoIdentificacion)jComboBoxid_tipo_identificacionParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(tipoidentificacionAux!=null && tipoidentificacionAux.getId()!=null) {
				parametrocarteradefecto.setid_tipo_identificacion(tipoidentificacionAux.getId());
				parametrocarteradefecto.settipoidentificacion_descripcion(ParametroCarteraDefectoConstantesFunciones.getTipoIdentificacionDescripcion(tipoidentificacionAux));
				parametrocarteradefecto.setTipoIdentificacion(tipoidentificacionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoNivelEduForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoNivelEdu  tiponiveleduAux=new TipoNivelEdu();

			if(jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico==null) {
				tiponiveleduAux=(TipoNivelEdu)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.getSelectedItem();
			} else {
				tiponiveleduAux=(TipoNivelEdu)jComboBoxid_tipo_nivel_eduParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(tiponiveleduAux!=null && tiponiveleduAux.getId()!=null) {
				parametrocarteradefecto.setid_tipo_nivel_edu(tiponiveleduAux.getId());
				parametrocarteradefecto.settiponiveledu_descripcion(ParametroCarteraDefectoConstantesFunciones.getTipoNivelEduDescripcion(tiponiveleduAux));
				parametrocarteradefecto.setTipoNivelEdu(tiponiveleduAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisNacionalidadForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_pais_nacionalidadParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				parametrocarteradefecto.setid_pais_nacionalidad(paisAux.getId());
				parametrocarteradefecto.setpaisnacionalidad_descripcion(ParametroCarteraDefectoConstantesFunciones.getPaisNacionalidadDescripcion(paisAux));
				parametrocarteradefecto.setPaisNacionalidad(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGeneroForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_tipo_generoParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoGenero  tipogeneroAux=new TipoGenero();

			if(jComboBoxid_tipo_generoParametroCarteraDefectoGenerico==null) {
				tipogeneroAux=(TipoGenero)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.getSelectedItem();
			} else {
				tipogeneroAux=(TipoGenero)jComboBoxid_tipo_generoParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(tipogeneroAux!=null && tipogeneroAux.getId()!=null) {
				parametrocarteradefecto.setid_tipo_genero(tipogeneroAux.getId());
				parametrocarteradefecto.settipogenero_descripcion(ParametroCarteraDefectoConstantesFunciones.getTipoGeneroDescripcion(tipogeneroAux));
				parametrocarteradefecto.setTipoGenero(tipogeneroAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoCivilForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_estado_civilParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			EstadoCivil  estadocivilAux=new EstadoCivil();

			if(jComboBoxid_estado_civilParametroCarteraDefectoGenerico==null) {
				estadocivilAux=(EstadoCivil)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.getSelectedItem();
			} else {
				estadocivilAux=(EstadoCivil)jComboBoxid_estado_civilParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(estadocivilAux!=null && estadocivilAux.getId()!=null) {
				parametrocarteradefecto.setid_estado_civil(estadocivilAux.getId());
				parametrocarteradefecto.setestadocivil_descripcion(ParametroCarteraDefectoConstantesFunciones.getEstadoCivilDescripcion(estadocivilAux));
				parametrocarteradefecto.setEstadoCivil(estadocivilAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoLegalForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_estado_legalParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			EstadoLegal  estadolegalAux=new EstadoLegal();

			if(jComboBoxid_estado_legalParametroCarteraDefectoGenerico==null) {
				estadolegalAux=(EstadoLegal)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.getSelectedItem();
			} else {
				estadolegalAux=(EstadoLegal)jComboBoxid_estado_legalParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(estadolegalAux!=null && estadolegalAux.getId()!=null) {
				parametrocarteradefecto.setid_estado_legal(estadolegalAux.getId());
				parametrocarteradefecto.setestadolegal_descripcion(ParametroCarteraDefectoConstantesFunciones.getEstadoLegalDescripcion(estadolegalAux));
				parametrocarteradefecto.setEstadoLegal(estadolegalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametrocarteradefecto.setid_cuenta_contable(cuentacontableAux.getId());
				parametrocarteradefecto.setcuentacontable_descripcion(ParametroCarteraDefectoConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				parametrocarteradefecto.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_vendedorParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorParametroCarteraDefectoGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(vendedorAux!=null && vendedorAux.getId()!=null) {
				parametrocarteradefecto.setid_vendedor(vendedorAux.getId());
				parametrocarteradefecto.setvendedor_descripcion(ParametroCarteraDefectoConstantesFunciones.getVendedorDescripcion(vendedorAux));
				parametrocarteradefecto.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarRutaForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_rutaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Ruta  rutaAux=new Ruta();

			if(jComboBoxid_rutaParametroCarteraDefectoGenerico==null) {
				rutaAux=(Ruta)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.getSelectedItem();
			} else {
				rutaAux=(Ruta)jComboBoxid_rutaParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(rutaAux!=null && rutaAux.getId()!=null) {
				parametrocarteradefecto.setid_ruta(rutaAux.getId());
				parametrocarteradefecto.setruta_descripcion(ParametroCarteraDefectoConstantesFunciones.getRutaDescripcion(rutaAux));
				parametrocarteradefecto.setRuta(rutaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarDiaForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_diaParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			Dia  diaAux=new Dia();

			if(jComboBoxid_diaParametroCarteraDefectoGenerico==null) {
				diaAux=(Dia)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.getSelectedItem();
			} else {
				diaAux=(Dia)jComboBoxid_diaParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(diaAux!=null && diaAux.getId()!=null) {
				parametrocarteradefecto.setid_dia(diaAux.getId());
				parametrocarteradefecto.setdia_descripcion(ParametroCarteraDefectoConstantesFunciones.getDiaDescripcion(diaAux));
				parametrocarteradefecto.setDia(diaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPrecioForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_tipo_precioParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioAux=new TipoPrecio();

			if(jComboBoxid_tipo_precioParametroCarteraDefectoGenerico==null) {
				tipoprecioAux=(TipoPrecio)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.getSelectedItem();
			} else {
				tipoprecioAux=(TipoPrecio)jComboBoxid_tipo_precioParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(tipoprecioAux!=null && tipoprecioAux.getId()!=null) {
				parametrocarteradefecto.setid_tipo_precio(tipoprecioAux.getId());
				parametrocarteradefecto.settipoprecio_descripcion(ParametroCarteraDefectoConstantesFunciones.getTipoPrecioDescripcion(tipoprecioAux));
				parametrocarteradefecto.setTipoPrecio(tipoprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoListaPrecioForeignKey(ParametroCarteraDefecto parametrocarteradefecto,JComboBox jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico)throws Exception
	{
		try
		{
			TipoListaPrecio  tipolistaprecioAux=new TipoListaPrecio();

			if(jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico==null) {
				tipolistaprecioAux=(TipoListaPrecio)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.getSelectedItem();
			} else {
				tipolistaprecioAux=(TipoListaPrecio)jComboBoxid_tipo_lista_precioParametroCarteraDefectoGenerico.getSelectedItem();
			}

			if(tipolistaprecioAux!=null && tipolistaprecioAux.getId()!=null) {
				parametrocarteradefecto.setid_tipo_lista_precio(tipolistaprecioAux.getId());
				parametrocarteradefecto.settipolistaprecio_descripcion(ParametroCarteraDefectoConstantesFunciones.getTipoListaPrecioDescripcion(tipolistaprecioAux));
				parametrocarteradefecto.setTipoListaPrecio(tipolistaprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.addItem(pais);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameRegionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingRegion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.removeAllItems();

							for(Region region:this.regionsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.addItem(region);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdRegion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.removeAllItems();

							for(Region region:this.regionsForeignKey) {
								this.jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.addItem(region);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProvinciasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProvincia=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.removeAllItems();

							for(Provincia provincia:this.provinciasForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.addItem(provincia);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProvincia") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.removeAllItems();

							for(Provincia provincia:this.provinciasForeignKey) {
								this.jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.addItem(provincia);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.addItem(ciudad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.addItem(ciudad);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameZonasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingZona=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.addItem(zona);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.addItem(zona);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoIdentificacionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoIdentificacion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.removeAllItems();

							for(TipoIdentificacion tipoidentificacion:this.tipoidentificacionsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.addItem(tipoidentificacion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoIdentificacion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.removeAllItems();

							for(TipoIdentificacion tipoidentificacion:this.tipoidentificacionsForeignKey) {
								this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.addItem(tipoidentificacion);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoNivelEdusForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoNivelEdu=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.removeAllItems();

							for(TipoNivelEdu tiponiveledu:this.tiponiveledusForeignKey) {
								if(tiponiveledu.getes_defecto()) {
									this.parametrocarteradefectoBean.setid_tipo_nivel_edu(tiponiveledu.getId());
								}

								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.addItem(tiponiveledu);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoNivelEdu") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.removeAllItems();

							for(TipoNivelEdu tiponiveledu:this.tiponiveledusForeignKey) {
								this.jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.addItem(tiponiveledu);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaisNacionalidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.removeAllItems();

							for(Pais paisnacionalidad:this.paisnacionalidadsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.addItem(paisnacionalidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPaisNacionalidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.removeAllItems();

							for(Pais paisnacionalidad:this.paisnacionalidadsForeignKey) {
								this.jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.addItem(paisnacionalidad);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGenerosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGenero=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.removeAllItems();

							for(TipoGenero tipogenero:this.tipogenerosForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.addItem(tipogenero);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoGenero") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.removeAllItems();

							for(TipoGenero tipogenero:this.tipogenerosForeignKey) {
								this.jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.addItem(tipogenero);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoCivilsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoCivil=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.removeAllItems();

							for(EstadoCivil estadocivil:this.estadocivilsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.addItem(estadocivil);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoCivil") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.removeAllItems();

							for(EstadoCivil estadocivil:this.estadocivilsForeignKey) {
								this.jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.addItem(estadocivil);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoLegalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoLegal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.removeAllItems();

							for(EstadoLegal estadolegal:this.estadolegalsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.addItem(estadolegal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoLegal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.removeAllItems();

							for(EstadoLegal estadolegal:this.estadolegalsForeignKey) {
								this.jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.addItem(estadolegal);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.addItem(cuentacontable);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.addItem(vendedor);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameRutasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingRuta=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.removeAllItems();

							for(Ruta ruta:this.rutasForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.addItem(ruta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdRuta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.removeAllItems();

							for(Ruta ruta:this.rutasForeignKey) {
								this.jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.addItem(ruta);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameDiasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingDia=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.removeAllItems();

							for(Dia dia:this.diasForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.addItem(dia);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdDia") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.removeAllItems();

							for(Dia dia:this.diasForeignKey) {
								this.jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.addItem(dia);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.addItem(tipoprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.addItem(tipoprecio);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoListaPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoListaPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.removeAllItems();

							for(TipoListaPrecio tipolistaprecio:this.tipolistapreciosForeignKey) {
								this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.addItem(tipolistaprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { 
					}

					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoListaPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.removeAllItems();

							for(TipoListaPrecio tipolistaprecio:this.tipolistapreciosForeignKey) {
								this.jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.addItem(tipolistaprecio);
							}
						}

						if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.setSelectedItem(pais);
						} else {
							this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameRegionForeignKey(Region region,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setSelectedItem(region);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.setSelectedItem(region);
						} else {
							this.jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProvinciaForeignKey(Provincia provincia,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setSelectedItem(provincia);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.setSelectedItem(provincia);
						} else {
							this.jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadForeignKey(Ciudad ciudad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setSelectedItem(ciudad);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.setSelectedItem(ciudad);
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameZonaForeignKey(Zona zona,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setSelectedItem(zona);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.setSelectedItem(zona);
						} else {
							this.jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoIdentificacionForeignKey(TipoIdentificacion tipoidentificacion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setSelectedItem(tipoidentificacion);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.setSelectedItem(tipoidentificacion);
						} else {
							this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoNivelEduForeignKey(TipoNivelEdu tiponiveledu,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setSelectedItem(tiponiveledu);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.setSelectedItem(tiponiveledu);
						} else {
							this.jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisNacionalidadForeignKey(Pais paisnacionalidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setSelectedItem(paisnacionalidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.setSelectedItem(paisnacionalidad);
						} else {
							this.jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGeneroForeignKey(TipoGenero tipogenero,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setSelectedItem(tipogenero);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.setSelectedItem(tipogenero);
						} else {
							this.jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoCivilForeignKey(EstadoCivil estadocivil,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setSelectedItem(estadocivil);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.setSelectedItem(estadocivil);
						} else {
							this.jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoLegalForeignKey(EstadoLegal estadolegal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setSelectedItem(estadolegal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.setSelectedItem(estadolegal);
						} else {
							this.jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.setSelectedItem(cuentacontable);
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameRutaForeignKey(Ruta ruta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setSelectedItem(ruta);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.setSelectedItem(ruta);
						} else {
							this.jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameDiaForeignKey(Dia dia,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setSelectedItem(dia);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.setSelectedItem(dia);
						} else {
							this.jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPrecioForeignKey(TipoPrecio tipoprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setSelectedItem(tipoprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.setSelectedItem(tipoprecio);
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoListaPrecioForeignKey(TipoListaPrecio tipolistaprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setSelectedItem(tipolistaprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.setSelectedItem(tipolistaprecio);
						} else {
							this.jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroCarteraDefecto() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroCarteraDefectoConstantesFunciones.refrescarForeignKeysDescripcionesParametroCarteraDefecto(this.parametrocarteradefectoLogic.getParametroCarteraDefectos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroCarteraDefectoConstantesFunciones.refrescarForeignKeysDescripcionesParametroCarteraDefecto(this.parametrocarteradefectos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Region.class));
		classes.add(new Classe(Provincia.class));
		classes.add(new Classe(Ciudad.class));
		classes.add(new Classe(Zona.class));
		classes.add(new Classe(TipoIdentificacion.class));
		classes.add(new Classe(TipoNivelEdu.class));
		classes.add(new Classe(TipoGenero.class));
		classes.add(new Classe(EstadoCivil.class));
		classes.add(new Classe(EstadoLegal.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(Ruta.class));
		classes.add(new Classe(Dia.class));
		classes.add(new Classe(TipoPrecio.class));
		classes.add(new Classe(TipoListaPrecio.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrocarteradefectoLogic.setParametroCarteraDefectos(this.parametrocarteradefectos);
			parametrocarteradefectoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroCarteraDefectoParameterReturnGeneral getParametroCarteraDefectoParameterGeneral() {
		return this.parametrocarteradefectoParameterGeneral;
	}
	
	public void setParametroCarteraDefectoParameterGeneral(ParametroCarteraDefectoParameterReturnGeneral parametrocarteradefectoParameterGeneral) {
		this.parametrocarteradefectoParameterGeneral = parametrocarteradefectoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroCarteraDefecto() {
		return isPermisoTodoParametroCarteraDefecto;
	}

	public void setIsPermisoTodoParametroCarteraDefecto(Boolean isPermisoTodoParametroCarteraDefecto) {
		this.isPermisoTodoParametroCarteraDefecto = isPermisoTodoParametroCarteraDefecto;
	}

	public Boolean getIsPermisoNuevoParametroCarteraDefecto() {
		return isPermisoNuevoParametroCarteraDefecto;
	}

	public void setIsPermisoNuevoParametroCarteraDefecto(Boolean isPermisoNuevoParametroCarteraDefecto) {
		this.isPermisoNuevoParametroCarteraDefecto = isPermisoNuevoParametroCarteraDefecto;
	}

	public Boolean getIsPermisoActualizarParametroCarteraDefecto() {
		return isPermisoActualizarParametroCarteraDefecto;
	}

	public void setIsPermisoActualizarParametroCarteraDefecto(Boolean isPermisoActualizarParametroCarteraDefecto) {
		this.isPermisoActualizarParametroCarteraDefecto = isPermisoActualizarParametroCarteraDefecto;
	}

	public Boolean getIsPermisoEliminarParametroCarteraDefecto() {
		return isPermisoEliminarParametroCarteraDefecto;
	}

	public void setIsPermisoEliminarParametroCarteraDefecto(Boolean isPermisoEliminarParametroCarteraDefecto) {
		this.isPermisoEliminarParametroCarteraDefecto = isPermisoEliminarParametroCarteraDefecto;
	}

	public Boolean getIsPermisoGuardarCambiosParametroCarteraDefecto() {
		return isPermisoGuardarCambiosParametroCarteraDefecto;
	}

	public void setIsPermisoGuardarCambiosParametroCarteraDefecto(Boolean isPermisoGuardarCambiosParametroCarteraDefecto) {
		this.isPermisoGuardarCambiosParametroCarteraDefecto = isPermisoGuardarCambiosParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoConsultaParametroCarteraDefecto() {
		return isPermisoConsultaParametroCarteraDefecto;
	}

	public void setIsPermisoConsultaParametroCarteraDefecto(Boolean isPermisoConsultaParametroCarteraDefecto) {
		this.isPermisoConsultaParametroCarteraDefecto = isPermisoConsultaParametroCarteraDefecto;
	}

	public Boolean getIsPermisoBusquedaParametroCarteraDefecto() {
		return isPermisoBusquedaParametroCarteraDefecto;
	}

	public void setIsPermisoBusquedaParametroCarteraDefecto(Boolean isPermisoBusquedaParametroCarteraDefecto) {
		this.isPermisoBusquedaParametroCarteraDefecto = isPermisoBusquedaParametroCarteraDefecto;
	}

	public Boolean getIsPermisoReporteParametroCarteraDefecto() {
		return isPermisoReporteParametroCarteraDefecto;
	}

	public void setIsPermisoReporteParametroCarteraDefecto(Boolean isPermisoReporteParametroCarteraDefecto) {
		this.isPermisoReporteParametroCarteraDefecto = isPermisoReporteParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroCarteraDefecto() {
		return isPermisoPaginacionMedioParametroCarteraDefecto;
	}

	public void setIsPermisoPaginacionMedioParametroCarteraDefecto(Boolean isPermisoPaginacionMedioParametroCarteraDefecto) {
		this.isPermisoPaginacionMedioParametroCarteraDefecto = isPermisoPaginacionMedioParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroCarteraDefecto() {
		return isPermisoPaginacionTodoParametroCarteraDefecto;
	}

	public void setIsPermisoPaginacionTodoParametroCarteraDefecto(Boolean isPermisoPaginacionTodoParametroCarteraDefecto) {
		this.isPermisoPaginacionTodoParametroCarteraDefecto = isPermisoPaginacionTodoParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroCarteraDefecto() {
		return isPermisoPaginacionAltoParametroCarteraDefecto;
	}

	public void setIsPermisoPaginacionAltoParametroCarteraDefecto(Boolean isPermisoPaginacionAltoParametroCarteraDefecto) {
		this.isPermisoPaginacionAltoParametroCarteraDefecto = isPermisoPaginacionAltoParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoCopiarParametroCarteraDefecto() {
		return isPermisoCopiarParametroCarteraDefecto;
	}

	public void setIsPermisoCopiarParametroCarteraDefecto(Boolean isPermisoCopiarParametroCarteraDefecto) {
		this.isPermisoCopiarParametroCarteraDefecto = isPermisoCopiarParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoVerFormParametroCarteraDefecto() {
		return isPermisoVerFormParametroCarteraDefecto;
	}

	public void setIsPermisoVerFormParametroCarteraDefecto(Boolean isPermisoVerFormParametroCarteraDefecto) {
		this.isPermisoVerFormParametroCarteraDefecto = isPermisoVerFormParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoDuplicarParametroCarteraDefecto() {
		return isPermisoDuplicarParametroCarteraDefecto;
	}

	public void setIsPermisoDuplicarParametroCarteraDefecto(Boolean isPermisoDuplicarParametroCarteraDefecto) {
		this.isPermisoDuplicarParametroCarteraDefecto = isPermisoDuplicarParametroCarteraDefecto;
	}
	
	public Boolean getIsPermisoOrdenParametroCarteraDefecto() {
		return isPermisoOrdenParametroCarteraDefecto;
	}

	public void setIsPermisoOrdenParametroCarteraDefecto(Boolean isPermisoOrdenParametroCarteraDefecto) {
		this.isPermisoOrdenParametroCarteraDefecto = isPermisoOrdenParametroCarteraDefecto;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroCarteraDefecto() {
		return isVisibilidadCeldaNuevoParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaNuevoParametroCarteraDefecto(Boolean isVisibilidadCeldaNuevoParametroCarteraDefecto) {
		this.isVisibilidadCeldaNuevoParametroCarteraDefecto = isVisibilidadCeldaNuevoParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroCarteraDefecto() {
		return isVisibilidadCeldaDuplicarParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaDuplicarParametroCarteraDefecto(Boolean isVisibilidadCeldaDuplicarParametroCarteraDefecto) {
		this.isVisibilidadCeldaDuplicarParametroCarteraDefecto = isVisibilidadCeldaDuplicarParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroCarteraDefecto() {
		return isVisibilidadCeldaCopiarParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaCopiarParametroCarteraDefecto(Boolean isVisibilidadCeldaCopiarParametroCarteraDefecto) {
		this.isVisibilidadCeldaCopiarParametroCarteraDefecto = isVisibilidadCeldaCopiarParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroCarteraDefecto() {
		return isVisibilidadCeldaVerFormParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaVerFormParametroCarteraDefecto(Boolean isVisibilidadCeldaVerFormParametroCarteraDefecto) {
		this.isVisibilidadCeldaVerFormParametroCarteraDefecto = isVisibilidadCeldaVerFormParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroCarteraDefecto() {
		return isVisibilidadCeldaOrdenParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaOrdenParametroCarteraDefecto(Boolean isVisibilidadCeldaOrdenParametroCarteraDefecto) {
		this.isVisibilidadCeldaOrdenParametroCarteraDefecto = isVisibilidadCeldaOrdenParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto() {
		return isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto(Boolean isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto) {
		this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto = isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroCarteraDefecto() {
		return isVisibilidadCeldaModificarParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaModificarParametroCarteraDefecto(Boolean isVisibilidadCeldaModificarParametroCarteraDefecto) {
		this.isVisibilidadCeldaModificarParametroCarteraDefecto = isVisibilidadCeldaModificarParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroCarteraDefecto() {
		return isVisibilidadCeldaActualizarParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaActualizarParametroCarteraDefecto(Boolean isVisibilidadCeldaActualizarParametroCarteraDefecto) {
		this.isVisibilidadCeldaActualizarParametroCarteraDefecto = isVisibilidadCeldaActualizarParametroCarteraDefecto;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroCarteraDefecto() {
		return isVisibilidadCeldaEliminarParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaEliminarParametroCarteraDefecto(Boolean isVisibilidadCeldaEliminarParametroCarteraDefecto) {
		this.isVisibilidadCeldaEliminarParametroCarteraDefecto = isVisibilidadCeldaEliminarParametroCarteraDefecto;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroCarteraDefecto() {
		return isVisibilidadCeldaCancelarParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaCancelarParametroCarteraDefecto(Boolean isVisibilidadCeldaCancelarParametroCarteraDefecto) {
		this.isVisibilidadCeldaCancelarParametroCarteraDefecto = isVisibilidadCeldaCancelarParametroCarteraDefecto;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroCarteraDefecto() {
		return isVisibilidadCeldaGuardarParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaGuardarParametroCarteraDefecto(Boolean isVisibilidadCeldaGuardarParametroCarteraDefecto) {
		this.isVisibilidadCeldaGuardarParametroCarteraDefecto = isVisibilidadCeldaGuardarParametroCarteraDefecto;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroCarteraDefecto() {
		return isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroCarteraDefecto(Boolean isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto) {
		this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto = isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto;
	}
		
	public ParametroCarteraDefectoSessionBean getparametrocarteradefectoSessionBean() {
		return this.parametrocarteradefectoSessionBean;
	}
	
	public void setparametrocarteradefectoSessionBean(ParametroCarteraDefectoSessionBean parametrocarteradefectoSessionBean) {
		this.parametrocarteradefectoSessionBean=parametrocarteradefectoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCiudad() {
		return this.isVisibilidadFK_IdCiudad;
	}

	public void setisVisibilidadFK_IdCiudad(Boolean isVisibilidadFK_IdCiudad) {
		this.isVisibilidadFK_IdCiudad=isVisibilidadFK_IdCiudad;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdDia() {
		return this.isVisibilidadFK_IdDia;
	}

	public void setisVisibilidadFK_IdDia(Boolean isVisibilidadFK_IdDia) {
		this.isVisibilidadFK_IdDia=isVisibilidadFK_IdDia;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoCivil() {
		return this.isVisibilidadFK_IdEstadoCivil;
	}

	public void setisVisibilidadFK_IdEstadoCivil(Boolean isVisibilidadFK_IdEstadoCivil) {
		this.isVisibilidadFK_IdEstadoCivil=isVisibilidadFK_IdEstadoCivil;
	}

	public Boolean getisVisibilidadFK_IdEstadoLegal() {
		return this.isVisibilidadFK_IdEstadoLegal;
	}

	public void setisVisibilidadFK_IdEstadoLegal(Boolean isVisibilidadFK_IdEstadoLegal) {
		this.isVisibilidadFK_IdEstadoLegal=isVisibilidadFK_IdEstadoLegal;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdPaisNacionalidad() {
		return this.isVisibilidadFK_IdPaisNacionalidad;
	}

	public void setisVisibilidadFK_IdPaisNacionalidad(Boolean isVisibilidadFK_IdPaisNacionalidad) {
		this.isVisibilidadFK_IdPaisNacionalidad=isVisibilidadFK_IdPaisNacionalidad;
	}

	public Boolean getisVisibilidadFK_IdProvincia() {
		return this.isVisibilidadFK_IdProvincia;
	}

	public void setisVisibilidadFK_IdProvincia(Boolean isVisibilidadFK_IdProvincia) {
		this.isVisibilidadFK_IdProvincia=isVisibilidadFK_IdProvincia;
	}

	public Boolean getisVisibilidadFK_IdRegion() {
		return this.isVisibilidadFK_IdRegion;
	}

	public void setisVisibilidadFK_IdRegion(Boolean isVisibilidadFK_IdRegion) {
		this.isVisibilidadFK_IdRegion=isVisibilidadFK_IdRegion;
	}

	public Boolean getisVisibilidadFK_IdRuta() {
		return this.isVisibilidadFK_IdRuta;
	}

	public void setisVisibilidadFK_IdRuta(Boolean isVisibilidadFK_IdRuta) {
		this.isVisibilidadFK_IdRuta=isVisibilidadFK_IdRuta;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoGenero() {
		return this.isVisibilidadFK_IdTipoGenero;
	}

	public void setisVisibilidadFK_IdTipoGenero(Boolean isVisibilidadFK_IdTipoGenero) {
		this.isVisibilidadFK_IdTipoGenero=isVisibilidadFK_IdTipoGenero;
	}

	public Boolean getisVisibilidadFK_IdTipoIdentificacion() {
		return this.isVisibilidadFK_IdTipoIdentificacion;
	}

	public void setisVisibilidadFK_IdTipoIdentificacion(Boolean isVisibilidadFK_IdTipoIdentificacion) {
		this.isVisibilidadFK_IdTipoIdentificacion=isVisibilidadFK_IdTipoIdentificacion;
	}

	public Boolean getisVisibilidadFK_IdTipoListaPrecio() {
		return this.isVisibilidadFK_IdTipoListaPrecio;
	}

	public void setisVisibilidadFK_IdTipoListaPrecio(Boolean isVisibilidadFK_IdTipoListaPrecio) {
		this.isVisibilidadFK_IdTipoListaPrecio=isVisibilidadFK_IdTipoListaPrecio;
	}

	public Boolean getisVisibilidadFK_IdTipoNivelEdu() {
		return this.isVisibilidadFK_IdTipoNivelEdu;
	}

	public void setisVisibilidadFK_IdTipoNivelEdu(Boolean isVisibilidadFK_IdTipoNivelEdu) {
		this.isVisibilidadFK_IdTipoNivelEdu=isVisibilidadFK_IdTipoNivelEdu;
	}

	public Boolean getisVisibilidadFK_IdTipoPrecio() {
		return this.isVisibilidadFK_IdTipoPrecio;
	}

	public void setisVisibilidadFK_IdTipoPrecio(Boolean isVisibilidadFK_IdTipoPrecio) {
		this.isVisibilidadFK_IdTipoPrecio=isVisibilidadFK_IdTipoPrecio;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	public Boolean getisVisibilidadFK_IdZona() {
		return this.isVisibilidadFK_IdZona;
	}

	public void setisVisibilidadFK_IdZona(Boolean isVisibilidadFK_IdZona) {
		this.isVisibilidadFK_IdZona=isVisibilidadFK_IdZona;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarSucursalForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarPaisForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarRegionForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarProvinciaForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarCiudadForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarZonaForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarTipoIdentificacionForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarTipoNivelEduForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarPaisNacionalidadForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarTipoGeneroForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarEstadoCivilForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarEstadoLegalForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarCuentaContableForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarVendedorForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarRutaForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarDiaForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarTipoPrecioForeignKey(parametrocarteradefecto,null);
				this.setActualParaGuardarTipoListaPrecioForeignKey(parametrocarteradefecto,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroCarteraDefecto parametrocarteradefecto,ParametroCarteraDefecto parametrocarteradefectoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroCarteraDefecto(parametrocarteradefecto);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrocarteradefectoAux.setId(parametrocarteradefecto.getId());
		parametrocarteradefectoAux.setVersionRow(parametrocarteradefecto.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroCarteraDefecto();
		
			int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrocarteradefectoValidator.getInvalidValues(this.parametrocarteradefecto);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrocarteradefectoLogic.setDatosCliente(datosCliente);
			parametrocarteradefectoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrocarteradefectoAux=new  ParametroCarteraDefecto();
				
				parametrocarteradefectoAux.setIsNew(true);
				parametrocarteradefectoAux.setIsChanged(true);
				
				parametrocarteradefectoAux.setParametroCarteraDefectoOriginal(this.parametrocarteradefecto);
				
				parametrocarteradefectoAux.setId(this.parametrocarteradefecto.getId());	
				parametrocarteradefectoAux.setVersionRow(this.parametrocarteradefecto.getVersionRow());	
				parametrocarteradefectoAux.setid_empresa(this.parametrocarteradefecto.getid_empresa());	
				parametrocarteradefectoAux.setid_sucursal(this.parametrocarteradefecto.getid_sucursal());	
				parametrocarteradefectoAux.setid_pais(this.parametrocarteradefecto.getid_pais());	
				parametrocarteradefectoAux.setid_region(this.parametrocarteradefecto.getid_region());	
				parametrocarteradefectoAux.setid_provincia(this.parametrocarteradefecto.getid_provincia());	
				parametrocarteradefectoAux.setid_ciudad(this.parametrocarteradefecto.getid_ciudad());	
				parametrocarteradefectoAux.setid_zona(this.parametrocarteradefecto.getid_zona());	
				parametrocarteradefectoAux.setid_tipo_identificacion(this.parametrocarteradefecto.getid_tipo_identificacion());	
				parametrocarteradefectoAux.setid_tipo_nivel_edu(this.parametrocarteradefecto.getid_tipo_nivel_edu());	
				parametrocarteradefectoAux.setid_pais_nacionalidad(this.parametrocarteradefecto.getid_pais_nacionalidad());	
				parametrocarteradefectoAux.setid_tipo_genero(this.parametrocarteradefecto.getid_tipo_genero());	
				parametrocarteradefectoAux.setid_estado_civil(this.parametrocarteradefecto.getid_estado_civil());	
				parametrocarteradefectoAux.setid_estado_legal(this.parametrocarteradefecto.getid_estado_legal());	
				parametrocarteradefectoAux.setid_cuenta_contable(this.parametrocarteradefecto.getid_cuenta_contable());	
				parametrocarteradefectoAux.setid_vendedor(this.parametrocarteradefecto.getid_vendedor());	
				parametrocarteradefectoAux.setid_ruta(this.parametrocarteradefecto.getid_ruta());	
				parametrocarteradefectoAux.setid_dia(this.parametrocarteradefecto.getid_dia());	
				parametrocarteradefectoAux.setid_tipo_precio(this.parametrocarteradefecto.getid_tipo_precio());	
				parametrocarteradefectoAux.setid_tipo_lista_precio(this.parametrocarteradefecto.getid_tipo_lista_precio());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrocarteradefectoAux,parametrocarteradefectoLogic.getParametroCarteraDefectos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocarteradefectoAux,parametrocarteradefectos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.saveParametroCarteraDefectos();//WithConnection
						//parametrocarteradefectoLogic.getSetVersionRowParametroCarteraDefectos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrocarteradefecto,parametrocarteradefectoAux);
					
					this.refrescarForeignKeysDescripcionesParametroCarteraDefecto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocarteradefectoLogic.saveParametroCarteraDefectoRelaciones(parametrocarteradefectoAux);//WithConnection
								//parametrocarteradefectoLogic.getSetVersionRowParametroCarteraDefectos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrocarteradefecto,parametrocarteradefectoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrocarteradefectoAux,parametrocarteradefectoLogic.getParametroCarteraDefectos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrocarteradefectoAux,parametrocarteradefectos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrocarteradefecto,parametrocarteradefectoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrocarteradefectoAux=new  ParametroCarteraDefecto();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado() && this.parametrocarteradefecto.getId()>=0)) {
						
					parametrocarteradefectoAux.setIsNew(false);
				}
				
				parametrocarteradefectoAux.setIsDeleted(false);
			
				parametrocarteradefectoAux.setId(this.parametrocarteradefecto.getId());	
				parametrocarteradefectoAux.setVersionRow(this.parametrocarteradefecto.getVersionRow());	
				parametrocarteradefectoAux.setid_empresa(this.parametrocarteradefecto.getid_empresa());	
				parametrocarteradefectoAux.setid_sucursal(this.parametrocarteradefecto.getid_sucursal());	
				parametrocarteradefectoAux.setid_pais(this.parametrocarteradefecto.getid_pais());	
				parametrocarteradefectoAux.setid_region(this.parametrocarteradefecto.getid_region());	
				parametrocarteradefectoAux.setid_provincia(this.parametrocarteradefecto.getid_provincia());	
				parametrocarteradefectoAux.setid_ciudad(this.parametrocarteradefecto.getid_ciudad());	
				parametrocarteradefectoAux.setid_zona(this.parametrocarteradefecto.getid_zona());	
				parametrocarteradefectoAux.setid_tipo_identificacion(this.parametrocarteradefecto.getid_tipo_identificacion());	
				parametrocarteradefectoAux.setid_tipo_nivel_edu(this.parametrocarteradefecto.getid_tipo_nivel_edu());	
				parametrocarteradefectoAux.setid_pais_nacionalidad(this.parametrocarteradefecto.getid_pais_nacionalidad());	
				parametrocarteradefectoAux.setid_tipo_genero(this.parametrocarteradefecto.getid_tipo_genero());	
				parametrocarteradefectoAux.setid_estado_civil(this.parametrocarteradefecto.getid_estado_civil());	
				parametrocarteradefectoAux.setid_estado_legal(this.parametrocarteradefecto.getid_estado_legal());	
				parametrocarteradefectoAux.setid_cuenta_contable(this.parametrocarteradefecto.getid_cuenta_contable());	
				parametrocarteradefectoAux.setid_vendedor(this.parametrocarteradefecto.getid_vendedor());	
				parametrocarteradefectoAux.setid_ruta(this.parametrocarteradefecto.getid_ruta());	
				parametrocarteradefectoAux.setid_dia(this.parametrocarteradefecto.getid_dia());	
				parametrocarteradefectoAux.setid_tipo_precio(this.parametrocarteradefecto.getid_tipo_precio());	
				parametrocarteradefectoAux.setid_tipo_lista_precio(this.parametrocarteradefecto.getid_tipo_lista_precio());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrocarteradefectoAux,parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocarteradefectoAux,parametrocarteradefectos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.saveParametroCarteraDefectos();//WithConnection
						//parametrocarteradefectoLogic.getSetVersionRowParametroCarteraDefectos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrocarteradefecto,parametrocarteradefectoAux);
					
					this.refrescarForeignKeysDescripcionesParametroCarteraDefecto();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocarteradefectoLogic.saveParametroCarteraDefectoRelaciones(parametrocarteradefectoAux);//WithConnection
								//parametrocarteradefectoLogic.getSetVersionRowParametroCarteraDefectos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrocarteradefecto,parametrocarteradefectoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrocarteradefectoAux,parametrocarteradefectoLogic.getParametroCarteraDefectos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrocarteradefectoAux,parametrocarteradefectos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrocarteradefecto,parametrocarteradefectoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrocarteradefectoAux=new  ParametroCarteraDefecto();
				
				parametrocarteradefectoAux.setIsNew(false);
				parametrocarteradefectoAux.setIsChanged(false);
				
				parametrocarteradefectoAux.setIsDeleted(true);
				
				parametrocarteradefectoAux.setId(this.parametrocarteradefecto.getId());	
				parametrocarteradefectoAux.setVersionRow(this.parametrocarteradefecto.getVersionRow());	
				parametrocarteradefectoAux.setid_empresa(this.parametrocarteradefecto.getid_empresa());	
				parametrocarteradefectoAux.setid_sucursal(this.parametrocarteradefecto.getid_sucursal());	
				parametrocarteradefectoAux.setid_pais(this.parametrocarteradefecto.getid_pais());	
				parametrocarteradefectoAux.setid_region(this.parametrocarteradefecto.getid_region());	
				parametrocarteradefectoAux.setid_provincia(this.parametrocarteradefecto.getid_provincia());	
				parametrocarteradefectoAux.setid_ciudad(this.parametrocarteradefecto.getid_ciudad());	
				parametrocarteradefectoAux.setid_zona(this.parametrocarteradefecto.getid_zona());	
				parametrocarteradefectoAux.setid_tipo_identificacion(this.parametrocarteradefecto.getid_tipo_identificacion());	
				parametrocarteradefectoAux.setid_tipo_nivel_edu(this.parametrocarteradefecto.getid_tipo_nivel_edu());	
				parametrocarteradefectoAux.setid_pais_nacionalidad(this.parametrocarteradefecto.getid_pais_nacionalidad());	
				parametrocarteradefectoAux.setid_tipo_genero(this.parametrocarteradefecto.getid_tipo_genero());	
				parametrocarteradefectoAux.setid_estado_civil(this.parametrocarteradefecto.getid_estado_civil());	
				parametrocarteradefectoAux.setid_estado_legal(this.parametrocarteradefecto.getid_estado_legal());	
				parametrocarteradefectoAux.setid_cuenta_contable(this.parametrocarteradefecto.getid_cuenta_contable());	
				parametrocarteradefectoAux.setid_vendedor(this.parametrocarteradefecto.getid_vendedor());	
				parametrocarteradefectoAux.setid_ruta(this.parametrocarteradefecto.getid_ruta());	
				parametrocarteradefectoAux.setid_dia(this.parametrocarteradefecto.getid_dia());	
				parametrocarteradefectoAux.setid_tipo_precio(this.parametrocarteradefecto.getid_tipo_precio());	
				parametrocarteradefectoAux.setid_tipo_lista_precio(this.parametrocarteradefecto.getid_tipo_lista_precio());	
				
				if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrocarteradefectoAux.getId()>=0) {	
						this.parametrocarteradefectosEliminados.add(parametrocarteradefectoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrocarteradefectoAux,parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocarteradefectoAux,parametrocarteradefectos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.saveParametroCarteraDefectos();//WithConnection
						//parametrocarteradefectoLogic.getSetVersionRowParametroCarteraDefectos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrocarteradefectoLogic.saveParametroCarteraDefectoRelaciones(parametrocarteradefectoAux);//WithConnection
								//parametrocarteradefectoLogic.getSetVersionRowParametroCarteraDefectos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(parametrocarteradefectoAux,parametrocarteradefectoLogic.getParametroCarteraDefectos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(parametrocarteradefectoAux,parametrocarteradefectos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(this.parametrocarteradefectosEliminados);
					
					parametrocarteradefectoLogic.saveParametroCarteraDefectos();//WithConnection
					//parametrocarteradefectoLogic.getSetVersionRowParametroCarteraDefectos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroCarteraDefecto();
				
				this.parametrocarteradefectosEliminados= new ArrayList<ParametroCarteraDefecto>();		
			}
			
			if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro Cartera Defecto GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametrocarteradefecto=parametrocarteradefectoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroCarteraDefecto();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroCarteraDefecto parametrocarteradefectoLocal) throws Exception {
		
		if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroCarteraDefecto parametrocarteradefectoLocal) throws Exception {	
		if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrocarteradefectoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				parametrocarteradefectoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				parametrocarteradefectoLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(RegionDetalleFormJInternalFrame.class)) {
				RegionBeanSwingJInternalFrame regionBeanSwingJInternalFrameLocal=(RegionBeanSwingJInternalFrame) ((RegionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				regionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoRegion(regionBeanSwingJInternalFrameLocal.getregion(),true);
				regionBeanSwingJInternalFrameLocal.actualizarLista(regionBeanSwingJInternalFrameLocal.region,this.regionsForeignKey);

				regionBeanSwingJInternalFrameLocal.actualizarRelaciones(regionBeanSwingJInternalFrameLocal.region);

				parametrocarteradefectoLocal.setRegion(regionBeanSwingJInternalFrameLocal.region);

				this.addItemDefectoCombosForeignKeyRegion();
				this.cargarCombosFrameRegionsForeignKey("Formulario");
				this.setActualRegionForeignKey(regionBeanSwingJInternalFrameLocal.region.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProvinciaDetalleFormJInternalFrame.class)) {
				ProvinciaBeanSwingJInternalFrame provinciaBeanSwingJInternalFrameLocal=(ProvinciaBeanSwingJInternalFrame) ((ProvinciaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				provinciaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProvincia(provinciaBeanSwingJInternalFrameLocal.getprovincia(),true);
				provinciaBeanSwingJInternalFrameLocal.actualizarLista(provinciaBeanSwingJInternalFrameLocal.provincia,this.provinciasForeignKey);

				provinciaBeanSwingJInternalFrameLocal.actualizarRelaciones(provinciaBeanSwingJInternalFrameLocal.provincia);

				parametrocarteradefectoLocal.setProvincia(provinciaBeanSwingJInternalFrameLocal.provincia);

				this.addItemDefectoCombosForeignKeyProvincia();
				this.cargarCombosFrameProvinciasForeignKey("Formulario");
				this.setActualProvinciaForeignKey(provinciaBeanSwingJInternalFrameLocal.provincia.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadBeanSwingJInternalFrameLocal.actualizarLista(ciudadBeanSwingJInternalFrameLocal.ciudad,this.ciudadsForeignKey);

				ciudadBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadBeanSwingJInternalFrameLocal.ciudad);

				parametrocarteradefectoLocal.setCiudad(ciudadBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey("Formulario");
				this.setActualCiudadForeignKey(ciudadBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ZonaDetalleFormJInternalFrame.class)) {
				ZonaBeanSwingJInternalFrame zonaBeanSwingJInternalFrameLocal=(ZonaBeanSwingJInternalFrame) ((ZonaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				zonaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoZona(zonaBeanSwingJInternalFrameLocal.getzona(),true);
				zonaBeanSwingJInternalFrameLocal.actualizarLista(zonaBeanSwingJInternalFrameLocal.zona,this.zonasForeignKey);

				zonaBeanSwingJInternalFrameLocal.actualizarRelaciones(zonaBeanSwingJInternalFrameLocal.zona);

				parametrocarteradefectoLocal.setZona(zonaBeanSwingJInternalFrameLocal.zona);

				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey("Formulario");
				this.setActualZonaForeignKey(zonaBeanSwingJInternalFrameLocal.zona.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoIdentificacionDetalleFormJInternalFrame.class)) {
				TipoIdentificacionBeanSwingJInternalFrame tipoidentificacionBeanSwingJInternalFrameLocal=(TipoIdentificacionBeanSwingJInternalFrame) ((TipoIdentificacionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoidentificacionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoIdentificacion(tipoidentificacionBeanSwingJInternalFrameLocal.gettipoidentificacion(),true);
				tipoidentificacionBeanSwingJInternalFrameLocal.actualizarLista(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion,this.tipoidentificacionsForeignKey);

				tipoidentificacionBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion);

				parametrocarteradefectoLocal.setTipoIdentificacion(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion);

				this.addItemDefectoCombosForeignKeyTipoIdentificacion();
				this.cargarCombosFrameTipoIdentificacionsForeignKey("Formulario");
				this.setActualTipoIdentificacionForeignKey(tipoidentificacionBeanSwingJInternalFrameLocal.tipoidentificacion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoNivelEduDetalleFormJInternalFrame.class)) {
				TipoNivelEduBeanSwingJInternalFrame tiponiveleduBeanSwingJInternalFrameLocal=(TipoNivelEduBeanSwingJInternalFrame) ((TipoNivelEduDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiponiveleduBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoNivelEdu(tiponiveleduBeanSwingJInternalFrameLocal.gettiponiveledu(),true);
				tiponiveleduBeanSwingJInternalFrameLocal.actualizarLista(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu,this.tiponiveledusForeignKey);

				tiponiveleduBeanSwingJInternalFrameLocal.actualizarRelaciones(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu);

				parametrocarteradefectoLocal.setTipoNivelEdu(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu);

				this.addItemDefectoCombosForeignKeyTipoNivelEdu();
				this.cargarCombosFrameTipoNivelEdusForeignKey("Formulario");
				this.setActualTipoNivelEduForeignKey(tiponiveleduBeanSwingJInternalFrameLocal.tiponiveledu.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisnacionalidadBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisnacionalidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisnacionalidadBeanSwingJInternalFrameLocal.getpais(),true);
				paisnacionalidadBeanSwingJInternalFrameLocal.actualizarLista(paisnacionalidadBeanSwingJInternalFrameLocal.pais,this.paisnacionalidadsForeignKey);

				paisnacionalidadBeanSwingJInternalFrameLocal.actualizarRelaciones(paisnacionalidadBeanSwingJInternalFrameLocal.pais);

				parametrocarteradefectoLocal.setPaisNacionalidad(paisnacionalidadBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPaisNacionalidad();
				this.cargarCombosFramePaisNacionalidadsForeignKey("Formulario");
				this.setActualPaisNacionalidadForeignKey(paisnacionalidadBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGeneroDetalleFormJInternalFrame.class)) {
				TipoGeneroBeanSwingJInternalFrame tipogeneroBeanSwingJInternalFrameLocal=(TipoGeneroBeanSwingJInternalFrame) ((TipoGeneroDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogeneroBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.gettipogenero(),true);
				tipogeneroBeanSwingJInternalFrameLocal.actualizarLista(tipogeneroBeanSwingJInternalFrameLocal.tipogenero,this.tipogenerosForeignKey);

				tipogeneroBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				parametrocarteradefectoLocal.setTipoGenero(tipogeneroBeanSwingJInternalFrameLocal.tipogenero);

				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey("Formulario");
				this.setActualTipoGeneroForeignKey(tipogeneroBeanSwingJInternalFrameLocal.tipogenero.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoCivilDetalleFormJInternalFrame.class)) {
				EstadoCivilBeanSwingJInternalFrame estadocivilBeanSwingJInternalFrameLocal=(EstadoCivilBeanSwingJInternalFrame) ((EstadoCivilDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadocivilBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.getestadocivil(),true);
				estadocivilBeanSwingJInternalFrameLocal.actualizarLista(estadocivilBeanSwingJInternalFrameLocal.estadocivil,this.estadocivilsForeignKey);

				estadocivilBeanSwingJInternalFrameLocal.actualizarRelaciones(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				parametrocarteradefectoLocal.setEstadoCivil(estadocivilBeanSwingJInternalFrameLocal.estadocivil);

				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey("Formulario");
				this.setActualEstadoCivilForeignKey(estadocivilBeanSwingJInternalFrameLocal.estadocivil.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoLegalDetalleFormJInternalFrame.class)) {
				EstadoLegalBeanSwingJInternalFrame estadolegalBeanSwingJInternalFrameLocal=(EstadoLegalBeanSwingJInternalFrame) ((EstadoLegalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadolegalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoLegal(estadolegalBeanSwingJInternalFrameLocal.getestadolegal(),true);
				estadolegalBeanSwingJInternalFrameLocal.actualizarLista(estadolegalBeanSwingJInternalFrameLocal.estadolegal,this.estadolegalsForeignKey);

				estadolegalBeanSwingJInternalFrameLocal.actualizarRelaciones(estadolegalBeanSwingJInternalFrameLocal.estadolegal);

				parametrocarteradefectoLocal.setEstadoLegal(estadolegalBeanSwingJInternalFrameLocal.estadolegal);

				this.addItemDefectoCombosForeignKeyEstadoLegal();
				this.cargarCombosFrameEstadoLegalsForeignKey("Formulario");
				this.setActualEstadoLegalForeignKey(estadolegalBeanSwingJInternalFrameLocal.estadolegal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				parametrocarteradefectoLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				parametrocarteradefectoLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(RutaDetalleFormJInternalFrame.class)) {
				RutaBeanSwingJInternalFrame rutaBeanSwingJInternalFrameLocal=(RutaBeanSwingJInternalFrame) ((RutaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				rutaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoRuta(rutaBeanSwingJInternalFrameLocal.getruta(),true);
				rutaBeanSwingJInternalFrameLocal.actualizarLista(rutaBeanSwingJInternalFrameLocal.ruta,this.rutasForeignKey);

				rutaBeanSwingJInternalFrameLocal.actualizarRelaciones(rutaBeanSwingJInternalFrameLocal.ruta);

				parametrocarteradefectoLocal.setRuta(rutaBeanSwingJInternalFrameLocal.ruta);

				this.addItemDefectoCombosForeignKeyRuta();
				this.cargarCombosFrameRutasForeignKey("Formulario");
				this.setActualRutaForeignKey(rutaBeanSwingJInternalFrameLocal.ruta.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(DiaDetalleFormJInternalFrame.class)) {
				DiaBeanSwingJInternalFrame diaBeanSwingJInternalFrameLocal=(DiaBeanSwingJInternalFrame) ((DiaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				diaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoDia(diaBeanSwingJInternalFrameLocal.getdia(),true);
				diaBeanSwingJInternalFrameLocal.actualizarLista(diaBeanSwingJInternalFrameLocal.dia,this.diasForeignKey);

				diaBeanSwingJInternalFrameLocal.actualizarRelaciones(diaBeanSwingJInternalFrameLocal.dia);

				parametrocarteradefectoLocal.setDia(diaBeanSwingJInternalFrameLocal.dia);

				this.addItemDefectoCombosForeignKeyDia();
				this.cargarCombosFrameDiasForeignKey("Formulario");
				this.setActualDiaForeignKey(diaBeanSwingJInternalFrameLocal.dia.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPrecioDetalleFormJInternalFrame.class)) {
				TipoPrecioBeanSwingJInternalFrame tipoprecioBeanSwingJInternalFrameLocal=(TipoPrecioBeanSwingJInternalFrame) ((TipoPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.gettipoprecio(),true);
				tipoprecioBeanSwingJInternalFrameLocal.actualizarLista(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio,this.tipopreciosForeignKey);

				tipoprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				parametrocarteradefectoLocal.setTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey("Formulario");
				this.setActualTipoPrecioForeignKey(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoListaPrecioDetalleFormJInternalFrame.class)) {
				TipoListaPrecioBeanSwingJInternalFrame tipolistaprecioBeanSwingJInternalFrameLocal=(TipoListaPrecioBeanSwingJInternalFrame) ((TipoListaPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipolistaprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoListaPrecio(tipolistaprecioBeanSwingJInternalFrameLocal.gettipolistaprecio(),true);
				tipolistaprecioBeanSwingJInternalFrameLocal.actualizarLista(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio,this.tipolistapreciosForeignKey);

				tipolistaprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio);

				parametrocarteradefectoLocal.setTipoListaPrecio(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio);

				this.addItemDefectoCombosForeignKeyTipoListaPrecio();
				this.cargarCombosFrameTipoListaPreciosForeignKey("Formulario");
				this.setActualTipoListaPrecioForeignKey(tipolistaprecioBeanSwingJInternalFrameLocal.tipolistaprecio.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroCarteraDefectoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrocarteradefectoValidator.getInvalidValues(this.parametrocarteradefecto);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroCarteraDefecto parametrocarteradefecto,List<ParametroCarteraDefecto> parametrocarteradefectos) throws Exception {
		try	{		
			ParametroCarteraDefectoConstantesFunciones.actualizarLista(parametrocarteradefecto,parametrocarteradefectos,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroCarteraDefecto parametrocarteradefecto,List<ParametroCarteraDefecto> parametrocarteradefectos) throws Exception {
		try	{			
			ParametroCarteraDefectoConstantesFunciones.actualizarSelectedLista(parametrocarteradefecto,parametrocarteradefectos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroCarteraDefecto> parametrocarteradefectosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrocarteradefectosLocal=this.parametrocarteradefectoLogic.getParametroCarteraDefectos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrocarteradefectosLocal=this.parametrocarteradefectos;
			}
			//ARCHITECTURE
		
			for(ParametroCarteraDefecto parametrocarteradefectoLocal:parametrocarteradefectosLocal) {
				if(this.permiteMantenimiento(parametrocarteradefectoLocal) && parametrocarteradefectoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroCarteraDefectoConstantesFunciones.getParametroCarteraDefectoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_empresaParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_sucursalParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_paisParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDREGION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_regionParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDPROVINCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_provinciaParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDCIUDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_ciudadParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDZONA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_zonaParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDTIPOIDENTIFICACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_identificacionParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDTIPONIVELEDU)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_nivel_eduParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDPAISNACIONALIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_pais_nacionalidadParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDTIPOGENERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_generoParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDESTADOCIVIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_estado_civilParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDESTADOLEGAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_estado_legalParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_cuenta_contableParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_vendedorParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDRUTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_rutaParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDDIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_diaParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDTIPOPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_precioParametroCarteraDefecto,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroCarteraDefectoConstantesFunciones.IDTIPOLISTAPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_lista_precioParametroCarteraDefecto,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_empresaParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_sucursalParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_paisParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_regionParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_provinciaParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_ciudadParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_zonaParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_identificacionParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_nivel_eduParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_pais_nacionalidadParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_generoParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_estado_civilParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_estado_legalParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_cuenta_contableParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_vendedorParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_rutaParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_diaParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_precioParametroCarteraDefecto,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelid_tipo_lista_precioParametroCarteraDefecto,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroCarteraDefecto--;	
		
		
		this.parametrocarteradefectoAux=new ParametroCarteraDefecto();
		
		this.parametrocarteradefectoAux.setId(this.iIdNuevoParametroCarteraDefecto);
		this.parametrocarteradefectoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrocarteradefectoLogic.getParametroCarteraDefectos().add(this.parametrocarteradefectoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrocarteradefectos.add(this.parametrocarteradefectoAux);
		}
		//ARCHITECTURE
		
		this.parametrocarteradefecto=this.parametrocarteradefectoAux;
		
		if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroCarteraDefecto(this.parametrocarteradefecto);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroCarteraDefecto(this.parametrocarteradefecto);
		}
				
		//this.setDefaultControlesParametroCarteraDefecto();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroCarteraDefecto();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroCarteraDefecto();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroCarteraDefecto();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroCarteraDefecto(this.parametrocarteradefectoBean,this.parametrocarteradefecto,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
			classes=ParametroCarteraDefectoConstantesFunciones.getClassesRelationshipsOfParametroCarteraDefecto(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrocarteradefectoReturnGeneral=parametrocarteradefectoLogic.procesarEventosParametroCarteraDefectosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.parametrocarteradefecto,this.parametrocarteradefectoParameterGeneral,this.isEsNuevoParametroCarteraDefecto,classes);//this.parametrocarteradefectoLogic.getParametroCarteraDefecto()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral,this.parametrocarteradefectoBean,false);
		
		if(this.parametrocarteradefectoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto());
		}
		
		if(this.parametrocarteradefectoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto(),classes);//this.parametrocarteradefectoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroCarteraDefecto();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroCarteraDefecto();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.RecargarFormParametroCarteraDefecto(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroCarteraDefecto(false);
						
			if(parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroCarteraDefecto();
			}
			
			this.actualizarVisualTableDatosParametroCarteraDefecto();
			
			this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(this.getIndiceNuevoParametroCarteraDefecto(), this.getIndiceNuevoParametroCarteraDefecto());
			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
						
			this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroCarteraDefecto(Boolean isHabilitar) throws Exception {
			
		//
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_empresaParametroCarteraDefecto);//
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_sucursalParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_paisParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_regionParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_provinciaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_ciudadParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_zonaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_tipo_identificacionParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_tipo_nivel_eduParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_pais_nacionalidadParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_tipo_generoParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_estado_civilParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_estado_legalParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_cuenta_contableParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_vendedorParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_rutaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_diaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_tipo_precioParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setEnabled(isHabilitar && this.parametrocarteradefectoConstantesFunciones.activarid_tipo_lista_precioParametroCarteraDefecto);
	};
	
	public void setDefaultControlesParametroCarteraDefecto() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroCarteraDefecto(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrocarteradefectoSessionBean.setConGuardarRelaciones(true);			
			this.parametrocarteradefectoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.setVisible(true);
			
					
		} else {
			//this.parametrocarteradefectoSessionBean.setConGuardarRelaciones(false);			
			this.parametrocarteradefectoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoParametroCarteraDefecto() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
				if(parametrocarteradefectoAux.getId().equals(this.iIdNuevoParametroCarteraDefecto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectos) {
				if(parametrocarteradefectoAux.getId().equals(this.iIdNuevoParametroCarteraDefecto)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
				if(parametrocarteradefectoAux.getId().equals(parametrocarteradefecto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectos) {
				if(parametrocarteradefectoAux.getId().equals(parametrocarteradefecto.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefectoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
				if(parametrocarteradefectoAux.getParametroCarteraDefectoOriginal().getId().equals(parametrocarteradefectoOriginal.getId())) {
					existe=true;
					parametrocarteradefectoOriginal.setId(parametrocarteradefectoAux.getId());
					parametrocarteradefectoOriginal.setVersionRow(parametrocarteradefectoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectos) {
				if(parametrocarteradefectoAux.getParametroCarteraDefectoOriginal().getId().equals(parametrocarteradefectoOriginal.getId())) {
					existe=true;
					parametrocarteradefectoOriginal.setId(parametrocarteradefectoAux.getId());
					parametrocarteradefectoOriginal.setVersionRow(parametrocarteradefectoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroCarteraDefecto(Boolean esParaCancelar) throws Exception {
		parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
		parametrocarteradefectoAux=new ParametroCarteraDefecto();
		
		if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
					if(parametrocarteradefectoAux.getId()<0) {
						parametrocarteradefectosAux.add(parametrocarteradefectoAux);
					}		
				}
				this.iIdNuevoParametroCarteraDefecto=0L;
				this.parametrocarteradefectoLogic.getParametroCarteraDefectos().removeAll(parametrocarteradefectosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectos) {
					if(parametrocarteradefectoAux.getId()<0) {
						parametrocarteradefectosAux.add(parametrocarteradefectoAux);
					}		
				}
				this.iIdNuevoParametroCarteraDefecto=0L;
				this.parametrocarteradefectos.removeAll(parametrocarteradefectosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroCarteraDefecto 
					&& this.parametrocarteradefectoLogic.getParametroCarteraDefectos().size()>0
					) {
					parametrocarteradefectoAux=this.parametrocarteradefectoLogic.getParametroCarteraDefectos().get(this.parametrocarteradefectoLogic.getParametroCarteraDefectos().size() - 1);
				
					if(parametrocarteradefectoAux.getId()<0) {
						this.parametrocarteradefectoLogic.getParametroCarteraDefectos().remove(parametrocarteradefectoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroCarteraDefecto && this.parametrocarteradefectos.size()>0) {
					parametrocarteradefectoAux=this.parametrocarteradefectos.get(this.parametrocarteradefectos.size() - 1);
				
					if(parametrocarteradefectoAux.getId()<0) {
						this.parametrocarteradefectos.remove(parametrocarteradefectoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroCarteraDefecto(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametrocarteradefecto.getId()<0) {
				this.parametrocarteradefectoLogic.getParametroCarteraDefectos().remove(this.parametrocarteradefecto);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametrocarteradefecto.getId()<0) {
				this.parametrocarteradefectos.remove(this.parametrocarteradefecto);
			}
		}			
	}
	
	public void setEstadosInicialesParametroCarteraDefecto(List<ParametroCarteraDefecto> parametrocarteradefectosAux) throws Exception {
		ParametroCarteraDefectoConstantesFunciones.setEstadosInicialesParametroCarteraDefecto(parametrocarteradefectosAux);
	}
	
	public void setEstadosInicialesParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefectoAux) throws Exception {
		ParametroCarteraDefectoConstantesFunciones.setEstadosInicialesParametroCarteraDefecto(parametrocarteradefectoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroCarteraDefectoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroCarteraDefectoActual()) {
				if(!this.isEsNuevoParametroCarteraDefecto) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroCarteraDefecto=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroCarteraDefectoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro Cartera Defecto ?", "MANTENIMIENTO DE Parametro Cartera Defecto", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroCarteraDefecto parametrocarteradefecto) throws Exception {
		ParametroCarteraDefectoConstantesFunciones.seleccionarAsignar(this.parametrocarteradefecto,parametrocarteradefecto);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroCarteraDefecto=this.isPermisoActualizarOriginalParametroCarteraDefecto;
			
			
			this.seleccionarAsignar(parametrocarteradefecto);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroCarteraDefectoConstantesFunciones.quitarEspaciosParametroCarteraDefecto(this.parametrocarteradefecto,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrocarteradefectoSessionBean.setsFuncionBusquedaRapida(this.parametrocarteradefectoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroCarteraDefecto) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroCarteraDefecto(esParaCancelar);				
				this.cancelarNuevoParametroCarteraDefecto(esParaCancelar);								
			}
			
			this.parametrocarteradefecto=new ParametroCarteraDefecto();
			
			this.inicializarParametroCarteraDefecto();
			
			this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroCarteraDefecto() throws Exception {
		try {
			ParametroCarteraDefectoConstantesFunciones.inicializarParametroCarteraDefecto(this.parametrocarteradefecto);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrocarteradefectoLogic.getParametroCarteraDefectos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroCarteraDefectos(String sAccionBusqueda,List<ParametroCarteraDefecto> parametrocarteradefectosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroCarteraDefecto"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroCarteraDefectoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroCarteraDefectoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroCarteraDefecto"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Cartera Defectos");		
		parameters.put("busquedapor", ParametroCarteraDefectoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroCarteraDefecto=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroCarteraDefectoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroCarteraDefectoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroCarteraDefecto=new JRBeanArrayDataSource(ParametroCarteraDefectoJInternalFrame.TraerParametroCarteraDefectoBeans(parametrocarteradefectosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroCarteraDefecto);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroCarteraDefectoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroCarteraDefectoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroCarteraDefectoBean.TraerParametroCarteraDefectoBeans(parametrocarteradefectosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroCarteraDefectos(sAccionBusqueda,sTipoArchivoReporte,parametrocarteradefectosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroCarteraDefectos(sAccionBusqueda,sTipoArchivoReporte,parametrocarteradefectosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroCarteraDefectoActionPerformed(null);
					//this.generarExcelReporteParametroCarteraDefectos(sAccionBusqueda,sTipoArchivoReporte,parametrocarteradefectosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroCarteraDefectos(sAccionBusqueda,sTipoArchivoReporte,parametrocarteradefectosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroCarteraDefectos(sAccionBusqueda,sTipoArchivoReporte,parametrocarteradefectosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroCarteraDefectos(sAccionBusqueda,sTipoArchivoReporte,parametrocarteradefectosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroCarteraDefectos(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroCarteraDefecto> parametrocarteradefectosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocarteradefecto";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroCarteraDefectos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroCarteraDefecto("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroCarteraDefecto parametrocarteradefecto : parametrocarteradefectosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroCarteraDefectoConstantesFunciones.generarExcelReporteDataParametroCarteraDefecto("NORMAL",row,workbook,parametrocarteradefecto,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroCarteraDefecto(String sTipo,Row row,Workbook workbook) {
		
		ParametroCarteraDefectoConstantesFunciones.generarExcelReporteHeaderParametroCarteraDefecto(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroCarteraDefectos(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroCarteraDefecto> parametrocarteradefectosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocarteradefecto_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroCarteraDefectos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroCarteraDefecto parametrocarteradefecto : parametrocarteradefectosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.getParametroCarteraDefectoDescripcion(parametrocarteradefecto));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getregion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getprovincia_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getciudad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getzona_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.gettipoidentificacion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.gettiponiveledu_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getpaisnacionalidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.gettipogenero_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getestadocivil_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getestadolegal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getruta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.getdia_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.gettipoprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrocarteradefecto.gettipolistaprecio_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroCarteraDefectos(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroCarteraDefecto> parametrocarteradefectosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroCarteraDefecto> parametrocarteradefectosRespaldo=null;
		
		classes=ParametroCarteraDefectoConstantesFunciones.getClassesRelationshipsOfParametroCarteraDefecto(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrocarteradefectoLogic.setDatosCliente(this.datosCliente);
		this.parametrocarteradefectoLogic.setDatosDeep(this.datosDeep);
		this.parametrocarteradefectoLogic.setIsConDeep(true);
		
		parametrocarteradefectosRespaldo=this.parametrocarteradefectoLogic.getParametroCarteraDefectos();
		
		this.parametrocarteradefectoLogic.setParametroCarteraDefectos(parametrocarteradefectosParaReportes);	
		this.parametrocarteradefectoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrocarteradefectosParaReportes=this.parametrocarteradefectoLogic.getParametroCarteraDefectos();
		this.parametrocarteradefectoLogic.setParametroCarteraDefectos(parametrocarteradefectosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocarteradefecto_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroCarteraDefectos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroCarteraDefecto("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroCarteraDefecto parametrocarteradefecto : parametrocarteradefectosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroCarteraDefecto("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroCarteraDefectoConstantesFunciones.generarExcelReporteDataParametroCarteraDefecto("NORMAL",row,workbook,parametrocarteradefecto,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.getParametroCarteraDefectoDescripcion(parametrocarteradefecto));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroCarteraDefecto() throws Exception {		
		this.startProcessParametroCarteraDefecto(true);
	}
	
	public void startProcessParametroCarteraDefecto(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroCarteraDefecto ,this.jPanelParametrosReportesParametroCarteraDefecto, this.jScrollPanelDatosParametroCarteraDefecto,this.jPanelPaginacionParametroCarteraDefecto, this.jScrollPanelDatosEdicionParametroCarteraDefecto, this.jPanelAccionesParametroCarteraDefecto,this.jPanelAccionesFormularioParametroCarteraDefecto,this.jmenuBarParametroCarteraDefecto,this.jmenuBarDetalleParametroCarteraDefecto,this.jTtoolBarParametroCarteraDefecto,this.jTtoolBarDetalleParametroCarteraDefecto);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroCarteraDefecto=this.jTabbedPaneBusquedasParametroCarteraDefecto; 
		
		final JPanel jPanelParametrosReportesParametroCarteraDefecto=this.jPanelParametrosReportesParametroCarteraDefecto;
		//final JScrollPane jScrollPanelDatosParametroCarteraDefecto=this.jScrollPanelDatosParametroCarteraDefecto;
		final JTable jTableDatosParametroCarteraDefecto=this.jTableDatosParametroCarteraDefecto;		
		final JPanel jPanelPaginacionParametroCarteraDefecto=this.jPanelPaginacionParametroCarteraDefecto;
		//final JScrollPane jScrollPanelDatosEdicionParametroCarteraDefecto=this.jScrollPanelDatosEdicionParametroCarteraDefecto;
		final JPanel jPanelAccionesParametroCarteraDefecto=this.jPanelAccionesParametroCarteraDefecto;
		
		JPanel jPanelCamposAuxiliarParametroCarteraDefecto=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroCarteraDefecto=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			jPanelCamposAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelCamposParametroCarteraDefecto;
			jPanelAccionesFormularioAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelAccionesFormularioParametroCarteraDefecto;
		}
		
		final JPanel jPanelCamposParametroCarteraDefecto=jPanelCamposAuxiliarParametroCarteraDefecto;
		final JPanel jPanelAccionesFormularioParametroCarteraDefecto=jPanelAccionesFormularioAuxiliarParametroCarteraDefecto;
		
		
		final JMenuBar jmenuBarParametroCarteraDefecto=this.jmenuBarParametroCarteraDefecto;
		final JToolBar jTtoolBarParametroCarteraDefecto=this.jTtoolBarParametroCarteraDefecto;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroCarteraDefecto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroCarteraDefecto=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			jmenuBarDetalleAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jmenuBarDetalleParametroCarteraDefecto;
			jTtoolBarDetalleAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jTtoolBarDetalleParametroCarteraDefecto;
		}
		
		final JMenuBar jmenuBarDetalleParametroCarteraDefecto=jmenuBarDetalleAuxiliarParametroCarteraDefecto;
		final JToolBar jTtoolBarDetalleParametroCarteraDefecto=jTtoolBarDetalleAuxiliarParametroCarteraDefecto;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroCarteraDefecto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroCarteraDefecto;
			processRunnable.jTableDatos=jTableDatosParametroCarteraDefecto;
			processRunnable.jPanelCampos=jPanelCamposParametroCarteraDefecto;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroCarteraDefecto;
			processRunnable.jPanelAcciones=jPanelAccionesParametroCarteraDefecto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroCarteraDefecto;
			
			
			processRunnable.jmenuBar=jmenuBarParametroCarteraDefecto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroCarteraDefecto;
			processRunnable.jTtoolBar=jTtoolBarParametroCarteraDefecto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroCarteraDefecto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroCarteraDefecto ,jPanelParametrosReportesParametroCarteraDefecto,jTableDatosParametroCarteraDefecto, /*jScrollPanelDatosParametroCarteraDefecto,*/jPanelCamposParametroCarteraDefecto,jPanelPaginacionParametroCarteraDefecto, /*jScrollPanelDatosEdicionParametroCarteraDefecto,*/ jPanelAccionesParametroCarteraDefecto,jPanelAccionesFormularioParametroCarteraDefecto,jmenuBarParametroCarteraDefecto,jmenuBarDetalleParametroCarteraDefecto,jTtoolBarParametroCarteraDefecto,jTtoolBarDetalleParametroCarteraDefecto);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroCarteraDefecto ,jPanelParametrosReportesParametroCarteraDefecto, jScrollPanelDatosParametroCarteraDefecto,jPanelPaginacionParametroCarteraDefecto, jScrollPanelDatosEdicionParametroCarteraDefecto, jPanelAccionesParametroCarteraDefecto,jPanelAccionesFormularioParametroCarteraDefecto,jmenuBarParametroCarteraDefecto,jmenuBarDetalleParametroCarteraDefecto,jTtoolBarParametroCarteraDefecto,jTtoolBarDetalleParametroCarteraDefecto);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroCarteraDefecto() {// throws Exception 
		this.finishProcessParametroCarteraDefecto(true);
	}
	
	public void finishProcessParametroCarteraDefecto(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroCarteraDefecto ,this.jPanelParametrosReportesParametroCarteraDefecto, this.jScrollPanelDatosParametroCarteraDefecto,this.jPanelPaginacionParametroCarteraDefecto, this.jScrollPanelDatosEdicionParametroCarteraDefecto, this.jPanelAccionesParametroCarteraDefecto,this.jPanelAccionesFormularioParametroCarteraDefecto,this.jmenuBarParametroCarteraDefecto,this.jmenuBarDetalleParametroCarteraDefecto,this.jTtoolBarParametroCarteraDefecto,this.jTtoolBarDetalleParametroCarteraDefecto);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroCarteraDefecto=this.jTabbedPaneBusquedasParametroCarteraDefecto; 
		
		final JPanel jPanelParametrosReportesParametroCarteraDefecto=this.jPanelParametrosReportesParametroCarteraDefecto;
		//final JScrollPane jScrollPanelDatosParametroCarteraDefecto=this.jScrollPanelDatosParametroCarteraDefecto;
		final JTable jTableDatosParametroCarteraDefecto=this.jTableDatosParametroCarteraDefecto;		
		final JPanel jPanelPaginacionParametroCarteraDefecto=this.jPanelPaginacionParametroCarteraDefecto;
		//final JScrollPane jScrollPanelDatosEdicionParametroCarteraDefecto=this.jScrollPanelDatosEdicionParametroCarteraDefecto;
		final JPanel jPanelAccionesParametroCarteraDefecto=this.jPanelAccionesParametroCarteraDefecto;
		
		JPanel jPanelCamposAuxiliarParametroCarteraDefecto=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroCarteraDefecto=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			jPanelCamposAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelCamposParametroCarteraDefecto;
			jPanelAccionesFormularioAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelAccionesFormularioParametroCarteraDefecto;
		}
		
		final JPanel jPanelCamposParametroCarteraDefecto=jPanelCamposAuxiliarParametroCarteraDefecto;
		final JPanel jPanelAccionesFormularioParametroCarteraDefecto=jPanelAccionesFormularioAuxiliarParametroCarteraDefecto;
		
		
		final JMenuBar jmenuBarParametroCarteraDefecto=this.jmenuBarParametroCarteraDefecto;		
		final JToolBar jTtoolBarParametroCarteraDefecto=this.jTtoolBarParametroCarteraDefecto;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroCarteraDefecto=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroCarteraDefecto=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			jmenuBarDetalleAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jmenuBarDetalleParametroCarteraDefecto;
			jTtoolBarDetalleAuxiliarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jTtoolBarDetalleParametroCarteraDefecto;		
		}
		
		final JMenuBar jmenuBarDetalleParametroCarteraDefecto=jmenuBarDetalleAuxiliarParametroCarteraDefecto;
		final JToolBar jTtoolBarDetalleParametroCarteraDefecto=jTtoolBarDetalleAuxiliarParametroCarteraDefecto;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroCarteraDefecto;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroCarteraDefecto;
			processRunnable.jTableDatos=jTableDatosParametroCarteraDefecto;
			processRunnable.jPanelCampos=jPanelCamposParametroCarteraDefecto;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroCarteraDefecto;
			processRunnable.jPanelAcciones=jPanelAccionesParametroCarteraDefecto;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroCarteraDefecto;
			
			
			processRunnable.jmenuBar=jmenuBarParametroCarteraDefecto;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroCarteraDefecto;
			processRunnable.jTtoolBar=jTtoolBarParametroCarteraDefecto;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroCarteraDefecto;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroCarteraDefecto ,jPanelParametrosReportesParametroCarteraDefecto, jTableDatosParametroCarteraDefecto,/*jScrollPanelDatosParametroCarteraDefecto,*/jPanelCamposParametroCarteraDefecto,jPanelPaginacionParametroCarteraDefecto, /*jScrollPanelDatosEdicionParametroCarteraDefecto,*/ jPanelAccionesParametroCarteraDefecto,jPanelAccionesFormularioParametroCarteraDefecto,jmenuBarParametroCarteraDefecto,jmenuBarDetalleParametroCarteraDefecto,jTtoolBarParametroCarteraDefecto,jTtoolBarDetalleParametroCarteraDefecto));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroCarteraDefecto(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroCarteraDefecto(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroCarteraDefecto(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroCarteraDefecto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroCarteraDefecto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroCarteraDefecto,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroCarteraDefecto(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroCarteraDefecto,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroCarteraDefecto,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrocarteradefectoConstantesFunciones.getsFinalQueryParametroCarteraDefecto();
		String  finalQueryPaginacionTodos=this.parametrocarteradefectoConstantesFunciones.getsFinalQueryParametroCarteraDefecto();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroCarteraDefectoConstantesFunciones.getArrayColumnasGlobalesNoParametroCarteraDefecto(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroCarteraDefectoConstantesFunciones.getArrayColumnasGlobalesParametroCarteraDefecto(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroCarteraDefectoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrocarteradefectosEliminados= new ArrayList<ParametroCarteraDefecto>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroCarteraDefecto();
		
				///*ParametroCarteraDefectoSessionBean*/this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			
			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroCarteraDefectoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroCarteraDefectoConstantesFunciones.getClassesForeignKeysOfParametroCarteraDefecto(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametrocarteradefecto."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrocarteradefectosAux= new ArrayList<ParametroCarteraDefecto>();
			
				
			parametrocarteradefectoLogic.setDatosCliente(this.datosCliente);
			parametrocarteradefectoLogic.setDatosDeep(this.datosDeep);
			parametrocarteradefectoLogic.setIsConDeep(true);
			
			
			parametrocarteradefectoLogic.getParametroCarteraDefectoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrocarteradefectoLogic.getTodosParametroCarteraDefectos(finalQueryGlobal,pagination);
					
					//parametrocarteradefectoLogic.getTodosParametroCarteraDefectosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrocarteradefectoLogic.getParametroCarteraDefectos()==null|| parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocarteradefectosAux= new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux= new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocarteradefectoLogic.getTodosParametroCarteraDefectos(finalQueryGlobal+"",this.pagination);												
							
							//parametrocarteradefectoLogic.getTodosParametroCarteraDefectosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectoLogic.getParametroCarteraDefectos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());					
							parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroCarteraDefecto=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroCarteraDefecto=this.idActual;
				
				} else if(this.idParametroCarteraDefectoActual!=null && this.idParametroCarteraDefectoActual!=0L) {
					idParametroCarteraDefecto=idParametroCarteraDefectoActual;
				}
				
					
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndicePorId(idParametroCarteraDefecto);
				
				this.parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrocarteradefectoLogic.getEntity(idParametroCarteraDefecto);
					
					//parametrocarteradefectoLogic.getEntityWithConnection(idParametroCarteraDefecto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
					parametrocarteradefectoLogic.getParametroCarteraDefectos().add(parametrocarteradefectoLogic.getParametroCarteraDefecto());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
					this.parametrocarteradefectos.add(parametrocarteradefecto);
				}
				
				if(parametrocarteradefectoLogic.getParametroCarteraDefecto()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCiudad")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdCiudad",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdCiudad",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContable")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdCuentaContable",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdCuentaContable",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdDia")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdDia(id_diaFK_IdDia);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdDia(finalQueryGlobal,pagination,id_diaFK_IdDia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdDia(id_diaFK_IdDia);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdDia(id_diaFK_IdDia);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdDia(finalQueryGlobal,pagination,id_diaFK_IdDia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdDia(id_diaFK_IdDia);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdDia(id_diaFK_IdDia);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdDia",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdDia",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdEmpresa",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdEmpresa",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoCivil")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEstadoCivil(finalQueryGlobal,pagination,id_estado_civilFK_IdEstadoCivil);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEstadoCivil(finalQueryGlobal,pagination,id_estado_civilFK_IdEstadoCivil);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoCivil(id_estado_civilFK_IdEstadoCivil);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdEstadoCivil",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdEstadoCivil",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoLegal")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEstadoLegal(finalQueryGlobal,pagination,id_estado_legalFK_IdEstadoLegal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEstadoLegal(finalQueryGlobal,pagination,id_estado_legalFK_IdEstadoLegal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdEstadoLegal(id_estado_legalFK_IdEstadoLegal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdEstadoLegal",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdEstadoLegal",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPais")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdPais",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdPais",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPaisNacionalidad")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPaisNacionalidad(id_pais_nacionalidadFK_IdPaisNacionalidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdPaisNacionalidad(finalQueryGlobal,pagination,id_pais_nacionalidadFK_IdPaisNacionalidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPaisNacionalidad(id_pais_nacionalidadFK_IdPaisNacionalidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPaisNacionalidad(id_pais_nacionalidadFK_IdPaisNacionalidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdPaisNacionalidad(finalQueryGlobal,pagination,id_pais_nacionalidadFK_IdPaisNacionalidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPaisNacionalidad(id_pais_nacionalidadFK_IdPaisNacionalidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdPaisNacionalidad(id_pais_nacionalidadFK_IdPaisNacionalidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdPaisNacionalidad",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdPaisNacionalidad",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProvincia")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdProvincia(finalQueryGlobal,pagination,id_provinciaFK_IdProvincia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdProvincia(finalQueryGlobal,pagination,id_provinciaFK_IdProvincia);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdProvincia(id_provinciaFK_IdProvincia);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdProvincia",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdProvincia",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdRegion")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRegion(id_regionFK_IdRegion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdRegion(finalQueryGlobal,pagination,id_regionFK_IdRegion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRegion(id_regionFK_IdRegion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRegion(id_regionFK_IdRegion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdRegion(finalQueryGlobal,pagination,id_regionFK_IdRegion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRegion(id_regionFK_IdRegion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRegion(id_regionFK_IdRegion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdRegion",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdRegion",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdRuta")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdRuta(finalQueryGlobal,pagination,id_rutaFK_IdRuta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdRuta(finalQueryGlobal,pagination,id_rutaFK_IdRuta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdRuta(id_rutaFK_IdRuta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdRuta",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdRuta",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdSucursal",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdSucursal",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoGenero")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoGenero(finalQueryGlobal,pagination,id_tipo_generoFK_IdTipoGenero);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoGenero(finalQueryGlobal,pagination,id_tipo_generoFK_IdTipoGenero);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoGenero(id_tipo_generoFK_IdTipoGenero);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdTipoGenero",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdTipoGenero",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoIdentificacion")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoIdentificacion(finalQueryGlobal,pagination,id_tipo_identificacionFK_IdTipoIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoIdentificacion(finalQueryGlobal,pagination,id_tipo_identificacionFK_IdTipoIdentificacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoIdentificacion(id_tipo_identificacionFK_IdTipoIdentificacion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdTipoIdentificacion",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdTipoIdentificacion",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoListaPrecio")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoListaPrecio(id_tipo_lista_precioFK_IdTipoListaPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoListaPrecio(finalQueryGlobal,pagination,id_tipo_lista_precioFK_IdTipoListaPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoListaPrecio(id_tipo_lista_precioFK_IdTipoListaPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoListaPrecio(id_tipo_lista_precioFK_IdTipoListaPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoListaPrecio(finalQueryGlobal,pagination,id_tipo_lista_precioFK_IdTipoListaPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoListaPrecio(id_tipo_lista_precioFK_IdTipoListaPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoListaPrecio(id_tipo_lista_precioFK_IdTipoListaPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdTipoListaPrecio",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdTipoListaPrecio",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoNivelEdu")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoNivelEdu(id_tipo_nivel_eduFK_IdTipoNivelEdu);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoNivelEdu(finalQueryGlobal,pagination,id_tipo_nivel_eduFK_IdTipoNivelEdu);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoNivelEdu(id_tipo_nivel_eduFK_IdTipoNivelEdu);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoNivelEdu(id_tipo_nivel_eduFK_IdTipoNivelEdu);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoNivelEdu(finalQueryGlobal,pagination,id_tipo_nivel_eduFK_IdTipoNivelEdu);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoNivelEdu(id_tipo_nivel_eduFK_IdTipoNivelEdu);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoNivelEdu(id_tipo_nivel_eduFK_IdTipoNivelEdu);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdTipoNivelEdu",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdTipoNivelEdu",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPrecio")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdTipoPrecio",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdTipoPrecio",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdVendedor",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdVendedor",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdZona")) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos()==null||parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrocarteradefectos==null|| parametrocarteradefectos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
						parametrocarteradefectosAux.addAll(parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectosAux=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectosAux.addAll(parametrocarteradefectos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroCarteraDefectoConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroCarteraDefectos("FK_IdZona",parametrocarteradefectoLogic.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroCarteraDefectos("FK_IdZona",parametrocarteradefectos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoLogic.setParametroCarteraDefectos(new ArrayList<ParametroCarteraDefecto>());
						parametrocarteradefectoLogic.getParametroCarteraDefectos().addAll(parametrocarteradefectosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectos=new ArrayList<ParametroCarteraDefecto>();
							parametrocarteradefectos.addAll(parametrocarteradefectosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroCarteraDefecto();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroCarteraDefecto();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrocarteradefectoLogic.getParametroCarteraDefectos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrocarteradefectos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrocarteradefectoLogic.getParametroCarteraDefectos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrocarteradefectos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroCarteraDefecto parametrocarteradefecto) {
		Boolean permite=true;
		
		if(this.parametrocarteradefecto.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroCarteraDefectoConstantesFunciones.getOrderByListaParametroCarteraDefecto();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroCarteraDefectoConstantesFunciones.getOrderByListaParametroCarteraDefecto();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
				if(parametrocarteradefecto.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocarteradefectoTotales=parametrocarteradefecto;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCarteraDefecto parametrocarteradefecto:this.parametrocarteradefectos) {
				if(parametrocarteradefecto.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocarteradefectoTotales=parametrocarteradefecto;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.parametrocarteradefectoAux=new ParametroCarteraDefecto();
			this.parametrocarteradefectoAux.setsType(Constantes2.S_TOTALES);
			this.parametrocarteradefectoAux.setIsNew(false);
			this.parametrocarteradefectoAux.setIsChanged(false);
			this.parametrocarteradefectoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ParametroCarteraDefectoConstantesFunciones.TotalizarValoresFilaParametroCarteraDefecto(this.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.parametrocarteradefectoAux);
				
				this.parametrocarteradefectoLogic.getParametroCarteraDefectos().add(this.parametrocarteradefectoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ParametroCarteraDefectoConstantesFunciones.TotalizarValoresFilaParametroCarteraDefecto(this.parametrocarteradefectos,this.parametrocarteradefectoAux);
				
				this.parametrocarteradefectos.add(this.parametrocarteradefectoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrocarteradefectoTotales=new ParametroCarteraDefecto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrocarteradefectoLogic.getParametroCarteraDefectos().remove(parametrocarteradefectoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrocarteradefectos.remove(parametrocarteradefectoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrocarteradefectoTotales=new ParametroCarteraDefecto();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
				if(parametrocarteradefecto.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocarteradefectoTotales=parametrocarteradefecto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroCarteraDefectoConstantesFunciones.TotalizarValoresFilaParametroCarteraDefecto(this.parametrocarteradefectoLogic.getParametroCarteraDefectos(),parametrocarteradefectoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroCarteraDefecto parametrocarteradefecto:this.parametrocarteradefectos) {
				if(parametrocarteradefecto.getsType().equals(Constantes2.S_TOTALES)) {
					parametrocarteradefectoTotales=parametrocarteradefecto;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroCarteraDefectoConstantesFunciones.TotalizarValoresFilaParametroCarteraDefecto(this.parametrocarteradefectos,parametrocarteradefectoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroCarteraDefectosFK_IdCiudad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdDia()throws Exception {
		try {
			sAccionBusqueda="FK_IdDia";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdEstadoCivil()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoCivil";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdEstadoLegal()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoLegal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdPaisNacionalidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdPaisNacionalidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdProvincia()throws Exception {
		try {
			sAccionBusqueda="FK_IdProvincia";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdRegion()throws Exception {
		try {
			sAccionBusqueda="FK_IdRegion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdRuta()throws Exception {
		try {
			sAccionBusqueda="FK_IdRuta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoGenero()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGenero";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoIdentificacion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoIdentificacion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoListaPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoListaPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoNivelEdu()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoNivelEdu";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroCarteraDefectosFK_IdZona()throws Exception {
		try {
			sAccionBusqueda="FK_IdZona";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroCarteraDefectosFK_IdCiudad(String sFinalQuery,Long id_ciudad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdCiudad(sFinalQuery,this.pagination,id_ciudad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdDia(String sFinalQuery,Long id_dia)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdDia(sFinalQuery,this.pagination,id_dia);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdEstadoCivil(String sFinalQuery,Long id_estado_civil)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEstadoCivil(sFinalQuery,this.pagination,id_estado_civil);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdEstadoLegal(String sFinalQuery,Long id_estado_legal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdEstadoLegal(sFinalQuery,this.pagination,id_estado_legal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdPaisNacionalidad(String sFinalQuery,Long id_pais_nacionalidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdPaisNacionalidad(sFinalQuery,this.pagination,id_pais_nacionalidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdProvincia(String sFinalQuery,Long id_provincia)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdProvincia(sFinalQuery,this.pagination,id_provincia);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdRegion(String sFinalQuery,Long id_region)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdRegion(sFinalQuery,this.pagination,id_region);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdRuta(String sFinalQuery,Long id_ruta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdRuta(sFinalQuery,this.pagination,id_ruta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoGenero(String sFinalQuery,Long id_tipo_genero)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoGenero(sFinalQuery,this.pagination,id_tipo_genero);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoIdentificacion(String sFinalQuery,Long id_tipo_identificacion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoIdentificacion(sFinalQuery,this.pagination,id_tipo_identificacion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoListaPrecio(String sFinalQuery,Long id_tipo_lista_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoListaPrecio(sFinalQuery,this.pagination,id_tipo_lista_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoNivelEdu(String sFinalQuery,Long id_tipo_nivel_edu)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoNivelEdu(sFinalQuery,this.pagination,id_tipo_nivel_edu);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdTipoPrecio(String sFinalQuery,Long id_tipo_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdTipoPrecio(sFinalQuery,this.pagination,id_tipo_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroCarteraDefectosFK_IdZona(String sFinalQuery,Long id_zona)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLogic.getParametroCarteraDefectosFK_IdZona(sFinalQuery,this.pagination,id_zona);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroCarteraDefecto() {
		this.isPermisoTodoParametroCarteraDefecto=false;
		this.isPermisoNuevoParametroCarteraDefecto=false;
		this.isPermisoActualizarParametroCarteraDefecto=false;
		this.isPermisoActualizarOriginalParametroCarteraDefecto=false;
		this.isPermisoEliminarParametroCarteraDefecto=false;
		this.isPermisoGuardarCambiosParametroCarteraDefecto=false;
		this.isPermisoConsultaParametroCarteraDefecto=false;
		this.isPermisoBusquedaParametroCarteraDefecto=false;
		this.isPermisoReporteParametroCarteraDefecto=false;		
		this.isPermisoOrdenParametroCarteraDefecto=false;		
		this.isPermisoPaginacionMedioParametroCarteraDefecto=false;		
		this.isPermisoPaginacionAltoParametroCarteraDefecto=false;
		this.isPermisoPaginacionTodoParametroCarteraDefecto=false;
		this.isPermisoCopiarParametroCarteraDefecto=false;		
		this.isPermisoVerFormParametroCarteraDefecto=false;		
		this.isPermisoDuplicarParametroCarteraDefecto=false;		
		this.isPermisoOrdenParametroCarteraDefecto=false;		
	}
	
	public void setPermisosUsuarioParametroCarteraDefecto(Boolean isPermiso) {
		this.isPermisoTodoParametroCarteraDefecto=isPermiso;
		this.isPermisoNuevoParametroCarteraDefecto=isPermiso;
		this.isPermisoActualizarParametroCarteraDefecto=isPermiso;
		this.isPermisoActualizarOriginalParametroCarteraDefecto=isPermiso;
		this.isPermisoEliminarParametroCarteraDefecto=isPermiso;
		this.isPermisoGuardarCambiosParametroCarteraDefecto=isPermiso;
		this.isPermisoConsultaParametroCarteraDefecto=isPermiso;
		this.isPermisoBusquedaParametroCarteraDefecto=isPermiso;
		this.isPermisoReporteParametroCarteraDefecto=isPermiso;
		this.isPermisoOrdenParametroCarteraDefecto=isPermiso;		
		this.isPermisoPaginacionMedioParametroCarteraDefecto=isPermiso;		
		this.isPermisoPaginacionAltoParametroCarteraDefecto=isPermiso;		
		this.isPermisoPaginacionTodoParametroCarteraDefecto=isPermiso;		
		this.isPermisoCopiarParametroCarteraDefecto=isPermiso;		
		this.isPermisoVerFormParametroCarteraDefecto=isPermiso;		
		this.isPermisoDuplicarParametroCarteraDefecto=isPermiso;
		this.isPermisoOrdenParametroCarteraDefecto=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroCarteraDefecto(Boolean isPermiso) {
		//this.isPermisoTodoParametroCarteraDefecto=isPermiso;
		this.isPermisoNuevoParametroCarteraDefecto=isPermiso;
		this.isPermisoActualizarParametroCarteraDefecto=isPermiso;
		this.isPermisoActualizarOriginalParametroCarteraDefecto=isPermiso;
		this.isPermisoEliminarParametroCarteraDefecto=isPermiso;
		this.isPermisoGuardarCambiosParametroCarteraDefecto=isPermiso;
		//this.isPermisoConsultaParametroCarteraDefecto=isPermiso;
		//this.isPermisoBusquedaParametroCarteraDefecto=isPermiso;
		//this.isPermisoReporteParametroCarteraDefecto=isPermiso;
		//this.isPermisoOrdenParametroCarteraDefecto=isPermiso;		
		//this.isPermisoPaginacionMedioParametroCarteraDefecto=isPermiso;		
		//this.isPermisoPaginacionAltoParametroCarteraDefecto=isPermiso;		
		//this.isPermisoPaginacionTodoParametroCarteraDefecto=isPermiso;		
		//this.isPermisoCopiarParametroCarteraDefecto=isPermiso;		
		//this.isPermisoDuplicarParametroCarteraDefecto=isPermiso;
		//this.isPermisoOrdenParametroCarteraDefecto=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroCarteraDefectoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ParametroCarteraDefectoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroCarteraDefectoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioParametroCarteraDefectoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroCarteraDefectoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroCarteraDefectoClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioParametroCarteraDefecto() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroCarteraDefectoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroCarteraDefectoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroCarteraDefecto=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroCarteraDefecto=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroCarteraDefecto=this.isPermisoActualizarParametroCarteraDefecto;
			this.isPermisoEliminarParametroCarteraDefecto=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroCarteraDefecto=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroCarteraDefecto=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroCarteraDefecto=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroCarteraDefecto=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroCarteraDefecto=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroCarteraDefecto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroCarteraDefecto=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroCarteraDefecto=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroCarteraDefecto=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroCarteraDefecto=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroCarteraDefecto=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroCarteraDefecto=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroCarteraDefecto=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroCarteraDefecto.setToolTipText(this.jTableDatosParametroCarteraDefecto.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroCarteraDefecto(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroCarteraDefecto(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroCarteraDefectoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroCarteraDefectoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroCarteraDefecto() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroCarteraDefectoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.regionsForeignKey=new ArrayList();
				this.provinciasForeignKey=new ArrayList();
				this.ciudadsForeignKey=new ArrayList();
				this.zonasForeignKey=new ArrayList();
				this.tipoidentificacionsForeignKey=new ArrayList();
				this.tiponiveledusForeignKey=new ArrayList();
				this.paisnacionalidadsForeignKey=new ArrayList();
				this.tipogenerosForeignKey=new ArrayList();
				this.estadocivilsForeignKey=new ArrayList();
				this.estadolegalsForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.rutasForeignKey=new ArrayList();
				this.diasForeignKey=new ArrayList();
				this.tipopreciosForeignKey=new ArrayList();
				this.tipolistapreciosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroCarteraDefectoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroCarteraDefectoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroCarteraDefectoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyRegionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProvinciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoIdentificacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoNivelEduListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisNacionalidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoLegalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyRutaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyDiaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoListaPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRegionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.regionsForeignKey==null||this.regionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=RegionConstantesFunciones.getArrayColumnasGlobalesRegion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RegionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=RegionConstantesFunciones.SFINALQUERY;

				this.cargarCombosRegionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProvinciaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.provinciasForeignKey==null||this.provinciasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProvinciaConstantesFunciones.getArrayColumnasGlobalesProvincia(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProvinciaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProvinciaConstantesFunciones.SFINALQUERY;

				this.cargarCombosProvinciasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZonaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ZonaConstantesFunciones.SFINALQUERY;

				this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIdentificacionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoidentificacionsForeignKey==null||this.tipoidentificacionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoIdentificacionConstantesFunciones.getArrayColumnasGlobalesTipoIdentificacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIdentificacionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoIdentificacionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoIdentificacionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoNivelEduListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiponiveledusForeignKey==null||this.tiponiveledusForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoNivelEduConstantesFunciones.getArrayColumnasGlobalesTipoNivelEdu(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoNivelEduConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoNivelEduConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoNivelEdusForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisNacionalidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paisnacionalidadsForeignKey==null||this.paisnacionalidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaisNacionalidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGeneroListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGeneroConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivilListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoCivilConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoLegalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadolegalsForeignKey==null||this.estadolegalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoLegalConstantesFunciones.getArrayColumnasGlobalesEstadoLegal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoLegalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoLegalConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoLegalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRutaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.rutasForeignKey==null||this.rutasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=RutaConstantesFunciones.getArrayColumnasGlobalesRuta(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=RutaConstantesFunciones.SFINALQUERY;

				this.cargarCombosRutasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDiaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.diasForeignKey==null||this.diasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=DiaConstantesFunciones.getArrayColumnasGlobalesDia(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DiaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=DiaConstantesFunciones.SFINALQUERY;

				this.cargarCombosDiasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoListaPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipolistapreciosForeignKey==null||this.tipolistapreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoListaPrecioConstantesFunciones.getArrayColumnasGlobalesTipoListaPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoListaPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoListaPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoListaPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroCarteraDefectoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroCarteraDefectoParameterReturnGeneral parametrocarteradefectoReturnGeneral=new ParametroCarteraDefectoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_empresaParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_empresaParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_sucursalParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_sucursalParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_paisParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_paisParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalRegion="";

				if(cargarCombosDependencia && ((this.regionsForeignKey==null||this.regionsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_regionParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_regionParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionRegion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=RegionConstantesFunciones.getArrayColumnasGlobalesRegion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalRegion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RegionConstantesFunciones.TABLENAME);

						finalQueryGlobalRegion=Funciones.GetFinalQueryAppend(finalQueryGlobalRegion, "");
						finalQueryGlobalRegion+=RegionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosRegionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalRegion=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidRegionActual();
					}
				} else {
					finalQueryGlobalRegion="NONE";
				}


				String finalQueryGlobalProvincia="";

				if(cargarCombosDependencia && ((this.provinciasForeignKey==null||this.provinciasForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_provinciaParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_provinciaParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProvinciaConstantesFunciones.getArrayColumnasGlobalesProvincia(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProvincia=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProvinciaConstantesFunciones.TABLENAME);

						finalQueryGlobalProvincia=Funciones.GetFinalQueryAppend(finalQueryGlobalProvincia, "");
						finalQueryGlobalProvincia+=ProvinciaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProvinciasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProvincia=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidProvinciaActual();
					}
				} else {
					finalQueryGlobalProvincia="NONE";
				}


				String finalQueryGlobalCiudad="";

				if(cargarCombosDependencia && ((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_ciudadParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_ciudadParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudad=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudad, "");
						finalQueryGlobalCiudad+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudad=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidCiudadActual();
					}
				} else {
					finalQueryGlobalCiudad="NONE";
				}


				String finalQueryGlobalZona="";

				if(((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_zonaParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_zonaParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalZona=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

						finalQueryGlobalZona=Funciones.GetFinalQueryAppend(finalQueryGlobalZona, "");
						finalQueryGlobalZona+=ZonaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalZona=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidZonaActual();
					}
				} else {
					finalQueryGlobalZona="NONE";
				}


				String finalQueryGlobalTipoIdentificacion="";

				if(((this.tipoidentificacionsForeignKey==null||this.tipoidentificacionsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_identificacionParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_identificacionParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoIdentificacionConstantesFunciones.getArrayColumnasGlobalesTipoIdentificacion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoIdentificacion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoIdentificacionConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoIdentificacion=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoIdentificacion, "");
						finalQueryGlobalTipoIdentificacion+=TipoIdentificacionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoIdentificacionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoIdentificacion=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidTipoIdentificacionActual();
					}
				} else {
					finalQueryGlobalTipoIdentificacion="NONE";
				}


				String finalQueryGlobalTipoNivelEdu="";

				if(((this.tiponiveledusForeignKey==null||this.tiponiveledusForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_nivel_eduParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_nivel_eduParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoNivelEduConstantesFunciones.getArrayColumnasGlobalesTipoNivelEdu(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoNivelEdu=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoNivelEduConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoNivelEdu=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoNivelEdu, "");
						finalQueryGlobalTipoNivelEdu+=TipoNivelEduConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoNivelEdusForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoNivelEdu=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidTipoNivelEduActual();
					}
				} else {
					finalQueryGlobalTipoNivelEdu="NONE";
				}


				String finalQueryGlobalPaisNacionalidad="";

				if(((this.paisnacionalidadsForeignKey==null||this.paisnacionalidadsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_pais_nacionalidadParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_pais_nacionalidadParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPaisNacionalidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPaisNacionalidad=Funciones.GetFinalQueryAppend(finalQueryGlobalPaisNacionalidad, "");
						finalQueryGlobalPaisNacionalidad+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaisNacionalidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPaisNacionalidad=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidPaisNacionalidadActual();
					}
				} else {
					finalQueryGlobalPaisNacionalidad="NONE";
				}


				String finalQueryGlobalTipoGenero="";

				if(((this.tipogenerosForeignKey==null||this.tipogenerosForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_generoParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_generoParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGeneroConstantesFunciones.getArrayColumnasGlobalesTipoGenero(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGenero=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGeneroConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGenero=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGenero, "");
						finalQueryGlobalTipoGenero+=TipoGeneroConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGenerosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGenero=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidTipoGeneroActual();
					}
				} else {
					finalQueryGlobalTipoGenero="NONE";
				}


				String finalQueryGlobalEstadoCivil="";

				if(((this.estadocivilsForeignKey==null||this.estadocivilsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_estado_civilParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_estado_civilParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoCivilConstantesFunciones.getArrayColumnasGlobalesEstadoCivil(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoCivil=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoCivilConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoCivil=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoCivil, "");
						finalQueryGlobalEstadoCivil+=EstadoCivilConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoCivilsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoCivil=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidEstadoCivilActual();
					}
				} else {
					finalQueryGlobalEstadoCivil="NONE";
				}


				String finalQueryGlobalEstadoLegal="";

				if(((this.estadolegalsForeignKey==null||this.estadolegalsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_estado_legalParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_estado_legalParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoLegalConstantesFunciones.getArrayColumnasGlobalesEstadoLegal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoLegal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoLegalConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoLegal=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoLegal, "");
						finalQueryGlobalEstadoLegal+=EstadoLegalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoLegalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoLegal=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidEstadoLegalActual();
					}
				} else {
					finalQueryGlobalEstadoLegal="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_cuenta_contableParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_cuenta_contableParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_vendedorParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_vendedorParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalRuta="";

				if(((this.rutasForeignKey==null||this.rutasForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_rutaParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_rutaParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionRuta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=RutaConstantesFunciones.getArrayColumnasGlobalesRuta(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalRuta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,RutaConstantesFunciones.TABLENAME);

						finalQueryGlobalRuta=Funciones.GetFinalQueryAppend(finalQueryGlobalRuta, "");
						finalQueryGlobalRuta+=RutaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosRutasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalRuta=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidRutaActual();
					}
				} else {
					finalQueryGlobalRuta="NONE";
				}


				String finalQueryGlobalDia="";

				if(((this.diasForeignKey==null||this.diasForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_diaParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_diaParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionDia()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=DiaConstantesFunciones.getArrayColumnasGlobalesDia(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalDia=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DiaConstantesFunciones.TABLENAME);

						finalQueryGlobalDia=Funciones.GetFinalQueryAppend(finalQueryGlobalDia, "");
						finalQueryGlobalDia+=DiaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosDiasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalDia=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidDiaActual();
					}
				} else {
					finalQueryGlobalDia="NONE";
				}


				String finalQueryGlobalTipoPrecio="";

				if(((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_precioParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_precioParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPrecio, "");
						finalQueryGlobalTipoPrecio+=TipoPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPrecio=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidTipoPrecioActual();
					}
				} else {
					finalQueryGlobalTipoPrecio="NONE";
				}


				String finalQueryGlobalTipoListaPrecio="";

				if(((this.tipolistapreciosForeignKey==null||this.tipolistapreciosForeignKey.size()<=0) && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_lista_precioParametroCarteraDefecto)
					 || (this.esRecargarFks && this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_lista_precioParametroCarteraDefecto)) {

					if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoListaPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoListaPrecioConstantesFunciones.getArrayColumnasGlobalesTipoListaPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoListaPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoListaPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoListaPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoListaPrecio, "");
						finalQueryGlobalTipoListaPrecio+=TipoListaPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoListaPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoListaPrecio=" WHERE " + ConstantesSql.ID + "="+parametrocarteradefectoSessionBean.getlidTipoListaPrecioActual();
					}
				} else {
					finalQueryGlobalTipoListaPrecio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrocarteradefectoReturnGeneral=parametrocarteradefectoLogic.cargarCombosLoteForeignKeyParametroCarteraDefecto(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalPais,finalQueryGlobalRegion,finalQueryGlobalProvincia,finalQueryGlobalCiudad,finalQueryGlobalZona,finalQueryGlobalTipoIdentificacion,finalQueryGlobalTipoNivelEdu,finalQueryGlobalPaisNacionalidad,finalQueryGlobalTipoGenero,finalQueryGlobalEstadoCivil,finalQueryGlobalEstadoLegal,finalQueryGlobalCuentaContable,finalQueryGlobalVendedor,finalQueryGlobalRuta,finalQueryGlobalDia,finalQueryGlobalTipoPrecio,finalQueryGlobalTipoListaPrecio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrocarteradefectoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=parametrocarteradefectoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=parametrocarteradefectoReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalRegion.equals("NONE")) {
				this.regionsForeignKey=parametrocarteradefectoReturnGeneral.getregionsForeignKey();
			}

			if(!finalQueryGlobalProvincia.equals("NONE")) {
				this.provinciasForeignKey=parametrocarteradefectoReturnGeneral.getprovinciasForeignKey();
			}

			if(!finalQueryGlobalCiudad.equals("NONE")) {
				this.ciudadsForeignKey=parametrocarteradefectoReturnGeneral.getciudadsForeignKey();
			}

			if(!finalQueryGlobalZona.equals("NONE")) {
				this.zonasForeignKey=parametrocarteradefectoReturnGeneral.getzonasForeignKey();
			}

			if(!finalQueryGlobalTipoIdentificacion.equals("NONE")) {
				this.tipoidentificacionsForeignKey=parametrocarteradefectoReturnGeneral.gettipoidentificacionsForeignKey();
			}

			if(!finalQueryGlobalTipoNivelEdu.equals("NONE")) {
				this.tiponiveledusForeignKey=parametrocarteradefectoReturnGeneral.gettiponiveledusForeignKey();
			}

			if(!finalQueryGlobalPaisNacionalidad.equals("NONE")) {
				this.paisnacionalidadsForeignKey=parametrocarteradefectoReturnGeneral.getpaisnacionalidadsForeignKey();
			}

			if(!finalQueryGlobalTipoGenero.equals("NONE")) {
				this.tipogenerosForeignKey=parametrocarteradefectoReturnGeneral.gettipogenerosForeignKey();
			}

			if(!finalQueryGlobalEstadoCivil.equals("NONE")) {
				this.estadocivilsForeignKey=parametrocarteradefectoReturnGeneral.getestadocivilsForeignKey();
			}

			if(!finalQueryGlobalEstadoLegal.equals("NONE")) {
				this.estadolegalsForeignKey=parametrocarteradefectoReturnGeneral.getestadolegalsForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=parametrocarteradefectoReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=parametrocarteradefectoReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalRuta.equals("NONE")) {
				this.rutasForeignKey=parametrocarteradefectoReturnGeneral.getrutasForeignKey();
			}

			if(!finalQueryGlobalDia.equals("NONE")) {
				this.diasForeignKey=parametrocarteradefectoReturnGeneral.getdiasForeignKey();
			}

			if(!finalQueryGlobalTipoPrecio.equals("NONE")) {
				this.tipopreciosForeignKey=parametrocarteradefectoReturnGeneral.gettipopreciosForeignKey();
			}

			if(!finalQueryGlobalTipoListaPrecio.equals("NONE")) {
				this.tipolistapreciosForeignKey=parametrocarteradefectoReturnGeneral.gettipolistapreciosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroCarteraDefecto()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyRegion();
			this.addItemDefectoCombosForeignKeyProvincia();
			this.addItemDefectoCombosForeignKeyCiudad();
			this.addItemDefectoCombosForeignKeyZona();
			this.addItemDefectoCombosForeignKeyTipoIdentificacion();
			this.addItemDefectoCombosForeignKeyTipoNivelEdu();
			this.addItemDefectoCombosForeignKeyPaisNacionalidad();
			this.addItemDefectoCombosForeignKeyTipoGenero();
			this.addItemDefectoCombosForeignKeyEstadoCivil();
			this.addItemDefectoCombosForeignKeyEstadoLegal();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeyRuta();
			this.addItemDefectoCombosForeignKeyDia();
			this.addItemDefectoCombosForeignKeyTipoPrecio();
			this.addItemDefectoCombosForeignKeyTipoListaPrecio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.parametrocarteradefectoSessionBean==null) {
				this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
			}

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyRegion()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionRegion()) {
				Region region=new Region();
				RegionConstantesFunciones.setRegionDescripcion(region,Constantes.SMENSAJE_ESCOJA_OPCION);
				region.setId(null);

				if(!RegionConstantesFunciones.ExisteEnLista(this.regionsForeignKey,region,true)) {

					this.regionsForeignKey.add(0,region);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProvincia()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionProvincia()) {
				Provincia provincia=new Provincia();
				ProvinciaConstantesFunciones.setProvinciaDescripcion(provincia,Constantes.SMENSAJE_ESCOJA_OPCION);
				provincia.setId(null);

				if(!ProvinciaConstantesFunciones.ExisteEnLista(this.provinciasForeignKey,provincia,true)) {

					this.provinciasForeignKey.add(0,provincia);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudad()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				Ciudad ciudad=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudad,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudad.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadsForeignKey,ciudad,true)) {

					this.ciudadsForeignKey.add(0,ciudad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyZona()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				Zona zona=new Zona();
				ZonaConstantesFunciones.setZonaDescripcion(zona,Constantes.SMENSAJE_ESCOJA_OPCION);
				zona.setId(null);

				if(!ZonaConstantesFunciones.ExisteEnLista(this.zonasForeignKey,zona,true)) {

					this.zonasForeignKey.add(0,zona);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoIdentificacion()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoIdentificacion()) {
				TipoIdentificacion tipoidentificacion=new TipoIdentificacion();
				TipoIdentificacionConstantesFunciones.setTipoIdentificacionDescripcion(tipoidentificacion,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoidentificacion.setId(null);

				if(!TipoIdentificacionConstantesFunciones.ExisteEnLista(this.tipoidentificacionsForeignKey,tipoidentificacion,true)) {

					this.tipoidentificacionsForeignKey.add(0,tipoidentificacion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoNivelEdu()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoNivelEdu()) {
				TipoNivelEdu tiponiveledu=new TipoNivelEdu();
				TipoNivelEduConstantesFunciones.setTipoNivelEduDescripcion(tiponiveledu,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiponiveledu.setId(null);

				if(!TipoNivelEduConstantesFunciones.ExisteEnLista(this.tiponiveledusForeignKey,tiponiveledu,true)) {

					this.tiponiveledusForeignKey.add(0,tiponiveledu);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPaisNacionalidad()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionPaisNacionalidad()) {
				Pais paisnacionalidad=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(paisnacionalidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				paisnacionalidad.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paisnacionalidadsForeignKey,paisnacionalidad,true)) {

					this.paisnacionalidadsForeignKey.add(0,paisnacionalidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGenero()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoGenero()) {
				TipoGenero tipogenero=new TipoGenero();
				TipoGeneroConstantesFunciones.setTipoGeneroDescripcion(tipogenero,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogenero.setId(null);

				if(!TipoGeneroConstantesFunciones.ExisteEnLista(this.tipogenerosForeignKey,tipogenero,true)) {

					this.tipogenerosForeignKey.add(0,tipogenero);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoCivil()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoCivil()) {
				EstadoCivil estadocivil=new EstadoCivil();
				EstadoCivilConstantesFunciones.setEstadoCivilDescripcion(estadocivil,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadocivil.setId(null);

				if(!EstadoCivilConstantesFunciones.ExisteEnLista(this.estadocivilsForeignKey,estadocivil,true)) {

					this.estadocivilsForeignKey.add(0,estadocivil);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoLegal()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoLegal()) {
				EstadoLegal estadolegal=new EstadoLegal();
				EstadoLegalConstantesFunciones.setEstadoLegalDescripcion(estadolegal,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadolegal.setId(null);

				if(!EstadoLegalConstantesFunciones.ExisteEnLista(this.estadolegalsForeignKey,estadolegal,true)) {

					this.estadolegalsForeignKey.add(0,estadolegal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyRuta()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionRuta()) {
				Ruta ruta=new Ruta();
				RutaConstantesFunciones.setRutaDescripcion(ruta,Constantes.SMENSAJE_ESCOJA_OPCION);
				ruta.setId(null);

				if(!RutaConstantesFunciones.ExisteEnLista(this.rutasForeignKey,ruta,true)) {

					this.rutasForeignKey.add(0,ruta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyDia()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionDia()) {
				Dia dia=new Dia();
				DiaConstantesFunciones.setDiaDescripcion(dia,Constantes.SMENSAJE_ESCOJA_OPCION);
				dia.setId(null);

				if(!DiaConstantesFunciones.ExisteEnLista(this.diasForeignKey,dia,true)) {

					this.diasForeignKey.add(0,dia);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				TipoPrecio tipoprecio=new TipoPrecio();
				TipoPrecioConstantesFunciones.setTipoPrecioDescripcion(tipoprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprecio.setId(null);

				if(!TipoPrecioConstantesFunciones.ExisteEnLista(this.tipopreciosForeignKey,tipoprecio,true)) {

					this.tipopreciosForeignKey.add(0,tipoprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoListaPrecio()throws Exception {
		try {

			if(!this.parametrocarteradefectoSessionBean.getisBusquedaDesdeForeignKeySesionTipoListaPrecio()) {
				TipoListaPrecio tipolistaprecio=new TipoListaPrecio();
				TipoListaPrecioConstantesFunciones.setTipoListaPrecioDescripcion(tipolistaprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipolistaprecio.setId(null);

				if(!TipoListaPrecioConstantesFunciones.ExisteEnLista(this.tipolistapreciosForeignKey,tipolistaprecio,true)) {

					this.tipolistapreciosForeignKey.add(0,tipolistaprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroCarteraDefecto()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroCarteraDefecto(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyPais(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyPais(JComboBox jComboBoxPaisGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Pais paisLocal=(Pais)jComboBoxPaisGenerico.getSelectedItem();

			if(paisLocal!=null  && paisLocal.getId()!=null  && paisLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_pais="+paisLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboRegion=sFinalQueryCombo;

			this.regionsForeignKey=new ArrayList<Region>();
			this.cargarCombosForeignKeyRegion(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProvincia=sFinalQueryCombo;

			this.provinciasForeignKey=new ArrayList<Provincia>();
			this.cargarCombosForeignKeyProvincia(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyPais(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.addItemListener(new ComboBoxItemListener(this,"id_paisParametroCarteraDefecto"));
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.addFocusListener(new ComboBoxFocusListener(this,"id_paisParametroCarteraDefecto"));
					}
				} else {
					if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.addActionListener(new ComboBoxActionListener(this,"id_paisParametroCarteraDefecto"));
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.addFocusListener(new ComboBoxFocusListener(this,"id_paisParametroCarteraDefecto"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_paisFK_IdPaisParametroCarteraDefecto"));

						this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_paisFK_IdPaisParametroCarteraDefecto"));

					} else {
						this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_paisFK_IdPaisParametroCarteraDefecto"));

						this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_paisFK_IdPaisParametroCarteraDefecto"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyParametroCarteraDefecto()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroCarteraDefecto();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto)throws Exception {	
		try {
			
			this.setActualPaisForeignKey(parametrocarteradefecto.getid_pais(),false,"Formulario");
			this.setActualRegionForeignKey(parametrocarteradefecto.getid_region(),false,"Formulario");
			this.setActualProvinciaForeignKey(parametrocarteradefecto.getid_provincia(),false,"Formulario");
			this.setActualCiudadForeignKey(parametrocarteradefecto.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(parametrocarteradefecto.getid_zona(),false,"Formulario");
			this.setActualTipoIdentificacionForeignKey(parametrocarteradefecto.getid_tipo_identificacion(),false,"Formulario");
			this.setActualTipoNivelEduForeignKey(parametrocarteradefecto.getid_tipo_nivel_edu(),false,"Formulario");
			this.setActualPaisNacionalidadForeignKey(parametrocarteradefecto.getid_pais_nacionalidad(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(parametrocarteradefecto.getid_tipo_genero(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(parametrocarteradefecto.getid_estado_civil(),false,"Formulario");
			this.setActualEstadoLegalForeignKey(parametrocarteradefecto.getid_estado_legal(),false,"Formulario");
			this.setActualCuentaContableForeignKey(parametrocarteradefecto.getid_cuenta_contable(),false,"Formulario");
			this.setActualVendedorForeignKey(parametrocarteradefecto.getid_vendedor(),false,"Formulario");
			this.setActualRutaForeignKey(parametrocarteradefecto.getid_ruta(),false,"Formulario");
			this.setActualDiaForeignKey(parametrocarteradefecto.getid_dia(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(parametrocarteradefecto.getid_tipo_precio(),false,"Formulario");
			this.setActualTipoListaPrecioForeignKey(parametrocarteradefecto.getid_tipo_lista_precio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroCarteraDefecto()throws Exception {	
		try {
			
			this.setActualPaisForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualRegionForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_region(),false,"Formulario");
			this.setActualProvinciaForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_provincia(),false,"Formulario");
			this.setActualCiudadForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_ciudad(),false,"Formulario");
			this.setActualZonaForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_zona(),false,"Formulario");
			this.setActualTipoIdentificacionForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_tipo_identificacion(),false,"Formulario");
			this.setActualTipoNivelEduForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_tipo_nivel_edu(),false,"Formulario");
			this.setActualPaisNacionalidadForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_pais_nacionalidad(),false,"Formulario");
			this.setActualTipoGeneroForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_tipo_genero(),false,"Formulario");
			this.setActualEstadoCivilForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_estado_civil(),false,"Formulario");
			this.setActualEstadoLegalForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_estado_legal(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualVendedorForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualRutaForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_ruta(),false,"Formulario");
			this.setActualDiaForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_dia(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_tipo_precio(),false,"Formulario");
			this.setActualTipoListaPrecioForeignKey(this.parametrocarteradefectoConstantesFunciones.getid_tipo_lista_precio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroCarteraDefecto()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroCarteraDefecto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroCarteraDefecto()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroCarteraDefecto()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroCarteraDefecto()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameRegionsForeignKey("Todos");
			this.cargarCombosFrameProvinciasForeignKey("Todos");
			this.cargarCombosFrameCiudadsForeignKey("Todos");
			this.cargarCombosFrameZonasForeignKey("Todos");
			this.cargarCombosFrameTipoIdentificacionsForeignKey("Todos");
			this.cargarCombosFrameTipoNivelEdusForeignKey("Todos");
			this.cargarCombosFramePaisNacionalidadsForeignKey("Todos");
			this.cargarCombosFrameTipoGenerosForeignKey("Todos");
			this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
			this.cargarCombosFrameEstadoLegalsForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFrameRutasForeignKey("Todos");
			this.cargarCombosFrameDiasForeignKey("Todos");
			this.cargarCombosFrameTipoPreciosForeignKey("Todos");
			this.cargarCombosFrameTipoListaPreciosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroCarteraDefecto(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameRegionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoIdentificacionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoNivelEdusForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaisNacionalidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoLegalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameRutasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameDiasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoListaPreciosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroCarteraDefecto()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	





	public void recargarFormParametroCarteraDefectoPais(JComboBox<?> jComboBoxGenericoPais,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormParametroCarteraDefectoid_region(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
		this.recargarFormParametroCarteraDefectoid_provincia(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
		this.recargarFormParametroCarteraDefectoid_ciudad(jComboBoxGenericoPais,sFormularioTipoBusqueda,"Pais",false);
	}
































	
	



	public void recargarFormParametroCarteraDefectoid_region(JComboBox<?> jComboBoxGenericoRegion,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.parametrocarteradefecto,jComboBoxGenericoRegion);
			}

			if(this.parametrocarteradefecto.getid_pais()!=null && this.parametrocarteradefecto.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.parametrocarteradefecto.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualRegionForeignKey(this.parametrocarteradefecto.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosRegionsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameRegionsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormParametroCarteraDefectoid_provincia(JComboBox<?> jComboBoxGenericoProvincia,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.parametrocarteradefecto,jComboBoxGenericoProvincia);
			}

			if(this.parametrocarteradefecto.getid_pais()!=null && this.parametrocarteradefecto.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.parametrocarteradefecto.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProvinciaForeignKey(this.parametrocarteradefecto.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosProvinciasForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormParametroCarteraDefectoid_ciudad(JComboBox<?> jComboBoxGenericoCiudad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Pais")){
				this.setActualParaGuardarPaisForeignKey(this.parametrocarteradefecto,jComboBoxGenericoCiudad);
			}

			if(this.parametrocarteradefecto.getid_pais()!=null && this.parametrocarteradefecto.getid_pais()!=0L) {
				sFinalQuery+="  WHERE  id_pais="+this.parametrocarteradefecto.getid_pais();
			} else {
				sFinalQuery+="  WHERE  id_pais=-1";
			}



			//BUCLE RECURSIVO
			this.setActualCiudadForeignKey(this.parametrocarteradefecto.getid_pais(),true,sFormularioTipoBusqueda);

			this.cargarCombosCiudadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public ParametroCarteraDefectoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroCarteraDefectoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroCarteraDefectoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean(); 
		this.parametrocarteradefectoConstantesFunciones=new ParametroCarteraDefectoConstantesFunciones(); 
		this.parametrocarteradefectoBean=new ParametroCarteraDefecto();//(this.parametrocarteradefectoConstantesFunciones); 		
		this.parametrocarteradefectoReturnGeneral=new ParametroCarteraDefectoParameterReturnGeneral(); 
		
		this.parametrocarteradefectoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrocarteradefectoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroCarteraDefectoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroCarteraDefectoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroCarteraDefectoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroCarteraDefecto(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrocarteradefectoConstantesFunciones=new ParametroCarteraDefectoConstantesFunciones(); 
			this.parametrocarteradefectoBean=new ParametroCarteraDefecto();//this.parametrocarteradefectoConstantesFunciones); 			
			this.parametrocarteradefectoReturnGeneral=new ParametroCarteraDefectoParameterReturnGeneral(); 
		
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro Cartera Defecto Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.parametrocarteradefecto=new ParametroCarteraDefecto();
			this.parametrocarteradefectos = new ArrayList<ParametroCarteraDefecto>();
			this.parametrocarteradefectosAux = new ArrayList<ParametroCarteraDefecto>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic=new ParametroCarteraDefectoLogic();
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrocarteradefectoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrocarteradefectoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroCarteraDefecto);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroCarteraDefecto);	
					}
					
					if(this.jInternalFrameImportacionParametroCarteraDefecto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroCarteraDefecto);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroCarteraDefecto!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroCarteraDefecto);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroCarteraDefecto);
				this.jInternalFrameDetalleFormParametroCarteraDefecto.setVisible(false);
				this.jInternalFrameDetalleFormParametroCarteraDefecto.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroCarteraDefecto);
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroCarteraDefecto!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroCarteraDefecto);
					this.jInternalFrameImportacionParametroCarteraDefecto.setVisible(false);
					this.jInternalFrameImportacionParametroCarteraDefecto.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroCarteraDefecto!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroCarteraDefecto);
					this.jInternalFrameOrderByParametroCarteraDefecto.setVisible(false);
					this.jInternalFrameOrderByParametroCarteraDefecto.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroCarteraDefectoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroCarteraDefectoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrocarteradefectoReturnGeneral=new ParametroCarteraDefectoParameterReturnGeneral();
			
			this.parametrocarteradefectoParameterGeneral=new ParametroCarteraDefectoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrocarteradefectoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroCarteraDefectoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroCarteraDefectoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado(),this.parametrocarteradefectoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroCarteraDefectoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado(),this.parametrocarteradefectoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
			this.isVisibilidadCeldaDuplicarParametroCarteraDefecto=true;
			this.isVisibilidadCeldaCopiarParametroCarteraDefecto=true;
			this.isVisibilidadCeldaVerFormParametroCarteraDefecto=true;
			this.isVisibilidadCeldaOrdenParametroCarteraDefecto=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;
			
			
			this.isVisibilidadFK_IdCiudad=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdDia=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoCivil=true;
			this.isVisibilidadFK_IdEstadoLegal=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdPaisNacionalidad=true;
			this.isVisibilidadFK_IdProvincia=true;
			this.isVisibilidadFK_IdRegion=true;
			this.isVisibilidadFK_IdRuta=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoGenero=true;
			this.isVisibilidadFK_IdTipoIdentificacion=true;
			this.isVisibilidadFK_IdTipoListaPrecio=true;
			this.isVisibilidadFK_IdTipoNivelEdu=true;
			this.isVisibilidadFK_IdTipoPrecio=true;
			this.isVisibilidadFK_IdVendedor=true;
			this.isVisibilidadFK_IdZona=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroCarteraDefecto();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroCarteraDefecto(false);
			
			this.setPermisosUsuarioParametroCarteraDefecto();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado() && this.parametrocarteradefectoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroCarteraDefectoClasesRelacionadas();
			}
			
			if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroCarteraDefectoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroCarteraDefecto();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroCarteraDefecto();
			}
			
			if(!this.isPermisoBusquedaParametroCarteraDefecto) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroCarteraDefecto,this.isPermisoPaginacionMedioParametroCarteraDefecto,this.isPermisoPaginacionTodoParametroCarteraDefecto);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroCarteraDefectoConstantesFunciones.getTiposSeleccionarParametroCarteraDefecto());
				
				this.tiposColumnasSelect=ParametroCarteraDefectoConstantesFunciones.getTiposSeleccionarParametroCarteraDefecto(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroCarteraDefecto();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioParametroCarteraDefecto(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioParametroCarteraDefecto(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroCarteraDefecto() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.paisLogic=new PaisLogic();
			this.regionLogic=new RegionLogic();
			this.provinciaLogic=new ProvinciaLogic();
			this.ciudadLogic=new CiudadLogic();
			this.zonaLogic=new ZonaLogic();
			this.tipoidentificacionLogic=new TipoIdentificacionLogic();
			this.tiponiveleduLogic=new TipoNivelEduLogic();
			this.paisnacionalidadLogic=new PaisLogic();
			this.tipogeneroLogic=new TipoGeneroLogic();
			this.estadocivilLogic=new EstadoCivilLogic();
			this.estadolegalLogic=new EstadoLegalLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.vendedorLogic=new VendedorLogic();
			this.rutaLogic=new RutaLogic();
			this.diaLogic=new DiaLogic();
			this.tipoprecioLogic=new TipoPrecioLogic();
			this.tipolistaprecioLogic=new TipoListaPrecioLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrocarteradefectoImplementable= (ParametroCarteraDefectoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroCarteraDefectoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrocarteradefectoImplementableHome= (ParametroCarteraDefectoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroCarteraDefectoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrocarteradefectos= new ArrayList<ParametroCarteraDefecto>();
			this.parametrocarteradefectosEliminados= new ArrayList<ParametroCarteraDefecto>();
						
			this.isEsNuevoParametroCarteraDefecto=false;
			this.esParaAccionDesdeFormularioParametroCarteraDefecto=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.regionsForeignKey=new ArrayList<Region>() ;
			this.provinciasForeignKey=new ArrayList<Provincia>() ;
			this.ciudadsForeignKey=new ArrayList<Ciudad>() ;
			this.zonasForeignKey=new ArrayList<Zona>() ;
			this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>() ;
			this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>() ;
			this.paisnacionalidadsForeignKey=new ArrayList<Pais>() ;
			this.tipogenerosForeignKey=new ArrayList<TipoGenero>() ;
			this.estadocivilsForeignKey=new ArrayList<EstadoCivil>() ;
			this.estadolegalsForeignKey=new ArrayList<EstadoLegal>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.rutasForeignKey=new ArrayList<Ruta>() ;
			this.diasForeignKey=new ArrayList<Dia>() ;
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>() ;
			this.tipolistapreciosForeignKey=new ArrayList<TipoListaPrecio>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroCarteraDefecto(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroCarteraDefecto();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroCarteraDefectoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroCarteraDefecto(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroCarteraDefecto();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroCarteraDefecto();
			}
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroCarteraDefecto.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroCarteraDefecto(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroCarteraDefecto: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroCarteraDefecto() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroCarteraDefecto")) {
				iIndex=this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroCarteraDefecto();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyParametroCarteraDefecto(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroCarteraDefecto(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroCarteraDefecto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroCarteraDefectoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroCarteraDefecto();
		
		this.cargarCombosFrameForeignKeyParametroCarteraDefecto();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroCarteraDefecto();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroCarteraDefecto();
		}
	}
	
	

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRegion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyRegionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyRegion();
				this.cargarCombosFrameRegionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaRegion(this.regionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProvincia(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProvinciaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProvincia();
				this.cargarCombosFrameProvinciasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaProvincia(this.provinciasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCiudad(this.ciudadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZona(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaZona(this.zonasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoIdentificacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoIdentificacionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoIdentificacion();
				this.cargarCombosFrameTipoIdentificacionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoIdentificacion(this.tipoidentificacionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoNivelEdu(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoNivelEduListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoNivelEdu();
				this.cargarCombosFrameTipoNivelEdusForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoNivelEdu(this.tiponiveledusForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisNacionalidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisNacionalidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPaisNacionalidad();
				this.cargarCombosFramePaisNacionalidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaPaisNacionalidad(this.paisnacionalidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGenero(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGeneroListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGenero();
				this.cargarCombosFrameTipoGenerosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoGenero(this.tipogenerosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoCivil(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoCivilListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoCivil();
				this.cargarCombosFrameEstadoCivilsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoCivil(this.estadocivilsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoLegal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoLegalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoLegal();
				this.cargarCombosFrameEstadoLegalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaEstadoLegal(this.estadolegalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyRuta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyRutaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyRuta();
				this.cargarCombosFrameRutasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaRuta(this.rutasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDia(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyDiaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyDia();
				this.cargarCombosFrameDiasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaDia(this.diasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoPrecio(this.tipopreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoListaPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoListaPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoListaPrecio();
				this.cargarCombosFrameTipoListaPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyPais("Todos");
				}

			this.recargarComboTablaTipoListaPrecio(this.tipolistapreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroCarteraDefectoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			
			if(jTableDatosParametroCarteraDefecto.getRowCount()>=1) {
				jTableDatosParametroCarteraDefecto.removeRowSelectionInterval(0, jTableDatosParametroCarteraDefecto.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroCarteraDefecto=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroCarteraDefecto(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroCarteraDefecto(true);			
			//this.parametrocarteradefecto=new ParametroCarteraDefecto();
			//this.parametrocarteradefecto.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroCarteraDefecto(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto() ;
			
			if(ParametroCarteraDefectoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroCarteraDefecto(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametrocarteradefecto);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);				
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroCarteraDefecto: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroCarteraDefectoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroCarteraDefecto.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroCarteraDefecto.getSelectedRows().length;			
			}
			
			parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroCarteraDefecto--;			
				//ParametroCarteraDefecto parametrocarteradefectoAux= new ParametroCarteraDefecto();			
				//parametrocarteradefectoAux.setId(this.iIdNuevoParametroCarteraDefecto);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroCarteraDefecto parametrocarteradefectoOrigen=new ParametroCarteraDefecto();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroCarteraDefecto parametrocarteradefectoOrigen : parametrocarteradefectosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrocarteradefectoOrigen =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrocarteradefectoOrigen =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroCarteraDefecto();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametrocarteradefecto.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroCarteraDefecto(parametrocarteradefectoOrigen,this.parametrocarteradefecto,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrocarteradefectoLogic.getParametroCarteraDefectos().add(this.parametrocarteradefectoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefectos.add(this.parametrocarteradefectoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
				
				this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(this.getIndiceNuevoParametroCarteraDefecto(), this.getIndiceNuevoParametroCarteraDefecto());
				
				int iLastRow =  this.jTableDatosParametroCarteraDefecto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroCarteraDefecto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroCarteraDefecto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();									
		
			ParametroCarteraDefecto parametrocarteradefectoOrigen=new ParametroCarteraDefecto();
			ParametroCarteraDefecto parametrocarteradefectoDestino=new ParametroCarteraDefecto();
				
			parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroCarteraDefecto.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrocarteradefectosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroCarteraDefecto.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoOrigen =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrocarteradefectoOrigen =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrocarteradefectoDestino =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrocarteradefectoDestino =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrocarteradefectoOrigen =parametrocarteradefectosSeleccionados.get(0);
				parametrocarteradefectoDestino =parametrocarteradefectosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroCarteraDefecto(parametrocarteradefectoOrigen,parametrocarteradefectoDestino,true,false);
				
				parametrocarteradefectoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrocarteradefectoDestino,parametrocarteradefectoLogic.getParametroCarteraDefectos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrocarteradefectoDestino,parametrocarteradefectos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
				
				//this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(this.getIndiceNuevoParametroCarteraDefecto(), this.getIndiceNuevoParametroCarteraDefecto());
				
				int iLastRow =  this.jTableDatosParametroCarteraDefecto.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroCarteraDefecto.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroCarteraDefecto.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroCarteraDefecto.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(!isVisible);
			this.jPanelPaginacionParametroCarteraDefecto.setVisible(!isVisible);
			this.jPanelAccionesParametroCarteraDefecto.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroCarteraDefecto();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroCarteraDefecto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroCarteraDefecto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroCarteraDefecto();
			
			this.abrirFrameOrderByParametroCarteraDefecto();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroCarteraDefecto();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroCarteraDefecto(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroCarteraDefecto);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroCarteraDefecto.isMaximum()) {
					this.jInternalFrameDetalleFormParametroCarteraDefecto.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroCarteraDefecto.setSize(this.jInternalFrameDetalleFormParametroCarteraDefecto.iWidthFormulario,this.jInternalFrameDetalleFormParametroCarteraDefecto.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroCarteraDefecto.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroCarteraDefecto.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroCarteraDefecto.isMaximum()) {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jContentPaneDetalleParametroCarteraDefecto.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroCarteraDefecto.jContentPaneDetalleParametroCarteraDefecto.getWidth(),ParametroCarteraDefectoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroCarteraDefecto.jContentPaneDetalleParametroCarteraDefecto.getWidth(),ParametroCarteraDefectoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroCarteraDefecto.jContentPaneDetalleParametroCarteraDefecto.getWidth(),ParametroCarteraDefectoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroCarteraDefecto.setVisible(true);
	        this.jInternalFrameDetalleFormParametroCarteraDefecto.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroCarteraDefecto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroCarteraDefecto==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroCarteraDefecto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroCarteraDefecto,false,this);
				} else {
					this.jInternalFrameOrderByParametroCarteraDefecto=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroCarteraDefecto,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroCarteraDefecto);
				this.jInternalFrameOrderByParametroCarteraDefecto.setVisible(false);
				this.jInternalFrameOrderByParametroCarteraDefecto.setSelected(false);
				
				this.jInternalFrameOrderByParametroCarteraDefecto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroCarteraDefecto"));
				
				this.inicializarActualizarBindingTablaOrderByParametroCarteraDefecto();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroCarteraDefecto() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroCarteraDefecto==null) {
				
				this.jInternalFrameImportacionParametroCarteraDefecto=new ImportacionJInternalFrame(ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroCarteraDefecto);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroCarteraDefecto);
				this.jInternalFrameImportacionParametroCarteraDefecto.setVisible(false);
				this.jInternalFrameImportacionParametroCarteraDefecto.setSelected(false);


				this.jInternalFrameImportacionParametroCarteraDefecto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroCarteraDefecto"));
				this.jInternalFrameImportacionParametroCarteraDefecto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroCarteraDefecto"));
				this.jInternalFrameImportacionParametroCarteraDefecto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroCarteraDefecto"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroCarteraDefecto() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto==null) {
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto=new ReporteDinamicoJInternalFrame(ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroCarteraDefecto);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroCarteraDefecto);
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroCarteraDefecto"));
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroCarteraDefecto"));
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroCarteraDefecto"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroCarteraDefecto();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleParametroCarteraDefecto() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroCarteraDefecto);
			
	       	this.jInternalFrameDetalleFormParametroCarteraDefecto.setVisible(false);
	        this.jInternalFrameDetalleFormParametroCarteraDefecto.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroCarteraDefecto.dispose();
			//this.jInternalFrameDetalleFormParametroCarteraDefecto=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroCarteraDefecto() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroCarteraDefecto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroCarteraDefecto.setVisible(true);
	        this.jInternalFrameImportacionParametroCarteraDefecto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroCarteraDefecto() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroCarteraDefecto.setVisible(true);
	        this.jInternalFrameOrderByParametroCarteraDefecto.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroCarteraDefecto() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroCarteraDefecto.setVisible(false);
	        this.jInternalFrameOrderByParametroCarteraDefecto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroCarteraDefecto() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroCarteraDefecto() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroCarteraDefecto.setVisible(false);
	        this.jInternalFrameImportacionParametroCarteraDefecto.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroCarteraDefecto(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroCarteraDefecto(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroCarteraDefecto(true);
			//this.isEsNuevoParametroCarteraDefecto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroCarteraDefecto(false) ;
			
			if(parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ParametroCarteraDefectoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroCarteraDefecto(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroCarteraDefectoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroCarteraDefecto(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroCarteraDefecto(true);
			//this.isEsNuevoParametroCarteraDefecto=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametrocarteradefecto.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroCarteraDefecto(false) ;
			
			if(ParametroCarteraDefectoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroCarteraDefecto(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaRegion(List<Region> regionsForeignKey)throws Exception{
		TableColumn tableColumnRegion=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION));
		TableCellEditor tableCellEditorRegion =tableColumnRegion.getCellEditor();

		RegionTableCell regionTableCellFk=(RegionTableCell)tableCellEditorRegion;

		if(regionTableCellFk!=null) {
			regionTableCellFk.setregionsForeignKey(regionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//regionTableCellFk.setRowActual(intSelectedRow);
			//regionTableCellFk.setregionsForeignKeyActual(regionsForeignKey);
		//}


		if(regionTableCellFk!=null) {
			regionTableCellFk.RecargarRegionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProvincia(List<Provincia> provinciasForeignKey)throws Exception{
		TableColumn tableColumnProvincia=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA));
		TableCellEditor tableCellEditorProvincia =tableColumnProvincia.getCellEditor();

		ProvinciaTableCell provinciaTableCellFk=(ProvinciaTableCell)tableCellEditorProvincia;

		if(provinciaTableCellFk!=null) {
			provinciaTableCellFk.setprovinciasForeignKey(provinciasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//provinciaTableCellFk.setRowActual(intSelectedRow);
			//provinciaTableCellFk.setprovinciasForeignKeyActual(provinciasForeignKey);
		//}


		if(provinciaTableCellFk!=null) {
			provinciaTableCellFk.RecargarProvinciasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudad(List<Ciudad> ciudadsForeignKey)throws Exception{
		TableColumn tableColumnCiudad=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD));
		TableCellEditor tableCellEditorCiudad =tableColumnCiudad.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudad;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadsForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaZona(List<Zona> zonasForeignKey)throws Exception{
		TableColumn tableColumnZona=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA));
		TableCellEditor tableCellEditorZona =tableColumnZona.getCellEditor();

		ZonaTableCell zonaTableCellFk=(ZonaTableCell)tableCellEditorZona;

		if(zonaTableCellFk!=null) {
			zonaTableCellFk.setzonasForeignKey(zonasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//zonaTableCellFk.setRowActual(intSelectedRow);
			//zonaTableCellFk.setzonasForeignKeyActual(zonasForeignKey);
		//}


		if(zonaTableCellFk!=null) {
			zonaTableCellFk.RecargarZonasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoIdentificacion(List<TipoIdentificacion> tipoidentificacionsForeignKey)throws Exception{
		TableColumn tableColumnTipoIdentificacion=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION));
		TableCellEditor tableCellEditorTipoIdentificacion =tableColumnTipoIdentificacion.getCellEditor();

		TipoIdentificacionTableCell tipoidentificacionTableCellFk=(TipoIdentificacionTableCell)tableCellEditorTipoIdentificacion;

		if(tipoidentificacionTableCellFk!=null) {
			tipoidentificacionTableCellFk.settipoidentificacionsForeignKey(tipoidentificacionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoidentificacionTableCellFk.setRowActual(intSelectedRow);
			//tipoidentificacionTableCellFk.settipoidentificacionsForeignKeyActual(tipoidentificacionsForeignKey);
		//}


		if(tipoidentificacionTableCellFk!=null) {
			tipoidentificacionTableCellFk.RecargarTipoIdentificacionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoNivelEdu(List<TipoNivelEdu> tiponiveledusForeignKey)throws Exception{
		TableColumn tableColumnTipoNivelEdu=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU));
		TableCellEditor tableCellEditorTipoNivelEdu =tableColumnTipoNivelEdu.getCellEditor();

		TipoNivelEduTableCell tiponiveleduTableCellFk=(TipoNivelEduTableCell)tableCellEditorTipoNivelEdu;

		if(tiponiveleduTableCellFk!=null) {
			tiponiveleduTableCellFk.settiponiveledusForeignKey(tiponiveledusForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiponiveleduTableCellFk.setRowActual(intSelectedRow);
			//tiponiveleduTableCellFk.settiponiveledusForeignKeyActual(tiponiveledusForeignKey);
		//}


		if(tiponiveleduTableCellFk!=null) {
			tiponiveleduTableCellFk.RecargarTipoNivelEdusForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPaisNacionalidad(List<Pais> paisnacionalidadsForeignKey)throws Exception{
		TableColumn tableColumnPaisNacionalidad=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD));
		TableCellEditor tableCellEditorPaisNacionalidad =tableColumnPaisNacionalidad.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPaisNacionalidad;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paisnacionalidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paisnacionalidadsForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoGenero(List<TipoGenero> tipogenerosForeignKey)throws Exception{
		TableColumn tableColumnTipoGenero=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO));
		TableCellEditor tableCellEditorTipoGenero =tableColumnTipoGenero.getCellEditor();

		TipoGeneroTableCell tipogeneroTableCellFk=(TipoGeneroTableCell)tableCellEditorTipoGenero;

		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.settipogenerosForeignKey(tipogenerosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogeneroTableCellFk.setRowActual(intSelectedRow);
			//tipogeneroTableCellFk.settipogenerosForeignKeyActual(tipogenerosForeignKey);
		//}


		if(tipogeneroTableCellFk!=null) {
			tipogeneroTableCellFk.RecargarTipoGenerosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoCivil(List<EstadoCivil> estadocivilsForeignKey)throws Exception{
		TableColumn tableColumnEstadoCivil=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL));
		TableCellEditor tableCellEditorEstadoCivil =tableColumnEstadoCivil.getCellEditor();

		EstadoCivilTableCell estadocivilTableCellFk=(EstadoCivilTableCell)tableCellEditorEstadoCivil;

		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.setestadocivilsForeignKey(estadocivilsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadocivilTableCellFk.setRowActual(intSelectedRow);
			//estadocivilTableCellFk.setestadocivilsForeignKeyActual(estadocivilsForeignKey);
		//}


		if(estadocivilTableCellFk!=null) {
			estadocivilTableCellFk.RecargarEstadoCivilsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoLegal(List<EstadoLegal> estadolegalsForeignKey)throws Exception{
		TableColumn tableColumnEstadoLegal=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL));
		TableCellEditor tableCellEditorEstadoLegal =tableColumnEstadoLegal.getCellEditor();

		EstadoLegalTableCell estadolegalTableCellFk=(EstadoLegalTableCell)tableCellEditorEstadoLegal;

		if(estadolegalTableCellFk!=null) {
			estadolegalTableCellFk.setestadolegalsForeignKey(estadolegalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadolegalTableCellFk.setRowActual(intSelectedRow);
			//estadolegalTableCellFk.setestadolegalsForeignKeyActual(estadolegalsForeignKey);
		//}


		if(estadolegalTableCellFk!=null) {
			estadolegalTableCellFk.RecargarEstadoLegalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaRuta(List<Ruta> rutasForeignKey)throws Exception{
		TableColumn tableColumnRuta=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA));
		TableCellEditor tableCellEditorRuta =tableColumnRuta.getCellEditor();

		RutaTableCell rutaTableCellFk=(RutaTableCell)tableCellEditorRuta;

		if(rutaTableCellFk!=null) {
			rutaTableCellFk.setrutasForeignKey(rutasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//rutaTableCellFk.setRowActual(intSelectedRow);
			//rutaTableCellFk.setrutasForeignKeyActual(rutasForeignKey);
		//}


		if(rutaTableCellFk!=null) {
			rutaTableCellFk.RecargarRutasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaDia(List<Dia> diasForeignKey)throws Exception{
		TableColumn tableColumnDia=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA));
		TableCellEditor tableCellEditorDia =tableColumnDia.getCellEditor();

		DiaTableCell diaTableCellFk=(DiaTableCell)tableCellEditorDia;

		if(diaTableCellFk!=null) {
			diaTableCellFk.setdiasForeignKey(diasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//diaTableCellFk.setRowActual(intSelectedRow);
			//diaTableCellFk.setdiasForeignKeyActual(diasForeignKey);
		//}


		if(diaTableCellFk!=null) {
			diaTableCellFk.RecargarDiasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPrecio(List<TipoPrecio> tipopreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoPrecio=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO));
		TableCellEditor tableCellEditorTipoPrecio =tableColumnTipoPrecio.getCellEditor();

		TipoPrecioTableCell tipoprecioTableCellFk=(TipoPrecioTableCell)tableCellEditorTipoPrecio;

		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.settipopreciosForeignKey(tipopreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprecioTableCellFk.setRowActual(intSelectedRow);
			//tipoprecioTableCellFk.settipopreciosForeignKeyActual(tipopreciosForeignKey);
		//}


		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.RecargarTipoPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoListaPrecio(List<TipoListaPrecio> tipolistapreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoListaPrecio=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO));
		TableCellEditor tableCellEditorTipoListaPrecio =tableColumnTipoListaPrecio.getCellEditor();

		TipoListaPrecioTableCell tipolistaprecioTableCellFk=(TipoListaPrecioTableCell)tableCellEditorTipoListaPrecio;

		if(tipolistaprecioTableCellFk!=null) {
			tipolistaprecioTableCellFk.settipolistapreciosForeignKey(tipolistapreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipolistaprecioTableCellFk.setRowActual(intSelectedRow);
			//tipolistaprecioTableCellFk.settipolistapreciosForeignKeyActual(tipolistapreciosForeignKey);
		//}


		if(tipolistaprecioTableCellFk!=null) {
			tipolistaprecioTableCellFk.RecargarTipoListaPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroCarteraDefecto(false);
			
			//if(!this.isEsNuevoParametroCarteraDefecto) {								
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				
			}
			
			if(this.permiteMantenimiento(this.parametrocarteradefecto)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroCarteraDefecto=true;
					this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
					this.isEsNuevoParametroCarteraDefecto=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroCarteraDefecto=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroCarteraDefecto=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroCarteraDefecto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto(false);
				
				this.habilitarDeshabilitarControlesParametroCarteraDefecto(false);
			
												
				
				if(ParametroCarteraDefectoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroCarteraDefecto();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroCarteraDefectoActionPerformed(evt,parametrocarteradefectoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroCarteraDefecto(this.parametrocarteradefecto,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrocarteradefectoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametrocarteradefecto.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				this.parametrocarteradefecto.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				this.parametrocarteradefecto.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametrocarteradefecto)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroCarteraDefectoModel) this.jTableDatosParametroCarteraDefecto.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroCarteraDefecto=true;
				this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
				this.isEsNuevoParametroCarteraDefecto=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroCarteraDefecto(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto(false);
				
				this.habilitarDeshabilitarControlesParametroCarteraDefecto(false);
				
				
				
				if(ParametroCarteraDefectoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroCarteraDefecto();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroCarteraDefecto.getRowCount()>=1) {
				jTableDatosParametroCarteraDefecto.removeRowSelectionInterval(0, jTableDatosParametroCarteraDefecto.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroCarteraDefecto(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroCarteraDefecto(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto(false) ;
			
			this.isEsNuevoParametroCarteraDefecto=false;
			
			if(ParametroCarteraDefectoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroCarteraDefecto();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroCarteraDefecto(false);
				
				//SI ES MANUAL
				if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroCarteraDefecto();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroCarteraDefecto--;			
			//ParametroCarteraDefecto parametrocarteradefectoAux= new ParametroCarteraDefecto();			
			//parametrocarteradefectoAux.setId(this.iIdNuevoParametroCarteraDefecto);
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroCarteraDefecto();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
			
			this.parametrocarteradefecto.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrocarteradefectoLogic.getParametroCarteraDefectos().add(this.parametrocarteradefectoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrocarteradefectos.add(this.parametrocarteradefectoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
			
			this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(this.getIndiceNuevoParametroCarteraDefecto(), this.getIndiceNuevoParametroCarteraDefecto());
			
			int iLastRow =  this.jTableDatosParametroCarteraDefecto.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroCarteraDefecto.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroCarteraDefecto.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCarteraDefecto(false);
			
			//SI ES MANUAL
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroCarteraDefecto();
			}
			
			//this.abrirFrameTreeParametroCarteraDefecto();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro Cartera DefectoS ?", "MANTENIMIENTO DE Parametro Cartera Defecto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroCarteraDefecto.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroCarteraDefecto();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrocarteradefectoReturnGeneral=parametrocarteradefectoLogic.procesarImportacionParametroCarteraDefectosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrocarteradefectoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroCarteraDefectoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroCarteraDefecto.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroCarteraDefecto.setFileImportacion(this.jInternalFrameImportacionParametroCarteraDefecto.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroCarteraDefecto.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroCarteraDefecto.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroCarteraDefecto.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroCarteraDefecto.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		

		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroCarteraDefectoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroCarteraDefectoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Region_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Region_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Region_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Region_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Provincia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Provincia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Provincia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Provincia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ciudad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ciudad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ciudad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ciudad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Zona_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Zona_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Zona_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Zona_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoIdentificacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoIdentificacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoIdentificacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoIdentificacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoNivelEdu_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoNivelEdu_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoNivelEdu_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoNivelEdu_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PaisNacionalidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PaisNacionalidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PaisNacionalidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PaisNacionalidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGenero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGenero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGenero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGenero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoCivil_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoCivil_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoCivil_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoCivil_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoLegal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoLegal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoLegal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoLegal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ruta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ruta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ruta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ruta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Dia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Dia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Dia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Dia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoListaPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoListaPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoListaPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoListaPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION:
					sNombreCampoCategoria="id_region";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA:
					sNombreCampoCategoria="id_provincia";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoria="id_ciudad";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoria="id_zona";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					sNombreCampoCategoria="id_tipo_identificacion";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU:
					sNombreCampoCategoria="id_tipo_nivel_edu";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					sNombreCampoCategoria="id_pais_nacionalidad";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoria="id_tipo_genero";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoria="id_estado_civil";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL:
					sNombreCampoCategoria="id_estado_legal";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA:
					sNombreCampoCategoria="id_ruta";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA:
					sNombreCampoCategoria="id_dia";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoria="id_tipo_precio";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					sNombreCampoCategoria="id_tipo_lista_precio";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION:
					sNombreCampoCategoriaValor="id_region";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA:
					sNombreCampoCategoriaValor="id_provincia";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoriaValor="id_ciudad";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoriaValor="id_zona";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					sNombreCampoCategoriaValor="id_tipo_identificacion";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU:
					sNombreCampoCategoriaValor="id_tipo_nivel_edu";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					sNombreCampoCategoriaValor="id_pais_nacionalidad";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO:
					sNombreCampoCategoriaValor="id_tipo_genero";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL:
					sNombreCampoCategoriaValor="id_estado_civil";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL:
					sNombreCampoCategoriaValor="id_estado_legal";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA:
					sNombreCampoCategoriaValor="id_ruta";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA:
					sNombreCampoCategoriaValor="id_dia";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoriaValor="id_tipo_precio";
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					sNombreCampoCategoriaValor="id_tipo_lista_precio";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Region",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_region");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Provincia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_provincia");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Zona",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_zona");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Identificacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_identificacion");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Nivel Edu",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_nivel_edu");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais Nacionalad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais_nacionalidad");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Genero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_genero");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Civil",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_civil");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Legal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_legal");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ruta");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_dia");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_precio");
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Lista Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_lista_precio");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocarteradefecto";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroCarteraDefectos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getregion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getprovincia_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getciudad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getzona_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.gettipoidentificacion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.gettiponiveledu_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getpaisnacionalidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.gettipogenero_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getestadocivil_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getestadolegal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getruta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.getdia_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.gettipoprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO);
					iRow++;

					for(ParametroCarteraDefecto parametrocarteradefecto:parametrocarteradefectosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrocarteradefecto.gettipolistaprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroCarteraDefecto(row);				
			//	iRow++;
			//}				
			
			//for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroCarteraDefecto(parametrocarteradefectoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCarteraDefecto(false);
			
			//SI ES MANUAL
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroCarteraDefecto();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCarteraDefecto(false);
			
			//SI ES MANUAL
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroCarteraDefecto();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroCarteraDefecto(false);
			
			//SI ES MANUAL
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroCarteraDefecto();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroCarteraDefecto() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroCarteraDefecto.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroCarteraDefecto.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroCarteraDefecto.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroCarteraDefecto.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroCarteraDefecto.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroCarteraDefecto.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroCarteraDefecto.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroCarteraDefecto(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroCarteraDefecto(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroCarteraDefecto(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroCarteraDefecto(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroCarteraDefecto(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroCarteraDefecto(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroCarteraDefecto(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroCarteraDefecto(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroCarteraDefecto() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroCarteraDefecto();
		
		this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroCarteraDefecto();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroCarteraDefecto() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroCarteraDefecto(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroCarteraDefecto(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroCarteraDefecto.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroCarteraDefecto.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroCarteraDefecto.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroCarteraDefecto.jCheckBoxPostAccionNuevoParametroCarteraDefecto.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroCarteraDefecto.jCheckBoxPostAccionSinCerrarParametroCarteraDefecto.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroCarteraDefecto.jCheckBoxPostAccionSinMensajeParametroCarteraDefecto.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroCarteraDefecto.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroCarteraDefecto.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroCarteraDefecto.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jCheckBoxPostAccionNuevoParametroCarteraDefecto.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jCheckBoxPostAccionSinCerrarParametroCarteraDefecto.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jCheckBoxPostAccionSinMensajeParametroCarteraDefecto.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroCarteraDefecto.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroCarteraDefecto.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroCarteraDefecto.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroCarteraDefecto.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroCarteraDefecto.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroCarteraDefecto.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroCarteraDefecto.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroCarteraDefecto.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroCarteraDefecto.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroCarteraDefecto(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroCarteraDefecto(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroCarteraDefecto() throws Exception {
		try	{
			if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroCarteraDefecto();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroCarteraDefecto() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroCarteraDefecto() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroCarteraDefecto.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroCarteraDefecto.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroCarteraDefecto.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroCarteraDefecto.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroCarteraDefecto.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroCarteraDefecto.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroCarteraDefecto.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroCarteraDefecto.addItem(reporte);
			}
			
			
			if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroCarteraDefecto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroCarteraDefecto.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroCarteraDefecto.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroCarteraDefecto.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroCarteraDefecto.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroCarteraDefecto.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroCarteraDefecto.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroCarteraDefecto.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroCarteraDefecto.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroCarteraDefecto();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroCarteraDefecto() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroCarteraDefecto()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.getSelectedItem()!=null){this.id_ciudadFK_IdCiudad=((Ciudad)this.jComboBoxid_ciudadFK_IdCiudadParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.getSelectedItem()!=null){this.id_cuenta_contableFK_IdCuentaContable=((CuentaContable)this.jComboBoxid_cuenta_contableFK_IdCuentaContableParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.getSelectedItem()!=null){this.id_diaFK_IdDia=((Dia)this.jComboBoxid_diaFK_IdDiaParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.getSelectedItem()!=null){this.id_estado_civilFK_IdEstadoCivil=((EstadoCivil)this.jComboBoxid_estado_civilFK_IdEstadoCivilParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.getSelectedItem()!=null){this.id_estado_legalFK_IdEstadoLegal=((EstadoLegal)this.jComboBoxid_estado_legalFK_IdEstadoLegalParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.getSelectedItem()!=null){this.id_paisFK_IdPais=((Pais)this.jComboBoxid_paisFK_IdPaisParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.getSelectedItem()!=null){this.id_pais_nacionalidadFK_IdPaisNacionalidad=((Pais)this.jComboBoxid_pais_nacionalidadFK_IdPaisNacionalidadParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.getSelectedItem()!=null){this.id_provinciaFK_IdProvincia=((Provincia)this.jComboBoxid_provinciaFK_IdProvinciaParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.getSelectedItem()!=null){this.id_regionFK_IdRegion=((Region)this.jComboBoxid_regionFK_IdRegionParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.getSelectedItem()!=null){this.id_rutaFK_IdRuta=((Ruta)this.jComboBoxid_rutaFK_IdRutaParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.getSelectedItem()!=null){this.id_tipo_generoFK_IdTipoGenero=((TipoGenero)this.jComboBoxid_tipo_generoFK_IdTipoGeneroParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.getSelectedItem()!=null){this.id_tipo_identificacionFK_IdTipoIdentificacion=((TipoIdentificacion)this.jComboBoxid_tipo_identificacionFK_IdTipoIdentificacionParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.getSelectedItem()!=null){this.id_tipo_lista_precioFK_IdTipoListaPrecio=((TipoListaPrecio)this.jComboBoxid_tipo_lista_precioFK_IdTipoListaPrecioParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.getSelectedItem()!=null){this.id_tipo_nivel_eduFK_IdTipoNivelEdu=((TipoNivelEdu)this.jComboBoxid_tipo_nivel_eduFK_IdTipoNivelEduParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.getSelectedItem()!=null){this.id_tipo_precioFK_IdTipoPrecio=((TipoPrecio)this.jComboBoxid_tipo_precioFK_IdTipoPrecioParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorParametroCarteraDefecto.getSelectedItem()).getId();}
		if(this.jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.getSelectedItem()!=null){this.id_zonaFK_IdZona=((Zona)this.jComboBoxid_zonaFK_IdZonaParametroCarteraDefecto.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroCarteraDefecto(Boolean esInicializar) throws Exception {				
		if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroCarteraDefecto();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroCarteraDefecto() throws Exception {
		this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroCarteraDefecto() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroCarteraDefectoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefectoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroCarteraDefecto(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrocarteradefectoLogic.getParametroCarteraDefectos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrocarteradefectos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroCarteraDefecto.setModel(new ParametroCarteraDefectoModel(this.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroCarteraDefecto.setModel(new ParametroCarteraDefectoModel(this.parametrocarteradefectos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroCarteraDefecto!=null && this.jInternalFrameOrderByParametroCarteraDefecto.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroCarteraDefecto();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO,parametrocarteradefectoConstantesFunciones.resaltarSeleccionarParametroCarteraDefecto,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroCarteraDefectoConstantesFunciones.SCLASSWEBTITULO,parametrocarteradefectoConstantesFunciones.resaltarSeleccionarParametroCarteraDefecto,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_ID));

		if(this.parametrocarteradefectoConstantesFunciones.mostraridParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrocarteradefectoConstantesFunciones.resaltaridParametroCarteraDefecto,this.parametrocarteradefectoConstantesFunciones.activaridParametroCarteraDefecto,this,true,"idParametroCarteraDefecto","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrocarteradefectoConstantesFunciones.resaltaridParametroCarteraDefecto,this.parametrocarteradefectoConstantesFunciones.activaridParametroCarteraDefecto,this,true,"idParametroCarteraDefecto","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_empresaParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_empresaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_empresaParametroCarteraDefecto));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_empresaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_empresaParametroCarteraDefecto,false,"id_empresaParametroCarteraDefecto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_sucursalParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_sucursalParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_sucursalParametroCarteraDefecto));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_sucursalParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_sucursalParametroCarteraDefecto,false,"id_sucursalParametroCarteraDefecto","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_paisParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_paisParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_paisParametroCarteraDefecto));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_paisParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_paisParametroCarteraDefecto,true,"id_paisParametroCarteraDefecto","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_regionParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new RegionTableCell(this.regionsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_regionParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_regionParametroCarteraDefecto));
			tableColumn.setCellEditor(new RegionTableCell(this.regionsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_regionParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_regionParametroCarteraDefecto,true,"id_regionParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_provinciaParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProvinciaTableCell(this.provinciasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_provinciaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_provinciaParametroCarteraDefecto));
			tableColumn.setCellEditor(new ProvinciaTableCell(this.provinciasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_provinciaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_provinciaParametroCarteraDefecto,true,"id_provinciaParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_ciudadParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_ciudadParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_ciudadParametroCarteraDefecto));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_ciudadParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_ciudadParametroCarteraDefecto,true,"id_ciudadParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_zonaParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ZonaTableCell(this.zonasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_zonaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_zonaParametroCarteraDefecto));
			tableColumn.setCellEditor(new ZonaTableCell(this.zonasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_zonaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_zonaParametroCarteraDefecto,true,"id_zonaParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_identificacionParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoIdentificacionTableCell(this.tipoidentificacionsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_identificacionParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_identificacionParametroCarteraDefecto));
			tableColumn.setCellEditor(new TipoIdentificacionTableCell(this.tipoidentificacionsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_identificacionParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_identificacionParametroCarteraDefecto,true,"id_tipo_identificacionParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_nivel_eduParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoNivelEduTableCell(this.tiponiveledusForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_nivel_eduParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_nivel_eduParametroCarteraDefecto));
			tableColumn.setCellEditor(new TipoNivelEduTableCell(this.tiponiveledusForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_nivel_eduParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_nivel_eduParametroCarteraDefecto,true,"id_tipo_nivel_eduParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_pais_nacionalidadParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paisnacionalidadsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_pais_nacionalidadParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_pais_nacionalidadParametroCarteraDefecto));
			tableColumn.setCellEditor(new PaisTableCell(this.paisnacionalidadsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_pais_nacionalidadParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_pais_nacionalidadParametroCarteraDefecto,true,"id_pais_nacionalidadParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_generoParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_generoParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_generoParametroCarteraDefecto));
			tableColumn.setCellEditor(new TipoGeneroTableCell(this.tipogenerosForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_generoParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_generoParametroCarteraDefecto,true,"id_tipo_generoParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_estado_civilParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_civilParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_estado_civilParametroCarteraDefecto));
			tableColumn.setCellEditor(new EstadoCivilTableCell(this.estadocivilsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_civilParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_estado_civilParametroCarteraDefecto,true,"id_estado_civilParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_estado_legalParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoLegalTableCell(this.estadolegalsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_legalParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_estado_legalParametroCarteraDefecto));
			tableColumn.setCellEditor(new EstadoLegalTableCell(this.estadolegalsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_legalParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_estado_legalParametroCarteraDefecto,true,"id_estado_legalParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_cuenta_contableParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_cuenta_contableParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_cuenta_contableParametroCarteraDefecto));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_cuenta_contableParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_cuenta_contableParametroCarteraDefecto,true,"id_cuenta_contableParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_vendedorParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_vendedorParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_vendedorParametroCarteraDefecto));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_vendedorParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_vendedorParametroCarteraDefecto,true,"id_vendedorParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_rutaParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new RutaTableCell(this.rutasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_rutaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_rutaParametroCarteraDefecto));
			tableColumn.setCellEditor(new RutaTableCell(this.rutasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_rutaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_rutaParametroCarteraDefecto,true,"id_rutaParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_diaParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new DiaTableCell(this.diasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_diaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_diaParametroCarteraDefecto));
			tableColumn.setCellEditor(new DiaTableCell(this.diasForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_diaParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_diaParametroCarteraDefecto,true,"id_diaParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_precioParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_precioParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_precioParametroCarteraDefecto));
			tableColumn.setCellEditor(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_precioParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_precioParametroCarteraDefecto,true,"id_tipo_precioParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO));

		if(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_lista_precioParametroCarteraDefecto && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoListaPrecioTableCell(this.tipolistapreciosForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_lista_precioParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_lista_precioParametroCarteraDefecto));
			tableColumn.setCellEditor(new TipoListaPrecioTableCell(this.tipolistapreciosForeignKey,this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_lista_precioParametroCarteraDefecto,this,this.parametrocarteradefectoConstantesFunciones.activarid_tipo_lista_precioParametroCarteraDefecto,true,"id_tipo_lista_precioParametroCarteraDefecto","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroCarteraDefectoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroCarteraDefecto.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroCarteraDefecto.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroCarteraDefecto.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroCarteraDefecto.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroCarteraDefecto.moveColumn(this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroCarteraDefecto.moveColumn(this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroCarteraDefecto.moveColumn(this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroCarteraDefecto.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroCarteraDefecto.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroCarteraDefecto,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroCarteraDefecto.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroCarteraDefecto.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroCarteraDefecto.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=parametrocarteradefectoLogic.getParametroCarteraDefectos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=parametrocarteradefectos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroCarteraDefecto.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroCarteraDefecto.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroCarteraDefecto();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroCarteraDefecto=false;
					
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
				if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroCarteraDefecto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametrocarteradefecto.getsType().equals("DUPLICADO")
				   || this.parametrocarteradefecto.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroCarteraDefecto=true;
				
				} else {
					this.isEsNuevoParametroCarteraDefecto=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
					if(this.parametrocarteradefecto.getId()>=0 && !this.parametrocarteradefecto.getIsNew()) {						
						this.isEsNuevoParametroCarteraDefecto=false;
						
					} else {
						this.isEsNuevoParametroCarteraDefecto=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroCarteraDefecto(esRelaciones);						
				
				this.seleccionarParametroCarteraDefecto(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametrocarteradefecto.getId()<0) {
					this.isEsNuevoParametroCarteraDefecto=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroCarteraDefecto(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroCarteraDefecto(evt,rowIndex);
				}	
				
				if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroCarteraDefecto: " + this.dDif); 
					}
				}								
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroCarteraDefecto(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametrocarteradefecto)) {
					if(this.parametrocarteradefecto.getId()>0) {
						this.parametrocarteradefecto.setIsDeleted(true);
						
						this.parametrocarteradefectosEliminados.add(this.parametrocarteradefecto);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrocarteradefectoLogic.getParametroCarteraDefectos().remove(this.parametrocarteradefecto);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefectos.remove(this.parametrocarteradefecto);				
					}
					
					
					((ParametroCarteraDefectoModel) this.jTableDatosParametroCarteraDefecto.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroCarteraDefecto(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroCarteraDefecto) {
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroCarteraDefecto.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroCarteraDefecto.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroCarteraDefecto(this.parametrocarteradefecto);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_empresaParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_empresaParametroCarteraDefecto) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_empresa());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametrocarteradefecto.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametrocarteradefecto.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametrocarteradefecto.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_sucursalParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_sucursalParametroCarteraDefecto) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_sucursal());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(parametrocarteradefecto.getSucursal()!=null) {
							this.sucursalsForeignKey.add(parametrocarteradefecto.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.parametrocarteradefecto.getid_sucursal(),false,"Formulario");

					//Pais
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_paisParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_paisParametroCarteraDefecto) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_pais());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(parametrocarteradefecto.getPais()!=null) {
							this.paissForeignKey.add(parametrocarteradefecto.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.parametrocarteradefecto.getid_pais(),false,"Formulario");

					//Region
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_regionParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_regionParametroCarteraDefecto) {
						//this.cargarCombosRegionsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_region());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.regionsForeignKey=new ArrayList<Region>();

						if(parametrocarteradefecto.getRegion()!=null) {
							this.regionsForeignKey.add(parametrocarteradefecto.getRegion());
						}

						this.addItemDefectoCombosForeignKeyRegion();
						this.cargarCombosFrameRegionsForeignKey("Todos");
					}
					this.setActualRegionForeignKey(this.parametrocarteradefecto.getid_region(),false,"Formulario");

					//Provincia
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_provinciaParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_provinciaParametroCarteraDefecto) {
						//this.cargarCombosProvinciasForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_provincia());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.provinciasForeignKey=new ArrayList<Provincia>();

						if(parametrocarteradefecto.getProvincia()!=null) {
							this.provinciasForeignKey.add(parametrocarteradefecto.getProvincia());
						}

						this.addItemDefectoCombosForeignKeyProvincia();
						this.cargarCombosFrameProvinciasForeignKey("Todos");
					}
					this.setActualProvinciaForeignKey(this.parametrocarteradefecto.getid_provincia(),false,"Formulario");

					//Ciudad
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_ciudadParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_ciudadParametroCarteraDefecto) {
						//this.cargarCombosCiudadsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_ciudad());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.ciudadsForeignKey=new ArrayList<Ciudad>();

						if(parametrocarteradefecto.getCiudad()!=null) {
							this.ciudadsForeignKey.add(parametrocarteradefecto.getCiudad());
						}

						this.addItemDefectoCombosForeignKeyCiudad();
						this.cargarCombosFrameCiudadsForeignKey("Todos");
					}
					this.setActualCiudadForeignKey(this.parametrocarteradefecto.getid_ciudad(),false,"Formulario");

					//Zona
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_zonaParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_zonaParametroCarteraDefecto) {
						//this.cargarCombosZonasForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_zona());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.zonasForeignKey=new ArrayList<Zona>();

						if(parametrocarteradefecto.getZona()!=null) {
							this.zonasForeignKey.add(parametrocarteradefecto.getZona());
						}

						this.addItemDefectoCombosForeignKeyZona();
						this.cargarCombosFrameZonasForeignKey("Todos");
					}
					this.setActualZonaForeignKey(this.parametrocarteradefecto.getid_zona(),false,"Formulario");

					//TipoIdentificacion
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_identificacionParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_tipo_identificacionParametroCarteraDefecto) {
						//this.cargarCombosTipoIdentificacionsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_tipo_identificacion());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.tipoidentificacionsForeignKey=new ArrayList<TipoIdentificacion>();

						if(parametrocarteradefecto.getTipoIdentificacion()!=null) {
							this.tipoidentificacionsForeignKey.add(parametrocarteradefecto.getTipoIdentificacion());
						}

						this.addItemDefectoCombosForeignKeyTipoIdentificacion();
						this.cargarCombosFrameTipoIdentificacionsForeignKey("Todos");
					}
					this.setActualTipoIdentificacionForeignKey(this.parametrocarteradefecto.getid_tipo_identificacion(),false,"Formulario");

					//TipoNivelEdu
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_nivel_eduParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_tipo_nivel_eduParametroCarteraDefecto) {
						//this.cargarCombosTipoNivelEdusForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_tipo_nivel_edu());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.tiponiveledusForeignKey=new ArrayList<TipoNivelEdu>();

						if(parametrocarteradefecto.getTipoNivelEdu()!=null) {
							this.tiponiveledusForeignKey.add(parametrocarteradefecto.getTipoNivelEdu());
						}

						this.addItemDefectoCombosForeignKeyTipoNivelEdu();
						this.cargarCombosFrameTipoNivelEdusForeignKey("Todos");
					}
					this.setActualTipoNivelEduForeignKey(this.parametrocarteradefecto.getid_tipo_nivel_edu(),false,"Formulario");

					//PaisNacionalidad
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_pais_nacionalidadParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_pais_nacionalidadParametroCarteraDefecto) {
						//this.cargarCombosPaisNacionalidadsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_pais_nacionalidad());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.paisnacionalidadsForeignKey=new ArrayList<Pais>();

						if(parametrocarteradefecto.getPaisNacionalidad()!=null) {
							this.paisnacionalidadsForeignKey.add(parametrocarteradefecto.getPaisNacionalidad());
						}

						this.addItemDefectoCombosForeignKeyPaisNacionalidad();
						this.cargarCombosFramePaisNacionalidadsForeignKey("Todos");
					}
					this.setActualPaisNacionalidadForeignKey(this.parametrocarteradefecto.getid_pais_nacionalidad(),false,"Formulario");

					//TipoGenero
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_generoParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_tipo_generoParametroCarteraDefecto) {
						//this.cargarCombosTipoGenerosForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_tipo_genero());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.tipogenerosForeignKey=new ArrayList<TipoGenero>();

						if(parametrocarteradefecto.getTipoGenero()!=null) {
							this.tipogenerosForeignKey.add(parametrocarteradefecto.getTipoGenero());
						}

						this.addItemDefectoCombosForeignKeyTipoGenero();
						this.cargarCombosFrameTipoGenerosForeignKey("Todos");
					}
					this.setActualTipoGeneroForeignKey(this.parametrocarteradefecto.getid_tipo_genero(),false,"Formulario");

					//EstadoCivil
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_estado_civilParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_estado_civilParametroCarteraDefecto) {
						//this.cargarCombosEstadoCivilsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_estado_civil());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.estadocivilsForeignKey=new ArrayList<EstadoCivil>();

						if(parametrocarteradefecto.getEstadoCivil()!=null) {
							this.estadocivilsForeignKey.add(parametrocarteradefecto.getEstadoCivil());
						}

						this.addItemDefectoCombosForeignKeyEstadoCivil();
						this.cargarCombosFrameEstadoCivilsForeignKey("Todos");
					}
					this.setActualEstadoCivilForeignKey(this.parametrocarteradefecto.getid_estado_civil(),false,"Formulario");

					//EstadoLegal
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_estado_legalParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_estado_legalParametroCarteraDefecto) {
						//this.cargarCombosEstadoLegalsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_estado_legal());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.estadolegalsForeignKey=new ArrayList<EstadoLegal>();

						if(parametrocarteradefecto.getEstadoLegal()!=null) {
							this.estadolegalsForeignKey.add(parametrocarteradefecto.getEstadoLegal());
						}

						this.addItemDefectoCombosForeignKeyEstadoLegal();
						this.cargarCombosFrameEstadoLegalsForeignKey("Todos");
					}
					this.setActualEstadoLegalForeignKey(this.parametrocarteradefecto.getid_estado_legal(),false,"Formulario");

					//CuentaContable
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_cuenta_contableParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_cuenta_contableParametroCarteraDefecto) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_cuenta_contable());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(parametrocarteradefecto.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(parametrocarteradefecto.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.parametrocarteradefecto.getid_cuenta_contable(),false,"Formulario");

					//Vendedor
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_vendedorParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_vendedorParametroCarteraDefecto) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_vendedor());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(parametrocarteradefecto.getVendedor()!=null) {
							this.vendedorsForeignKey.add(parametrocarteradefecto.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.parametrocarteradefecto.getid_vendedor(),false,"Formulario");

					//Ruta
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_rutaParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_rutaParametroCarteraDefecto) {
						//this.cargarCombosRutasForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_ruta());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.rutasForeignKey=new ArrayList<Ruta>();

						if(parametrocarteradefecto.getRuta()!=null) {
							this.rutasForeignKey.add(parametrocarteradefecto.getRuta());
						}

						this.addItemDefectoCombosForeignKeyRuta();
						this.cargarCombosFrameRutasForeignKey("Todos");
					}
					this.setActualRutaForeignKey(this.parametrocarteradefecto.getid_ruta(),false,"Formulario");

					//Dia
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_diaParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_diaParametroCarteraDefecto) {
						//this.cargarCombosDiasForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_dia());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.diasForeignKey=new ArrayList<Dia>();

						if(parametrocarteradefecto.getDia()!=null) {
							this.diasForeignKey.add(parametrocarteradefecto.getDia());
						}

						this.addItemDefectoCombosForeignKeyDia();
						this.cargarCombosFrameDiasForeignKey("Todos");
					}
					this.setActualDiaForeignKey(this.parametrocarteradefecto.getid_dia(),false,"Formulario");

					//TipoPrecio
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_precioParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_tipo_precioParametroCarteraDefecto) {
						//this.cargarCombosTipoPreciosForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_tipo_precio());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

						if(parametrocarteradefecto.getTipoPrecio()!=null) {
							this.tipopreciosForeignKey.add(parametrocarteradefecto.getTipoPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoPrecio();
						this.cargarCombosFrameTipoPreciosForeignKey("Todos");
					}
					this.setActualTipoPrecioForeignKey(this.parametrocarteradefecto.getid_tipo_precio(),false,"Formulario");

					//TipoListaPrecio
					if(!this.parametrocarteradefectoConstantesFunciones.cargarid_tipo_lista_precioParametroCarteraDefecto || this.parametrocarteradefectoConstantesFunciones.event_dependid_tipo_lista_precioParametroCarteraDefecto) {
						//this.cargarCombosTipoListaPreciosForeignKeyLista(" where id="+this.parametrocarteradefecto.getid_tipo_lista_precio());
									//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
						this.tipolistapreciosForeignKey=new ArrayList<TipoListaPrecio>();

						if(parametrocarteradefecto.getTipoListaPrecio()!=null) {
							this.tipolistapreciosForeignKey.add(parametrocarteradefecto.getTipoListaPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoListaPrecio();
						this.cargarCombosFrameTipoListaPreciosForeignKey("Todos");
					}
					this.setActualTipoListaPrecioForeignKey(this.parametrocarteradefecto.getid_tipo_lista_precio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroCarteraDefecto("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroCarteraDefecto(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroCarteraDefecto(parametrocarteradefecto,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroCarteraDefecto(parametrocarteradefecto);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroCarteraDefecto(parametrocarteradefecto,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroCarteraDefecto(parametrocarteradefecto);
	}
	
	public void setVariablesObjetoActualToFormularioParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.setText(parametrocarteradefecto.getId().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroCarteraDefecto parametrocarteradefectoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrocarteradefectoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroCarteraDefecto parametrocarteradefectoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrocarteradefectoLocal=this.parametrocarteradefecto;
			} else {
				parametrocarteradefectoLocal=this.parametrocarteradefectoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrocarteradefectoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroCarteraDefecto(parametrocarteradefectoLocal,true);
					
					if(parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrocarteradefectoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrocarteradefectoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(parametrocarteradefecto,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(parametrocarteradefecto);
	}
	
	public void setVariablesFormularioToObjetoActualParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(parametrocarteradefecto,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.getText()==null || this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.getText()=="" || this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.setText("0");
			}

			if(conColumnasBase) {parametrocarteradefecto.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroCarteraDefectoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelIdParametroCarteraDefecto,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefectoBean,ParametroCarteraDefecto parametrocarteradefecto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_pais()!=null && !parametrocarteradefectoBean.getid_pais().equals(-1L))) {parametrocarteradefecto.setid_pais(parametrocarteradefectoBean.getid_pais());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_region()!=null && !parametrocarteradefectoBean.getid_region().equals(-1L))) {parametrocarteradefecto.setid_region(parametrocarteradefectoBean.getid_region());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_provincia()!=null && !parametrocarteradefectoBean.getid_provincia().equals(-1L))) {parametrocarteradefecto.setid_provincia(parametrocarteradefectoBean.getid_provincia());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_ciudad()!=null && !parametrocarteradefectoBean.getid_ciudad().equals(-1L))) {parametrocarteradefecto.setid_ciudad(parametrocarteradefectoBean.getid_ciudad());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_zona()!=null && !parametrocarteradefectoBean.getid_zona().equals(-1L))) {parametrocarteradefecto.setid_zona(parametrocarteradefectoBean.getid_zona());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_tipo_identificacion()!=null && !parametrocarteradefectoBean.getid_tipo_identificacion().equals(-1L))) {parametrocarteradefecto.setid_tipo_identificacion(parametrocarteradefectoBean.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_tipo_nivel_edu()!=null && !parametrocarteradefectoBean.getid_tipo_nivel_edu().equals(-1L))) {parametrocarteradefecto.setid_tipo_nivel_edu(parametrocarteradefectoBean.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_pais_nacionalidad()!=null && !parametrocarteradefectoBean.getid_pais_nacionalidad().equals(-1L))) {parametrocarteradefecto.setid_pais_nacionalidad(parametrocarteradefectoBean.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_tipo_genero()!=null && !parametrocarteradefectoBean.getid_tipo_genero().equals(-1L))) {parametrocarteradefecto.setid_tipo_genero(parametrocarteradefectoBean.getid_tipo_genero());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_estado_civil()!=null && !parametrocarteradefectoBean.getid_estado_civil().equals(-1L))) {parametrocarteradefecto.setid_estado_civil(parametrocarteradefectoBean.getid_estado_civil());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_estado_legal()!=null && !parametrocarteradefectoBean.getid_estado_legal().equals(-1L))) {parametrocarteradefecto.setid_estado_legal(parametrocarteradefectoBean.getid_estado_legal());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_cuenta_contable()!=null && !parametrocarteradefectoBean.getid_cuenta_contable().equals(-1L))) {parametrocarteradefecto.setid_cuenta_contable(parametrocarteradefectoBean.getid_cuenta_contable());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_vendedor()!=null && !parametrocarteradefectoBean.getid_vendedor().equals(-1L))) {parametrocarteradefecto.setid_vendedor(parametrocarteradefectoBean.getid_vendedor());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_ruta()!=null && !parametrocarteradefectoBean.getid_ruta().equals(-1L))) {parametrocarteradefecto.setid_ruta(parametrocarteradefectoBean.getid_ruta());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_dia()!=null && !parametrocarteradefectoBean.getid_dia().equals(-1L))) {parametrocarteradefecto.setid_dia(parametrocarteradefectoBean.getid_dia());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_tipo_precio()!=null && !parametrocarteradefectoBean.getid_tipo_precio().equals(-1L))) {parametrocarteradefecto.setid_tipo_precio(parametrocarteradefectoBean.getid_tipo_precio());}
			if(conDefault || (!conDefault && parametrocarteradefectoBean.getid_tipo_lista_precio()!=null && !parametrocarteradefectoBean.getid_tipo_lista_precio().equals(-1L))) {parametrocarteradefecto.setid_tipo_lista_precio(parametrocarteradefectoBean.getid_tipo_lista_precio());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefectoOrigen,ParametroCarteraDefecto parametrocarteradefecto,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getId()!=null && !parametrocarteradefectoOrigen.getId().equals(0L))) {parametrocarteradefecto.setId(parametrocarteradefectoOrigen.getId());}}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_pais()!=null && !parametrocarteradefectoOrigen.getid_pais().equals(-1L))) {parametrocarteradefecto.setid_pais(parametrocarteradefectoOrigen.getid_pais());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_region()!=null && !parametrocarteradefectoOrigen.getid_region().equals(-1L))) {parametrocarteradefecto.setid_region(parametrocarteradefectoOrigen.getid_region());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_provincia()!=null && !parametrocarteradefectoOrigen.getid_provincia().equals(-1L))) {parametrocarteradefecto.setid_provincia(parametrocarteradefectoOrigen.getid_provincia());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_ciudad()!=null && !parametrocarteradefectoOrigen.getid_ciudad().equals(-1L))) {parametrocarteradefecto.setid_ciudad(parametrocarteradefectoOrigen.getid_ciudad());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_zona()!=null && !parametrocarteradefectoOrigen.getid_zona().equals(-1L))) {parametrocarteradefecto.setid_zona(parametrocarteradefectoOrigen.getid_zona());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_tipo_identificacion()!=null && !parametrocarteradefectoOrigen.getid_tipo_identificacion().equals(-1L))) {parametrocarteradefecto.setid_tipo_identificacion(parametrocarteradefectoOrigen.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_tipo_nivel_edu()!=null && !parametrocarteradefectoOrigen.getid_tipo_nivel_edu().equals(-1L))) {parametrocarteradefecto.setid_tipo_nivel_edu(parametrocarteradefectoOrigen.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_pais_nacionalidad()!=null && !parametrocarteradefectoOrigen.getid_pais_nacionalidad().equals(-1L))) {parametrocarteradefecto.setid_pais_nacionalidad(parametrocarteradefectoOrigen.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_tipo_genero()!=null && !parametrocarteradefectoOrigen.getid_tipo_genero().equals(-1L))) {parametrocarteradefecto.setid_tipo_genero(parametrocarteradefectoOrigen.getid_tipo_genero());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_estado_civil()!=null && !parametrocarteradefectoOrigen.getid_estado_civil().equals(-1L))) {parametrocarteradefecto.setid_estado_civil(parametrocarteradefectoOrigen.getid_estado_civil());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_estado_legal()!=null && !parametrocarteradefectoOrigen.getid_estado_legal().equals(-1L))) {parametrocarteradefecto.setid_estado_legal(parametrocarteradefectoOrigen.getid_estado_legal());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_cuenta_contable()!=null && !parametrocarteradefectoOrigen.getid_cuenta_contable().equals(-1L))) {parametrocarteradefecto.setid_cuenta_contable(parametrocarteradefectoOrigen.getid_cuenta_contable());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_vendedor()!=null && !parametrocarteradefectoOrigen.getid_vendedor().equals(-1L))) {parametrocarteradefecto.setid_vendedor(parametrocarteradefectoOrigen.getid_vendedor());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_ruta()!=null && !parametrocarteradefectoOrigen.getid_ruta().equals(-1L))) {parametrocarteradefecto.setid_ruta(parametrocarteradefectoOrigen.getid_ruta());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_dia()!=null && !parametrocarteradefectoOrigen.getid_dia().equals(-1L))) {parametrocarteradefecto.setid_dia(parametrocarteradefectoOrigen.getid_dia());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_tipo_precio()!=null && !parametrocarteradefectoOrigen.getid_tipo_precio().equals(-1L))) {parametrocarteradefecto.setid_tipo_precio(parametrocarteradefectoOrigen.getid_tipo_precio());}
			if(conDefault || (!conDefault && parametrocarteradefectoOrigen.getid_tipo_lista_precio()!=null && !parametrocarteradefectoOrigen.getid_tipo_lista_precio().equals(-1L))) {parametrocarteradefecto.setid_tipo_lista_precio(parametrocarteradefectoOrigen.getid_tipo_lista_precio());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.setText(parametrocarteradefecto.getId().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroCarteraDefecto(ParametroCarteraDefectoBean parametrocarteradefectoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.setText(parametrocarteradefectoBean.getId().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroCarteraDefecto(ParametroCarteraDefectoParameterReturnGeneral parametrocarteradefectoReturnGeneral,ParametroCarteraDefectoBean parametrocarteradefectoBean,Boolean conDefault) throws Exception { 
		try {
			ParametroCarteraDefecto parametrocarteradefectoLocal=new ParametroCarteraDefecto();
			
			parametrocarteradefectoLocal=parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrocarteradefectoLocal.getId()!=null && !parametrocarteradefectoLocal.getId().equals(0L))) {parametrocarteradefectoBean.setId(parametrocarteradefectoLocal.getId());}}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_pais()!=null && !parametrocarteradefectoLocal.getid_pais().equals(-1L))) {parametrocarteradefectoBean.setid_pais(parametrocarteradefectoLocal.getid_pais());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_region()!=null && !parametrocarteradefectoLocal.getid_region().equals(-1L))) {parametrocarteradefectoBean.setid_region(parametrocarteradefectoLocal.getid_region());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_provincia()!=null && !parametrocarteradefectoLocal.getid_provincia().equals(-1L))) {parametrocarteradefectoBean.setid_provincia(parametrocarteradefectoLocal.getid_provincia());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_ciudad()!=null && !parametrocarteradefectoLocal.getid_ciudad().equals(-1L))) {parametrocarteradefectoBean.setid_ciudad(parametrocarteradefectoLocal.getid_ciudad());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_zona()!=null && !parametrocarteradefectoLocal.getid_zona().equals(-1L))) {parametrocarteradefectoBean.setid_zona(parametrocarteradefectoLocal.getid_zona());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_tipo_identificacion()!=null && !parametrocarteradefectoLocal.getid_tipo_identificacion().equals(-1L))) {parametrocarteradefectoBean.setid_tipo_identificacion(parametrocarteradefectoLocal.getid_tipo_identificacion());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_tipo_nivel_edu()!=null && !parametrocarteradefectoLocal.getid_tipo_nivel_edu().equals(-1L))) {parametrocarteradefectoBean.setid_tipo_nivel_edu(parametrocarteradefectoLocal.getid_tipo_nivel_edu());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_pais_nacionalidad()!=null && !parametrocarteradefectoLocal.getid_pais_nacionalidad().equals(-1L))) {parametrocarteradefectoBean.setid_pais_nacionalidad(parametrocarteradefectoLocal.getid_pais_nacionalidad());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_tipo_genero()!=null && !parametrocarteradefectoLocal.getid_tipo_genero().equals(-1L))) {parametrocarteradefectoBean.setid_tipo_genero(parametrocarteradefectoLocal.getid_tipo_genero());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_estado_civil()!=null && !parametrocarteradefectoLocal.getid_estado_civil().equals(-1L))) {parametrocarteradefectoBean.setid_estado_civil(parametrocarteradefectoLocal.getid_estado_civil());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_estado_legal()!=null && !parametrocarteradefectoLocal.getid_estado_legal().equals(-1L))) {parametrocarteradefectoBean.setid_estado_legal(parametrocarteradefectoLocal.getid_estado_legal());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_cuenta_contable()!=null && !parametrocarteradefectoLocal.getid_cuenta_contable().equals(-1L))) {parametrocarteradefectoBean.setid_cuenta_contable(parametrocarteradefectoLocal.getid_cuenta_contable());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_vendedor()!=null && !parametrocarteradefectoLocal.getid_vendedor().equals(-1L))) {parametrocarteradefectoBean.setid_vendedor(parametrocarteradefectoLocal.getid_vendedor());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_ruta()!=null && !parametrocarteradefectoLocal.getid_ruta().equals(-1L))) {parametrocarteradefectoBean.setid_ruta(parametrocarteradefectoLocal.getid_ruta());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_dia()!=null && !parametrocarteradefectoLocal.getid_dia().equals(-1L))) {parametrocarteradefectoBean.setid_dia(parametrocarteradefectoLocal.getid_dia());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_tipo_precio()!=null && !parametrocarteradefectoLocal.getid_tipo_precio().equals(-1L))) {parametrocarteradefectoBean.setid_tipo_precio(parametrocarteradefectoLocal.getid_tipo_precio());}
			if(conDefault || (!conDefault && parametrocarteradefectoLocal.getid_tipo_lista_precio()!=null && !parametrocarteradefectoLocal.getid_tipo_lista_precio().equals(-1L))) {parametrocarteradefectoBean.setid_tipo_lista_precio(parametrocarteradefectoLocal.getid_tipo_lista_precio());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroCarteraDefectoGenerico(Long idParametroCarteraDefectoSeleccionado,JComboBox jComboBoxParametroCarteraDefecto,List<ParametroCarteraDefecto> parametrocarteradefectosLocal)throws Exception {
		try {
			ParametroCarteraDefecto  parametrocarteradefectoTemp=null;

			for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectosLocal) {
				if(parametrocarteradefectoAux.getId()!=null && parametrocarteradefectoAux.getId().equals(idParametroCarteraDefectoSeleccionado)) {
					parametrocarteradefectoTemp=parametrocarteradefectoAux;
					break;
				}
			}

			jComboBoxParametroCarteraDefecto.setSelectedItem(parametrocarteradefectoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroCarteraDefectoGenerico(JComboBox jComboBoxParametroCarteraDefecto,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroCarteraDefecto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroCarteraDefecto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroCarteraDefecto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroCarteraDefecto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroCarteraDefecto.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroCarteraDefecto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroCarteraDefecto.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroCarteraDefecto.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroCarteraDefecto.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroCarteraDefecto.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocarteradefecto=(ParametroCarteraDefecto) parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrocarteradefecto =(ParametroCarteraDefecto) parametrocarteradefectos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getpais_descripcion();
			}
		}

		if(sTipo.equals("Region")) {
			//sDescripcion=this.getActualRegionForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getregion_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=parametrocarteradefecto.getregion_descripcion();
			}
		}

		if(sTipo.equals("Provincia")) {
			//sDescripcion=this.getActualProvinciaForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getprovincia_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=parametrocarteradefecto.getprovincia_descripcion();
			}
		}

		if(sTipo.equals("Ciudad")) {
			//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getciudad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=parametrocarteradefecto.getciudad_descripcion();
			}
		}

		if(sTipo.equals("Zona")) {
			//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getzona_descripcion();
			} else {
				//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getzona_descripcion();
			}
		}

		if(sTipo.equals("TipoIdentificacion")) {
			//sDescripcion=this.getActualTipoIdentificacionForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.gettipoidentificacion_descripcion();
			} else {
				//sDescripcion=this.getActualTipoIdentificacionForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.gettipoidentificacion_descripcion();
			}
		}

		if(sTipo.equals("TipoNivelEdu")) {
			//sDescripcion=this.getActualTipoNivelEduForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.gettiponiveledu_descripcion();
			} else {
				//sDescripcion=this.getActualTipoNivelEduForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.gettiponiveledu_descripcion();
			}
		}

		if(sTipo.equals("PaisNacionalidad")) {
			//sDescripcion=this.getActualPaisNacionalidadForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getpaisnacionalidad_descripcion();
			} else {
				//sDescripcion=this.getActualPaisNacionalidadForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getpaisnacionalidad_descripcion();
			}
		}

		if(sTipo.equals("TipoGenero")) {
			//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.gettipogenero_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGeneroForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.gettipogenero_descripcion();
			}
		}

		if(sTipo.equals("EstadoCivil")) {
			//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getestadocivil_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoCivilForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getestadocivil_descripcion();
			}
		}

		if(sTipo.equals("EstadoLegal")) {
			//sDescripcion=this.getActualEstadoLegalForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getestadolegal_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoLegalForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getestadolegal_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("Ruta")) {
			//sDescripcion=this.getActualRutaForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getruta_descripcion();
			} else {
				//sDescripcion=this.getActualRutaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getruta_descripcion();
			}
		}

		if(sTipo.equals("Dia")) {
			//sDescripcion=this.getActualDiaForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.getdia_descripcion();
			} else {
				//sDescripcion=this.getActualDiaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.getdia_descripcion();
			}
		}

		if(sTipo.equals("TipoPrecio")) {
			//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.gettipoprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.gettipoprecio_descripcion();
			}
		}

		if(sTipo.equals("TipoListaPrecio")) {
			//sDescripcion=this.getActualTipoListaPrecioForeignKeyDescripcion((Long)value);
			if(!parametrocarteradefecto.getIsNew() && !parametrocarteradefecto.getIsChanged() && !parametrocarteradefecto.getIsDeleted()) {
				sDescripcion=parametrocarteradefecto.gettipolistaprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoListaPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=parametrocarteradefecto.gettipolistaprecio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroCarteraDefecto parametrocarteradefectoRow=new ParametroCarteraDefecto();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocarteradefectoRow=(ParametroCarteraDefecto) parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrocarteradefectoRow=(ParametroCarteraDefecto) parametrocarteradefectos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroCarteraDefecto(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto));			
			this.jButtonDuplicarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaDuplicarParametroCarteraDefecto && this.isPermisoDuplicarParametroCarteraDefecto));			
			this.jButtonCopiarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaCopiarParametroCarteraDefecto && this.isPermisoCopiarParametroCarteraDefecto));
			this.jButtonVerFormParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaVerFormParametroCarteraDefecto && this.isPermisoVerFormParametroCarteraDefecto));
			
			this.jButtonAbrirOrderByParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaOrdenParametroCarteraDefecto && this.isPermisoOrdenParametroCarteraDefecto));			
			
			this.jButtonNuevoRelacionesParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto));			
			this.jButtonNuevoGuardarCambiosParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaModificarParametroCarteraDefecto && this.isPermisoActualizarParametroCarteraDefecto));	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaActualizarParametroCarteraDefecto && this.isPermisoActualizarParametroCarteraDefecto));	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaEliminarParametroCarteraDefecto && this.isPermisoEliminarParametroCarteraDefecto));
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarParametroCarteraDefecto.setVisible(this.isVisibilidadCeldaCancelarParametroCarteraDefecto);							
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaGuardarParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto));						
			this.jButtonDuplicarToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaDuplicarParametroCarteraDefecto && this.isPermisoDuplicarParametroCarteraDefecto));						
			this.jButtonCopiarToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaCopiarParametroCarteraDefecto && this.isPermisoCopiarParametroCarteraDefecto));			
			this.jButtonVerFormToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaVerFormParametroCarteraDefecto && this.isPermisoVerFormParametroCarteraDefecto));			
			this.jButtonAbrirOrderByToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaOrdenParametroCarteraDefecto && this.isPermisoOrdenParametroCarteraDefecto));
			this.jButtonNuevoRelacionesToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto));			
			this.jButtonNuevoGuardarCambiosToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));			
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaModificarParametroCarteraDefecto && this.isPermisoActualizarParametroCarteraDefecto));	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaActualizarParametroCarteraDefecto  && this.isPermisoActualizarParametroCarteraDefecto));	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaEliminarParametroCarteraDefecto && this.isPermisoEliminarParametroCarteraDefecto));
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarToolBarParametroCarteraDefecto.setVisible(this.isVisibilidadCeldaCancelarParametroCarteraDefecto);				
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaGuardarParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto));			
			this.jMenuItemDuplicarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaDuplicarParametroCarteraDefecto && this.isPermisoDuplicarParametroCarteraDefecto));			
			this.jMenuItemCopiarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaCopiarParametroCarteraDefecto && this.isPermisoCopiarParametroCarteraDefecto));			
			this.jMenuItemVerFormParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaVerFormParametroCarteraDefecto && this.isPermisoVerFormParametroCarteraDefecto));			
			this.jMenuItemAbrirOrderByParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaOrdenParametroCarteraDefecto && this.isPermisoOrdenParametroCarteraDefecto));			
			//this.jMenuItemMostrarOcultarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaOrdenParametroCarteraDefecto && this.isPermisoOrdenParametroCarteraDefecto));
			this.jMenuItemDetalleAbrirOrderByParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaOrdenParametroCarteraDefecto && this.isPermisoOrdenParametroCarteraDefecto));			
			//this.jMenuItemDetalleMostrarOcultarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaOrdenParametroCarteraDefecto && this.isPermisoOrdenParametroCarteraDefecto));			
			this.jMenuItemNuevoRelacionesParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto));			
			this.jMenuItemNuevoGuardarCambiosParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaNuevoParametroCarteraDefecto && this.isPermisoNuevoParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));									
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemModificarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaModificarParametroCarteraDefecto && this.isPermisoActualizarParametroCarteraDefecto));	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemActualizarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaActualizarParametroCarteraDefecto && this.isPermisoActualizarParametroCarteraDefecto));	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemEliminarParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaEliminarParametroCarteraDefecto && this.isPermisoEliminarParametroCarteraDefecto));
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemCancelarParametroCarteraDefecto.setVisible(this.isVisibilidadCeldaCancelarParametroCarteraDefecto);				
			}
			
			this.jMenuItemGuardarCambiosParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaGuardarParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));						
			this.jMenuItemGuardarCambiosTablaParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=this.jButtonNuevoParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaDuplicarParametroCarteraDefecto=this.jButtonDuplicarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaCopiarParametroCarteraDefecto=this.jButtonCopiarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaVerFormParametroCarteraDefecto=this.jButtonVerFormParametroCarteraDefecto.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroCarteraDefecto=this.jButtonAbrirOrderByParametroCarteraDefecto.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=this.jButtonNuevoRelacionesParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=this.jButtonModificarParametroCarteraDefecto.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaGuardarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=this.jButtonGuardarCambiosTablaParametroCarteraDefecto.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=this.jButtonNuevoToolBarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=this.jButtonNuevoRelacionesToolBarParametroCarteraDefecto.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarToolBarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarToolBarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarToolBarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarToolBarParametroCarteraDefecto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroCarteraDefecto=this.jButtonGuardarCambiosToolBarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=this.jButtonGuardarCambiosTablaToolBarParametroCarteraDefecto.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=this.jMenuItemNuevoParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=this.jMenuItemNuevoRelacionesParametroCarteraDefecto.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemModificarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemActualizarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemEliminarParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemCancelarParametroCarteraDefecto.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroCarteraDefecto=this.jMenuItemGuardarCambiosParametroCarteraDefecto.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=this.jMenuItemGuardarCambiosTablaParametroCarteraDefecto.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroCarteraDefecto(Boolean esInicializar) {
		if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroCarteraDefecto();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroCarteraDefecto(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroCarteraDefecto() {
		this.jButtonNuevoParametroCarteraDefecto.setVisible(this.isPermisoNuevoParametroCarteraDefecto);			
		this.jButtonDuplicarParametroCarteraDefecto.setVisible(this.isPermisoDuplicarParametroCarteraDefecto);			
		this.jButtonCopiarParametroCarteraDefecto.setVisible(this.isPermisoCopiarParametroCarteraDefecto);			
		this.jButtonVerFormParametroCarteraDefecto.setVisible(this.isPermisoVerFormParametroCarteraDefecto);			
		
		this.jButtonAbrirOrderByParametroCarteraDefecto.setVisible(this.isPermisoOrdenParametroCarteraDefecto);					
		
		this.jButtonNuevoRelacionesParametroCarteraDefecto.setVisible(this.isPermisoNuevoParametroCarteraDefecto);			
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarParametroCarteraDefecto.setVisible(this.isPermisoActualizarParametroCarteraDefecto);	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarParametroCarteraDefecto.setVisible(this.isPermisoActualizarParametroCarteraDefecto);	
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarParametroCarteraDefecto.setVisible(this.isPermisoEliminarParametroCarteraDefecto);
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarParametroCarteraDefecto.setVisible(this.isVisibilidadCeldaCancelarParametroCarteraDefecto);						
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.setVisible(this.isPermisoGuardarCambiosParametroCarteraDefecto);							
		}
		
		this.jButtonGuardarCambiosTablaParametroCarteraDefecto.setVisible(this.isPermisoActualizarParametroCarteraDefecto);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroCarteraDefecto() {
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarParametroCarteraDefecto.setVisible(this.isPermisoActualizarParametroCarteraDefecto);	
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarParametroCarteraDefecto.setVisible(this.isPermisoActualizarParametroCarteraDefecto);	
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarParametroCarteraDefecto.setVisible(this.isPermisoEliminarParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarParametroCarteraDefecto.setVisible(this.isVisibilidadCeldaCancelarParametroCarteraDefecto);							
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.setVisible((this.isVisibilidadCeldaGuardarParametroCarteraDefecto && this.isPermisoGuardarCambiosParametroCarteraDefecto));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroCarteraDefecto() {
		if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroCarteraDefecto();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroCarteraDefecto() {
	}
	
	public void jTableDatosParametroCarteraDefectoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroCarteraDefecto(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametrocarteradefecto.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametrocarteradefecto.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.parametrocarteradefecto.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.parametrocarteradefecto.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_regionParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoregion=true;

			idTienePermisoregion=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(RegionConstantesFunciones.CLASSNAME);

			if(idTienePermisoregion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.regionBeanSwingJInternalFrame=new RegionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.regionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.regionBeanSwingJInternalFrame.getRegionLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_region()!=null) {
					this.regionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.regionBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_region());
					this.regionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.regionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.regionBeanSwingJInternalFrame.inicializarActualizarBindingTablaRegion();
				}

				JInternalFrameBase jinternalFrame =this.regionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderregion=(TitledBorder)this.regionBeanSwingJInternalFrame.jScrollPanelDatosRegion.getBorder();

				titledBorderregion.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Region");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_regionParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_region()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_region = "+this.parametrocarteradefecto.getid_region().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_provinciaParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoprovincia=true;

			idTienePermisoprovincia=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(ProvinciaConstantesFunciones.CLASSNAME);

			if(idTienePermisoprovincia) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.provinciaBeanSwingJInternalFrame=new ProvinciaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.provinciaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.provinciaBeanSwingJInternalFrame.getProvinciaLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_provincia()!=null) {
					this.provinciaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.provinciaBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_provincia());
					this.provinciaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.provinciaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.provinciaBeanSwingJInternalFrame.inicializarActualizarBindingTablaProvincia();
				}

				JInternalFrameBase jinternalFrame =this.provinciaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderprovincia=(TitledBorder)this.provinciaBeanSwingJInternalFrame.jScrollPanelDatosProvincia.getBorder();

				titledBorderprovincia.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Provincia");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_provinciaParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_provincia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_provincia = "+this.parametrocarteradefecto.getid_provincia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudadParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudad=true;

			idTienePermisociudad=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.ciudadBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_ciudad()!=null) {
					this.ciudadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_ciudad());
					this.ciudadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderciudad=(TitledBorder)this.ciudadBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudad.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudadParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_ciudad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad = "+this.parametrocarteradefecto.getid_ciudad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_zonaParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisozona=true;

			idTienePermisozona=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(ZonaConstantesFunciones.CLASSNAME);

			if(idTienePermisozona) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.zonaBeanSwingJInternalFrame=new ZonaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.zonaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.zonaBeanSwingJInternalFrame.getZonaLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_zona()!=null) {
					this.zonaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.zonaBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_zona());
					this.zonaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.inicializarActualizarBindingTablaZona();
				}

				JInternalFrameBase jinternalFrame =this.zonaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderzona=(TitledBorder)this.zonaBeanSwingJInternalFrame.jScrollPanelDatosZona.getBorder();

				titledBorderzona.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Zona");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_zonaParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_zona()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_zona = "+this.parametrocarteradefecto.getid_zona().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_identificacionParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoidentificacion=true;

			idTienePermisotipoidentificacion=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(TipoIdentificacionConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoidentificacion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.tipoidentificacionBeanSwingJInternalFrame=new TipoIdentificacionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoidentificacionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoidentificacionBeanSwingJInternalFrame.getTipoIdentificacionLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_tipo_identificacion()!=null) {
					this.tipoidentificacionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoidentificacionBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_tipo_identificacion());
					this.tipoidentificacionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoidentificacionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoidentificacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoIdentificacion();
				}

				JInternalFrameBase jinternalFrame =this.tipoidentificacionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordertipoidentificacion=(TitledBorder)this.tipoidentificacionBeanSwingJInternalFrame.jScrollPanelDatosTipoIdentificacion.getBorder();

				titledBordertipoidentificacion.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Tipo Identificacion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_identificacionParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_tipo_identificacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_identificacion = "+this.parametrocarteradefecto.getid_tipo_identificacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_nivel_eduParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiponiveledu=true;

			idTienePermisotiponiveledu=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(TipoNivelEduConstantesFunciones.CLASSNAME);

			if(idTienePermisotiponiveledu) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.tiponiveleduBeanSwingJInternalFrame=new TipoNivelEduBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiponiveleduBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiponiveleduBeanSwingJInternalFrame.getTipoNivelEduLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_tipo_nivel_edu()!=null) {
					this.tiponiveleduBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiponiveleduBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_tipo_nivel_edu());
					this.tiponiveleduBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiponiveleduBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiponiveleduBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoNivelEdu();
				}

				JInternalFrameBase jinternalFrame =this.tiponiveleduBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordertiponiveledu=(TitledBorder)this.tiponiveleduBeanSwingJInternalFrame.jScrollPanelDatosTipoNivelEdu.getBorder();

				titledBordertiponiveledu.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Tipo Nivel Edu");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_nivel_eduParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_tipo_nivel_edu()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_nivel_edu = "+this.parametrocarteradefecto.getid_tipo_nivel_edu().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_pais_nacionalidadParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopaisnacionalidad=true;

			idTienePermisopaisnacionalidad=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopaisnacionalidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.paisnacionalidadBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisnacionalidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisnacionalidadBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_pais_nacionalidad()!=null) {
					this.paisnacionalidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisnacionalidadBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_pais_nacionalidad());
					this.paisnacionalidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisnacionalidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisnacionalidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisnacionalidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderpaisnacionalidad=(TitledBorder)this.paisnacionalidadBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpaisnacionalidad.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_pais_nacionalidadParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_pais_nacionalidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais_nacionalidad = "+this.parametrocarteradefecto.getid_pais_nacionalidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_generoParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogenero=true;

			idTienePermisotipogenero=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(TipoGeneroConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogenero) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.tipogeneroBeanSwingJInternalFrame=new TipoGeneroBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogeneroBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogeneroBeanSwingJInternalFrame.getTipoGeneroLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_tipo_genero()!=null) {
					this.tipogeneroBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogeneroBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_tipo_genero());
					this.tipogeneroBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogeneroBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGenero();
				}

				JInternalFrameBase jinternalFrame =this.tipogeneroBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordertipogenero=(TitledBorder)this.tipogeneroBeanSwingJInternalFrame.jScrollPanelDatosTipoGenero.getBorder();

				titledBordertipogenero.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Tipo Genero");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_generoParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_tipo_genero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_genero = "+this.parametrocarteradefecto.getid_tipo_genero().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_civilParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadocivil=true;

			idTienePermisoestadocivil=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(EstadoCivilConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadocivil) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.estadocivilBeanSwingJInternalFrame=new EstadoCivilBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadocivilBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadocivilBeanSwingJInternalFrame.getEstadoCivilLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_estado_civil()!=null) {
					this.estadocivilBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadocivilBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_estado_civil());
					this.estadocivilBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadocivilBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoCivil();
				}

				JInternalFrameBase jinternalFrame =this.estadocivilBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderestadocivil=(TitledBorder)this.estadocivilBeanSwingJInternalFrame.jScrollPanelDatosEstadoCivil.getBorder();

				titledBorderestadocivil.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Estado Civil");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_civilParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_estado_civil()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_civil = "+this.parametrocarteradefecto.getid_estado_civil().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_legalParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadolegal=true;

			idTienePermisoestadolegal=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(EstadoLegalConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadolegal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.estadolegalBeanSwingJInternalFrame=new EstadoLegalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadolegalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadolegalBeanSwingJInternalFrame.getEstadoLegalLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_estado_legal()!=null) {
					this.estadolegalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadolegalBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_estado_legal());
					this.estadolegalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadolegalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadolegalBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoLegal();
				}

				JInternalFrameBase jinternalFrame =this.estadolegalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderestadolegal=(TitledBorder)this.estadolegalBeanSwingJInternalFrame.jScrollPanelDatosEstadoLegal.getBorder();

				titledBorderestadolegal.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Estado Legal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_legalParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_estado_legal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_legal = "+this.parametrocarteradefecto.getid_estado_legal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.parametrocarteradefecto.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.parametrocarteradefecto.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_rutaParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoruta=true;

			idTienePermisoruta=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(RutaConstantesFunciones.CLASSNAME);

			if(idTienePermisoruta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.rutaBeanSwingJInternalFrame=new RutaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.rutaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.rutaBeanSwingJInternalFrame.getRutaLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_ruta()!=null) {
					this.rutaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.rutaBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_ruta());
					this.rutaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.rutaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.rutaBeanSwingJInternalFrame.inicializarActualizarBindingTablaRuta();
				}

				JInternalFrameBase jinternalFrame =this.rutaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderruta=(TitledBorder)this.rutaBeanSwingJInternalFrame.jScrollPanelDatosRuta.getBorder();

				titledBorderruta.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Ruta");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_rutaParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_ruta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ruta = "+this.parametrocarteradefecto.getid_ruta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_diaParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisodia=true;

			idTienePermisodia=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(DiaConstantesFunciones.CLASSNAME);

			if(idTienePermisodia) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.diaBeanSwingJInternalFrame=new DiaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.diaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.diaBeanSwingJInternalFrame.getDiaLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_dia()!=null) {
					this.diaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.diaBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_dia());
					this.diaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.diaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.diaBeanSwingJInternalFrame.inicializarActualizarBindingTablaDia();
				}

				JInternalFrameBase jinternalFrame =this.diaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBorderdia=(TitledBorder)this.diaBeanSwingJInternalFrame.jScrollPanelDatosDia.getBorder();

				titledBorderdia.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Dia");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_diaParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_dia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_dia = "+this.parametrocarteradefecto.getid_dia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_precioParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprecio=true;

			idTienePermisotipoprecio=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(TipoPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.tipoprecioBeanSwingJInternalFrame=new TipoPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprecioBeanSwingJInternalFrame.getTipoPrecioLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_tipo_precio()!=null) {
					this.tipoprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprecioBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_tipo_precio());
					this.tipoprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipoprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordertipoprecio=(TitledBorder)this.tipoprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoPrecio.getBorder();

				titledBordertipoprecio.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Tipo Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_precioParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_tipo_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_precio = "+this.parametrocarteradefecto.getid_tipo_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_lista_precioParametroCarteraDefectoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipolistaprecio=true;

			idTienePermisotipolistaprecio=this.tienePermisosUsuarioEnPaginaWebParametroCarteraDefecto(TipoListaPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipolistaprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroCarteraDefecto.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroCarteraDefecto.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);

				this.tipolistaprecioBeanSwingJInternalFrame=new TipoListaPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipolistaprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipolistaprecioBeanSwingJInternalFrame.getTipoListaPrecioLogic().setConnexion(this.parametrocarteradefectoLogic.getConnexion());

				if(this.parametrocarteradefecto.getid_tipo_lista_precio()!=null) {
					this.tipolistaprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipolistaprecioBeanSwingJInternalFrame.setIdActual(this.parametrocarteradefecto.getid_tipo_lista_precio());
					this.tipolistaprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipolistaprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipolistaprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoListaPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipolistaprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroCarteraDefecto=(TitledBorder)this.jScrollPanelDatosParametroCarteraDefecto.getBorder();
				TitledBorder titledBordertipolistaprecio=(TitledBorder)this.tipolistaprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoListaPrecio.getBorder();

				titledBordertipolistaprecio.setTitle(titledBorderParametroCarteraDefecto.getTitle() + " -> Tipo Lista Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_lista_precioParametroCarteraDefectoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.getparametrocarteradefecto(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrocarteradefecto==null) {
						this.parametrocarteradefecto = new ParametroCarteraDefecto();
					}

					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);
				}

				if(this.parametrocarteradefecto.getid_tipo_lista_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_lista_precio = "+this.parametrocarteradefecto.getid_tipo_lista_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroCarteraDefecto(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdCiudadParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdCiudad();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdCuentaContable();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdDiaParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdDia();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdEmpresa();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoCivilParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdEstadoCivil();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoLegalParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdEstadoLegal();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdPais();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisNacionalidadParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdPaisNacionalidad();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProvinciaParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdProvincia();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdRegionParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdRegion();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdRutaParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdRuta();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdSucursal();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGeneroParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdTipoGenero();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoIdentificacionParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdTipoIdentificacion();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoListaPrecioParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdTipoListaPrecio();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoNivelEduParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdTipoNivelEdu();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPrecioParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdTipoPrecio();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdVendedor();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdZonaParametroCarteraDefectoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);

			this.getParametroCarteraDefectosFK_IdZona();

			this.inicializarActualizarBindingParametroCarteraDefecto(false);

			//if(ParametroCarteraDefectoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrocarteradefectoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroCarteraDefecto() {
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.dispose();
			this.jInternalFrameDetalleFormParametroCarteraDefecto=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
			this.jInternalFrameReporteDinamicoParametroCarteraDefecto.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroCarteraDefecto.dispose();
			this.jInternalFrameReporteDinamicoParametroCarteraDefecto=null;
		}
		
		if(this.jInternalFrameImportacionParametroCarteraDefecto!=null) {
			this.jInternalFrameImportacionParametroCarteraDefecto.setVisible(false);	    			
			this.jInternalFrameImportacionParametroCarteraDefecto.dispose();
			this.jInternalFrameImportacionParametroCarteraDefecto=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroCarteraDefecto();
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroCarteraDefecto")) {
				jButtonDuplicarParametroCarteraDefectoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroCarteraDefecto")) {
				jButtonCopiarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroCarteraDefecto")) {
				jButtonVerFormParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroCarteraDefecto")) {
				jButtonDuplicarParametroCarteraDefectoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroCarteraDefecto")) {
				jButtonDuplicarParametroCarteraDefectoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroCarteraDefecto")) {
				jButtonModificarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroCarteraDefecto")) {
				jButtonModificarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroCarteraDefecto")) {
				jButtonModificarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroCarteraDefecto")) {
				jButtonActualizarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroCarteraDefecto")) {
				jButtonActualizarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroCarteraDefecto")) {
				jButtonActualizarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroCarteraDefecto")) {
				jButtonEliminarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroCarteraDefecto")) {
				jButtonEliminarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroCarteraDefecto")) {
				jButtonEliminarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroCarteraDefecto")) {
				jButtonCancelarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroCarteraDefecto")) {
				jButtonCancelarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroCarteraDefecto")) {
				jButtonCancelarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroCarteraDefecto")) {
				jButtonCerrarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroCarteraDefecto")) {
				jButtonCerrarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroCarteraDefecto")) {
				jButtonCerrarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroCarteraDefecto")) {
				jButtonMostrarOcultarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroCarteraDefecto")) {
				jButtonCancelarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroCarteraDefecto")) {
				jButtonCopiarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroCarteraDefecto")) {
				jButtonVerFormParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroCarteraDefecto")) {
				jButtonCopiarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroCarteraDefecto")) {
				jButtonVerFormParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroCarteraDefecto")) {
				jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroCarteraDefecto")) {
				jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroCarteraDefecto")) {
				jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroCarteraDefecto")) {
				jButtonAnterioresParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroCarteraDefecto")) {
				jButtonAnterioresParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroCarteraDefecto")) {
				jButtonAnterioresParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroCarteraDefecto")) {
				jButtonSiguientesParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroCarteraDefecto")) {
				jButtonSiguientesParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroCarteraDefecto")) {
				jButtonSiguientesParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroCarteraDefecto") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroCarteraDefecto")) {
				jButtonAbrirOrderByParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroCarteraDefecto") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroCarteraDefecto")) {
				jButtonMostrarOcultarParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroCarteraDefecto")) {
				jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroCarteraDefecto")) {
				jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroCarteraDefecto")) {
				jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroCarteraDefecto")) {
				jButtonCerrarReporteDinamicoParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroCarteraDefecto")) {
				jButtonGenerarReporteDinamicoParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroCarteraDefecto")) {
				
				jButtonGenerarExcelReporteDinamicoParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroCarteraDefecto")) {
				jButtonCerrarImportacionParametroCarteraDefectoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroCarteraDefecto")) {
				
				jButtonGenerarImportacionParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroCarteraDefecto")) {
				
				jButtonAbrirImportacionParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroCarteraDefecto")) {
				jComboBoxTiposAccionesParametroCarteraDefectoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroCarteraDefecto")) {
				jComboBoxTiposRelacionesParametroCarteraDefectoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroCarteraDefecto")) {
				jComboBoxTiposAccionesParametroCarteraDefectoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroCarteraDefecto")) {
				
				jComboBoxTiposSeleccionarParametroCarteraDefectoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroCarteraDefecto")) {
				jTextFieldValorCampoGeneralParametroCarteraDefectoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroCarteraDefecto")) {
				jButtonAbrirOrderByParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroCarteraDefecto")) {
				jButtonAbrirOrderByParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroCarteraDefecto")) {
				jButtonCerrarOrderByParametroCarteraDefectoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroCarteraDefectoBusqueda")) {
				this.jButtonidParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroCarteraDefectoUpdate")) {
				this.jButtonid_empresaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_empresaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroCarteraDefectoUpdate")) {
				this.jButtonid_sucursalParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroCarteraDefectoBusqueda")) {
				this.jButtonid_sucursalParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisParametroCarteraDefectoUpdate")) {
				this.jButtonid_paisParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisParametroCarteraDefectoBusqueda")) {
				this.jButtonid_paisParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_regionParametroCarteraDefectoUpdate")) {
				this.jButtonid_regionParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_regionParametroCarteraDefectoBusqueda")) {
				this.jButtonid_regionParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_provinciaParametroCarteraDefectoUpdate")) {
				this.jButtonid_provinciaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_provinciaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_provinciaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadParametroCarteraDefectoUpdate")) {
				this.jButtonid_ciudadParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadParametroCarteraDefectoBusqueda")) {
				this.jButtonid_ciudadParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaParametroCarteraDefectoUpdate")) {
				this.jButtonid_zonaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_zonaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_identificacionParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_identificacionParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_identificacionParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_identificacionParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_nivel_eduParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_nivel_eduParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pais_nacionalidadParametroCarteraDefectoUpdate")) {
				this.jButtonid_pais_nacionalidadParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pais_nacionalidadParametroCarteraDefectoBusqueda")) {
				this.jButtonid_pais_nacionalidadParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_generoParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_generoParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilParametroCarteraDefectoUpdate")) {
				this.jButtonid_estado_civilParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilParametroCarteraDefectoBusqueda")) {
				this.jButtonid_estado_civilParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_legalParametroCarteraDefectoUpdate")) {
				this.jButtonid_estado_legalParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_legalParametroCarteraDefectoBusqueda")) {
				this.jButtonid_estado_legalParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableParametroCarteraDefectoUpdate")) {
				this.jButtonid_cuenta_contableParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableParametroCarteraDefectoBusqueda")) {
				this.jButtonid_cuenta_contableParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorParametroCarteraDefectoUpdate")) {
				this.jButtonid_vendedorParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorParametroCarteraDefectoBusqueda")) {
				this.jButtonid_vendedorParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_rutaParametroCarteraDefectoUpdate")) {
				this.jButtonid_rutaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_rutaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_rutaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_diaParametroCarteraDefectoUpdate")) {
				this.jButtonid_diaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_diaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_diaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_precioParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_precioParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_lista_precioParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_lista_precioParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_lista_precioParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_lista_precioParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("FK_IdCiudadParametroCarteraDefecto")) {
				this.jButtonFK_IdCiudadParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableParametroCarteraDefecto")) {
				this.jButtonFK_IdCuentaContableParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdDiaParametroCarteraDefecto")) {
				this.jButtonFK_IdDiaParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoCivilParametroCarteraDefecto")) {
				this.jButtonFK_IdEstadoCivilParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoLegalParametroCarteraDefecto")) {
				this.jButtonFK_IdEstadoLegalParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisParametroCarteraDefecto")) {
				this.jButtonFK_IdPaisParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisNacionalidadParametroCarteraDefecto")) {
				this.jButtonFK_IdPaisNacionalidadParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProvinciaParametroCarteraDefecto")) {
				this.jButtonFK_IdProvinciaParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdRegionParametroCarteraDefecto")) {
				this.jButtonFK_IdRegionParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdRutaParametroCarteraDefecto")) {
				this.jButtonFK_IdRutaParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoGeneroParametroCarteraDefecto")) {
				this.jButtonFK_IdTipoGeneroParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoIdentificacionParametroCarteraDefecto")) {
				this.jButtonFK_IdTipoIdentificacionParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoListaPrecioParametroCarteraDefecto")) {
				this.jButtonFK_IdTipoListaPrecioParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoNivelEduParametroCarteraDefecto")) {
				this.jButtonFK_IdTipoNivelEduParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPrecioParametroCarteraDefecto")) {
				this.jButtonFK_IdTipoPrecioParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorParametroCarteraDefecto")) {
				this.jButtonFK_IdVendedorParametroCarteraDefectoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdZonaParametroCarteraDefecto")) {
				this.jButtonFK_IdZonaParametroCarteraDefectoActionPerformed(evt);
			}
			
			;
			
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroCarteraDefecto();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				


				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroCarteraDefecto parametrocarteradefectoLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrocarteradefectoLocal=this.parametrocarteradefecto;
			} else {
				parametrocarteradefectoLocal=this.parametrocarteradefectoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
							
				
				


				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCarteraDefectoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
								
						
				


				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
								
				
				


				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
							
				
				


				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
								
				
				


				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCarteraDefectoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroCarteraDefecto")) {
					jCheckBoxSeleccionarTodosParametroCarteraDefectoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroCarteraDefecto")) {
					jCheckBoxSeleccionadosParametroCarteraDefectoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroCarteraDefecto")) {
					
				}
				
				


				
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
												
				
				


				
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCarteraDefectoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_paisParametroCarteraDefecto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto;
				}

				if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroCarteraDefectoConstantesFunciones.getClassesRelationshipsOfParametroCarteraDefecto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroCarteraDefecto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_paisFK_IdPaisParametroCarteraDefecto")) {
				this.procesarActionsCombosForeignKeyPais(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto,"FK_IdPais");
				//recargarFormParametroCarteraDefectoPais(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto,"FK_IdPais");
			}
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisParametroCarteraDefecto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto;
				}

				if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroCarteraDefectoConstantesFunciones.getClassesRelationshipsOfParametroCarteraDefecto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroCarteraDefecto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_paisFK_IdPaisParametroCarteraDefecto")) {
				this.procesarActionsCombosForeignKeyPais(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto,"FK_IdPais");
				//recargarFormParametroCarteraDefectoPais(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto,"FK_IdPais");
			}
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrocarteradefecto);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrocarteradefecto);
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_paisParametroCarteraDefecto")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto;
				}

				if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
					//classes=ParametroCarteraDefectoConstantesFunciones.getClassesRelationshipsOfParametroCarteraDefecto(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyPais(jComboBoxGenerico,"Formulario");

				this.recargarFormParametroCarteraDefecto(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_paisFK_IdPaisParametroCarteraDefecto")) {
				this.procesarActionsCombosForeignKeyPais(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto,"FK_IdPais");
				//recargarFormParametroCarteraDefectoPais(jComboBoxid_paisFK_IdPaisParametroCarteraDefecto,"FK_IdPais");
			}
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroCarteraDefecto.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroCarteraDefecto.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroCarteraDefectoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrocarteradefectoAnterior =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroCarteraDefecto")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroCarteraDefectoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroCarteraDefecto.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametrocarteradefecto =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametrocarteradefecto);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroCarteraDefecto")) {
				
				}
				
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroCarteraDefecto")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroCarteraDefecto.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroCarteraDefecto")) {
			
			}
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroCarteraDefecto();
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			if(sTipo.equals("NuevoParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroCarteraDefecto")) {
				jButtonDuplicarParametroCarteraDefectoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroCarteraDefecto")) {
				jButtonCopiarParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroCarteraDefecto")) {
				jButtonVerFormParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroCarteraDefecto")) {
				jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroCarteraDefecto")) {
				jButtonModificarParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroCarteraDefecto")) {
				jButtonActualizarParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroCarteraDefecto")) {
				jButtonEliminarParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroCarteraDefecto")) {
				jButtonCancelarParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroCarteraDefecto")) {
				jButtonCerrarParametroCarteraDefectoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroCarteraDefecto")) {
				jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroCarteraDefecto")) {
				jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroCarteraDefecto")) {
				jButtonAbrirOrderByParametroCarteraDefectoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroCarteraDefecto")) {
				jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroCarteraDefecto")) {
				jButtonAnterioresParametroCarteraDefectoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroCarteraDefecto")) {
				jButtonSiguientesParametroCarteraDefectoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroCarteraDefectoBusqueda")) {
				this.jButtonidParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroCarteraDefectoUpdate")) {
				this.jButtonid_empresaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_empresaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroCarteraDefectoUpdate")) {
				this.jButtonid_sucursalParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroCarteraDefectoBusqueda")) {
				this.jButtonid_sucursalParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisParametroCarteraDefectoUpdate")) {
				this.jButtonid_paisParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisParametroCarteraDefectoBusqueda")) {
				this.jButtonid_paisParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_regionParametroCarteraDefectoUpdate")) {
				this.jButtonid_regionParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_regionParametroCarteraDefectoBusqueda")) {
				this.jButtonid_regionParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_provinciaParametroCarteraDefectoUpdate")) {
				this.jButtonid_provinciaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_provinciaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_provinciaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadParametroCarteraDefectoUpdate")) {
				this.jButtonid_ciudadParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadParametroCarteraDefectoBusqueda")) {
				this.jButtonid_ciudadParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaParametroCarteraDefectoUpdate")) {
				this.jButtonid_zonaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_zonaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_identificacionParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_identificacionParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_identificacionParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_identificacionParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_nivel_eduParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_nivel_eduParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_nivel_eduParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pais_nacionalidadParametroCarteraDefectoUpdate")) {
				this.jButtonid_pais_nacionalidadParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pais_nacionalidadParametroCarteraDefectoBusqueda")) {
				this.jButtonid_pais_nacionalidadParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_generoParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_generoParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_generoParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_generoParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_civilParametroCarteraDefectoUpdate")) {
				this.jButtonid_estado_civilParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_civilParametroCarteraDefectoBusqueda")) {
				this.jButtonid_estado_civilParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_legalParametroCarteraDefectoUpdate")) {
				this.jButtonid_estado_legalParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_legalParametroCarteraDefectoBusqueda")) {
				this.jButtonid_estado_legalParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableParametroCarteraDefectoUpdate")) {
				this.jButtonid_cuenta_contableParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableParametroCarteraDefectoBusqueda")) {
				this.jButtonid_cuenta_contableParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorParametroCarteraDefectoUpdate")) {
				this.jButtonid_vendedorParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorParametroCarteraDefectoBusqueda")) {
				this.jButtonid_vendedorParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_rutaParametroCarteraDefectoUpdate")) {
				this.jButtonid_rutaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_rutaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_rutaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_diaParametroCarteraDefectoUpdate")) {
				this.jButtonid_diaParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_diaParametroCarteraDefectoBusqueda")) {
				this.jButtonid_diaParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_precioParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_precioParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_lista_precioParametroCarteraDefectoUpdate")) {
				this.jButtonid_tipo_lista_precioParametroCarteraDefectoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_lista_precioParametroCarteraDefectoBusqueda")) {
				this.jButtonid_tipo_lista_precioParametroCarteraDefectoBusquedaActionPerformed(evt);
			}
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroCarteraDefecto();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroCarteraDefecto")) {
				closingInternalFrameParametroCarteraDefecto();
				
			} else if(sTipo.equals("jButtonCancelarParametroCarteraDefecto")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroCarteraDefecto = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroCarteraDefectoBeanSwingJInternalFrame jInternalFrameParent=(ParametroCarteraDefectoBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroCarteraDefecto.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroCarteraDefectoActionPerformed(null);
			}
			
			ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrocarteradefecto,new Object(),this.parametrocarteradefectoParameterGeneral,this.parametrocarteradefectoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroCarteraDefecto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroCarteraDefecto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroCarteraDefecto(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametrocarteradefecto)) {
			if(!esControlTabla) {
				if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);			
				}
				
				if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrocarteradefectoReturnGeneral=parametrocarteradefectoLogic.procesarEventosParametroCarteraDefectosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.parametrocarteradefecto,this.parametrocarteradefectoParameterGeneral,this.isEsNuevoParametroCarteraDefecto,classes);//this.parametrocarteradefectoLogic.getParametroCarteraDefecto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral,this.parametrocarteradefectoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroCarteraDefecto(classes,this.parametrocarteradefectoReturnGeneral,this.parametrocarteradefectoBean,false);
					}
						
					if(this.parametrocarteradefectoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto());	
					}
						
					if(this.parametrocarteradefectoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto(),classes);//this.parametrocarteradefectoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroCarteraDefecto(this.parametrocarteradefecto,classes);//this.parametrocarteradefectoBean);									
				}
			
				if(ParametroCarteraDefectoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroCarteraDefecto(this.parametrocarteradefecto,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroCarteraDefecto(this.parametrocarteradefecto);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrocarteradefectoAnterior!=null) {
						this.parametrocarteradefecto=this.parametrocarteradefectoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrocarteradefectoReturnGeneral=parametrocarteradefectoLogic.procesarEventosParametroCarteraDefectosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.parametrocarteradefecto,this.parametrocarteradefectoParameterGeneral,this.isEsNuevoParametroCarteraDefecto,classes);//this.parametrocarteradefectoLogic.getParametroCarteraDefecto()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrocarteradefectoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto(),parametrocarteradefectoLogic.getParametroCarteraDefectos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto(),this.parametrocarteradefectos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroCarteraDefecto.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroCarteraDefecto.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroCarteraDefecto();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroCarteraDefecto() throws Exception {
		
		ParametroCarteraDefectoModel parametrocarteradefectoModel=(ParametroCarteraDefectoModel)this.jTableDatosParametroCarteraDefecto.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrocarteradefectoModel.parametrocarteradefectos=this.parametrocarteradefectoLogic.getParametroCarteraDefectos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrocarteradefectoModel.parametrocarteradefectos=this.parametrocarteradefectos;
		}
		
		
		((ParametroCarteraDefectoModel) this.jTableDatosParametroCarteraDefecto.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroCarteraDefecto() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrocarteradefectoAnterior(),this.parametrocarteradefectoLogic.getParametroCarteraDefectos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrocarteradefectoAnterior(),this.parametrocarteradefectos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroCarteraDefecto();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocarteradefecto,new Object(),generalEntityParameterGeneral,this.parametrocarteradefectoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroCarteraDefectoConstantesFunciones.getClassesRelationshipsOfParametroCarteraDefecto(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroCarteraDefectoConstantesFunciones.getClassesRelationshipsFromStringsOfParametroCarteraDefecto(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroCarteraDefecto(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrocarteradefecto,new Object(),generalEntityParameterGeneral,this.parametrocarteradefectoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroCarteraDefecto(ParametroCarteraDefectoBean parametrocarteradefectoBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroCarteraDefecto(ArrayList<Classe> classes,ParametroCarteraDefectoReturnGeneral parametrocarteradefectoReturnGeneral,ParametroCarteraDefectoBean parametrocarteradefectoBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametrocarteradefecto)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto = new ParametroCarteraDefectoDetalleFormJInternalFrame(jDesktopPane,this.parametrocarteradefectoSessionBean.getConGuardarRelaciones(),this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.setVisible(false);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.parametrocarteradefectoLogic=this.parametrocarteradefectoLogic;
		
		this.cargarCombosFrameForeignKeyParametroCarteraDefecto("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroCarteraDefecto();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroCarteraDefecto();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroCarteraDefecto("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroCarteraDefecto();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroCarteraDefecto"));
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"ModificarParametroCarteraDefecto"));

		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarToolBarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroCarteraDefecto"));
					
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemModificarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroCarteraDefecto"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"ActualizarParametroCarteraDefecto"));
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarToolBarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroCarteraDefecto"));
						
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemActualizarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroCarteraDefecto"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"EliminarParametroCarteraDefecto"));
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroCarteraDefecto"));
								
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemEliminarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroCarteraDefecto"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CancelarParametroCarteraDefecto"));
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroCarteraDefecto"));
					
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemCancelarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroCarteraDefecto"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemDetalleCerrarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroCarteraDefecto"));		
		
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroCarteraDefecto"));
		
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroCarteraDefecto"));
		
		
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroCarteraDefecto"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonidParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"idParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_empresaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_empresaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_sucursalParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_sucursalParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_paisParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_paisParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_paisParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_paisParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_regionParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_regionParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_regionParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_regionParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_provinciaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_provinciaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_ciudadParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_ciudadParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_zonaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_zonaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_zonaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_identificacionParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_identificacionParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_nivel_eduParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_nivel_eduParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_pais_nacionalidadParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_pais_nacionalidadParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_generoParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_generoParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_civilParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_civilParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_legalParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_legalParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_cuenta_contableParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_cuenta_contableParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_vendedorParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_vendedorParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_rutaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_rutaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_rutaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_rutaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_diaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_diaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_diaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_diaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_precioParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_precioParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_lista_precioParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_lista_precioParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioParametroCarteraDefectoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroCarteraDefecto"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroCarteraDefecto"));
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroCarteraDefecto"));
		}
		
		this.jTableDatosParametroCarteraDefecto.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroCarteraDefecto"));
		
		this.jTableDatosParametroCarteraDefecto.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroCarteraDefecto"));
		
		this.jButtonNuevoParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"NuevoParametroCarteraDefecto"));
		
		this.jButtonDuplicarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"DuplicarParametroCarteraDefecto"));
		
		this.jButtonCopiarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"CopiarParametroCarteraDefecto"));
		
		this.jButtonVerFormParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"VerFormParametroCarteraDefecto"));
		
		
		this.jButtonNuevoToolBarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroCarteraDefecto"));
			
		this.jButtonDuplicarToolBarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroCarteraDefecto"));
			
		this.jMenuItemNuevoParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroCarteraDefecto"));
			
		this.jMenuItemDuplicarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroCarteraDefecto"));		
		
		
		this.jButtonNuevoRelacionesParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroCarteraDefecto"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroCarteraDefecto"));
			
		this.jMenuItemNuevoRelacionesParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroCarteraDefecto"));		
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"ModificarParametroCarteraDefecto"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonModificarToolBarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroCarteraDefecto"));
			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemModificarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroCarteraDefecto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"ActualizarParametroCarteraDefecto"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonActualizarToolBarParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroCarteraDefecto"));
				
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemActualizarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroCarteraDefecto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"EliminarParametroCarteraDefecto"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonEliminarToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroCarteraDefecto"));
						
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemEliminarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroCarteraDefecto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CancelarParametroCarteraDefecto"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonCancelarToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroCarteraDefecto"));
			
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemCancelarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroCarteraDefecto"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroCarteraDefecto"));		
		
		
		this.jButtonCerrarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CerrarParametroCarteraDefecto"));
		
		
		this.jButtonCerrarToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroCarteraDefecto"));
			
		this.jMenuItemCerrarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroCarteraDefecto"));
			
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jMenuItemDetalleCerrarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroCarteraDefecto"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroCarteraDefecto"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroCarteraDefecto"));
		}
		
		this.jButtonCopiarToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroCarteraDefecto"));
			
		this.jButtonVerFormToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroCarteraDefecto"));
		
		this.jMenuItemGuardarCambiosParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroCarteraDefecto"));
			
		this.jMenuItemCopiarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroCarteraDefecto"));		
		
		this.jMenuItemVerFormParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroCarteraDefecto"));		
		
		
		this.jButtonGuardarCambiosTablaParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroCarteraDefecto"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroCarteraDefecto"));
			
		this.jMenuItemGuardarCambiosTablaParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroCarteraDefecto"));		
		
		
		
		this.jButtonRecargarInformacionParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroCarteraDefecto"));
					
		this.jButtonRecargarInformacionToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroCarteraDefecto"));
		
		this.jMenuItemRecargarInformacionParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroCarteraDefecto"));		
		
		
		
		this.jButtonAnterioresParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"AnterioresParametroCarteraDefecto"));
		
		
		this.jButtonAnterioresToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroCarteraDefecto"));
		
		this.jMenuItemAnterioresParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroCarteraDefecto"));		
		
		
		this.jButtonSiguientesParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"SiguientesParametroCarteraDefecto"));
		
		
		this.jButtonSiguientesToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroCarteraDefecto"));
			
		this.jMenuItemSiguientesParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroCarteraDefecto"));
			
		this.jMenuItemAbrirOrderByParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroCarteraDefecto"));
			
		this.jMenuItemMostrarOcultarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroCarteraDefecto"));
			
		this.jMenuItemDetalleAbrirOrderByParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroCarteraDefecto"));
			
		this.jMenuItemDetalleMostarOcultarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroCarteraDefecto"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroCarteraDefecto"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroCarteraDefecto"));
			
		this.jMenuItemNuevoGuardarCambiosParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroCarteraDefecto"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroCarteraDefecto.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroCarteraDefecto"));

		this.jCheckBoxSeleccionadosParametroCarteraDefecto.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroCarteraDefecto"));
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroCarteraDefecto"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroCarteraDefecto"));
			
		this.jComboBoxTiposAccionesParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroCarteraDefecto"));
					
		this.jComboBoxTiposSeleccionarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroCarteraDefecto"));
			
		this.jTextFieldValorCampoGeneralParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroCarteraDefecto"));		
		
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonidParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"idParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_empresaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_empresaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_sucursalParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_sucursalParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_paisParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_paisParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_paisParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_paisParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_regionParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_regionParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_regionParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_regionParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_provinciaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_provinciaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_ciudadParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_ciudadParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_zonaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_zonaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_zonaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_identificacionParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_identificacionParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_nivel_eduParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_nivel_eduParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_pais_nacionalidadParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_pais_nacionalidadParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_generoParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_generoParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_civilParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_civilParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_legalParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_legalParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_cuenta_contableParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_cuenta_contableParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_vendedorParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_vendedorParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_rutaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_rutaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_rutaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_rutaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_diaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_diaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_diaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_diaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_precioParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_precioParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_lista_precioParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_lista_precioParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioParametroCarteraDefectoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCiudadParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdCiudadParametroCarteraDefecto"));

			this.jButtonFK_IdCuentaContableParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableParametroCarteraDefecto"));

			this.jButtonFK_IdDiaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdDiaParametroCarteraDefecto"));

			this.jButtonFK_IdEstadoCivilParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdEstadoCivilParametroCarteraDefecto"));

			this.jButtonFK_IdEstadoLegalParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdEstadoLegalParametroCarteraDefecto"));

			this.jButtonFK_IdPaisParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdPaisParametroCarteraDefecto"));

			this.jButtonFK_IdPaisNacionalidadParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdPaisNacionalidadParametroCarteraDefecto"));

			this.jButtonFK_IdProvinciaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdProvinciaParametroCarteraDefecto"));

			this.jButtonFK_IdRegionParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdRegionParametroCarteraDefecto"));

			this.jButtonFK_IdRutaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdRutaParametroCarteraDefecto"));

			this.jButtonFK_IdTipoGeneroParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoGeneroParametroCarteraDefecto"));

			this.jButtonFK_IdTipoIdentificacionParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoIdentificacionParametroCarteraDefecto"));

			this.jButtonFK_IdTipoListaPrecioParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoListaPrecioParametroCarteraDefecto"));

			this.jButtonFK_IdTipoNivelEduParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoNivelEduParametroCarteraDefecto"));

			this.jButtonFK_IdTipoPrecioParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioParametroCarteraDefecto"));

			this.jButtonFK_IdVendedorParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdVendedorParametroCarteraDefecto"));

			this.jButtonFK_IdZonaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdZonaParametroCarteraDefecto"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroCarteraDefecto!=null) {
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroCarteraDefecto"));
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroCarteraDefecto"));
				this.jInternalFrameReporteDinamicoParametroCarteraDefecto.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroCarteraDefecto"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroCarteraDefecto"));				
			//this.jButtonGenerarReporteDinamicoParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroCarteraDefecto"));
			//this.jButtonGenerarExcelReporteDinamicoParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroCarteraDefecto"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroCarteraDefecto!=null) {
				this.jInternalFrameImportacionParametroCarteraDefecto.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroCarteraDefecto"));
				this.jInternalFrameImportacionParametroCarteraDefecto.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroCarteraDefecto"));
				this.jInternalFrameImportacionParametroCarteraDefecto.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroCarteraDefecto"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroCarteraDefecto"));
			
			this.jButtonAbrirOrderByToolBarParametroCarteraDefecto.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroCarteraDefecto"));			
			
			if(this.jInternalFrameOrderByParametroCarteraDefecto!=null) {
				this.jInternalFrameOrderByParametroCarteraDefecto.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroCarteraDefecto"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroCarteraDefecto.jTabbedPaneRelacionesParametroCarteraDefecto.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroCarteraDefecto"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroCarteraDefecto();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroCarteraDefecto = (JInternalFrameBase)event.getSource();
	            	
	            ParametroCarteraDefectoBeanSwingJInternalFrame jInternalFrameParent=(ParametroCarteraDefectoBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroCarteraDefecto.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroCarteraDefectoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroCarteraDefecto.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroCarteraDefectoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroCarteraDefecto.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroCarteraDefecto.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroCarteraDefecto";
		inputMap = this.jButtonNuevoParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroCarteraDefecto";
		inputMap = this.jButtonNuevoRelacionesParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroCarteraDefectoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroCarteraDefecto";
		inputMap = this.jButtonModificarParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroCarteraDefectoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroCarteraDefecto";
		inputMap = this.jButtonActualizarParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroCarteraDefectoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroCarteraDefecto";
		inputMap = this.jButtonEliminarParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroCarteraDefectoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroCarteraDefecto";
		inputMap = this.jButtonCancelarParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroCarteraDefectoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroCarteraDefecto";
		inputMap = this.jButtonCerrarParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroCarteraDefectoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroCarteraDefecto";
		inputMap = this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonGuardarCambiosParametroCarteraDefecto.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroCarteraDefectoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroCarteraDefecto.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroCarteraDefectoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroCarteraDefecto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroCarteraDefectoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroCarteraDefecto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroCarteraDefectoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroCarteraDefecto.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroCarteraDefectoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonidParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"idParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_empresaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_empresaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_sucursalParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_sucursalParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_paisParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_paisParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_paisParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_paisParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_regionParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_regionParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_regionParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_regionParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_provinciaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_provinciaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_provinciaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_provinciaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_ciudadParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_ciudadParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_zonaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_zonaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_zonaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_identificacionParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_identificacionParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_identificacionParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_nivel_eduParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_nivel_eduParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_nivel_eduParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_pais_nacionalidadParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_pais_nacionalidadParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_pais_nacionalidadParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_generoParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_generoParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_generoParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_generoParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_civilParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_civilParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_civilParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_civilParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_legalParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_legalParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_estado_legalParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_legalParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_cuenta_contableParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_cuenta_contableParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_vendedorParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_vendedorParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_rutaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_rutaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_rutaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_rutaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_diaParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_diaParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_diaParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_diaParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_precioParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_precioParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioParametroCarteraDefectoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_lista_precioParametroCarteraDefectoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioParametroCarteraDefectoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jButtonid_tipo_lista_precioParametroCarteraDefectoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_lista_precioParametroCarteraDefectoBusqueda"));
		
		
		this.jButtonFK_IdCiudadParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdCiudadParametroCarteraDefecto"));

		this.jButtonFK_IdCuentaContableParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableParametroCarteraDefecto"));

		this.jButtonFK_IdDiaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdDiaParametroCarteraDefecto"));

		this.jButtonFK_IdEstadoCivilParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdEstadoCivilParametroCarteraDefecto"));

		this.jButtonFK_IdEstadoLegalParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdEstadoLegalParametroCarteraDefecto"));

		this.jButtonFK_IdPaisParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdPaisParametroCarteraDefecto"));

		this.jButtonFK_IdPaisNacionalidadParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdPaisNacionalidadParametroCarteraDefecto"));

		this.jButtonFK_IdProvinciaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdProvinciaParametroCarteraDefecto"));

		this.jButtonFK_IdRegionParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdRegionParametroCarteraDefecto"));

		this.jButtonFK_IdRutaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdRutaParametroCarteraDefecto"));

		this.jButtonFK_IdTipoGeneroParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoGeneroParametroCarteraDefecto"));

		this.jButtonFK_IdTipoIdentificacionParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoIdentificacionParametroCarteraDefecto"));

		this.jButtonFK_IdTipoListaPrecioParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoListaPrecioParametroCarteraDefecto"));

		this.jButtonFK_IdTipoNivelEduParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoNivelEduParametroCarteraDefecto"));

		this.jButtonFK_IdTipoPrecioParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioParametroCarteraDefecto"));

		this.jButtonFK_IdVendedorParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdVendedorParametroCarteraDefecto"));

		this.jButtonFK_IdZonaParametroCarteraDefecto.addActionListener(new ButtonActionListener(this,"FK_IdZonaParametroCarteraDefecto"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroCarteraDefecto.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroCarteraDefectoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroCarteraDefectoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroCarteraDefecto.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroCarteraDefecto(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
					parametrocarteradefectoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectos) {
					parametrocarteradefectoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroCarteraDefectoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
						parametrocarteradefectoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectos) {
						parametrocarteradefectoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectos) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroCarteraDefecto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroCarteraDefecto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroCarteraDefectoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroCarteraDefecto.getSelectedRows();
			
			ParametroCarteraDefecto parametrocarteradefectoLocal=new ParametroCarteraDefecto();
			
			//this.seleccionarTodosParametroCarteraDefecto(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrocarteradefectoLocal =(ParametroCarteraDefecto) this.parametrocarteradefectoLogic.getParametroCarteraDefectos().toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrocarteradefectoLocal =(ParametroCarteraDefecto) this.parametrocarteradefectos.toArray()[this.jTableDatosParametroCarteraDefecto.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrocarteradefectoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
						parametrocarteradefectoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectos) {
						parametrocarteradefectoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroCarteraDefecto.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroCarteraDefecto.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroCarteraDefecto,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroCarteraDefectoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroCarteraDefectoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroCarteraDefectoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroCarteraDefecto.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
				
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectos) {
					
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroCarteraDefectoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroCarteraDefecto=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroCarteraDefecto.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroCarteraDefecto) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroCarteraDefecto(conSplash);
				
					this.generarReporteParametroCarteraDefectosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroCarteraDefectosSeleccionados();
				//this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroCarteraDefectosSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroCarteraDefectosSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroCarteraDefecto();
				
				this.exportarParametroCarteraDefectosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroCarteraDefectos();
				//this.importarParametroCarteraDefectos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroCarteraDefecto();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroCarteraDefectosSeleccionados();
				//this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro Cartera Defecto", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroCarteraDefecto();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroCarteraDefecto)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroCarteraDefecto(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroCarteraDefectoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroCarteraDefecto) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroCarteraDefecto(conSplash);
					
						//this.actualizarParametrosGeneralParametroCarteraDefecto();
						
						this.generarReporteProcesoAccionParametroCarteraDefectosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro Cartera DefectoS SELECCIONADOS?", "MANTENIMIENTO DE Parametro Cartera Defecto", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroCarteraDefecto();
				
						this.actualizarParametrosGeneralParametroCarteraDefecto();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrocarteradefectoReturnGeneral=parametrocarteradefectoLogic.procesarAccionParametroCarteraDefectosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrocarteradefectoLogic.getParametroCarteraDefectos(),this.parametrocarteradefectoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroCarteraDefectoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroCarteraDefecto();
					
					ParametroCarteraDefectoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroCarteraDefectoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroCarteraDefecto.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxTiposAccionesFormularioParametroCarteraDefecto.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroCarteraDefecto(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroCarteraDefectoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroCarteraDefecto();
			
			if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
			ParametroCarteraDefecto parametrocarteradefecto=new ParametroCarteraDefecto();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroCarteraDefecto(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroCarteraDefecto.getSelectedItem();
			
			
			
			
			parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrocarteradefectosSeleccionados.size()==1) {
				for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectosSeleccionados) {
					parametrocarteradefecto=parametrocarteradefectoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroCarteraDefecto();
			
      		//this.finishProcessParametroCarteraDefecto(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroCarteraDefectoReturnGeneral() throws Exception {
		if(this.parametrocarteradefectoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrocarteradefectoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrocarteradefectoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrocarteradefectoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrocarteradefectoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrocarteradefectoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroCarteraDefecto(false);
		}
		
		if(this.parametrocarteradefectoReturnGeneral.getConRetornoLista() || this.parametrocarteradefectoReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrocarteradefectoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrocarteradefectoLogic.setParametroCarteraDefectos(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefectos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrocarteradefectoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrocarteradefectoLogic.setParametroCarteraDefecto(this.parametrocarteradefectoReturnGeneral.getParametroCarteraDefecto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroCarteraDefecto(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroCarteraDefecto() throws Exception {
		
		
	}
	
	public ArrayList<ParametroCarteraDefecto> getParametroCarteraDefectosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroCarteraDefecto) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectoLogic.getParametroCarteraDefectos()) {
					if(parametrocarteradefectoAux.getIsSelected()) {
						parametrocarteradefectosSeleccionados.add(parametrocarteradefectoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroCarteraDefecto parametrocarteradefectoAux:this.parametrocarteradefectos) {
					if(parametrocarteradefectoAux.getIsSelected()) {
						parametrocarteradefectosSeleccionados.add(parametrocarteradefectoAux);				
					}
				}
			}
			
			if(parametrocarteradefectosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrocarteradefectosSeleccionados.addAll(this.parametrocarteradefectoLogic.getParametroCarteraDefectos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrocarteradefectosSeleccionados.addAll(this.parametrocarteradefectos);				
					}
				}
			}
		} else {
			parametrocarteradefectosSeleccionados.add(this.parametrocarteradefecto);
		}
		
		return parametrocarteradefectosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroCarteraDefectosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroCarteraDefectosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroCarteraDefectosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroCarteraDefectosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroCarteraDefectosSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro Cartera Defecto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroCarteraDefectosSeleccionados() throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectosSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroCarteraDefectosSeleccionados() throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroCarteraDefectosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroCarteraDefectosSeleccionados() throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroCarteraDefecto();
		
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroCarteraDefecto();
		
		
		//this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectosSeleccionados ,parametrocarteradefectoImplementable,parametrocarteradefectoImplementableHome);
	}
	
	public void mostrarImportacionParametroCarteraDefectos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroCarteraDefecto();
		
		this.abrirFrameImportacionParametroCarteraDefecto();		
		
			
		//this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectosSeleccionados ,parametrocarteradefectoImplementable,parametrocarteradefectoImplementableHome);
	}
	
	public void importarParametroCarteraDefectos() throws Exception {		
	
	}
	
	public void exportarParametroCarteraDefectosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroCarteraDefectosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroCarteraDefectosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroCarteraDefectosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro Cartera Defecto",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroCarteraDefectosSeleccionados() throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocarteradefecto."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroCarteraDefecto(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroCarteraDefecto(parametrocarteradefectoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrocarteradefectoAux.setsDetalleGeneralEntityReporte(parametrocarteradefectoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroCarteraDefecto(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametrocarteradefecto.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getregion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getprovincia_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getciudad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getzona_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.gettipoidentificacion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.gettiponiveledu_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getpaisnacionalidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.gettipogenero_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getestadocivil_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getestadolegal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getruta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.getdia_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.gettipoprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrocarteradefecto.gettipolistaprecio_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroCarteraDefectosSeleccionados() throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocarteradefecto.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroCarteraDefectos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroCarteraDefecto(row);				
				iRow++;
			}				
			
			for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroCarteraDefecto(parametrocarteradefectoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroCarteraDefectosSeleccionados() throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();		
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrocarteradefecto.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrocarteradefectos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametrocarteradefecto");
			//elementRoot.appendChild(element);
		
			for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectosSeleccionados) {
				element = document.createElement("parametrocarteradefecto");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroCarteraDefecto(parametrocarteradefectoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Cartera Defecto",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroCarteraDefecto(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getregion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getprovincia_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getciudad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getzona_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.gettipoidentificacion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.gettiponiveledu_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getpaisnacionalidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.gettipogenero_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getestadocivil_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getestadolegal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getruta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.getdia_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.gettipoprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrocarteradefecto.gettipolistaprecio_descripcion());				
	}
	
	public void setFilaDatosExportarXmlParametroCarteraDefecto(ParametroCarteraDefecto parametrocarteradefecto,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ParametroCarteraDefectoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(parametrocarteradefecto.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroCarteraDefectoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametrocarteradefecto.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementpais_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementregion_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDREGION);
		elementregion_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getregion_descripcion()));
		element.appendChild(elementregion_descripcion);

		Element elementprovincia_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDPROVINCIA);
		elementprovincia_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getprovincia_descripcion()));
		element.appendChild(elementprovincia_descripcion);

		Element elementciudad_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDCIUDAD);
		elementciudad_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getciudad_descripcion()));
		element.appendChild(elementciudad_descripcion);

		Element elementzona_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDZONA);
		elementzona_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getzona_descripcion()));
		element.appendChild(elementzona_descripcion);

		Element elementtipoidentificacion_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDTIPOIDENTIFICACION);
		elementtipoidentificacion_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.gettipoidentificacion_descripcion()));
		element.appendChild(elementtipoidentificacion_descripcion);

		Element elementtiponiveledu_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDTIPONIVELEDU);
		elementtiponiveledu_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.gettiponiveledu_descripcion()));
		element.appendChild(elementtiponiveledu_descripcion);

		Element elementpaisnacionalidad_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDPAISNACIONALIDAD);
		elementpaisnacionalidad_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getpaisnacionalidad_descripcion()));
		element.appendChild(elementpaisnacionalidad_descripcion);

		Element elementtipogenero_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDTIPOGENERO);
		elementtipogenero_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.gettipogenero_descripcion()));
		element.appendChild(elementtipogenero_descripcion);

		Element elementestadocivil_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDESTADOCIVIL);
		elementestadocivil_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getestadocivil_descripcion()));
		element.appendChild(elementestadocivil_descripcion);

		Element elementestadolegal_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDESTADOLEGAL);
		elementestadolegal_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getestadolegal_descripcion()));
		element.appendChild(elementestadolegal_descripcion);

		Element elementcuentacontable_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementvendedor_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementruta_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDRUTA);
		elementruta_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getruta_descripcion()));
		element.appendChild(elementruta_descripcion);

		Element elementdia_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDDIA);
		elementdia_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.getdia_descripcion()));
		element.appendChild(elementdia_descripcion);

		Element elementtipoprecio_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDTIPOPRECIO);
		elementtipoprecio_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.gettipoprecio_descripcion()));
		element.appendChild(elementtipoprecio_descripcion);

		Element elementtipolistaprecio_descripcion = document.createElement(ParametroCarteraDefectoConstantesFunciones.IDTIPOLISTAPRECIO);
		elementtipolistaprecio_descripcion.appendChild(document.createTextNode(parametrocarteradefecto.gettipolistaprecio_descripcion()));
		element.appendChild(elementtipolistaprecio_descripcion);
	}
	
	public void generarReporteGroupGenericoParametroCarteraDefectosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados=new ArrayList<ParametroCarteraDefecto>();
		
		parametrocarteradefectosSeleccionados=this.getParametroCarteraDefectosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroCarteraDefecto(parametrocarteradefectosSeleccionados);
		
		this.generarReporteParametroCarteraDefectos("Todos",parametrocarteradefectosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroCarteraDefecto(ArrayList<ParametroCarteraDefecto> parametrocarteradefectosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroCarteraDefecto parametrocarteradefectoAux:parametrocarteradefectosSeleccionados) {
				parametrocarteradefectoAux.setsDetalleGeneralEntityReporte(parametrocarteradefectoAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDREGION)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getregion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPROVINCIA)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getprovincia_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCIUDAD)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getciudad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDZONA)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getzona_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOIDENTIFICACION)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.gettipoidentificacion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPONIVELEDU)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.gettiponiveledu_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDPAISNACIONALIDAD)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getpaisnacionalidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOGENERO)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.gettipogenero_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOCIVIL)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getestadocivil_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDESTADOLEGAL)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getestadolegal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDRUTA)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getruta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDDIA)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.getdia_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOPRECIO)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.gettipoprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroCarteraDefectoConstantesFunciones.LABEL_IDTIPOLISTAPRECIO)) {
					existe=true;
					parametrocarteradefectoAux.setsDescripcionGeneralEntityReporte1(parametrocarteradefectoAux.gettipolistaprecio_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroCarteraDefectoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroCarteraDefecto(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroCarteraDefecto=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=true;
				this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=true;
			}
			
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=true;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=true;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=true;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=true;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=true;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=true;
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;
			this.isVisibilidadCeldaModificarParametroCarteraDefecto=true;
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaCancelarParametroCarteraDefecto=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroCarteraDefecto=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroCarteraDefectoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=true;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=true;
		} else {
			this.actualizarEstadoPanelsParametroCarteraDefecto(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroCarteraDefecto=false;
			//this.isVisibilidadCeldaVerFormParametroCarteraDefecto=false;
			this.isVisibilidadCeldaDuplicarParametroCarteraDefecto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroCarteraDefecto=false;
			this.isVisibilidadCeldaGuardarCambiosParametroCarteraDefecto=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
			if(!parametrocarteradefectoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;												
			}
			
			this.jButtonCerrarParametroCarteraDefecto.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroCarteraDefecto=false;
		}
		
		if(!this.permiteMantenimiento(this.parametrocarteradefecto)) {
			this.isVisibilidadCeldaActualizarParametroCarteraDefecto=false;
			this.isVisibilidadCeldaEliminarParametroCarteraDefecto=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroCarteraDefecto() {
	}
	
	public void actualizarEstadoPanelsParametroCarteraDefecto(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosEdicionParametroCarteraDefecto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCarteraDefecto!=null) {
				this.jPanelPaginacionParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosEdicionParametroCarteraDefecto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosParametroCarteraDefecto.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroCarteraDefecto!=null) {
				this.jPanelPaginacionParametroCarteraDefecto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosEdicionParametroCarteraDefecto.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosParametroCarteraDefecto.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroCarteraDefecto!=null) {
				this.jPanelPaginacionParametroCarteraDefecto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosEdicionParametroCarteraDefecto.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosParametroCarteraDefecto.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroCarteraDefecto!=null) {
				this.jPanelPaginacionParametroCarteraDefecto.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosEdicionParametroCarteraDefecto.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCarteraDefecto!=null) {
				this.jPanelPaginacionParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosEdicionParametroCarteraDefecto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCarteraDefecto!=null) {
				this.jPanelPaginacionParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosEdicionParametroCarteraDefecto.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroCarteraDefecto!=null) {
				this.jScrollPanelDatosParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroCarteraDefecto!=null) {
				this.jPanelPaginacionParametroCarteraDefecto.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
					this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrocarteradefectoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroCarteraDefecto!=null) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroCarteraDefecto!=null) {
				this.jPanelParametrosReportesParametroCarteraDefecto.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCiudad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCiudad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadFK_IdCiudad=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaPais;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaRegion(Boolean isParaRegion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaRegionNegation=!isParaRegion;

			this.isVisibilidadFK_IdCiudad=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaRegion;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaRegionNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaProvincia(Boolean isParaProvincia){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProvinciaNegation=!isParaProvincia;

			this.isVisibilidadFK_IdCiudad=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaProvincia;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaProvinciaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudad(Boolean isParaCiudad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadNegation=!isParaCiudad;

			this.isVisibilidadFK_IdCiudad=isParaCiudad;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaZona(Boolean isParaZona){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaZonaNegation=!isParaZona;

			this.isVisibilidadFK_IdCiudad=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaZona;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoIdentificacion(Boolean isParaTipoIdentificacion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoIdentificacionNegation=!isParaTipoIdentificacion;

			this.isVisibilidadFK_IdCiudad=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoIdentificacion;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaTipoIdentificacionNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoNivelEdu(Boolean isParaTipoNivelEdu){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoNivelEduNegation=!isParaTipoNivelEdu;

			this.isVisibilidadFK_IdCiudad=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaTipoNivelEdu;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaTipoNivelEduNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaPaisNacionalidad(Boolean isParaPaisNacionalidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNacionalidadNegation=!isParaPaisNacionalidad;

			this.isVisibilidadFK_IdCiudad=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaPaisNacionalidad;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaPaisNacionalidadNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGenero(Boolean isParaTipoGenero){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGeneroNegation=!isParaTipoGenero;

			this.isVisibilidadFK_IdCiudad=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoGenero;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaTipoGeneroNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoCivil(Boolean isParaEstadoCivil){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoCivilNegation=!isParaEstadoCivil;

			this.isVisibilidadFK_IdCiudad=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstadoCivil;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaEstadoCivilNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoLegal(Boolean isParaEstadoLegal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoLegalNegation=!isParaEstadoLegal;

			this.isVisibilidadFK_IdCiudad=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaEstadoLegal;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaEstadoLegalNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadFK_IdCiudad=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaContable;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadFK_IdCiudad=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaRuta(Boolean isParaRuta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaRutaNegation=!isParaRuta;

			this.isVisibilidadFK_IdCiudad=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaRuta;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaRutaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaDia(Boolean isParaDia){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaDiaNegation=!isParaDia;

			this.isVisibilidadFK_IdCiudad=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaDia;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaDiaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPrecio(Boolean isParaTipoPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPrecioNegation=!isParaTipoPrecio;

			this.isVisibilidadFK_IdCiudad=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoPrecio;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoListaPrecio(Boolean isParaTipoListaPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoListaPrecioNegation=!isParaTipoListaPrecio;

			this.isVisibilidadFK_IdCiudad=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCiudadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdCuentaContableParametroCarteraDefecto);}

			this.isVisibilidadFK_IdDia=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdDia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdDiaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoCivil=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoCivil) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoCivilParametroCarteraDefecto);}

			this.isVisibilidadFK_IdEstadoLegal=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoLegal) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdEstadoLegalParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPais=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisParametroCarteraDefecto);}

			this.isVisibilidadFK_IdPaisNacionalidad=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdPaisNacionalidad) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);}

			this.isVisibilidadFK_IdProvincia=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdProvincia) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdProvinciaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRegion=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdRegion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRegionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdRuta=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdRuta) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdRutaParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoGenero=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoGenero) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoGeneroParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoIdentificacion=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoIdentificacion) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoListaPrecio=isParaTipoListaPrecio;
			if(!this.isVisibilidadFK_IdTipoListaPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoNivelEdu=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoNivelEdu) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoNivelEduParametroCarteraDefecto);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdTipoPrecioParametroCarteraDefecto);}

			this.isVisibilidadFK_IdVendedor=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdVendedorParametroCarteraDefecto);}

			this.isVisibilidadFK_IdZona=isParaTipoListaPrecioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(jPanelFK_IdZonaParametroCarteraDefecto);}
		}
		
	}
	
	
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroCarteraDefectoSessionBean parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
		
		if(this.parametrocarteradefectoSessionBean==null) {
			this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
		}
		
		this.parametrocarteradefectoSessionBean.setsUltimaBusquedaParametroCarteraDefecto(this.getsAccionBusqueda());
		this.parametrocarteradefectoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrocarteradefectoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
			parametrocarteradefectoSessionBean.setid_ciudad(this.getid_ciudadFK_IdCiudad());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
			parametrocarteradefectoSessionBean.setid_cuenta_contable(this.getid_cuenta_contableFK_IdCuentaContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdDia")) {
			parametrocarteradefectoSessionBean.setid_dia(this.getid_diaFK_IdDia());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrocarteradefectoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoCivil")) {
			parametrocarteradefectoSessionBean.setid_estado_civil(this.getid_estado_civilFK_IdEstadoCivil());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoLegal")) {
			parametrocarteradefectoSessionBean.setid_estado_legal(this.getid_estado_legalFK_IdEstadoLegal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
			parametrocarteradefectoSessionBean.setid_pais(this.getid_paisFK_IdPais());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPaisNacionalidad")) {
			parametrocarteradefectoSessionBean.setid_pais_nacionalidad(this.getid_pais_nacionalidadFK_IdPaisNacionalidad());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProvincia")) {
			parametrocarteradefectoSessionBean.setid_provincia(this.getid_provinciaFK_IdProvincia());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdRegion")) {
			parametrocarteradefectoSessionBean.setid_region(this.getid_regionFK_IdRegion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdRuta")) {
			parametrocarteradefectoSessionBean.setid_ruta(this.getid_rutaFK_IdRuta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			parametrocarteradefectoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoGenero")) {
			parametrocarteradefectoSessionBean.setid_tipo_genero(this.getid_tipo_generoFK_IdTipoGenero());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoIdentificacion")) {
			parametrocarteradefectoSessionBean.setid_tipo_identificacion(this.getid_tipo_identificacionFK_IdTipoIdentificacion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoListaPrecio")) {
			parametrocarteradefectoSessionBean.setid_tipo_lista_precio(this.getid_tipo_lista_precioFK_IdTipoListaPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoNivelEdu")) {
			parametrocarteradefectoSessionBean.setid_tipo_nivel_edu(this.getid_tipo_nivel_eduFK_IdTipoNivelEdu());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
			parametrocarteradefectoSessionBean.setid_tipo_precio(this.getid_tipo_precioFK_IdTipoPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			parametrocarteradefectoSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
			parametrocarteradefectoSessionBean.setid_zona(this.getid_zonaFK_IdZona());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroCarteraDefectoSessionBean parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
		
		if(this.parametrocarteradefectoSessionBean==null) {
			this.parametrocarteradefectoSessionBean=new ParametroCarteraDefectoSessionBean();
		}
		
		if(this.parametrocarteradefectoSessionBean.getsUltimaBusquedaParametroCarteraDefecto()!=null&&!this.parametrocarteradefectoSessionBean.getsUltimaBusquedaParametroCarteraDefecto().equals("")) {
			this.setsAccionBusqueda(parametrocarteradefectoSessionBean.getsUltimaBusquedaParametroCarteraDefecto());
			this.setiNumeroPaginacion(parametrocarteradefectoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrocarteradefectoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
				this.setid_ciudadFK_IdCiudad(parametrocarteradefectoSessionBean.getid_ciudad());
				parametrocarteradefectoSessionBean.setid_ciudad(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
				this.setid_cuenta_contableFK_IdCuentaContable(parametrocarteradefectoSessionBean.getid_cuenta_contable());
				parametrocarteradefectoSessionBean.setid_cuenta_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdDia")) {
				this.setid_diaFK_IdDia(parametrocarteradefectoSessionBean.getid_dia());
				parametrocarteradefectoSessionBean.setid_dia(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrocarteradefectoSessionBean.getid_empresa());
				parametrocarteradefectoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoCivil")) {
				this.setid_estado_civilFK_IdEstadoCivil(parametrocarteradefectoSessionBean.getid_estado_civil());
				parametrocarteradefectoSessionBean.setid_estado_civil(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoLegal")) {
				this.setid_estado_legalFK_IdEstadoLegal(parametrocarteradefectoSessionBean.getid_estado_legal());
				parametrocarteradefectoSessionBean.setid_estado_legal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
				this.setid_paisFK_IdPais(parametrocarteradefectoSessionBean.getid_pais());
				parametrocarteradefectoSessionBean.setid_pais(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPaisNacionalidad")) {
				this.setid_pais_nacionalidadFK_IdPaisNacionalidad(parametrocarteradefectoSessionBean.getid_pais_nacionalidad());
				parametrocarteradefectoSessionBean.setid_pais_nacionalidad(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProvincia")) {
				this.setid_provinciaFK_IdProvincia(parametrocarteradefectoSessionBean.getid_provincia());
				parametrocarteradefectoSessionBean.setid_provincia(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdRegion")) {
				this.setid_regionFK_IdRegion(parametrocarteradefectoSessionBean.getid_region());
				parametrocarteradefectoSessionBean.setid_region(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdRuta")) {
				this.setid_rutaFK_IdRuta(parametrocarteradefectoSessionBean.getid_ruta());
				parametrocarteradefectoSessionBean.setid_ruta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(parametrocarteradefectoSessionBean.getid_sucursal());
				parametrocarteradefectoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoGenero")) {
				this.setid_tipo_generoFK_IdTipoGenero(parametrocarteradefectoSessionBean.getid_tipo_genero());
				parametrocarteradefectoSessionBean.setid_tipo_genero(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoIdentificacion")) {
				this.setid_tipo_identificacionFK_IdTipoIdentificacion(parametrocarteradefectoSessionBean.getid_tipo_identificacion());
				parametrocarteradefectoSessionBean.setid_tipo_identificacion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoListaPrecio")) {
				this.setid_tipo_lista_precioFK_IdTipoListaPrecio(parametrocarteradefectoSessionBean.getid_tipo_lista_precio());
				parametrocarteradefectoSessionBean.setid_tipo_lista_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoNivelEdu")) {
				this.setid_tipo_nivel_eduFK_IdTipoNivelEdu(parametrocarteradefectoSessionBean.getid_tipo_nivel_edu());
				parametrocarteradefectoSessionBean.setid_tipo_nivel_edu(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
				this.setid_tipo_precioFK_IdTipoPrecio(parametrocarteradefectoSessionBean.getid_tipo_precio());
				parametrocarteradefectoSessionBean.setid_tipo_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(parametrocarteradefectoSessionBean.getid_vendedor());
				parametrocarteradefectoSessionBean.setid_vendedor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
				this.setid_zonaFK_IdZona(parametrocarteradefectoSessionBean.getid_zona());
				parametrocarteradefectoSessionBean.setid_zona(-1L);
			}
		}
		
		this.parametrocarteradefectoSessionBean.setsUltimaBusquedaParametroCarteraDefecto("");
		this.parametrocarteradefectoSessionBean.setiNumeroPaginacion(ParametroCarteraDefectoConstantesFunciones.INUMEROPAGINACION);
		this.parametrocarteradefectoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroCarteraDefecto(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroCarteraDefecto() {
		this.updateBorderResaltarBusquedasFormularioParametroCarteraDefecto();
		this.updateVisibilidadBusquedasFormularioParametroCarteraDefecto();
		this.updateHabilitarBusquedasFormularioParametroCarteraDefecto();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroCarteraDefecto() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponents().length>0) {
	

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdCiudadParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCiudadParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdCiudadParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdCuentaContableParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCuentaContableParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdCuentaContableParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdDiaParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdDiaParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdDiaParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdEstadoCivilParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoCivilParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdEstadoCivilParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdEstadoLegalParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoLegalParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdEstadoLegalParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdPaisParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdPaisParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdPaisNacionalidadParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdPaisNacionalidadParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdProvinciaParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdProvinciaParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdProvinciaParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdRegionParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRegionParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdRegionParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdRutaParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRutaParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdRutaParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoGeneroParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoGeneroParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoGeneroParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoIdentificacionParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoIdentificacionParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoListaPrecioParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoListaPrecioParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoNivelEduParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoNivelEduParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoNivelEduParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoPrecioParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoPrecioParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoPrecioParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdVendedorParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdVendedorParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdVendedorParametroCarteraDefecto);
			}
		}

		if(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdZonaParametroCarteraDefecto!=null) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdZonaParametroCarteraDefecto);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdZonaParametroCarteraDefecto);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroCarteraDefecto() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCiudadParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdCiudadParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdCiudadParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCuentaContableParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdCuentaContableParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdCuentaContableParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdDiaParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdDiaParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdDiaParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoCivilParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdEstadoCivilParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdEstadoCivilParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoLegalParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdEstadoLegalParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdEstadoLegalParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdPaisParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdPaisParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdPaisNacionalidadParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdPaisNacionalidadParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdProvinciaParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdProvinciaParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdProvinciaParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRegionParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdRegionParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdRegionParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRutaParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdRutaParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdRutaParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoGeneroParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoGeneroParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoGeneroParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoIdentificacionParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoIdentificacionParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoListaPrecioParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoListaPrecioParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoNivelEduParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoNivelEduParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoNivelEduParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoPrecioParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoPrecioParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdTipoPrecioParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdVendedorParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdVendedorParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdVendedorParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdZonaParametroCarteraDefecto);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdZonaParametroCarteraDefecto);
			if(!this.parametrocarteradefectoConstantesFunciones.mostrarFK_IdZonaParametroCarteraDefecto && index>-1) {
				this.jTabbedPaneBusquedasParametroCarteraDefecto.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroCarteraDefecto() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCiudadParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdCiudadParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdCiudadParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCuentaContableParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdCuentaContableParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdCuentaContableParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdDiaParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdDiaParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdDiaParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoCivilParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdEstadoCivilParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdEstadoCivilParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoLegalParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdEstadoLegalParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdEstadoLegalParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdPaisParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdPaisParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdPaisNacionalidadParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdPaisNacionalidadParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdProvinciaParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdProvinciaParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdProvinciaParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRegionParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdRegionParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdRegionParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRutaParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdRutaParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdRutaParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoGeneroParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoGeneroParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoGeneroParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoIdentificacionParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoIdentificacionParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoListaPrecioParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoListaPrecioParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoNivelEduParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoNivelEduParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoNivelEduParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoPrecioParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoPrecioParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdTipoPrecioParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdVendedorParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdVendedorParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdVendedorParametroCarteraDefecto);
			}

			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdZonaParametroCarteraDefecto);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarFK_IdZonaParametroCarteraDefecto);
				this.jTabbedPaneBusquedasParametroCarteraDefecto.setEnabledAt(index,this.parametrocarteradefectoConstantesFunciones.activarFK_IdZonaParametroCarteraDefecto);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroCarteraDefecto(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCiudad")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCiudadParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdCiudadParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdCiudadParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContable")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdCuentaContableParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdCuentaContableParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdCuentaContableParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdDia")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdDiaParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdDiaParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdDiaParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoCivil")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoCivilParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdEstadoCivilParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdEstadoCivilParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoLegal")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdEstadoLegalParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdEstadoLegalParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdEstadoLegalParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPais")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdPaisParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdPaisParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPaisNacionalidad")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdPaisNacionalidadParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdPaisNacionalidadParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdPaisNacionalidadParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProvincia")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdProvinciaParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdProvinciaParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdProvinciaParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdRegion")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRegionParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdRegionParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdRegionParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdRuta")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdRutaParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdRutaParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdRutaParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoGenero")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoGeneroParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdTipoGeneroParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoGeneroParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoIdentificacion")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoIdentificacionParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdTipoIdentificacionParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoIdentificacionParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoListaPrecio")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoListaPrecioParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdTipoListaPrecioParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoListaPrecioParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoNivelEdu")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoNivelEduParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdTipoNivelEduParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoNivelEduParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPrecio")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdTipoPrecioParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdTipoPrecioParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdTipoPrecioParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdVendedorParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdVendedorParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdVendedorParametroCarteraDefecto);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdZona")) {
			index= this.jTabbedPaneBusquedasParametroCarteraDefecto.indexOfComponent(this.jPanelFK_IdZonaParametroCarteraDefecto);

			this.jTabbedPaneBusquedasParametroCarteraDefecto.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroCarteraDefecto.getComponent(index);

			this.parametrocarteradefectoConstantesFunciones.setResaltarFK_IdZonaParametroCarteraDefecto(resaltar);

			jPanel.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarFK_IdZonaParametroCarteraDefecto);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroCarteraDefecto.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroCarteraDefecto() throws Exception {

		if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroCarteraDefecto();
		this.updateVisibilidadResaltarControlesFormularioParametroCarteraDefecto();
		this.updateHabilitarResaltarControlesFormularioParametroCarteraDefecto();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroCarteraDefecto() throws Exception {
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrocarteradefectoConstantesFunciones.resaltaridParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltaridParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_empresaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_empresaParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_sucursalParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_sucursalParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_paisParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_paisParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_regionParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_regionParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_provinciaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_provinciaParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_ciudadParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_ciudadParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_zonaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_zonaParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_identificacionParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_identificacionParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_nivel_eduParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_nivel_eduParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_pais_nacionalidadParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_pais_nacionalidadParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_generoParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_generoParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_civilParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_civilParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_legalParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_estado_legalParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_cuenta_contableParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_cuenta_contableParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_vendedorParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_vendedorParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_rutaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_rutaParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_diaParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_diaParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_precioParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_precioParametroCarteraDefecto);}
		if(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_lista_precioParametroCarteraDefecto!=null && this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setBorder(this.parametrocarteradefectoConstantesFunciones.resaltarid_tipo_lista_precioParametroCarteraDefecto);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroCarteraDefecto() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
	
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostraridParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelidParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostraridParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_empresaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_empresaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_empresaParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_sucursalParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_sucursalParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_sucursalParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_paisParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_paisParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_paisParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_regionParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_regionParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_regionParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_provinciaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_provinciaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_provinciaParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_ciudadParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_ciudadParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_ciudadParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_zonaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_zonaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_zonaParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_identificacionParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_tipo_identificacionParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_identificacionParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_nivel_eduParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_tipo_nivel_eduParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_nivel_eduParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_pais_nacionalidadParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_pais_nacionalidadParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_pais_nacionalidadParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_generoParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_tipo_generoParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_generoParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_estado_civilParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_estado_civilParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_estado_civilParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_estado_legalParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_estado_legalParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_estado_legalParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_cuenta_contableParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_cuenta_contableParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_cuenta_contableParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_vendedorParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_vendedorParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_vendedorParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_rutaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_rutaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_rutaParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_diaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_diaParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_diaParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_precioParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_tipo_precioParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_precioParametroCarteraDefecto);
		//this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_lista_precioParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jPanelid_tipo_lista_precioParametroCarteraDefecto.setVisible(this.parametrocarteradefectoConstantesFunciones.mostrarid_tipo_lista_precioParametroCarteraDefecto);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroCarteraDefecto() throws Exception {
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroCarteraDefecto!=null) {
	
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jLabelidParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activaridParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_empresaParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_empresaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_sucursalParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_sucursalParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_paisParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_paisParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_regionParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_regionParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_provinciaParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_provinciaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_ciudadParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_ciudadParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_zonaParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_zonaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_identificacionParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_tipo_identificacionParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_nivel_eduParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_tipo_nivel_eduParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_pais_nacionalidadParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_pais_nacionalidadParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_generoParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_tipo_generoParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_civilParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_estado_civilParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_estado_legalParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_estado_legalParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_cuenta_contableParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_cuenta_contableParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_vendedorParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_vendedorParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_rutaParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_rutaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_diaParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_diaParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_precioParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_tipo_precioParametroCarteraDefecto);
		this.jInternalFrameDetalleFormParametroCarteraDefecto.jComboBoxid_tipo_lista_precioParametroCarteraDefecto.setEnabled(this.parametrocarteradefectoConstantesFunciones.activarid_tipo_lista_precioParametroCarteraDefecto);
		}
	}
	
		
}