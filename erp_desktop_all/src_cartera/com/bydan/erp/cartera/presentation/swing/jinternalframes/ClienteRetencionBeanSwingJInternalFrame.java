/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.cartera.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.cartera.util.ClienteRetencionConstantesFunciones;
import com.bydan.erp.cartera.util.ClienteRetencionParameterReturnGeneral;
//import com.bydan.erp.cartera.util.ClienteRetencionParameterGeneral;
//import com.bydan.erp.cartera.presentation.report.source.ClienteRetencionBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.cartera.resources.reportes.AuxiliarReportes;


import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.cartera.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ClienteRetencionBeanSwingJInternalFrame extends ClienteRetencionJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ClienteRetencionBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ClienteRetencion> clienteretencionValidator = new ClassValidator<ClienteRetencion>(ClienteRetencion.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ClienteRetencion clienteretencion;	
	public ClienteRetencion clienteretencionAux;
	public ClienteRetencion clienteretencionAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ClienteRetencion clienteretencionTotales;
	public Long idClienteRetencionActual;
	public Long iIdNuevoClienteRetencion=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboFactura="";

	public List<Factura> facturasForeignKey;

	public List<Factura> getfacturasForeignKey() {
		return facturasForeignKey;
	}

	public void setfacturasForeignKey(List<Factura> facturasForeignKey) {
		this.facturasForeignKey = facturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Factura facturaForeignKey;

	public Factura getfacturaForeignKey() {
		return facturaForeignKey;
	}

	public void setfacturaForeignKey(Factura facturaForeignKey) {
		this.facturaForeignKey = facturaForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboTipoRetencion="";

	public List<TipoRetencion> tiporetencionsForeignKey;

	public List<TipoRetencion> gettiporetencionsForeignKey() {
		return tiporetencionsForeignKey;
	}

	public void settiporetencionsForeignKey(List<TipoRetencion> tiporetencionsForeignKey) {
		this.tiporetencionsForeignKey = tiporetencionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRetencion tiporetencionForeignKey;

	public TipoRetencion gettiporetencionForeignKey() {
		return tiporetencionForeignKey;
	}

	public void settiporetencionForeignKey(TipoRetencion tiporetencionForeignKey) {
		this.tiporetencionForeignKey = tiporetencionForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

	public String sFinalQueryComboCuentaContableClienteRetencion="";

	public List<CuentaContable> cuentacontableclienteretencionsForeignKey;

	public List<CuentaContable> getcuentacontableclienteretencionsForeignKey() {
		return cuentacontableclienteretencionsForeignKey;
	}

	public void setcuentacontableclienteretencionsForeignKey(List<CuentaContable> cuentacontableclienteretencionsForeignKey) {
		this.cuentacontableclienteretencionsForeignKey = cuentacontableclienteretencionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableclienteretencionForeignKey;

	public CuentaContable getcuentacontableclienteretencionForeignKey() {
		return cuentacontableclienteretencionForeignKey;
	}

	public void setcuentacontableclienteretencionForeignKey(CuentaContable cuentacontableclienteretencionForeignKey) {
		this.cuentacontableclienteretencionForeignKey = cuentacontableclienteretencionForeignKey;
	}

	public String sFinalQueryComboEstadoRetencion="";

	public List<EstadoRetencion> estadoretencionsForeignKey;

	public List<EstadoRetencion> getestadoretencionsForeignKey() {
		return estadoretencionsForeignKey;
	}

	public void setestadoretencionsForeignKey(List<EstadoRetencion> estadoretencionsForeignKey) {
		this.estadoretencionsForeignKey = estadoretencionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoRetencion estadoretencionForeignKey;

	public EstadoRetencion getestadoretencionForeignKey() {
		return estadoretencionForeignKey;
	}

	public void setestadoretencionForeignKey(EstadoRetencion estadoretencionForeignKey) {
		this.estadoretencionForeignKey = estadoretencionForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idFacturaActual=0L;

	public Long getidFacturaActual() {
		return idFacturaActual;
	}

	public void setidFacturaActual(Long idFacturaActual) {
		this.idFacturaActual= idFacturaActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	public Long idCuentaContableClienteRetencionActual=0L;

	public Long getidCuentaContableClienteRetencionActual() {
		return idCuentaContableClienteRetencionActual;
	}

	public void setidCuentaContableClienteRetencionActual(Long idCuentaContableClienteRetencionActual) {
		this.idCuentaContableClienteRetencionActual= idCuentaContableClienteRetencionActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoClienteRetencion;
	public Boolean isPermisoNuevoClienteRetencion;
	public Boolean isPermisoActualizarClienteRetencion;
	public Boolean isPermisoActualizarOriginalClienteRetencion;
	public Boolean isPermisoEliminarClienteRetencion;
	public Boolean isPermisoGuardarCambiosClienteRetencion;
	public Boolean isPermisoConsultaClienteRetencion;
	public Boolean isPermisoBusquedaClienteRetencion;
	public Boolean isPermisoReporteClienteRetencion;
	public Boolean isPermisoPaginacionMedioClienteRetencion;
	public Boolean isPermisoPaginacionAltoClienteRetencion;
	public Boolean isPermisoPaginacionTodoClienteRetencion;
	public Boolean isPermisoCopiarClienteRetencion;
	public Boolean isPermisoVerFormClienteRetencion;
	public Boolean isPermisoDuplicarClienteRetencion;
	public Boolean isPermisoOrdenClienteRetencion;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ClienteRetencionParameterReturnGeneral clienteretencionReturnGeneral;
	public ClienteRetencionParameterReturnGeneral clienteretencionParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoClienteRetencion=false;
	public Boolean esParaAccionDesdeFormularioClienteRetencion=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ClienteRetencionSessionBeanAdditional clienteretencionSessionBeanAdditional=null;
	
	public ClienteRetencionSessionBeanAdditional getClienteRetencionSessionBeanAdditional() {
		return this.clienteretencionSessionBeanAdditional;
	}
	
	public void setClienteRetencionSessionBeanAdditional(ClienteRetencionSessionBeanAdditional clienteretencionSessionBeanAdditional) {
		try {
			this.clienteretencionSessionBeanAdditional=clienteretencionSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ClienteRetencionBeanSwingJInternalFrameAdditional clienteretencionBeanSwingJInternalFrameAdditional=null;
	//public class ClienteRetencionBeanSwingJInternalFrame
	
	public ClienteRetencionBeanSwingJInternalFrameAdditional getClienteRetencionBeanSwingJInternalFrameAdditional() {
		return this.clienteretencionBeanSwingJInternalFrameAdditional;
	}
	
	public void setClienteRetencionBeanSwingJInternalFrameAdditional(ClienteRetencionBeanSwingJInternalFrameAdditional clienteretencionBeanSwingJInternalFrameAdditional) {
		try {
			this.clienteretencionBeanSwingJInternalFrameAdditional=clienteretencionBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ClienteRetencionLogic clienteretencionLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ClienteRetencion clienteretencionBean;
	public ClienteRetencionConstantesFunciones clienteretencionConstantesFunciones;
	//public ClienteRetencionParameterReturnGeneral clienteretencionReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public ClienteLogic clienteLogic;
	public FacturaLogic facturaLogic;
	public TransaccionLogic transaccionLogic;
	public TipoRetencionLogic tiporetencionLogic;
	public AsientoContableLogic asientocontableLogic;
	public CuentaContableLogic cuentacontableclienteretencionLogic;
	public EstadoRetencionLogic estadoretencionLogic;
	
	//PARAMETROS
	
	
	//public List<ClienteRetencion> clienteretencions;	
	//public List<ClienteRetencion> clienteretencionsEliminados;
	//public List<ClienteRetencion> clienteretencionsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoClienteRetencion=false;
	public Boolean isVisibilidadCeldaDuplicarClienteRetencion=true;
	public Boolean isVisibilidadCeldaCopiarClienteRetencion=true;
	public Boolean isVisibilidadCeldaVerFormClienteRetencion=true;
	public Boolean isVisibilidadCeldaOrdenClienteRetencion=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
	public Boolean isVisibilidadCeldaModificarClienteRetencion=false;
	public Boolean isVisibilidadCeldaActualizarClienteRetencion=false;
	public Boolean isVisibilidadCeldaEliminarClienteRetencion=false;
	public Boolean isVisibilidadCeldaCancelarClienteRetencion=false;
	public Boolean isVisibilidadCeldaGuardarClienteRetencion=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosClienteRetencion=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdCuentaContableClienteRetencion=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoRetencion=false;
	public Boolean isVisibilidadFK_IdFactura=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoRetencion=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	
	public Long getiIdNuevoClienteRetencion() {
		return this.iIdNuevoClienteRetencion;
	}

	public void setiIdNuevoClienteRetencion(Long iIdNuevoClienteRetencion) {
		this.iIdNuevoClienteRetencion = iIdNuevoClienteRetencion;
	}
	
	public Long getidClienteRetencionActual() {
		return this.idClienteRetencionActual;
	}

	public void setidClienteRetencionActual(Long idClienteRetencionActual) {
		this.idClienteRetencionActual = idClienteRetencionActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ClienteRetencion getclienteretencion() {
		return this.clienteretencion;
	}

	public void setclienteretencion(ClienteRetencion clienteretencion) {
		this.clienteretencion = clienteretencion;
	}
	
	public ClienteRetencion getclienteretencionAux() {
		return this.clienteretencionAux;
	}

	public void setclienteretencionAux(ClienteRetencion clienteretencionAux) {
		this.clienteretencionAux = clienteretencionAux;
	}				
	
	public ClienteRetencion getclienteretencionAnterior() {
		return this.clienteretencionAnterior;
	}

	public void setclienteretencionAnterior(ClienteRetencion clienteretencionAnterior) {
		this.clienteretencionAnterior = clienteretencionAnterior;
	}	
	
	public ClienteRetencion getclienteretencionTotales() {
		return this.clienteretencionTotales;
	}

	public void setclienteretencionTotales(ClienteRetencion clienteretencionTotales) {
		this.clienteretencionTotales = clienteretencionTotales;
	}	
	
	public ClienteRetencion getclienteretencionBean() {
		return this.clienteretencionBean;
	}

	public void setclienteretencionBean(ClienteRetencion clienteretencionBean) {
		this.clienteretencionBean = clienteretencionBean;
	}	
	
	public ClienteRetencionParameterReturnGeneral getclienteretencionReturnGeneral() {
		return this.clienteretencionReturnGeneral;
	}

	public void setclienteretencionReturnGeneral(ClienteRetencionParameterReturnGeneral clienteretencionReturnGeneral) {
		this.clienteretencionReturnGeneral = clienteretencionReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_asiento_contableFK_IdAsientoContable=-1L;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion=-1L;

	public Long getid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion() {
		return this.id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion;
	}

	public void setid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion(Long id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion) {
		this.id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion = id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_retencionFK_IdEstadoRetencion=-1L;

	public Long getid_estado_retencionFK_IdEstadoRetencion() {
		return this.id_estado_retencionFK_IdEstadoRetencion;
	}

	public void setid_estado_retencionFK_IdEstadoRetencion(Long id_estado_retencionFK_IdEstadoRetencion) {
		this.id_estado_retencionFK_IdEstadoRetencion = id_estado_retencionFK_IdEstadoRetencion;
	}

	public Long id_facturaFK_IdFactura=null;

	public Long getid_facturaFK_IdFactura() {
		return this.id_facturaFK_IdFactura;
	}

	public void setid_facturaFK_IdFactura(Long id_facturaFK_IdFactura) {
		this.id_facturaFK_IdFactura = id_facturaFK_IdFactura;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_retencionFK_IdTipoRetencion=-1L;

	public Long getid_tipo_retencionFK_IdTipoRetencion() {
		return this.id_tipo_retencionFK_IdTipoRetencion;
	}

	public void setid_tipo_retencionFK_IdTipoRetencion(Long id_tipo_retencionFK_IdTipoRetencion) {
		this.id_tipo_retencionFK_IdTipoRetencion = id_tipo_retencionFK_IdTipoRetencion;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ClienteRetencionLogic getClienteRetencionLogic()	{		
		return clienteretencionLogic;
	}

	public void setClienteRetencionLogic(ClienteRetencionLogic clienteretencionLogic) {
		this.clienteretencionLogic = clienteretencionLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoClienteRetencion() {
		return isEsNuevoClienteRetencion;
	}

	public void setIsEsNuevoClienteRetencion(Boolean isEsNuevoClienteRetencion) {
		this.isEsNuevoClienteRetencion = isEsNuevoClienteRetencion;
	}

	public Boolean getEsParaAccionDesdeFormularioClienteRetencion() {
		return esParaAccionDesdeFormularioClienteRetencion;
	}
	
	public void setEsParaAccionDesdeFormularioClienteRetencion(Boolean esParaAccionDesdeFormularioClienteRetencion) {
		this.esParaAccionDesdeFormularioClienteRetencion = esParaAccionDesdeFormularioClienteRetencion;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(clienteretencionSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(clienteretencionSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(clienteretencionSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(clienteretencionSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(clienteretencionSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(clienteretencionSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(clienteretencionSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.facturasForeignKey=new ArrayList<Factura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Factura facturaNulo = new Factura();

			FacturaLogic facturaLogic=new FacturaLogic();

			//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

					facturaLogic.getTodosFacturasWithConnection(sFinalQuery,new Pagination());

					this.facturasForeignKey=facturaLogic.getFacturas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.facturasForeignKey.add(0, facturaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(clienteretencionSessionBean.getlidFacturaActual());
					this.facturasForeignKey.add(facturaLogic.getFactura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(clienteretencionSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRetencionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporetencionsForeignKey=new ArrayList<TipoRetencion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRetencionLogic tiporetencionLogic=new TipoRetencionLogic();

			//tiporetencionLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiporetencionLogic.getTipoRetencionDataAccess().setIsForForeingKeyData(true);

					tiporetencionLogic.getTodosTipoRetencionsWithConnection(sFinalQuery,new Pagination());

					this.tiporetencionsForeignKey=tiporetencionLogic.getTipoRetencions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRetencion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporetencionLogic.getEntityWithConnection(clienteretencionSessionBean.getlidTipoRetencionActual());
					this.tiporetencionsForeignKey.add(tiporetencionLogic.getTipoRetencion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(clienteretencionSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableClienteRetencionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableclienteretencionsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableClienteRetencion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableclienteretencionLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableclienteretencionsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableClienteRetencion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(clienteretencionSessionBean.getlidCuentaContableClienteRetencionActual());
					this.cuentacontableclienteretencionsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoRetencionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoretencionsForeignKey=new ArrayList<EstadoRetencion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoRetencionLogic estadoretencionLogic=new EstadoRetencionLogic();

			//estadoretencionLogic.getEstadoRetencionDataAccess().setIsForForeingKeyData(true);

			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoRetencion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoretencionLogic.getEstadoRetencionDataAccess().setIsForForeingKeyData(true);

					estadoretencionLogic.getTodosEstadoRetencionsWithConnection(sFinalQuery,new Pagination());

					this.estadoretencionsForeignKey=estadoretencionLogic.getEstadoRetencions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoRetencion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoretencionLogic.getEntityWithConnection(clienteretencionSessionBean.getlidEstadoRetencionActual());
					this.estadoretencionsForeignKey.add(estadoretencionLogic.getEstadoRetencion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaClienteRetencion.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaClienteRetencionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaClienteRetencionGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaClienteRetencionGenerico!=null && jComboBoxid_empresaClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_empresaClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalClienteRetencion.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalClienteRetencionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalClienteRetencionGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalClienteRetencionGenerico!=null && jComboBoxid_sucursalClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_sucursalClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioClienteRetencion.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioClienteRetencionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioClienteRetencionGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioClienteRetencionGenerico!=null && jComboBoxid_ejercicioClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoClienteRetencion.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoClienteRetencionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoClienteRetencionGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoClienteRetencionGenerico!=null && jComboBoxid_periodoClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_periodoClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioClienteRetencion.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioClienteRetencionGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioClienteRetencionGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioClienteRetencionGenerico!=null && jComboBoxid_anioClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_anioClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesClienteRetencion.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesClienteRetencionGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesClienteRetencionGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesClienteRetencionGenerico!=null && jComboBoxid_mesClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_mesClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteClienteRetencion.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteClienteRetencion!=null) {
						jComboBoxid_clienteFK_IdClienteClienteRetencion.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteClienteRetencion!=null) {
							//jComboBoxid_clienteFK_IdClienteClienteRetencion.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteClienteRetencion.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteClienteRetencion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteClienteRetencionGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteClienteRetencionGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteClienteRetencionGenerico!=null && jComboBoxid_clienteClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_clienteClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFacturaForeignKey(Long idFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(facturaTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setFactura(facturaTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setSelectedItem(facturaTemp);
					}
				} else {
					//jComboBoxid_facturaClienteRetencion.setSelectedItem(facturaTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(facturaTemp!=null && jComboBoxid_facturaFK_IdFacturaClienteRetencion!=null) {
						jComboBoxid_facturaFK_IdFacturaClienteRetencion.setSelectedItem(facturaTemp);
					} else {
						if(jComboBoxid_facturaFK_IdFacturaClienteRetencion!=null) {
							//jComboBoxid_facturaFK_IdFacturaClienteRetencion.setSelectedItem(facturaTemp);
							if(jComboBoxid_facturaFK_IdFacturaClienteRetencion.getItemCount()>0) {
								jComboBoxid_facturaFK_IdFacturaClienteRetencion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFacturaForeignKeyDescripcion(Long idFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}


			sDescripcion=FacturaConstantesFunciones.getFacturaDescripcion(facturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFacturaForeignKeyGenerico(Long idFacturaSeleccionado,JComboBox jComboBoxid_facturaClienteRetencionGenerico)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(facturaTemp!=null) {
				jComboBoxid_facturaClienteRetencionGenerico.setSelectedItem(facturaTemp);
			} else {
				if(jComboBoxid_facturaClienteRetencionGenerico!=null && jComboBoxid_facturaClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_facturaClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionClienteRetencion.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionClienteRetencion!=null) {
						jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionClienteRetencion!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionClienteRetencionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionClienteRetencionGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionClienteRetencionGenerico!=null && jComboBoxid_transaccionClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_transaccionClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRetencionForeignKey(Long idTipoRetencionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionTemp=null;

			for(TipoRetencion tiporetencionAux:tiporetencionsForeignKey) {
				if(tiporetencionAux.getId()!=null && tiporetencionAux.getId().equals(idTipoRetencionSeleccionado)) {
					tiporetencionTemp=tiporetencionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporetencionTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setTipoRetencion(tiporetencionTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setSelectedItem(tiporetencionTemp);
					}
				} else {
					//jComboBoxid_tipo_retencionClienteRetencion.setSelectedItem(tiporetencionTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencion") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporetencionTemp!=null && jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion!=null) {
						jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.setSelectedItem(tiporetencionTemp);
					} else {
						if(jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion!=null) {
							//jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.setSelectedItem(tiporetencionTemp);
							if(jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.getItemCount()>0) {
								jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRetencionForeignKeyDescripcion(Long idTipoRetencionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRetencion  tiporetencionTemp=null;

			for(TipoRetencion tiporetencionAux:tiporetencionsForeignKey) {
				if(tiporetencionAux.getId()!=null && tiporetencionAux.getId().equals(idTipoRetencionSeleccionado)) {
					tiporetencionTemp=tiporetencionAux;
					break;
				}
			}


			sDescripcion=TipoRetencionConstantesFunciones.getTipoRetencionDescripcion(tiporetencionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRetencionForeignKeyGenerico(Long idTipoRetencionSeleccionado,JComboBox jComboBoxid_tipo_retencionClienteRetencionGenerico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionTemp=null;

			for(TipoRetencion tiporetencionAux:tiporetencionsForeignKey) {
				if(tiporetencionAux.getId()!=null && tiporetencionAux.getId().equals(idTipoRetencionSeleccionado)) {
					tiporetencionTemp=tiporetencionAux;
					break;
				}
			}

			if(tiporetencionTemp!=null) {
				jComboBoxid_tipo_retencionClienteRetencionGenerico.setSelectedItem(tiporetencionTemp);
			} else {
				if(jComboBoxid_tipo_retencionClienteRetencionGenerico!=null && jComboBoxid_tipo_retencionClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_tipo_retencionClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableClienteRetencion.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableClienteRetencionGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableClienteRetencionGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableClienteRetencionGenerico!=null && jComboBoxid_asiento_contableClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableClienteRetencionForeignKey(Long idCuentaContableClienteRetencionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableclienteretencionTemp=null;

			for(CuentaContable cuentacontableclienteretencionAux:cuentacontableclienteretencionsForeignKey) {
				if(cuentacontableclienteretencionAux.getId()!=null && cuentacontableclienteretencionAux.getId().equals(idCuentaContableClienteRetencionSeleccionado)) {
					cuentacontableclienteretencionTemp=cuentacontableclienteretencionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableclienteretencionTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setCuentaContableClienteRetencion(cuentacontableclienteretencionTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setSelectedItem(cuentacontableclienteretencionTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_retencionClienteRetencion.setSelectedItem(cuentacontableclienteretencionTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableClienteRetencion") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableclienteretencionTemp!=null && jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion!=null) {
						jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.setSelectedItem(cuentacontableclienteretencionTemp);
					} else {
						if(jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion!=null) {
							//jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.setSelectedItem(cuentacontableclienteretencionTemp);
							if(jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.getItemCount()>0) {
								jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableClienteRetencionForeignKeyDescripcion(Long idCuentaContableClienteRetencionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableclienteretencionTemp=null;

			for(CuentaContable cuentacontableclienteretencionAux:cuentacontableclienteretencionsForeignKey) {
				if(cuentacontableclienteretencionAux.getId()!=null && cuentacontableclienteretencionAux.getId().equals(idCuentaContableClienteRetencionSeleccionado)) {
					cuentacontableclienteretencionTemp=cuentacontableclienteretencionAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableclienteretencionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableClienteRetencionForeignKeyGenerico(Long idCuentaContableClienteRetencionSeleccionado,JComboBox jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableclienteretencionTemp=null;

			for(CuentaContable cuentacontableclienteretencionAux:cuentacontableclienteretencionsForeignKey) {
				if(cuentacontableclienteretencionAux.getId()!=null && cuentacontableclienteretencionAux.getId().equals(idCuentaContableClienteRetencionSeleccionado)) {
					cuentacontableclienteretencionTemp=cuentacontableclienteretencionAux;
					break;
				}
			}

			if(cuentacontableclienteretencionTemp!=null) {
				jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico.setSelectedItem(cuentacontableclienteretencionTemp);
			} else {
				if(jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico!=null && jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoRetencionForeignKey(Long idEstadoRetencionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoRetencion  estadoretencionTemp=null;

			for(EstadoRetencion estadoretencionAux:estadoretencionsForeignKey) {
				if(estadoretencionAux.getId()!=null && estadoretencionAux.getId().equals(idEstadoRetencionSeleccionado)) {
					estadoretencionTemp=estadoretencionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoretencionTemp!=null) {

					if(this.clienteretencion!=null) {
						this.clienteretencion.setEstadoRetencion(estadoretencionTemp);
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setSelectedItem(estadoretencionTemp);
					}
				} else {
					//jComboBoxid_estado_retencionClienteRetencion.setSelectedItem(estadoretencionTemp);
					if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
						if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.getItemCount()>0) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoRetencion") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadoretencionTemp!=null && jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion!=null) {
						jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.setSelectedItem(estadoretencionTemp);
					} else {
						if(jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion!=null) {
							//jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.setSelectedItem(estadoretencionTemp);
							if(jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.getItemCount()>0) {
								jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoRetencionForeignKeyDescripcion(Long idEstadoRetencionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoRetencion  estadoretencionTemp=null;

			for(EstadoRetencion estadoretencionAux:estadoretencionsForeignKey) {
				if(estadoretencionAux.getId()!=null && estadoretencionAux.getId().equals(idEstadoRetencionSeleccionado)) {
					estadoretencionTemp=estadoretencionAux;
					break;
				}
			}


			sDescripcion=EstadoRetencionConstantesFunciones.getEstadoRetencionDescripcion(estadoretencionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoRetencionForeignKeyGenerico(Long idEstadoRetencionSeleccionado,JComboBox jComboBoxid_estado_retencionClienteRetencionGenerico)throws Exception
	{
		try
		{
			EstadoRetencion  estadoretencionTemp=null;

			for(EstadoRetencion estadoretencionAux:estadoretencionsForeignKey) {
				if(estadoretencionAux.getId()!=null && estadoretencionAux.getId().equals(idEstadoRetencionSeleccionado)) {
					estadoretencionTemp=estadoretencionAux;
					break;
				}
			}

			if(estadoretencionTemp!=null) {
				jComboBoxid_estado_retencionClienteRetencionGenerico.setSelectedItem(estadoretencionTemp);
			} else {
				if(jComboBoxid_estado_retencionClienteRetencionGenerico!=null && jComboBoxid_estado_retencionClienteRetencionGenerico.getItemCount()>0) {
					jComboBoxid_estado_retencionClienteRetencionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_empresaClienteRetencionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaClienteRetencionGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaClienteRetencionGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				clienteretencion.setid_empresa(empresaAux.getId());
				clienteretencion.setempresa_descripcion(ClienteRetencionConstantesFunciones.getEmpresaDescripcion(empresaAux));
				clienteretencion.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_sucursalClienteRetencionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalClienteRetencionGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalClienteRetencionGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				clienteretencion.setid_sucursal(sucursalAux.getId());
				clienteretencion.setsucursal_descripcion(ClienteRetencionConstantesFunciones.getSucursalDescripcion(sucursalAux));
				clienteretencion.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_ejercicioClienteRetencionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioClienteRetencionGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioClienteRetencionGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				clienteretencion.setid_ejercicio(ejercicioAux.getId());
				clienteretencion.setejercicio_descripcion(ClienteRetencionConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				clienteretencion.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_periodoClienteRetencionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoClienteRetencionGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoClienteRetencionGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				clienteretencion.setid_periodo(periodoAux.getId());
				clienteretencion.setperiodo_descripcion(ClienteRetencionConstantesFunciones.getPeriodoDescripcion(periodoAux));
				clienteretencion.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_anioClienteRetencionGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioClienteRetencionGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioClienteRetencionGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				clienteretencion.setid_anio(anioAux.getId());
				clienteretencion.setanio_descripcion(ClienteRetencionConstantesFunciones.getAnioDescripcion(anioAux));
				clienteretencion.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_mesClienteRetencionGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesClienteRetencionGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesClienteRetencionGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				clienteretencion.setid_mes(mesAux.getId());
				clienteretencion.setmes_descripcion(ClienteRetencionConstantesFunciones.getMesDescripcion(mesAux));
				clienteretencion.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_clienteClienteRetencionGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteClienteRetencionGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteClienteRetencionGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				clienteretencion.setid_cliente(clienteAux.getId());
				clienteretencion.setcliente_descripcion(ClienteRetencionConstantesFunciones.getClienteDescripcion(clienteAux));
				clienteretencion.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFacturaForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_facturaClienteRetencionGenerico)throws Exception
	{
		try
		{
			Factura  facturaAux=new Factura();

			if(jComboBoxid_facturaClienteRetencionGenerico==null) {
				facturaAux=(Factura)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.getSelectedItem();
			} else {
				facturaAux=(Factura)jComboBoxid_facturaClienteRetencionGenerico.getSelectedItem();
			}

			if(facturaAux!=null) {
				clienteretencion.setid_factura(facturaAux.getId());
				clienteretencion.setfactura_descripcion(ClienteRetencionConstantesFunciones.getFacturaDescripcion(facturaAux));
				clienteretencion.setFactura(facturaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_transaccionClienteRetencionGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionClienteRetencionGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionClienteRetencionGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				clienteretencion.setid_transaccion(transaccionAux.getId());
				clienteretencion.settransaccion_descripcion(ClienteRetencionConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				clienteretencion.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRetencionForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_tipo_retencionClienteRetencionGenerico)throws Exception
	{
		try
		{
			TipoRetencion  tiporetencionAux=new TipoRetencion();

			if(jComboBoxid_tipo_retencionClienteRetencionGenerico==null) {
				tiporetencionAux=(TipoRetencion)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.getSelectedItem();
			} else {
				tiporetencionAux=(TipoRetencion)jComboBoxid_tipo_retencionClienteRetencionGenerico.getSelectedItem();
			}

			if(tiporetencionAux!=null && tiporetencionAux.getId()!=null) {
				clienteretencion.setid_tipo_retencion(tiporetencionAux.getId());
				clienteretencion.settiporetencion_descripcion(ClienteRetencionConstantesFunciones.getTipoRetencionDescripcion(tiporetencionAux));
				clienteretencion.setTipoRetencion(tiporetencionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_asiento_contableClienteRetencionGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableClienteRetencionGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableClienteRetencionGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null && asientocontableAux.getId()!=null) {
				clienteretencion.setid_asiento_contable(asientocontableAux.getId());
				clienteretencion.setasientocontable_descripcion(ClienteRetencionConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				clienteretencion.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableClienteRetencionForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_retencionClienteRetencionGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				clienteretencion.setid_cuenta_contable_retencion(cuentacontableAux.getId());
				clienteretencion.setcuentacontableclienteretencion_descripcion(ClienteRetencionConstantesFunciones.getCuentaContableClienteRetencionDescripcion(cuentacontableAux));
				clienteretencion.setCuentaContableClienteRetencion(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoRetencionForeignKey(ClienteRetencion clienteretencion,JComboBox jComboBoxid_estado_retencionClienteRetencionGenerico)throws Exception
	{
		try
		{
			EstadoRetencion  estadoretencionAux=new EstadoRetencion();

			if(jComboBoxid_estado_retencionClienteRetencionGenerico==null) {
				estadoretencionAux=(EstadoRetencion)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.getSelectedItem();
			} else {
				estadoretencionAux=(EstadoRetencion)jComboBoxid_estado_retencionClienteRetencionGenerico.getSelectedItem();
			}

			if(estadoretencionAux!=null && estadoretencionAux.getId()!=null) {
				clienteretencion.setid_estado_retencion(estadoretencionAux.getId());
				clienteretencion.setestadoretencion_descripcion(ClienteRetencionConstantesFunciones.getEstadoRetencionDescripcion(estadoretencionAux));
				clienteretencion.setEstadoRetencion(estadoretencionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteClienteRetencion.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteClienteRetencion.addItem(cliente);
							}
						}

						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFactura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.addItem(factura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_facturaFK_IdFacturaClienteRetencion.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jComboBoxid_facturaFK_IdFacturaClienteRetencion.addItem(factura);
							}
						}

						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.addItem(transaccion);
							}
						}

						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRetencionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRetencion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.removeAllItems();

							for(TipoRetencion tiporetencion:this.tiporetencionsForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.addItem(tiporetencion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRetencion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.removeAllItems();

							for(TipoRetencion tiporetencion:this.tiporetencionsForeignKey) {
								this.jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.addItem(tiporetencion);
							}
						}

						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.addItem(asientocontable);
							}
						}

						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableClienteRetencionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.removeAllItems();

							for(CuentaContable cuentacontableclienteretencion:this.cuentacontableclienteretencionsForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.addItem(cuentacontableclienteretencion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableClienteRetencion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.removeAllItems();

							for(CuentaContable cuentacontableclienteretencion:this.cuentacontableclienteretencionsForeignKey) {
								this.jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.addItem(cuentacontableclienteretencion);
							}
						}

						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoRetencionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoRetencion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.removeAllItems();

							for(EstadoRetencion estadoretencion:this.estadoretencionsForeignKey) {
								this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.addItem(estadoretencion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormClienteRetencion!=null) { 
					}

					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoRetencion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.removeAllItems();

							for(EstadoRetencion estadoretencion:this.estadoretencionsForeignKey) {
								this.jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.addItem(estadoretencion);
							}
						}

						if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteClienteRetencion.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteClienteRetencion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFacturaForeignKey(Factura factura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setSelectedItem(factura);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_facturaFK_IdFacturaClienteRetencion.setSelectedItem(factura);
						} else {
							this.jComboBoxid_facturaFK_IdFacturaClienteRetencion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRetencionForeignKey(TipoRetencion tiporetencion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setSelectedItem(tiporetencion);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.setSelectedItem(tiporetencion);
						} else {
							this.jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableClienteRetencionForeignKey(CuentaContable cuentacontableclienteretencion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setSelectedItem(cuentacontableclienteretencion);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.setSelectedItem(cuentacontableclienteretencion);
						} else {
							this.jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoRetencionForeignKey(EstadoRetencion estadoretencion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setSelectedItem(estadoretencion);
						}
					} else {
						if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.setSelectedItem(estadoretencion);
						} else {
							this.jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesClienteRetencion() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ClienteRetencionConstantesFunciones.refrescarForeignKeysDescripcionesClienteRetencion(this.clienteretencionLogic.getClienteRetencions());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ClienteRetencionConstantesFunciones.refrescarForeignKeysDescripcionesClienteRetencion(this.clienteretencions);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Factura.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(TipoRetencion.class));
		classes.add(new Classe(AsientoContable.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(EstadoRetencion.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//clienteretencionLogic.setClienteRetencions(this.clienteretencions);
			clienteretencionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ClienteRetencionParameterReturnGeneral getClienteRetencionParameterGeneral() {
		return this.clienteretencionParameterGeneral;
	}
	
	public void setClienteRetencionParameterGeneral(ClienteRetencionParameterReturnGeneral clienteretencionParameterGeneral) {
		this.clienteretencionParameterGeneral = clienteretencionParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoClienteRetencion() {
		return isPermisoTodoClienteRetencion;
	}

	public void setIsPermisoTodoClienteRetencion(Boolean isPermisoTodoClienteRetencion) {
		this.isPermisoTodoClienteRetencion = isPermisoTodoClienteRetencion;
	}

	public Boolean getIsPermisoNuevoClienteRetencion() {
		return isPermisoNuevoClienteRetencion;
	}

	public void setIsPermisoNuevoClienteRetencion(Boolean isPermisoNuevoClienteRetencion) {
		this.isPermisoNuevoClienteRetencion = isPermisoNuevoClienteRetencion;
	}

	public Boolean getIsPermisoActualizarClienteRetencion() {
		return isPermisoActualizarClienteRetencion;
	}

	public void setIsPermisoActualizarClienteRetencion(Boolean isPermisoActualizarClienteRetencion) {
		this.isPermisoActualizarClienteRetencion = isPermisoActualizarClienteRetencion;
	}

	public Boolean getIsPermisoEliminarClienteRetencion() {
		return isPermisoEliminarClienteRetencion;
	}

	public void setIsPermisoEliminarClienteRetencion(Boolean isPermisoEliminarClienteRetencion) {
		this.isPermisoEliminarClienteRetencion = isPermisoEliminarClienteRetencion;
	}

	public Boolean getIsPermisoGuardarCambiosClienteRetencion() {
		return isPermisoGuardarCambiosClienteRetencion;
	}

	public void setIsPermisoGuardarCambiosClienteRetencion(Boolean isPermisoGuardarCambiosClienteRetencion) {
		this.isPermisoGuardarCambiosClienteRetencion = isPermisoGuardarCambiosClienteRetencion;
	}
	
	public Boolean getIsPermisoConsultaClienteRetencion() {
		return isPermisoConsultaClienteRetencion;
	}

	public void setIsPermisoConsultaClienteRetencion(Boolean isPermisoConsultaClienteRetencion) {
		this.isPermisoConsultaClienteRetencion = isPermisoConsultaClienteRetencion;
	}

	public Boolean getIsPermisoBusquedaClienteRetencion() {
		return isPermisoBusquedaClienteRetencion;
	}

	public void setIsPermisoBusquedaClienteRetencion(Boolean isPermisoBusquedaClienteRetencion) {
		this.isPermisoBusquedaClienteRetencion = isPermisoBusquedaClienteRetencion;
	}

	public Boolean getIsPermisoReporteClienteRetencion() {
		return isPermisoReporteClienteRetencion;
	}

	public void setIsPermisoReporteClienteRetencion(Boolean isPermisoReporteClienteRetencion) {
		this.isPermisoReporteClienteRetencion = isPermisoReporteClienteRetencion;
	}
	
	public Boolean getIsPermisoPaginacionMedioClienteRetencion() {
		return isPermisoPaginacionMedioClienteRetencion;
	}

	public void setIsPermisoPaginacionMedioClienteRetencion(Boolean isPermisoPaginacionMedioClienteRetencion) {
		this.isPermisoPaginacionMedioClienteRetencion = isPermisoPaginacionMedioClienteRetencion;
	}
	
	public Boolean getIsPermisoPaginacionTodoClienteRetencion() {
		return isPermisoPaginacionTodoClienteRetencion;
	}

	public void setIsPermisoPaginacionTodoClienteRetencion(Boolean isPermisoPaginacionTodoClienteRetencion) {
		this.isPermisoPaginacionTodoClienteRetencion = isPermisoPaginacionTodoClienteRetencion;
	}
	
	public Boolean getIsPermisoPaginacionAltoClienteRetencion() {
		return isPermisoPaginacionAltoClienteRetencion;
	}

	public void setIsPermisoPaginacionAltoClienteRetencion(Boolean isPermisoPaginacionAltoClienteRetencion) {
		this.isPermisoPaginacionAltoClienteRetencion = isPermisoPaginacionAltoClienteRetencion;
	}
	
	public Boolean getIsPermisoCopiarClienteRetencion() {
		return isPermisoCopiarClienteRetencion;
	}

	public void setIsPermisoCopiarClienteRetencion(Boolean isPermisoCopiarClienteRetencion) {
		this.isPermisoCopiarClienteRetencion = isPermisoCopiarClienteRetencion;
	}
	
	public Boolean getIsPermisoVerFormClienteRetencion() {
		return isPermisoVerFormClienteRetencion;
	}

	public void setIsPermisoVerFormClienteRetencion(Boolean isPermisoVerFormClienteRetencion) {
		this.isPermisoVerFormClienteRetencion = isPermisoVerFormClienteRetencion;
	}
	
	public Boolean getIsPermisoDuplicarClienteRetencion() {
		return isPermisoDuplicarClienteRetencion;
	}

	public void setIsPermisoDuplicarClienteRetencion(Boolean isPermisoDuplicarClienteRetencion) {
		this.isPermisoDuplicarClienteRetencion = isPermisoDuplicarClienteRetencion;
	}
	
	public Boolean getIsPermisoOrdenClienteRetencion() {
		return isPermisoOrdenClienteRetencion;
	}

	public void setIsPermisoOrdenClienteRetencion(Boolean isPermisoOrdenClienteRetencion) {
		this.isPermisoOrdenClienteRetencion = isPermisoOrdenClienteRetencion;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoClienteRetencion() {
		return isVisibilidadCeldaNuevoClienteRetencion;
	}

	public void setIsVisibilidadCeldaNuevoClienteRetencion(Boolean isVisibilidadCeldaNuevoClienteRetencion) {
		this.isVisibilidadCeldaNuevoClienteRetencion = isVisibilidadCeldaNuevoClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarClienteRetencion() {
		return isVisibilidadCeldaDuplicarClienteRetencion;
	}

	public void setIsVisibilidadCeldaDuplicarClienteRetencion(Boolean isVisibilidadCeldaDuplicarClienteRetencion) {
		this.isVisibilidadCeldaDuplicarClienteRetencion = isVisibilidadCeldaDuplicarClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarClienteRetencion() {
		return isVisibilidadCeldaCopiarClienteRetencion;
	}

	public void setIsVisibilidadCeldaCopiarClienteRetencion(Boolean isVisibilidadCeldaCopiarClienteRetencion) {
		this.isVisibilidadCeldaCopiarClienteRetencion = isVisibilidadCeldaCopiarClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormClienteRetencion() {
		return isVisibilidadCeldaVerFormClienteRetencion;
	}

	public void setIsVisibilidadCeldaVerFormClienteRetencion(Boolean isVisibilidadCeldaVerFormClienteRetencion) {
		this.isVisibilidadCeldaVerFormClienteRetencion = isVisibilidadCeldaVerFormClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenClienteRetencion() {
		return isVisibilidadCeldaOrdenClienteRetencion;
	}

	public void setIsVisibilidadCeldaOrdenClienteRetencion(Boolean isVisibilidadCeldaOrdenClienteRetencion) {
		this.isVisibilidadCeldaOrdenClienteRetencion = isVisibilidadCeldaOrdenClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesClienteRetencion() {
		return isVisibilidadCeldaNuevoRelacionesClienteRetencion;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesClienteRetencion(Boolean isVisibilidadCeldaNuevoRelacionesClienteRetencion) {
		this.isVisibilidadCeldaNuevoRelacionesClienteRetencion = isVisibilidadCeldaNuevoRelacionesClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaModificarClienteRetencion() {
		return isVisibilidadCeldaModificarClienteRetencion;
	}

	public void setIsVisibilidadCeldaModificarClienteRetencion(Boolean isVisibilidadCeldaModificarClienteRetencion) {
		this.isVisibilidadCeldaModificarClienteRetencion = isVisibilidadCeldaModificarClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarClienteRetencion() {
		return isVisibilidadCeldaActualizarClienteRetencion;
	}

	public void setIsVisibilidadCeldaActualizarClienteRetencion(Boolean isVisibilidadCeldaActualizarClienteRetencion) {
		this.isVisibilidadCeldaActualizarClienteRetencion = isVisibilidadCeldaActualizarClienteRetencion;
	}

	public Boolean getIsVisibilidadCeldaEliminarClienteRetencion() {
		return isVisibilidadCeldaEliminarClienteRetencion;
	}

	public void setIsVisibilidadCeldaEliminarClienteRetencion(Boolean isVisibilidadCeldaEliminarClienteRetencion) {
		this.isVisibilidadCeldaEliminarClienteRetencion = isVisibilidadCeldaEliminarClienteRetencion;
	}

	public Boolean getIsVisibilidadCeldaCancelarClienteRetencion() {
		return isVisibilidadCeldaCancelarClienteRetencion;
	}

	public void setIsVisibilidadCeldaCancelarClienteRetencion(Boolean isVisibilidadCeldaCancelarClienteRetencion) {
		this.isVisibilidadCeldaCancelarClienteRetencion = isVisibilidadCeldaCancelarClienteRetencion;
	}

	public Boolean getIsVisibilidadCeldaGuardarClienteRetencion() {
		return isVisibilidadCeldaGuardarClienteRetencion;
	}

	public void setIsVisibilidadCeldaGuardarClienteRetencion(Boolean isVisibilidadCeldaGuardarClienteRetencion) {
		this.isVisibilidadCeldaGuardarClienteRetencion = isVisibilidadCeldaGuardarClienteRetencion;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosClienteRetencion() {
		return isVisibilidadCeldaGuardarCambiosClienteRetencion;
	}

	public void setIsVisibilidadCeldaGuardarCambiosClienteRetencion(Boolean isVisibilidadCeldaGuardarCambiosClienteRetencion) {
		this.isVisibilidadCeldaGuardarCambiosClienteRetencion = isVisibilidadCeldaGuardarCambiosClienteRetencion;
	}
		
	public ClienteRetencionSessionBean getclienteretencionSessionBean() {
		return this.clienteretencionSessionBean;
	}
	
	public void setclienteretencionSessionBean(ClienteRetencionSessionBean clienteretencionSessionBean) {
		this.clienteretencionSessionBean=clienteretencionSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableClienteRetencion() {
		return this.isVisibilidadFK_IdCuentaContableClienteRetencion;
	}

	public void setisVisibilidadFK_IdCuentaContableClienteRetencion(Boolean isVisibilidadFK_IdCuentaContableClienteRetencion) {
		this.isVisibilidadFK_IdCuentaContableClienteRetencion=isVisibilidadFK_IdCuentaContableClienteRetencion;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoRetencion() {
		return this.isVisibilidadFK_IdEstadoRetencion;
	}

	public void setisVisibilidadFK_IdEstadoRetencion(Boolean isVisibilidadFK_IdEstadoRetencion) {
		this.isVisibilidadFK_IdEstadoRetencion=isVisibilidadFK_IdEstadoRetencion;
	}

	public Boolean getisVisibilidadFK_IdFactura() {
		return this.isVisibilidadFK_IdFactura;
	}

	public void setisVisibilidadFK_IdFactura(Boolean isVisibilidadFK_IdFactura) {
		this.isVisibilidadFK_IdFactura=isVisibilidadFK_IdFactura;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoRetencion() {
		return this.isVisibilidadFK_IdTipoRetencion;
	}

	public void setisVisibilidadFK_IdTipoRetencion(Boolean isVisibilidadFK_IdTipoRetencion) {
		this.isVisibilidadFK_IdTipoRetencion=isVisibilidadFK_IdTipoRetencion;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(ClienteRetencion clienteretencion)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(clienteretencion,null);
				this.setActualParaGuardarSucursalForeignKey(clienteretencion,null);
				this.setActualParaGuardarEjercicioForeignKey(clienteretencion,null);
				this.setActualParaGuardarPeriodoForeignKey(clienteretencion,null);
				this.setActualParaGuardarAnioForeignKey(clienteretencion,null);
				this.setActualParaGuardarMesForeignKey(clienteretencion,null);
				this.setActualParaGuardarClienteForeignKey(clienteretencion,null);
				this.setActualParaGuardarFacturaForeignKey(clienteretencion,null);
				this.setActualParaGuardarTransaccionForeignKey(clienteretencion,null);
				this.setActualParaGuardarTipoRetencionForeignKey(clienteretencion,null);
				this.setActualParaGuardarAsientoContableForeignKey(clienteretencion,null);
				this.setActualParaGuardarCuentaContableClienteRetencionForeignKey(clienteretencion,null);
				this.setActualParaGuardarEstadoRetencionForeignKey(clienteretencion,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ClienteRetencion clienteretencion,ClienteRetencion clienteretencionAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalClienteRetencion(clienteretencion);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		clienteretencionAux.setId(clienteretencion.getId());
		clienteretencionAux.setVersionRow(clienteretencion.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessClienteRetencion();
		
			int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = clienteretencionValidator.getInvalidValues(this.clienteretencion);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			clienteretencionLogic.setDatosCliente(datosCliente);
			clienteretencionLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				clienteretencionAux=new  ClienteRetencion();
				
				clienteretencionAux.setIsNew(true);
				clienteretencionAux.setIsChanged(true);
				
				clienteretencionAux.setClienteRetencionOriginal(this.clienteretencion);
				
				clienteretencionAux.setId(this.clienteretencion.getId());	
				clienteretencionAux.setVersionRow(this.clienteretencion.getVersionRow());	
				clienteretencionAux.setid_empresa(this.clienteretencion.getid_empresa());	
				clienteretencionAux.setid_sucursal(this.clienteretencion.getid_sucursal());	
				clienteretencionAux.setid_ejercicio(this.clienteretencion.getid_ejercicio());	
				clienteretencionAux.setid_periodo(this.clienteretencion.getid_periodo());	
				clienteretencionAux.setid_anio(this.clienteretencion.getid_anio());	
				clienteretencionAux.setid_mes(this.clienteretencion.getid_mes());	
				clienteretencionAux.setfecha(this.clienteretencion.getfecha());	
				clienteretencionAux.setid_cliente(this.clienteretencion.getid_cliente());	
				
				if(this.clienteretencion.getid_factura()!=null && this.clienteretencion.getid_factura()>0L) {
					clienteretencionAux.setid_factura(this.clienteretencion.getid_factura());
				} else {
					clienteretencionAux.setid_factura(null);
				}	
				clienteretencionAux.setid_transaccion(this.clienteretencion.getid_transaccion());	
				clienteretencionAux.setid_tipo_retencion(this.clienteretencion.getid_tipo_retencion());	
				clienteretencionAux.setporcentaje(this.clienteretencion.getporcentaje());	
				clienteretencionAux.setbase_imponible(this.clienteretencion.getbase_imponible());	
				clienteretencionAux.setvalor(this.clienteretencion.getvalor());	
				clienteretencionAux.setnumero_retencion(this.clienteretencion.getnumero_retencion());	
				clienteretencionAux.setdescripcion(this.clienteretencion.getdescripcion());	
				clienteretencionAux.setid_asiento_contable(this.clienteretencion.getid_asiento_contable());	
				clienteretencionAux.setid_cuenta_contable_retencion(this.clienteretencion.getid_cuenta_contable_retencion());	
				clienteretencionAux.setvalor_tipo_cambio(this.clienteretencion.getvalor_tipo_cambio());	
				clienteretencionAux.setdebito_mone_local(this.clienteretencion.getdebito_mone_local());	
				clienteretencionAux.setcredito_mone_local(this.clienteretencion.getcredito_mone_local());	
				clienteretencionAux.setdebito_mone_extra(this.clienteretencion.getdebito_mone_extra());	
				clienteretencionAux.setcredito_mone_extra(this.clienteretencion.getcredito_mone_extra());	
				clienteretencionAux.setbeneficiario(this.clienteretencion.getbeneficiario());	
				clienteretencionAux.setnombre_benef(this.clienteretencion.getnombre_benef());	
				clienteretencionAux.setdireccion_benef(this.clienteretencion.getdireccion_benef());	
				clienteretencionAux.settelefono_benef(this.clienteretencion.gettelefono_benef());	
				clienteretencionAux.setruc_benef(this.clienteretencion.getruc_benef());	
				clienteretencionAux.setid_estado_retencion(this.clienteretencion.getid_estado_retencion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(clienteretencionAux,clienteretencionLogic.getClienteRetencions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteretencionAux,clienteretencions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.saveClienteRetencions();//WithConnection
						//clienteretencionLogic.getSetVersionRowClienteRetencions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.clienteretencion,clienteretencionAux);
					
					this.refrescarForeignKeysDescripcionesClienteRetencion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								clienteretencionLogic.saveClienteRetencionRelaciones(clienteretencionAux);//WithConnection
								//clienteretencionLogic.getSetVersionRowClienteRetencions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.clienteretencion,clienteretencionAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(clienteretencionAux,clienteretencionLogic.getClienteRetencions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(clienteretencionAux,clienteretencions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.clienteretencion,clienteretencionAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				clienteretencionAux=new  ClienteRetencion();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.clienteretencionSessionBean.getEsGuardarRelacionado() 
					|| (this.clienteretencionSessionBean.getEsGuardarRelacionado() && this.clienteretencion.getId()>=0)) {
						
					clienteretencionAux.setIsNew(false);
				}
				
				clienteretencionAux.setIsDeleted(false);
			
				clienteretencionAux.setId(this.clienteretencion.getId());	
				clienteretencionAux.setVersionRow(this.clienteretencion.getVersionRow());	
				clienteretencionAux.setid_empresa(this.clienteretencion.getid_empresa());	
				clienteretencionAux.setid_sucursal(this.clienteretencion.getid_sucursal());	
				clienteretencionAux.setid_ejercicio(this.clienteretencion.getid_ejercicio());	
				clienteretencionAux.setid_periodo(this.clienteretencion.getid_periodo());	
				clienteretencionAux.setid_anio(this.clienteretencion.getid_anio());	
				clienteretencionAux.setid_mes(this.clienteretencion.getid_mes());	
				clienteretencionAux.setfecha(this.clienteretencion.getfecha());	
				clienteretencionAux.setid_cliente(this.clienteretencion.getid_cliente());	
				
				if(this.clienteretencion.getid_factura()!=null && this.clienteretencion.getid_factura()>0L) {
					clienteretencionAux.setid_factura(this.clienteretencion.getid_factura());
				} else {
					clienteretencionAux.setid_factura(null);
				}	
				clienteretencionAux.setid_transaccion(this.clienteretencion.getid_transaccion());	
				clienteretencionAux.setid_tipo_retencion(this.clienteretencion.getid_tipo_retencion());	
				clienteretencionAux.setporcentaje(this.clienteretencion.getporcentaje());	
				clienteretencionAux.setbase_imponible(this.clienteretencion.getbase_imponible());	
				clienteretencionAux.setvalor(this.clienteretencion.getvalor());	
				clienteretencionAux.setnumero_retencion(this.clienteretencion.getnumero_retencion());	
				clienteretencionAux.setdescripcion(this.clienteretencion.getdescripcion());	
				clienteretencionAux.setid_asiento_contable(this.clienteretencion.getid_asiento_contable());	
				clienteretencionAux.setid_cuenta_contable_retencion(this.clienteretencion.getid_cuenta_contable_retencion());	
				clienteretencionAux.setvalor_tipo_cambio(this.clienteretencion.getvalor_tipo_cambio());	
				clienteretencionAux.setdebito_mone_local(this.clienteretencion.getdebito_mone_local());	
				clienteretencionAux.setcredito_mone_local(this.clienteretencion.getcredito_mone_local());	
				clienteretencionAux.setdebito_mone_extra(this.clienteretencion.getdebito_mone_extra());	
				clienteretencionAux.setcredito_mone_extra(this.clienteretencion.getcredito_mone_extra());	
				clienteretencionAux.setbeneficiario(this.clienteretencion.getbeneficiario());	
				clienteretencionAux.setnombre_benef(this.clienteretencion.getnombre_benef());	
				clienteretencionAux.setdireccion_benef(this.clienteretencion.getdireccion_benef());	
				clienteretencionAux.settelefono_benef(this.clienteretencion.gettelefono_benef());	
				clienteretencionAux.setruc_benef(this.clienteretencion.getruc_benef());	
				clienteretencionAux.setid_estado_retencion(this.clienteretencion.getid_estado_retencion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(clienteretencionAux,clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteretencionAux,clienteretencions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.saveClienteRetencions();//WithConnection
						//clienteretencionLogic.getSetVersionRowClienteRetencions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.clienteretencion,clienteretencionAux);
					
					this.refrescarForeignKeysDescripcionesClienteRetencion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								clienteretencionLogic.saveClienteRetencionRelaciones(clienteretencionAux);//WithConnection
								//clienteretencionLogic.getSetVersionRowClienteRetencions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.clienteretencion,clienteretencionAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(clienteretencionAux,clienteretencionLogic.getClienteRetencions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(clienteretencionAux,clienteretencions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.clienteretencion,clienteretencionAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				clienteretencionAux=new  ClienteRetencion();
				
				clienteretencionAux.setIsNew(false);
				clienteretencionAux.setIsChanged(false);
				
				clienteretencionAux.setIsDeleted(true);
				
				clienteretencionAux.setId(this.clienteretencion.getId());	
				clienteretencionAux.setVersionRow(this.clienteretencion.getVersionRow());	
				clienteretencionAux.setid_empresa(this.clienteretencion.getid_empresa());	
				clienteretencionAux.setid_sucursal(this.clienteretencion.getid_sucursal());	
				clienteretencionAux.setid_ejercicio(this.clienteretencion.getid_ejercicio());	
				clienteretencionAux.setid_periodo(this.clienteretencion.getid_periodo());	
				clienteretencionAux.setid_anio(this.clienteretencion.getid_anio());	
				clienteretencionAux.setid_mes(this.clienteretencion.getid_mes());	
				clienteretencionAux.setfecha(this.clienteretencion.getfecha());	
				clienteretencionAux.setid_cliente(this.clienteretencion.getid_cliente());	
				
				if(this.clienteretencion.getid_factura()!=null && this.clienteretencion.getid_factura()>0L) {
					clienteretencionAux.setid_factura(this.clienteretencion.getid_factura());
				} else {
					clienteretencionAux.setid_factura(null);
				}	
				clienteretencionAux.setid_transaccion(this.clienteretencion.getid_transaccion());	
				clienteretencionAux.setid_tipo_retencion(this.clienteretencion.getid_tipo_retencion());	
				clienteretencionAux.setporcentaje(this.clienteretencion.getporcentaje());	
				clienteretencionAux.setbase_imponible(this.clienteretencion.getbase_imponible());	
				clienteretencionAux.setvalor(this.clienteretencion.getvalor());	
				clienteretencionAux.setnumero_retencion(this.clienteretencion.getnumero_retencion());	
				clienteretencionAux.setdescripcion(this.clienteretencion.getdescripcion());	
				clienteretencionAux.setid_asiento_contable(this.clienteretencion.getid_asiento_contable());	
				clienteretencionAux.setid_cuenta_contable_retencion(this.clienteretencion.getid_cuenta_contable_retencion());	
				clienteretencionAux.setvalor_tipo_cambio(this.clienteretencion.getvalor_tipo_cambio());	
				clienteretencionAux.setdebito_mone_local(this.clienteretencion.getdebito_mone_local());	
				clienteretencionAux.setcredito_mone_local(this.clienteretencion.getcredito_mone_local());	
				clienteretencionAux.setdebito_mone_extra(this.clienteretencion.getdebito_mone_extra());	
				clienteretencionAux.setcredito_mone_extra(this.clienteretencion.getcredito_mone_extra());	
				clienteretencionAux.setbeneficiario(this.clienteretencion.getbeneficiario());	
				clienteretencionAux.setnombre_benef(this.clienteretencion.getnombre_benef());	
				clienteretencionAux.setdireccion_benef(this.clienteretencion.getdireccion_benef());	
				clienteretencionAux.settelefono_benef(this.clienteretencion.gettelefono_benef());	
				clienteretencionAux.setruc_benef(this.clienteretencion.getruc_benef());	
				clienteretencionAux.setid_estado_retencion(this.clienteretencion.getid_estado_retencion());	
				
				if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.clienteretencionAux.getId()>=0) {	
						this.clienteretencionsEliminados.add(clienteretencionAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(clienteretencionAux,clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteretencionAux,clienteretencions);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.saveClienteRetencions();//WithConnection
						//clienteretencionLogic.getSetVersionRowClienteRetencions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								clienteretencionLogic.saveClienteRetencionRelaciones(clienteretencionAux);//WithConnection
								//clienteretencionLogic.getSetVersionRowClienteRetencions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
								|| this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(clienteretencionAux,clienteretencionLogic.getClienteRetencions());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(clienteretencionAux,clienteretencions);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getClienteRetencions().addAll(this.clienteretencionsEliminados);
					
					clienteretencionLogic.saveClienteRetencions();//WithConnection
					//clienteretencionLogic.getSetVersionRowClienteRetencions();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesClienteRetencion();
				
				this.clienteretencionsEliminados= new ArrayList<ClienteRetencion>();		
			}
			
			if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Retencion GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.clienteretencion=clienteretencionAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessClienteRetencion();
      	}
		
	}	
	
	public void actualizarRelaciones(ClienteRetencion clienteretencionLocal) throws Exception {
		
		if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ClienteRetencion clienteretencionLocal) throws Exception {	
		if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				clienteretencionLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				clienteretencionLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				clienteretencionLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				clienteretencionLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				clienteretencionLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				clienteretencionLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				clienteretencionLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FacturaDetalleFormJInternalFrame.class)) {
				FacturaBeanSwingJInternalFrame facturaBeanSwingJInternalFrameLocal=(FacturaBeanSwingJInternalFrame) ((FacturaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				facturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFactura(facturaBeanSwingJInternalFrameLocal.getfactura(),true);
				facturaBeanSwingJInternalFrameLocal.actualizarLista(facturaBeanSwingJInternalFrameLocal.factura,this.facturasForeignKey);

				facturaBeanSwingJInternalFrameLocal.actualizarRelaciones(facturaBeanSwingJInternalFrameLocal.factura);

				clienteretencionLocal.setFactura(facturaBeanSwingJInternalFrameLocal.factura);

				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey("Formulario");
				this.setActualFacturaForeignKey(facturaBeanSwingJInternalFrameLocal.factura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				clienteretencionLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRetencionDetalleFormJInternalFrame.class)) {
				TipoRetencionBeanSwingJInternalFrame tiporetencionBeanSwingJInternalFrameLocal=(TipoRetencionBeanSwingJInternalFrame) ((TipoRetencionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporetencionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRetencion(tiporetencionBeanSwingJInternalFrameLocal.gettiporetencion(),true);
				tiporetencionBeanSwingJInternalFrameLocal.actualizarLista(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion,this.tiporetencionsForeignKey);

				tiporetencionBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion);

				clienteretencionLocal.setTipoRetencion(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion);

				this.addItemDefectoCombosForeignKeyTipoRetencion();
				this.cargarCombosFrameTipoRetencionsForeignKey("Formulario");
				this.setActualTipoRetencionForeignKey(tiporetencionBeanSwingJInternalFrameLocal.tiporetencion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				clienteretencionLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableclienteretencionBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableclienteretencionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableclienteretencionBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableclienteretencionBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableclienteretencionBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableclienteretencionsForeignKey);

				cuentacontableclienteretencionBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableclienteretencionBeanSwingJInternalFrameLocal.cuentacontable);

				clienteretencionLocal.setCuentaContableClienteRetencion(cuentacontableclienteretencionBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableClienteRetencion();
				this.cargarCombosFrameCuentaContableClienteRetencionsForeignKey("Formulario");
				this.setActualCuentaContableClienteRetencionForeignKey(cuentacontableclienteretencionBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoRetencionDetalleFormJInternalFrame.class)) {
				EstadoRetencionBeanSwingJInternalFrame estadoretencionBeanSwingJInternalFrameLocal=(EstadoRetencionBeanSwingJInternalFrame) ((EstadoRetencionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoretencionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoRetencion(estadoretencionBeanSwingJInternalFrameLocal.getestadoretencion(),true);
				estadoretencionBeanSwingJInternalFrameLocal.actualizarLista(estadoretencionBeanSwingJInternalFrameLocal.estadoretencion,this.estadoretencionsForeignKey);

				estadoretencionBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoretencionBeanSwingJInternalFrameLocal.estadoretencion);

				clienteretencionLocal.setEstadoRetencion(estadoretencionBeanSwingJInternalFrameLocal.estadoretencion);

				this.addItemDefectoCombosForeignKeyEstadoRetencion();
				this.cargarCombosFrameEstadoRetencionsForeignKey("Formulario");
				this.setActualEstadoRetencionForeignKey(estadoretencionBeanSwingJInternalFrameLocal.estadoretencion.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarClienteRetencionActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = clienteretencionValidator.getInvalidValues(this.clienteretencion);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ClienteRetencion clienteretencion,List<ClienteRetencion> clienteretencions) throws Exception {
		try	{		
			ClienteRetencionConstantesFunciones.actualizarLista(clienteretencion,clienteretencions,this.clienteretencionSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ClienteRetencion clienteretencion,List<ClienteRetencion> clienteretencions) throws Exception {
		try	{			
			ClienteRetencionConstantesFunciones.actualizarSelectedLista(clienteretencion,clienteretencions);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ClienteRetencion> clienteretencionsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				clienteretencionsLocal=this.clienteretencionLogic.getClienteRetencions();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				clienteretencionsLocal=this.clienteretencions;
			}
			//ARCHITECTURE
		
			for(ClienteRetencion clienteretencionLocal:clienteretencionsLocal) {
				if(this.permiteMantenimiento(clienteretencionLocal) && clienteretencionLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ClienteRetencionConstantesFunciones.getClienteRetencionLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_empresaClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_sucursalClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_ejercicioClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_periodoClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_anioClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_mesClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelfechaClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_clienteClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_facturaClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_transaccionClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDTIPORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_tipo_retencionClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelporcentajeClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.BASEIMPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelbase_imponibleClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.VALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelvalorClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.NUMERORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelnumero_retencionClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabeldescripcionClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_asiento_contableClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDCUENTACONTABLECLIENTERETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_cuenta_contable_retencionClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.VALORTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelvalor_tipo_cambioClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.DEBITOMONELOCAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabeldebito_mone_localClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.CREDITOMONELOCAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelcredito_mone_localClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.DEBITOMONEEXTRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabeldebito_mone_extraClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.CREDITOMONEEXTRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelcredito_mone_extraClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.BENEFICIARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelbeneficiarioClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.NOMBREBENEF)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelnombre_benefClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.DIRECCIONBENEF)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabeldireccion_benefClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.TELEFONOBENEF)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabeltelefono_benefClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.RUCBENEF)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelruc_benefClienteRetencion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ClienteRetencionConstantesFunciones.IDESTADORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_estado_retencionClienteRetencion,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_empresaClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_sucursalClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_ejercicioClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_periodoClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_anioClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_mesClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelfechaClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_clienteClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_facturaClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_transaccionClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_tipo_retencionClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelporcentajeClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelbase_imponibleClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelvalorClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelnumero_retencionClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabeldescripcionClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_asiento_contableClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_cuenta_contable_retencionClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelvalor_tipo_cambioClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabeldebito_mone_localClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelcredito_mone_localClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabeldebito_mone_extraClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelcredito_mone_extraClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelbeneficiarioClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelnombre_benefClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabeldireccion_benefClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabeltelefono_benefClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelruc_benefClienteRetencion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormClienteRetencion.jLabelid_estado_retencionClienteRetencion,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoClienteRetencion--;	
		
		
		this.clienteretencionAux=new ClienteRetencion();
		
		this.clienteretencionAux.setId(this.iIdNuevoClienteRetencion);
		this.clienteretencionAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.clienteretencionLogic.getClienteRetencions().add(this.clienteretencionAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.clienteretencions.add(this.clienteretencionAux);
		}
		//ARCHITECTURE
		
		this.clienteretencion=this.clienteretencionAux;
		
		if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioClienteRetencion(this.clienteretencion);
			this.setVariablesObjetoActualToFormularioForeignKeyClienteRetencion(this.clienteretencion);
		}
				
		//this.setDefaultControlesClienteRetencion();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyClienteRetencion();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyClienteRetencion();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyClienteRetencion();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualClienteRetencion(this.clienteretencionBean,this.clienteretencion,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ClienteRetencionConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
			classes=ClienteRetencionConstantesFunciones.getClassesRelationshipsOfClienteRetencion(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.clienteretencionReturnGeneral=clienteretencionLogic.procesarEventosClienteRetencionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.clienteretencionLogic.getClienteRetencions(),this.clienteretencion,this.clienteretencionParameterGeneral,this.isEsNuevoClienteRetencion,classes);//this.clienteretencionLogic.getClienteRetencion()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanClienteRetencion(this.clienteretencionReturnGeneral,this.clienteretencionBean,false);
		
		if(this.clienteretencionReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyClienteRetencion(this.clienteretencionReturnGeneral.getClienteRetencion());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioClienteRetencion(this.clienteretencionReturnGeneral.getClienteRetencion());
		}
		
		if(this.clienteretencionReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioClienteRetencion(this.clienteretencionReturnGeneral.getClienteRetencion(),classes);//this.clienteretencionBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyClienteRetencion();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyClienteRetencion();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.RecargarFormClienteRetencion(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingClienteRetencion(false);
						
			if(clienteretencionSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualClienteRetencion();
			}
			
			this.actualizarVisualTableDatosClienteRetencion();
			
			this.jTableDatosClienteRetencion.setRowSelectionInterval(this.getIndiceNuevoClienteRetencion(), this.getIndiceNuevoClienteRetencion());
			
			this.seleccionarFilaTablaClienteRetencionActual();
						
			this.actualizarEstadoCeldasBotonesClienteRetencion("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesClienteRetencion(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarfechaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarporcentajeClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarbase_imponibleClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarvalorClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarnumero_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activardescripcionClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalor_tipo_cambioClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarvalor_tipo_cambioClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_localClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activardebito_mone_localClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_localClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarcredito_mone_localClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_extraClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activardebito_mone_extraClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_extraClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarcredito_mone_extraClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreabeneficiarioClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarbeneficiarioClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreanombre_benefClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarnombre_benefClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreadireccion_benefClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activardireccion_benefClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreatelefono_benefClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activartelefono_benefClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldruc_benefClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarruc_benefClienteRetencion);	
		//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_empresaClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_sucursalClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_ejercicioClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_periodoClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_anioClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_mesClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_clienteClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_facturaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_transaccionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_tipo_retencionClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_asiento_contableClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_cuenta_contable_retencionClienteRetencion);//
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setEnabled(isHabilitar && this.clienteretencionConstantesFunciones.activarid_estado_retencionClienteRetencion);
	};
	
	public void setDefaultControlesClienteRetencion() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoClienteRetencion(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.clienteretencionSessionBean.setConGuardarRelaciones(true);			
			this.clienteretencionSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.setVisible(true);
			
					
		} else {
			//this.clienteretencionSessionBean.setConGuardarRelaciones(false);			
			this.clienteretencionSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoClienteRetencion() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
				if(clienteretencionAux.getId().equals(this.iIdNuevoClienteRetencion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ClienteRetencion clienteretencionAux:this.clienteretencions) {
				if(clienteretencionAux.getId().equals(this.iIdNuevoClienteRetencion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualClienteRetencion(ClienteRetencion clienteretencion,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
				if(clienteretencionAux.getId().equals(clienteretencion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ClienteRetencion clienteretencionAux:this.clienteretencions) {
				if(clienteretencionAux.getId().equals(clienteretencion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalClienteRetencion(ClienteRetencion clienteretencionOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
				if(clienteretencionAux.getClienteRetencionOriginal().getId().equals(clienteretencionOriginal.getId())) {
					existe=true;
					clienteretencionOriginal.setId(clienteretencionAux.getId());
					clienteretencionOriginal.setVersionRow(clienteretencionAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ClienteRetencion clienteretencionAux:this.clienteretencions) {
				if(clienteretencionAux.getClienteRetencionOriginal().getId().equals(clienteretencionOriginal.getId())) {
					existe=true;
					clienteretencionOriginal.setId(clienteretencionAux.getId());
					clienteretencionOriginal.setVersionRow(clienteretencionAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosClienteRetencion(Boolean esParaCancelar) throws Exception {
		clienteretencionsAux=new ArrayList<ClienteRetencion>();
		clienteretencionAux=new ClienteRetencion();
		
		if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
					if(clienteretencionAux.getId()<0) {
						clienteretencionsAux.add(clienteretencionAux);
					}		
				}
				this.iIdNuevoClienteRetencion=0L;
				this.clienteretencionLogic.getClienteRetencions().removeAll(clienteretencionsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ClienteRetencion clienteretencionAux:this.clienteretencions) {
					if(clienteretencionAux.getId()<0) {
						clienteretencionsAux.add(clienteretencionAux);
					}		
				}
				this.iIdNuevoClienteRetencion=0L;
				this.clienteretencions.removeAll(clienteretencionsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoClienteRetencion 
					&& this.clienteretencionLogic.getClienteRetencions().size()>0
					) {
					clienteretencionAux=this.clienteretencionLogic.getClienteRetencions().get(this.clienteretencionLogic.getClienteRetencions().size() - 1);
				
					if(clienteretencionAux.getId()<0) {
						this.clienteretencionLogic.getClienteRetencions().remove(clienteretencionAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoClienteRetencion && this.clienteretencions.size()>0) {
					clienteretencionAux=this.clienteretencions.get(this.clienteretencions.size() - 1);
				
					if(clienteretencionAux.getId()<0) {
						this.clienteretencions.remove(clienteretencionAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoClienteRetencion(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(clienteretencion.getId()<0) {
				this.clienteretencionLogic.getClienteRetencions().remove(this.clienteretencion);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(clienteretencion.getId()<0) {
				this.clienteretencions.remove(this.clienteretencion);
			}
		}			
	}
	
	public void setEstadosInicialesClienteRetencion(List<ClienteRetencion> clienteretencionsAux) throws Exception {
		ClienteRetencionConstantesFunciones.setEstadosInicialesClienteRetencion(clienteretencionsAux);
	}
	
	public void setEstadosInicialesClienteRetencion(ClienteRetencion clienteretencionAux) throws Exception {
		ClienteRetencionConstantesFunciones.setEstadosInicialesClienteRetencion(clienteretencionAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarClienteRetencionActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesClienteRetencion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarClienteRetencionActual()) {
				if(!this.isEsNuevoClienteRetencion) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesClienteRetencion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoClienteRetencion=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarClienteRetencionActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Retencion ?", "MANTENIMIENTO DE Retencion", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesClienteRetencion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ClienteRetencion clienteretencion) throws Exception {
		ClienteRetencionConstantesFunciones.seleccionarAsignar(this.clienteretencion,clienteretencion);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarClienteRetencion=this.isPermisoActualizarOriginalClienteRetencion;
			
			
			this.seleccionarAsignar(clienteretencion);
			
			

			idClienteActual=clienteretencion.getid_cliente();
			this.seleccionarClienteActual();

			idFacturaActual=clienteretencion.getid_factura();
			this.seleccionarFacturaActual();

			idAsientoContableActual=clienteretencion.getid_asiento_contable();
			this.seleccionarAsientoContableActual();

			idCuentaContableClienteRetencionActual=clienteretencion.getid_cuenta_contable_retencion();
			this.seleccionarCuentaContableClienteRetencionActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ClienteRetencionConstantesFunciones.quitarEspaciosClienteRetencion(this.clienteretencion,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesClienteRetencion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.clienteretencionSessionBean.setsFuncionBusquedaRapida(this.clienteretencionSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarFacturaActual() throws Exception {
		try	{
			Factura facturaAux=new Factura();

			if(this.idFacturaActual != null && this.idFacturaActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(this.idFacturaActual);
					facturaAux= facturaLogic.getFactura();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				facturasForeignKey=new ArrayList<Factura>();
				facturasForeignKey.add(facturaAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableClienteRetencionActual() throws Exception {
		try	{
			CuentaContable cuentacontableclienteretencionAux=new CuentaContable();

			if(this.idCuentaContableClienteRetencionActual != null && this.idCuentaContableClienteRetencionActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableclienteretencionLogic.getEntityWithConnection(this.idCuentaContableClienteRetencionActual);
					cuentacontableclienteretencionAux= cuentacontableclienteretencionLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableclienteretencionsForeignKey=new ArrayList<CuentaContable>();
				cuentacontableclienteretencionsForeignKey.add(cuentacontableclienteretencionAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoClienteRetencion) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosClienteRetencion(esParaCancelar);				
				this.cancelarNuevoClienteRetencion(esParaCancelar);								
			}
			
			this.clienteretencion=new ClienteRetencion();
			
			this.inicializarClienteRetencion();
			
			this.actualizarEstadoCeldasBotonesClienteRetencion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarClienteRetencion() throws Exception {
		try {
			ClienteRetencionConstantesFunciones.inicializarClienteRetencion(this.clienteretencion);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.clienteretencionLogic.getClienteRetencions().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteClienteRetencions(String sAccionBusqueda,List<ClienteRetencion> clienteretencionsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ClienteRetencion"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ClienteRetencionMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ClienteRetencionMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ClienteRetencion"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Retenciones");		
		parameters.put("busquedapor", ClienteRetencionConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceClienteRetencion=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ClienteRetencionConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ClienteRetencionConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceClienteRetencion=new JRBeanArrayDataSource(ClienteRetencionJInternalFrame.TraerClienteRetencionBeans(clienteretencionsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceClienteRetencion);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ClienteRetencionConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ClienteRetencionConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ClienteRetencionBean.TraerClienteRetencionBeans(clienteretencionsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteClienteRetencions(sAccionBusqueda,sTipoArchivoReporte,clienteretencionsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalClienteRetencions(sAccionBusqueda,sTipoArchivoReporte,clienteretencionsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoClienteRetencionActionPerformed(null);
					//this.generarExcelReporteClienteRetencions(sAccionBusqueda,sTipoArchivoReporte,clienteretencionsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalClienteRetencions(sAccionBusqueda,sTipoArchivoReporte,clienteretencionsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesClienteRetencions(sAccionBusqueda,sTipoArchivoReporte,clienteretencionsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesClienteRetencions(sAccionBusqueda,sTipoArchivoReporte,clienteretencionsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteClienteRetencions(String sAccionBusqueda,String sTipoArchivoReporte,List<ClienteRetencion> clienteretencionsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"clienteretencion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ClienteRetencions");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderClienteRetencion("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ClienteRetencion clienteretencion : clienteretencionsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ClienteRetencionConstantesFunciones.generarExcelReporteDataClienteRetencion("NORMAL",row,workbook,clienteretencion,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderClienteRetencion(String sTipo,Row row,Workbook workbook) {
		
		ClienteRetencionConstantesFunciones.generarExcelReporteHeaderClienteRetencion(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalClienteRetencions(String sAccionBusqueda,String sTipoArchivoReporte,List<ClienteRetencion> clienteretencionsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"clienteretencion_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ClienteRetencions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ClienteRetencion clienteretencion : clienteretencionsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ClienteRetencionConstantesFunciones.getClienteRetencionDescripcion(clienteretencion));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.gettiporetencion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getporcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getbase_imponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_VALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_VALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getvalor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getnumero_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getcuentacontableclienteretencion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getvalor_tipo_cambio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getdebito_mone_local());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getcredito_mone_local());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getdebito_mone_extra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getcredito_mone_extra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getbeneficiario());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getnombre_benef());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getdireccion_benef());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.gettelefono_benef());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_RUCBENEF))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_RUCBENEF);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getruc_benef());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(clienteretencion.getestadoretencion_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesClienteRetencions(String sAccionBusqueda,String sTipoArchivoReporte,List<ClienteRetencion> clienteretencionsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ClienteRetencion> clienteretencionsRespaldo=null;
		
		classes=ClienteRetencionConstantesFunciones.getClassesRelationshipsOfClienteRetencion(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.clienteretencionLogic.setDatosCliente(this.datosCliente);
		this.clienteretencionLogic.setDatosDeep(this.datosDeep);
		this.clienteretencionLogic.setIsConDeep(true);
		
		clienteretencionsRespaldo=this.clienteretencionLogic.getClienteRetencions();
		
		this.clienteretencionLogic.setClienteRetencions(clienteretencionsParaReportes);	
		this.clienteretencionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		clienteretencionsParaReportes=this.clienteretencionLogic.getClienteRetencions();
		this.clienteretencionLogic.setClienteRetencions(clienteretencionsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"clienteretencion_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ClienteRetencions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderClienteRetencion("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ClienteRetencion clienteretencion : clienteretencionsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderClienteRetencion("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ClienteRetencionConstantesFunciones.generarExcelReporteDataClienteRetencion("NORMAL",row,workbook,clienteretencion,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ClienteRetencionConstantesFunciones.getClienteRetencionDescripcion(clienteretencion));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoClienteRetencion.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessClienteRetencion() throws Exception {		
		this.startProcessClienteRetencion(true);
	}
	
	public void startProcessClienteRetencion(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasClienteRetencion ,this.jPanelParametrosReportesClienteRetencion, this.jScrollPanelDatosClienteRetencion,this.jPanelPaginacionClienteRetencion, this.jScrollPanelDatosEdicionClienteRetencion, this.jPanelAccionesClienteRetencion,this.jPanelAccionesFormularioClienteRetencion,this.jmenuBarClienteRetencion,this.jmenuBarDetalleClienteRetencion,this.jTtoolBarClienteRetencion,this.jTtoolBarDetalleClienteRetencion);		
		
		final JTabbedPane jTabbedPaneBusquedasClienteRetencion=this.jTabbedPaneBusquedasClienteRetencion; 
		
		final JPanel jPanelParametrosReportesClienteRetencion=this.jPanelParametrosReportesClienteRetencion;
		//final JScrollPane jScrollPanelDatosClienteRetencion=this.jScrollPanelDatosClienteRetencion;
		final JTable jTableDatosClienteRetencion=this.jTableDatosClienteRetencion;		
		final JPanel jPanelPaginacionClienteRetencion=this.jPanelPaginacionClienteRetencion;
		//final JScrollPane jScrollPanelDatosEdicionClienteRetencion=this.jScrollPanelDatosEdicionClienteRetencion;
		final JPanel jPanelAccionesClienteRetencion=this.jPanelAccionesClienteRetencion;
		
		JPanel jPanelCamposAuxiliarClienteRetencion=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarClienteRetencion=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			jPanelCamposAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jPanelCamposClienteRetencion;
			jPanelAccionesFormularioAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jPanelAccionesFormularioClienteRetencion;
		}
		
		final JPanel jPanelCamposClienteRetencion=jPanelCamposAuxiliarClienteRetencion;
		final JPanel jPanelAccionesFormularioClienteRetencion=jPanelAccionesFormularioAuxiliarClienteRetencion;
		
		
		final JMenuBar jmenuBarClienteRetencion=this.jmenuBarClienteRetencion;
		final JToolBar jTtoolBarClienteRetencion=this.jTtoolBarClienteRetencion;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarClienteRetencion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarClienteRetencion=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			jmenuBarDetalleAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jmenuBarDetalleClienteRetencion;
			jTtoolBarDetalleAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jTtoolBarDetalleClienteRetencion;
		}
		
		final JMenuBar jmenuBarDetalleClienteRetencion=jmenuBarDetalleAuxiliarClienteRetencion;
		final JToolBar jTtoolBarDetalleClienteRetencion=jTtoolBarDetalleAuxiliarClienteRetencion;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasClienteRetencion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesClienteRetencion;
			processRunnable.jTableDatos=jTableDatosClienteRetencion;
			processRunnable.jPanelCampos=jPanelCamposClienteRetencion;
			processRunnable.jPanelPaginacion=jPanelPaginacionClienteRetencion;
			processRunnable.jPanelAcciones=jPanelAccionesClienteRetencion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioClienteRetencion;
			
			
			processRunnable.jmenuBar=jmenuBarClienteRetencion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleClienteRetencion;
			processRunnable.jTtoolBar=jTtoolBarClienteRetencion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleClienteRetencion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasClienteRetencion ,jPanelParametrosReportesClienteRetencion,jTableDatosClienteRetencion, /*jScrollPanelDatosClienteRetencion,*/jPanelCamposClienteRetencion,jPanelPaginacionClienteRetencion, /*jScrollPanelDatosEdicionClienteRetencion,*/ jPanelAccionesClienteRetencion,jPanelAccionesFormularioClienteRetencion,jmenuBarClienteRetencion,jmenuBarDetalleClienteRetencion,jTtoolBarClienteRetencion,jTtoolBarDetalleClienteRetencion);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasClienteRetencion ,jPanelParametrosReportesClienteRetencion, jScrollPanelDatosClienteRetencion,jPanelPaginacionClienteRetencion, jScrollPanelDatosEdicionClienteRetencion, jPanelAccionesClienteRetencion,jPanelAccionesFormularioClienteRetencion,jmenuBarClienteRetencion,jmenuBarDetalleClienteRetencion,jTtoolBarClienteRetencion,jTtoolBarDetalleClienteRetencion);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessClienteRetencion() {// throws Exception 
		this.finishProcessClienteRetencion(true);
	}
	
	public void finishProcessClienteRetencion(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasClienteRetencion ,this.jPanelParametrosReportesClienteRetencion, this.jScrollPanelDatosClienteRetencion,this.jPanelPaginacionClienteRetencion, this.jScrollPanelDatosEdicionClienteRetencion, this.jPanelAccionesClienteRetencion,this.jPanelAccionesFormularioClienteRetencion,this.jmenuBarClienteRetencion,this.jmenuBarDetalleClienteRetencion,this.jTtoolBarClienteRetencion,this.jTtoolBarDetalleClienteRetencion);		
		
		final JTabbedPane jTabbedPaneBusquedasClienteRetencion=this.jTabbedPaneBusquedasClienteRetencion; 
		
		final JPanel jPanelParametrosReportesClienteRetencion=this.jPanelParametrosReportesClienteRetencion;
		//final JScrollPane jScrollPanelDatosClienteRetencion=this.jScrollPanelDatosClienteRetencion;
		final JTable jTableDatosClienteRetencion=this.jTableDatosClienteRetencion;		
		final JPanel jPanelPaginacionClienteRetencion=this.jPanelPaginacionClienteRetencion;
		//final JScrollPane jScrollPanelDatosEdicionClienteRetencion=this.jScrollPanelDatosEdicionClienteRetencion;
		final JPanel jPanelAccionesClienteRetencion=this.jPanelAccionesClienteRetencion;
		
		JPanel jPanelCamposAuxiliarClienteRetencion=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarClienteRetencion=new JPanel();
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			jPanelCamposAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jPanelCamposClienteRetencion;
			jPanelAccionesFormularioAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jPanelAccionesFormularioClienteRetencion;
		}
		
		final JPanel jPanelCamposClienteRetencion=jPanelCamposAuxiliarClienteRetencion;
		final JPanel jPanelAccionesFormularioClienteRetencion=jPanelAccionesFormularioAuxiliarClienteRetencion;
		
		
		final JMenuBar jmenuBarClienteRetencion=this.jmenuBarClienteRetencion;		
		final JToolBar jTtoolBarClienteRetencion=this.jTtoolBarClienteRetencion;
				
		JMenuBar jmenuBarDetalleAuxiliarClienteRetencion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarClienteRetencion=new JToolBar();
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			jmenuBarDetalleAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jmenuBarDetalleClienteRetencion;
			jTtoolBarDetalleAuxiliarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jTtoolBarDetalleClienteRetencion;		
		}
		
		final JMenuBar jmenuBarDetalleClienteRetencion=jmenuBarDetalleAuxiliarClienteRetencion;
		final JToolBar jTtoolBarDetalleClienteRetencion=jTtoolBarDetalleAuxiliarClienteRetencion;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasClienteRetencion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesClienteRetencion;
			processRunnable.jTableDatos=jTableDatosClienteRetencion;
			processRunnable.jPanelCampos=jPanelCamposClienteRetencion;
			processRunnable.jPanelPaginacion=jPanelPaginacionClienteRetencion;
			processRunnable.jPanelAcciones=jPanelAccionesClienteRetencion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioClienteRetencion;
			
			
			processRunnable.jmenuBar=jmenuBarClienteRetencion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleClienteRetencion;
			processRunnable.jTtoolBar=jTtoolBarClienteRetencion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleClienteRetencion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasClienteRetencion ,jPanelParametrosReportesClienteRetencion, jTableDatosClienteRetencion,/*jScrollPanelDatosClienteRetencion,*/jPanelCamposClienteRetencion,jPanelPaginacionClienteRetencion, /*jScrollPanelDatosEdicionClienteRetencion,*/ jPanelAccionesClienteRetencion,jPanelAccionesFormularioClienteRetencion,jmenuBarClienteRetencion,jmenuBarDetalleClienteRetencion,jTtoolBarClienteRetencion,jTtoolBarDetalleClienteRetencion));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesClienteRetencion(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarClienteRetencion(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuClienteRetencion(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarClienteRetencion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarClienteRetencion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleClienteRetencion,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuClienteRetencion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarClienteRetencion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleClienteRetencion,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.clienteretencionConstantesFunciones.getsFinalQueryClienteRetencion();
		String  finalQueryPaginacionTodos=this.clienteretencionConstantesFunciones.getsFinalQueryClienteRetencion();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ClienteRetencionConstantesFunciones.getArrayColumnasGlobalesNoClienteRetencion(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ClienteRetencionConstantesFunciones.getArrayColumnasGlobalesClienteRetencion(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ClienteRetencionConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.clienteretencionsEliminados= new ArrayList<ClienteRetencion>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessClienteRetencion();
		
				///*ClienteRetencionSessionBean*/this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			
			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ClienteRetencionConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ClienteRetencionConstantesFunciones.getClassesForeignKeysOfClienteRetencion(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/clienteretencion."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			clienteretencionsAux= new ArrayList<ClienteRetencion>();
			
				
			clienteretencionLogic.setDatosCliente(this.datosCliente);
			clienteretencionLogic.setDatosDeep(this.datosDeep);
			clienteretencionLogic.setIsConDeep(true);
			
			
			clienteretencionLogic.getClienteRetencionDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					clienteretencionLogic.getTodosClienteRetencions(finalQueryGlobal,pagination);
					
					//clienteretencionLogic.getTodosClienteRetencionsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(clienteretencionLogic.getClienteRetencions()==null|| clienteretencionLogic.getClienteRetencions().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							clienteretencionsAux= new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux= new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							clienteretencionLogic.getTodosClienteRetencions(finalQueryGlobal+"",this.pagination);												
							
							//clienteretencionLogic.getTodosClienteRetencionsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteClienteRetencions("Todos",clienteretencionLogic.getClienteRetencions() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());					
							clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idClienteRetencion=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idClienteRetencion=this.idActual;
				
				} else if(this.idClienteRetencionActual!=null && this.idClienteRetencionActual!=0L) {
					idClienteRetencion=idClienteRetencionActual;
				}
				
					
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndicePorId(idClienteRetencion);
				
				this.clienteretencions=new ArrayList<ClienteRetencion>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					clienteretencionLogic.getEntity(idClienteRetencion);
					
					//clienteretencionLogic.getEntityWithConnection(idClienteRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
					clienteretencionLogic.getClienteRetencions().add(clienteretencionLogic.getClienteRetencion());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencions=new ArrayList<ClienteRetencion>();
					this.clienteretencions.add(clienteretencion);
				}
				
				if(clienteretencionLogic.getClienteRetencion()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdAsientoContable",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdAsientoContable",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdCliente",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdCliente",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableClienteRetencion")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCuentaContableClienteRetencion(id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdCuentaContableClienteRetencion(finalQueryGlobal,pagination,id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCuentaContableClienteRetencion(id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCuentaContableClienteRetencion(id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdCuentaContableClienteRetencion(finalQueryGlobal,pagination,id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCuentaContableClienteRetencion(id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdCuentaContableClienteRetencion(id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdCuentaContableClienteRetencion",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdCuentaContableClienteRetencion",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdEjercicio",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdEjercicio",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdEmpresa",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdEmpresa",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoRetencion")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEstadoRetencion(id_estado_retencionFK_IdEstadoRetencion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdEstadoRetencion(finalQueryGlobal,pagination,id_estado_retencionFK_IdEstadoRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEstadoRetencion(id_estado_retencionFK_IdEstadoRetencion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEstadoRetencion(id_estado_retencionFK_IdEstadoRetencion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdEstadoRetencion(finalQueryGlobal,pagination,id_estado_retencionFK_IdEstadoRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEstadoRetencion(id_estado_retencionFK_IdEstadoRetencion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdEstadoRetencion(id_estado_retencionFK_IdEstadoRetencion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdEstadoRetencion",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdEstadoRetencion",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFactura")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdFactura",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdFactura",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdPeriodo",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdPeriodo",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdSucursal",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdSucursal",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRetencion")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdTipoRetencion(finalQueryGlobal,pagination,id_tipo_retencionFK_IdTipoRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdTipoRetencion(finalQueryGlobal,pagination,id_tipo_retencionFK_IdTipoRetencion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTipoRetencion(id_tipo_retencionFK_IdTipoRetencion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdTipoRetencion",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdTipoRetencion",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					clienteretencionLogic.getClienteRetencionsFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=clienteretencionLogic.getClienteRetencions()==null||clienteretencionLogic.getClienteRetencions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=clienteretencions==null|| clienteretencions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionsAux=new ArrayList<ClienteRetencion>();
						clienteretencionsAux.addAll(clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionsAux=new ArrayList<ClienteRetencion>();
							clienteretencionsAux.addAll(clienteretencions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							clienteretencionLogic.getClienteRetencionsFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ClienteRetencionConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteClienteRetencions("FK_IdTransaccion",clienteretencionLogic.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteClienteRetencions("FK_IdTransaccion",clienteretencions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionLogic.setClienteRetencions(new ArrayList<ClienteRetencion>());
						clienteretencionLogic.getClienteRetencions().addAll(clienteretencionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencions=new ArrayList<ClienteRetencion>();
							clienteretencions.addAll(clienteretencionsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesClienteRetencion();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessClienteRetencion();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=clienteretencionLogic.getClienteRetencions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=clienteretencions.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=clienteretencionLogic.getClienteRetencions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=clienteretencions.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ClienteRetencion clienteretencion) {
		Boolean permite=true;
		
		if(this.clienteretencion.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ClienteRetencionConstantesFunciones.getOrderByListaClienteRetencion();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ClienteRetencionConstantesFunciones.getOrderByListaClienteRetencion();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ClienteRetencion clienteretencion:clienteretencionLogic.getClienteRetencions()) {
				if(clienteretencion.getsType().equals(Constantes2.S_TOTALES)) {
					clienteretencionTotales=clienteretencion;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ClienteRetencion clienteretencion:this.clienteretencions) {
				if(clienteretencion.getsType().equals(Constantes2.S_TOTALES)) {
					clienteretencionTotales=clienteretencion;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.clienteretencionAux=new ClienteRetencion();
			this.clienteretencionAux.setsType(Constantes2.S_TOTALES);
			this.clienteretencionAux.setIsNew(false);
			this.clienteretencionAux.setIsChanged(false);
			this.clienteretencionAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ClienteRetencionConstantesFunciones.TotalizarValoresFilaClienteRetencion(this.clienteretencionLogic.getClienteRetencions(),this.clienteretencionAux);
				
				this.clienteretencionLogic.getClienteRetencions().add(this.clienteretencionAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ClienteRetencionConstantesFunciones.TotalizarValoresFilaClienteRetencion(this.clienteretencions,this.clienteretencionAux);
				
				this.clienteretencions.add(this.clienteretencionAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		clienteretencionTotales=new ClienteRetencion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.clienteretencionLogic.getClienteRetencions().remove(clienteretencionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.clienteretencions.remove(clienteretencionTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		clienteretencionTotales=new ClienteRetencion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ClienteRetencion clienteretencion:clienteretencionLogic.getClienteRetencions()) {
				if(clienteretencion.getsType().equals(Constantes2.S_TOTALES)) {
					clienteretencionTotales=clienteretencion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ClienteRetencionConstantesFunciones.TotalizarValoresFilaClienteRetencion(this.clienteretencionLogic.getClienteRetencions(),clienteretencionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ClienteRetencion clienteretencion:this.clienteretencions) {
				if(clienteretencion.getsType().equals(Constantes2.S_TOTALES)) {
					clienteretencionTotales=clienteretencion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ClienteRetencionConstantesFunciones.TotalizarValoresFilaClienteRetencion(this.clienteretencions,clienteretencionTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getClienteRetencionsFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdAsientoContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdAsientoContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdCuentaContableClienteRetencion()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableClienteRetencion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdEstadoRetencion()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoRetencion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdTipoRetencion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRetencion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getClienteRetencionsFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getClienteRetencionsFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdAsientoContable(String sFinalQuery,Long id_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdAsientoContable(sFinalQuery,this.pagination,id_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdCuentaContableClienteRetencion(String sFinalQuery,Long id_cuenta_contable_retencion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdCuentaContableClienteRetencion(sFinalQuery,this.pagination,id_cuenta_contable_retencion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdEstadoRetencion(String sFinalQuery,Long id_estado_retencion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdEstadoRetencion(sFinalQuery,this.pagination,id_estado_retencion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdFactura(String sFinalQuery,Long id_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdFactura(sFinalQuery,this.pagination,id_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdTipoRetencion(String sFinalQuery,Long id_tipo_retencion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdTipoRetencion(sFinalQuery,this.pagination,id_tipo_retencion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getClienteRetencionsFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLogic.getClienteRetencionsFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosClienteRetencion() {
		this.isPermisoTodoClienteRetencion=false;
		this.isPermisoNuevoClienteRetencion=false;
		this.isPermisoActualizarClienteRetencion=false;
		this.isPermisoActualizarOriginalClienteRetencion=false;
		this.isPermisoEliminarClienteRetencion=false;
		this.isPermisoGuardarCambiosClienteRetencion=false;
		this.isPermisoConsultaClienteRetencion=false;
		this.isPermisoBusquedaClienteRetencion=false;
		this.isPermisoReporteClienteRetencion=false;		
		this.isPermisoOrdenClienteRetencion=false;		
		this.isPermisoPaginacionMedioClienteRetencion=false;		
		this.isPermisoPaginacionAltoClienteRetencion=false;
		this.isPermisoPaginacionTodoClienteRetencion=false;
		this.isPermisoCopiarClienteRetencion=false;		
		this.isPermisoVerFormClienteRetencion=false;		
		this.isPermisoDuplicarClienteRetencion=false;		
		this.isPermisoOrdenClienteRetencion=false;		
	}
	
	public void setPermisosUsuarioClienteRetencion(Boolean isPermiso) {
		this.isPermisoTodoClienteRetencion=isPermiso;
		this.isPermisoNuevoClienteRetencion=isPermiso;
		this.isPermisoActualizarClienteRetencion=isPermiso;
		this.isPermisoActualizarOriginalClienteRetencion=isPermiso;
		this.isPermisoEliminarClienteRetencion=isPermiso;
		this.isPermisoGuardarCambiosClienteRetencion=isPermiso;
		this.isPermisoConsultaClienteRetencion=isPermiso;
		this.isPermisoBusquedaClienteRetencion=isPermiso;
		this.isPermisoReporteClienteRetencion=isPermiso;
		this.isPermisoOrdenClienteRetencion=isPermiso;		
		this.isPermisoPaginacionMedioClienteRetencion=isPermiso;		
		this.isPermisoPaginacionAltoClienteRetencion=isPermiso;		
		this.isPermisoPaginacionTodoClienteRetencion=isPermiso;		
		this.isPermisoCopiarClienteRetencion=isPermiso;		
		this.isPermisoVerFormClienteRetencion=isPermiso;		
		this.isPermisoDuplicarClienteRetencion=isPermiso;
		this.isPermisoOrdenClienteRetencion=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioClienteRetencion(Boolean isPermiso) {
		//this.isPermisoTodoClienteRetencion=isPermiso;
		this.isPermisoNuevoClienteRetencion=isPermiso;
		this.isPermisoActualizarClienteRetencion=isPermiso;
		this.isPermisoActualizarOriginalClienteRetencion=isPermiso;
		this.isPermisoEliminarClienteRetencion=isPermiso;
		this.isPermisoGuardarCambiosClienteRetencion=isPermiso;
		//this.isPermisoConsultaClienteRetencion=isPermiso;
		//this.isPermisoBusquedaClienteRetencion=isPermiso;
		//this.isPermisoReporteClienteRetencion=isPermiso;
		//this.isPermisoOrdenClienteRetencion=isPermiso;		
		//this.isPermisoPaginacionMedioClienteRetencion=isPermiso;		
		//this.isPermisoPaginacionAltoClienteRetencion=isPermiso;		
		//this.isPermisoPaginacionTodoClienteRetencion=isPermiso;		
		//this.isPermisoCopiarClienteRetencion=isPermiso;		
		//this.isPermisoDuplicarClienteRetencion=isPermiso;
		//this.isPermisoOrdenClienteRetencion=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioClienteRetencionClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ClienteRetencionJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebClienteRetencion(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioClienteRetencionClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioClienteRetencionClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionClienteRetencionClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioClienteRetencionClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioClienteRetencion() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ClienteRetencionJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ClienteRetencionConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoClienteRetencion=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarClienteRetencion=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalClienteRetencion=this.isPermisoActualizarClienteRetencion;
			this.isPermisoEliminarClienteRetencion=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosClienteRetencion=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaClienteRetencion=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaClienteRetencion=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoClienteRetencion=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteClienteRetencion=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenClienteRetencion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioClienteRetencion=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoClienteRetencion=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoClienteRetencion=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarClienteRetencion=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormClienteRetencion=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarClienteRetencion=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenClienteRetencion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosClienteRetencion.setToolTipText(this.jTableDatosClienteRetencion.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioClienteRetencion(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioClienteRetencion(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ClienteRetencionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ClienteRetencionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioClienteRetencion() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyClienteRetencionListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.facturasForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.tiporetencionsForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
				this.cuentacontableclienteretencionsForeignKey=new ArrayList();
				this.estadoretencionsForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyClienteRetencionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ClienteRetencionJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyClienteRetencionListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableClienteRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FacturaConstantesFunciones.SFINALQUERY;

				this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporetencionsForeignKey==null||this.tiporetencionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRetencionConstantesFunciones.getArrayColumnasGlobalesTipoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRetencionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRetencionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableClienteRetencionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableclienteretencionsForeignKey==null||this.cuentacontableclienteretencionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableClienteRetencionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoRetencionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoretencionsForeignKey==null||this.estadoretencionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoRetencionConstantesFunciones.getArrayColumnasGlobalesEstadoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoRetencionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoRetencionConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoRetencionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyClienteRetencionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ClienteRetencionParameterReturnGeneral clienteretencionReturnGeneral=new ClienteRetencionParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_empresaClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_empresaClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_sucursalClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_sucursalClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_ejercicioClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_ejercicioClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_periodoClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_periodoClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_anioClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_anioClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_mesClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_mesClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_clienteClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_clienteClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalFactura="";

				if(((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_facturaClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_facturaClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

						finalQueryGlobalFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalFactura, "");
						finalQueryGlobalFactura+=FacturaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFactura=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidFacturaActual();
					}
				} else {
					finalQueryGlobalFactura="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_transaccionClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_transaccionClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalTipoRetencion="";

				if(((this.tiporetencionsForeignKey==null||this.tiporetencionsForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_tipo_retencionClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_tipo_retencionClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRetencionConstantesFunciones.getArrayColumnasGlobalesTipoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRetencion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRetencionConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRetencion=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRetencion, "");
						finalQueryGlobalTipoRetencion+=TipoRetencionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRetencionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRetencion=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidTipoRetencionActual();
					}
				} else {
					finalQueryGlobalTipoRetencion="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_asiento_contableClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_asiento_contableClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}


				String finalQueryGlobalCuentaContableClienteRetencion="";

				if(((this.cuentacontableclienteretencionsForeignKey==null||this.cuentacontableclienteretencionsForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_cuenta_contable_retencionClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_cuenta_contable_retencionClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableClienteRetencion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableClienteRetencion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableClienteRetencion=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableClienteRetencion, "");
						finalQueryGlobalCuentaContableClienteRetencion+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableClienteRetencionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableClienteRetencion=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidCuentaContableClienteRetencionActual();
					}
				} else {
					finalQueryGlobalCuentaContableClienteRetencion="NONE";
				}


				String finalQueryGlobalEstadoRetencion="";

				if(((this.estadoretencionsForeignKey==null||this.estadoretencionsForeignKey.size()<=0) && this.clienteretencionConstantesFunciones.cargarid_estado_retencionClienteRetencion)
					 || (this.esRecargarFks && this.clienteretencionConstantesFunciones.cargarid_estado_retencionClienteRetencion)) {

					if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoRetencion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoRetencionConstantesFunciones.getArrayColumnasGlobalesEstadoRetencion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoRetencion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoRetencionConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoRetencion=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoRetencion, "");
						finalQueryGlobalEstadoRetencion+=EstadoRetencionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoRetencionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoRetencion=" WHERE " + ConstantesSql.ID + "="+clienteretencionSessionBean.getlidEstadoRetencionActual();
					}
				} else {
					finalQueryGlobalEstadoRetencion="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				clienteretencionReturnGeneral=clienteretencionLogic.cargarCombosLoteForeignKeyClienteRetencion(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalCliente,finalQueryGlobalFactura,finalQueryGlobalTransaccion,finalQueryGlobalTipoRetencion,finalQueryGlobalAsientoContable,finalQueryGlobalCuentaContableClienteRetencion,finalQueryGlobalEstadoRetencion);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=clienteretencionReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=clienteretencionReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=clienteretencionReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=clienteretencionReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=clienteretencionReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=clienteretencionReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=clienteretencionReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalFactura.equals("NONE")) {
				this.facturasForeignKey=clienteretencionReturnGeneral.getfacturasForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=clienteretencionReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalTipoRetencion.equals("NONE")) {
				this.tiporetencionsForeignKey=clienteretencionReturnGeneral.gettiporetencionsForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=clienteretencionReturnGeneral.getasientocontablesForeignKey();
			}

			if(!finalQueryGlobalCuentaContableClienteRetencion.equals("NONE")) {
				this.cuentacontableclienteretencionsForeignKey=clienteretencionReturnGeneral.getcuentacontableclienteretencionsForeignKey();
			}

			if(!finalQueryGlobalEstadoRetencion.equals("NONE")) {
				this.estadoretencionsForeignKey=clienteretencionReturnGeneral.getestadoretencionsForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyClienteRetencion()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyFactura();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyTipoRetencion();
			this.addItemDefectoCombosForeignKeyAsientoContable();
			this.addItemDefectoCombosForeignKeyCuentaContableClienteRetencion();
			this.addItemDefectoCombosForeignKeyEstadoRetencion();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.clienteretencionSessionBean==null) {
				this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFactura()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				Factura factura=new Factura();
				FacturaConstantesFunciones.setFacturaDescripcion(factura,Constantes.SMENSAJE_ESCOJA_OPCION);
				factura.setId(null);

				if(!FacturaConstantesFunciones.ExisteEnLista(this.facturasForeignKey,factura,true)) {

					this.facturasForeignKey.add(0,factura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRetencion()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionTipoRetencion()) {
				TipoRetencion tiporetencion=new TipoRetencion();
				TipoRetencionConstantesFunciones.setTipoRetencionDescripcion(tiporetencion,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporetencion.setId(null);

				if(!TipoRetencionConstantesFunciones.ExisteEnLista(this.tiporetencionsForeignKey,tiporetencion,true)) {

					this.tiporetencionsForeignKey.add(0,tiporetencion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableClienteRetencion()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableClienteRetencion()) {
				CuentaContable cuentacontableclienteretencion=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableclienteretencion,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableclienteretencion.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableclienteretencionsForeignKey,cuentacontableclienteretencion,true)) {

					this.cuentacontableclienteretencionsForeignKey.add(0,cuentacontableclienteretencion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoRetencion()throws Exception {
		try {

			if(!this.clienteretencionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoRetencion()) {
				EstadoRetencion estadoretencion=new EstadoRetencion();
				EstadoRetencionConstantesFunciones.setEstadoRetencionDescripcion(estadoretencion,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadoretencion.setId(null);

				if(!EstadoRetencionConstantesFunciones.ExisteEnLista(this.estadoretencionsForeignKey,estadoretencion,true)) {

					this.estadoretencionsForeignKey.add(0,estadoretencion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyClienteRetencion()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyClienteRetencion(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyClienteRetencion()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.clienteretencion.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyClienteRetencion();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyClienteRetencion(ClienteRetencion clienteretencion)throws Exception {	
		try {
			
			this.setActualClienteForeignKey(clienteretencion.getid_cliente(),false,"Formulario");
			this.setActualFacturaForeignKey(clienteretencion.getid_factura(),false,"Formulario");
			this.setActualTransaccionForeignKey(clienteretencion.getid_transaccion(),false,"Formulario");
			this.setActualTipoRetencionForeignKey(clienteretencion.getid_tipo_retencion(),false,"Formulario");
			this.setActualAsientoContableForeignKey(clienteretencion.getid_asiento_contable(),false,"Formulario");
			this.setActualCuentaContableClienteRetencionForeignKey(clienteretencion.getid_cuenta_contable_retencion(),false,"Formulario");
			this.setActualEstadoRetencionForeignKey(clienteretencion.getid_estado_retencion(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyClienteRetencion(ClienteRetencion clienteretencion,String sTipoEvento)throws Exception {	
		try {
			
			

				if(clienteretencion.getCliente()!=null && !sTipoEvento.equals("id_clienteClienteRetencion")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(clienteretencion.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(clienteretencion.getFactura()!=null && !sTipoEvento.equals("id_facturaClienteRetencion")) { //sTipoEvento Evita Bucle Infinito

					this.facturasForeignKey=new ArrayList<Factura>();
					this.facturasForeignKey.add(clienteretencion.getFactura());

					this.addItemDefectoCombosForeignKeyFactura();
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				if(clienteretencion.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableClienteRetencion")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(clienteretencion.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				if(clienteretencion.getCuentaContableClienteRetencion()!=null && !sTipoEvento.equals("id_cuenta_contable_retencionClienteRetencion")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableclienteretencionsForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableclienteretencionsForeignKey.add(clienteretencion.getCuentaContableClienteRetencion());

					this.addItemDefectoCombosForeignKeyCuentaContableClienteRetencion();
					this.cargarCombosFrameCuentaContableClienteRetencionsForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyClienteRetencion()throws Exception {	
		try {
			
			this.setActualClienteForeignKey(this.clienteretencionConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualFacturaForeignKey(this.clienteretencionConstantesFunciones.getid_factura(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.clienteretencionConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualTipoRetencionForeignKey(this.clienteretencionConstantesFunciones.getid_tipo_retencion(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.clienteretencionConstantesFunciones.getid_asiento_contable(),false,"Formulario");
			this.setActualCuentaContableClienteRetencionForeignKey(this.clienteretencionConstantesFunciones.getid_cuenta_contable_retencion(),false,"Formulario");
			this.setActualEstadoRetencionForeignKey(this.clienteretencionConstantesFunciones.getid_estado_retencion(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyClienteRetencion()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyClienteRetencion()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyClienteRetencion()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroClienteRetencion()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyClienteRetencion()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameFacturasForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameTipoRetencionsForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");
			this.cargarCombosFrameCuentaContableClienteRetencionsForeignKey("Todos");
			this.cargarCombosFrameEstadoRetencionsForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyClienteRetencion(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRetencionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableClienteRetencionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoRetencionsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyClienteRetencion()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.getItemCount()>0) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


























	
	

	public ClienteRetencionBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ClienteRetencionBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ClienteRetencionBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.clienteretencionSessionBean=new ClienteRetencionSessionBean(); 
		this.clienteretencionConstantesFunciones=new ClienteRetencionConstantesFunciones(); 
		this.clienteretencionBean=new ClienteRetencion();//(this.clienteretencionConstantesFunciones); 		
		this.clienteretencionReturnGeneral=new ClienteRetencionParameterReturnGeneral(); 
		
		this.clienteretencionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.clienteretencionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ClienteRetencionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ClienteRetencionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ClienteRetencionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessClienteRetencion(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.clienteretencionConstantesFunciones=new ClienteRetencionConstantesFunciones(); 
			this.clienteretencionBean=new ClienteRetencion();//this.clienteretencionConstantesFunciones); 			
			this.clienteretencionReturnGeneral=new ClienteRetencionParameterReturnGeneral(); 
		
			ClienteRetencionBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Retencion Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.clienteretencion=new ClienteRetencion();
			this.clienteretencions = new ArrayList<ClienteRetencion>();
			this.clienteretencionsAux = new ArrayList<ClienteRetencion>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic=new ClienteRetencionLogic();
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			//this.clienteretencionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.clienteretencionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormClienteRetencion);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoClienteRetencion);	
					}
					
					if(this.jInternalFrameImportacionClienteRetencion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionClienteRetencion);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByClienteRetencion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByClienteRetencion);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormClienteRetencion);
				this.jInternalFrameDetalleFormClienteRetencion.setVisible(false);
				this.jInternalFrameDetalleFormClienteRetencion.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoClienteRetencion);
					this.jInternalFrameReporteDinamicoClienteRetencion.setVisible(false);
					this.jInternalFrameReporteDinamicoClienteRetencion.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionClienteRetencion!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionClienteRetencion);
					this.jInternalFrameImportacionClienteRetencion.setVisible(false);
					this.jInternalFrameImportacionClienteRetencion.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByClienteRetencion!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByClienteRetencion);
					this.jInternalFrameOrderByClienteRetencion.setVisible(false);
					this.jInternalFrameOrderByClienteRetencion.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idClienteRetencionActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ClienteRetencionConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.clienteretencionReturnGeneral=new ClienteRetencionParameterReturnGeneral();
			
			this.clienteretencionParameterGeneral=new ClienteRetencionParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.clienteretencionLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ClienteRetencionJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ClienteRetencionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.clienteretencionSessionBean.getEsGuardarRelacionado(),this.clienteretencionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ClienteRetencionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.clienteretencionSessionBean.getEsGuardarRelacionado(),this.clienteretencionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoClienteRetencion=false;
			this.isVisibilidadCeldaDuplicarClienteRetencion=true;
			this.isVisibilidadCeldaCopiarClienteRetencion=true;
			this.isVisibilidadCeldaVerFormClienteRetencion=true;
			this.isVisibilidadCeldaOrdenClienteRetencion=true;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
			this.isVisibilidadCeldaModificarClienteRetencion=false;
			this.isVisibilidadCeldaActualizarClienteRetencion=false;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
			this.isVisibilidadCeldaCancelarClienteRetencion=false;
			this.isVisibilidadCeldaGuardarClienteRetencion=false;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdCuentaContableClienteRetencion=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoRetencion=true;
			this.isVisibilidadFK_IdFactura=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoRetencion=true;
			this.isVisibilidadFK_IdTransaccion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesClienteRetencion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosClienteRetencion();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioClienteRetencion(false);
			
			this.setPermisosUsuarioClienteRetencion();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.clienteretencionSessionBean.getEsGuardarRelacionado() 
				|| (this.clienteretencionSessionBean.getEsGuardarRelacionado() && this.clienteretencionSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioClienteRetencionClasesRelacionadas();
			}
			
			if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioClienteRetencionClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosClienteRetencion();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualClienteRetencion();
			}
			
			if(!this.isPermisoBusquedaClienteRetencion) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioClienteRetencion,this.isPermisoPaginacionMedioClienteRetencion,this.isPermisoPaginacionTodoClienteRetencion);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ClienteRetencionConstantesFunciones.getTiposSeleccionarClienteRetencion());
				
				this.tiposColumnasSelect=ClienteRetencionConstantesFunciones.getTiposSeleccionarClienteRetencion(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioClienteRetencion();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioClienteRetencion(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioClienteRetencion(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesClienteRetencion() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.clienteLogic=new ClienteLogic();
			this.facturaLogic=new FacturaLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.tiporetencionLogic=new TipoRetencionLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			this.cuentacontableclienteretencionLogic=new CuentaContableLogic();
			this.estadoretencionLogic=new EstadoRetencionLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				clienteretencionImplementable= (ClienteRetencionImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ClienteRetencionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				clienteretencionImplementableHome= (ClienteRetencionImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ClienteRetencionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.clienteretencions= new ArrayList<ClienteRetencion>();
			this.clienteretencionsEliminados= new ArrayList<ClienteRetencion>();
						
			this.isEsNuevoClienteRetencion=false;
			this.esParaAccionDesdeFormularioClienteRetencion=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			this.idFacturaActual=0L;
			this.idAsientoContableActual=0L;
			this.idCuentaContableClienteRetencionActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.facturasForeignKey=new ArrayList<Factura>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.tiporetencionsForeignKey=new ArrayList<TipoRetencion>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			this.cuentacontableclienteretencionsForeignKey=new ArrayList<CuentaContable>() ;
			this.estadoretencionsForeignKey=new ArrayList<EstadoRetencion>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyClienteRetencion(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroClienteRetencion();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ClienteRetencionBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ClienteRetencionConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesClienteRetencion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingClienteRetencion(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioClienteRetencion();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioClienteRetencion();
			}
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasClienteRetencion.getTabCount(); i++) {
					this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessClienteRetencion(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ClienteRetencion: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectClienteRetencion() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesClienteRetencion")) {
				iIndex=this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessClienteRetencion();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyClienteRetencion(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyClienteRetencion(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyClienteRetencion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyClienteRetencionListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyClienteRetencion();
		
		this.cargarCombosFrameForeignKeyClienteRetencion();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyClienteRetencion();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyClienteRetencion();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFactura(this.facturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRetencion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRetencion();
				this.cargarCombosFrameTipoRetencionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoRetencion(this.tiporetencionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableClienteRetencion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableClienteRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableClienteRetencion();
				this.cargarCombosFrameCuentaContableClienteRetencionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableClienteRetencion(this.cuentacontableclienteretencionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoRetencion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoRetencionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoRetencion();
				this.cargarCombosFrameEstadoRetencionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoRetencion(this.estadoretencionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoClienteRetencionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			
			if(jTableDatosClienteRetencion.getRowCount()>=1) {
				jTableDatosClienteRetencion.removeRowSelectionInterval(0, jTableDatosClienteRetencion.getRowCount()-1);						
			}
			
			this.isEsNuevoClienteRetencion=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoClienteRetencion(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesClienteRetencion(true);			
			//this.clienteretencion=new ClienteRetencion();
			//this.clienteretencion.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesClienteRetencion(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualClienteRetencion() ;
			
			if(ClienteRetencionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleClienteRetencion(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.clienteretencion);	
			this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);				
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ClienteRetencion: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarClienteRetencionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosClienteRetencion.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosClienteRetencion.getSelectedRows().length;			
			}
			
			clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoClienteRetencion--;			
				//ClienteRetencion clienteretencionAux= new ClienteRetencion();			
				//clienteretencionAux.setId(this.iIdNuevoClienteRetencion);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ClienteRetencion clienteretencionOrigen=new ClienteRetencion();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ClienteRetencion clienteretencionOrigen : clienteretencionsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							clienteretencionOrigen =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							clienteretencionOrigen =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaClienteRetencion();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.clienteretencion.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosClienteRetencion(clienteretencionOrigen,this.clienteretencion,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.clienteretencionLogic.getClienteRetencions().add(this.clienteretencionAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.clienteretencions.add(this.clienteretencionAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaClienteRetencion(false);
				
				this.jTableDatosClienteRetencion.setRowSelectionInterval(this.getIndiceNuevoClienteRetencion(), this.getIndiceNuevoClienteRetencion());
				
				int iLastRow =  this.jTableDatosClienteRetencion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosClienteRetencion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosClienteRetencion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaClienteRetencion(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();									
		
			ClienteRetencion clienteretencionOrigen=new ClienteRetencion();
			ClienteRetencion clienteretencionDestino=new ClienteRetencion();
				
			clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosClienteRetencion.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || clienteretencionsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosClienteRetencion.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionOrigen =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						clienteretencionOrigen =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						clienteretencionDestino =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						clienteretencionDestino =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				clienteretencionOrigen =clienteretencionsSeleccionados.get(0);
				clienteretencionDestino =clienteretencionsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosClienteRetencion(clienteretencionOrigen,clienteretencionDestino,true,false);
				
				clienteretencionDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(clienteretencionDestino,clienteretencionLogic.getClienteRetencions());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(clienteretencionDestino,clienteretencions);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaClienteRetencion(false);
				
				//this.jTableDatosClienteRetencion.setRowSelectionInterval(this.getIndiceNuevoClienteRetencion(), this.getIndiceNuevoClienteRetencion());
				
				int iLastRow =  this.jTableDatosClienteRetencion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosClienteRetencion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosClienteRetencion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaClienteRetencion(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormClienteRetencion.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesClienteRetencion.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasClienteRetencion.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesClienteRetencion.setVisible(!isVisible);
			this.jPanelPaginacionClienteRetencion.setVisible(!isVisible);
			this.jPanelAccionesClienteRetencion.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameClienteRetencion();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoClienteRetencion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionClienteRetencion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByClienteRetencion();
			
			this.abrirFrameOrderByClienteRetencion();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByClienteRetencion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleClienteRetencion(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormClienteRetencion);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormClienteRetencion.isMaximum()) {
					this.jInternalFrameDetalleFormClienteRetencion.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormClienteRetencion.setSize(this.jInternalFrameDetalleFormClienteRetencion.iWidthFormulario,this.jInternalFrameDetalleFormClienteRetencion.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormClienteRetencion.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormClienteRetencion.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormClienteRetencion.isMaximum()) {
						this.jInternalFrameDetalleFormClienteRetencion.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormClienteRetencion.jContentPaneDetalleClienteRetencion.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormClienteRetencion.jContentPaneDetalleClienteRetencion.getWidth(),ClienteRetencionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormClienteRetencion.jContentPaneDetalleClienteRetencion.getWidth(),ClienteRetencionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormClienteRetencion.jContentPaneDetalleClienteRetencion.getWidth(),ClienteRetencionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormClienteRetencion.setVisible(true);
	        this.jInternalFrameDetalleFormClienteRetencion.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByClienteRetencion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByClienteRetencion==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByClienteRetencion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByClienteRetencion,false,this);
				} else {
					this.jInternalFrameOrderByClienteRetencion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByClienteRetencion,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByClienteRetencion);
				this.jInternalFrameOrderByClienteRetencion.setVisible(false);
				this.jInternalFrameOrderByClienteRetencion.setSelected(false);
				
				this.jInternalFrameOrderByClienteRetencion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByClienteRetencion"));
				
				this.inicializarActualizarBindingTablaOrderByClienteRetencion();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionClienteRetencion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionClienteRetencion==null) {
				
				this.jInternalFrameImportacionClienteRetencion=new ImportacionJInternalFrame(ClienteRetencionConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionClienteRetencion);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionClienteRetencion);
				this.jInternalFrameImportacionClienteRetencion.setVisible(false);
				this.jInternalFrameImportacionClienteRetencion.setSelected(false);


				this.jInternalFrameImportacionClienteRetencion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionClienteRetencion"));
				this.jInternalFrameImportacionClienteRetencion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionClienteRetencion"));
				this.jInternalFrameImportacionClienteRetencion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionClienteRetencion"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoClienteRetencion() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoClienteRetencion==null) {
				this.jInternalFrameReporteDinamicoClienteRetencion=new ReporteDinamicoJInternalFrame(ClienteRetencionConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoClienteRetencion);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoClienteRetencion);
				this.jInternalFrameReporteDinamicoClienteRetencion.setVisible(false);
				this.jInternalFrameReporteDinamicoClienteRetencion.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoClienteRetencion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoClienteRetencion"));
				this.jInternalFrameReporteDinamicoClienteRetencion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoClienteRetencion"));
				this.jInternalFrameReporteDinamicoClienteRetencion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoClienteRetencion"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualClienteRetencion();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleClienteRetencion() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormClienteRetencion);
			
	       	this.jInternalFrameDetalleFormClienteRetencion.setVisible(false);
	        this.jInternalFrameDetalleFormClienteRetencion.setSelected(false);
			
			//this.jInternalFrameDetalleFormClienteRetencion.dispose();
			//this.jInternalFrameDetalleFormClienteRetencion=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoClienteRetencion() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoClienteRetencion.setVisible(true);
	        this.jInternalFrameReporteDinamicoClienteRetencion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionClienteRetencion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionClienteRetencion.setVisible(true);
	        this.jInternalFrameImportacionClienteRetencion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByClienteRetencion() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByClienteRetencion.setVisible(true);
	        this.jInternalFrameOrderByClienteRetencion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByClienteRetencion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByClienteRetencion.setVisible(false);
	        this.jInternalFrameOrderByClienteRetencion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoClienteRetencion() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoClienteRetencion.setVisible(false);
	        this.jInternalFrameReporteDinamicoClienteRetencion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionClienteRetencion() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionClienteRetencion.setVisible(false);
	        this.jInternalFrameImportacionClienteRetencion.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContableClienteRetencion(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableClienteRetencion";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
						TitledBorder titledBorderCuentaContableClienteRetencion=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableClienteRetencion.setTitle(titledBorderClienteRetencion.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableClienteRetencion(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarClienteRetencion(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarClienteRetencion(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesClienteRetencion(true);
			//this.isEsNuevoClienteRetencion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesClienteRetencion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesClienteRetencion(false) ;
			
			if(clienteretencionSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ClienteRetencionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleClienteRetencion(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualClienteRetencion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaClienteRetencionActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarClienteRetencion(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesClienteRetencion(true);
			//this.isEsNuevoClienteRetencion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.clienteretencion.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesClienteRetencion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesClienteRetencion(false) ;
			
			if(ClienteRetencionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleClienteRetencion(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualClienteRetencion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.clienteretencionConstantesFunciones.cargarid_clienteClienteRetencion) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingClienteRetencion(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Factura")) {
				if(!this.clienteretencionConstantesFunciones.cargarid_facturaClienteRetencion) {
					this.cargarCombosFacturasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingClienteRetencion(false,false);
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_factura (id);

				this.recargarComboTablaFactura(this.facturasForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.clienteretencionConstantesFunciones.cargarid_asiento_contableClienteRetencion) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingClienteRetencion(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
			
			if(sType.equals("CuentaContableClienteRetencion")) {
				if(!this.clienteretencionConstantesFunciones.cargarid_cuenta_contable_retencionClienteRetencion) {
					this.cargarCombosCuentaContableClienteRetencionsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingClienteRetencion(false,false);
					this.cargarCombosFrameCuentaContableClienteRetencionsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion (id);

				this.recargarComboTablaCuentaContableClienteRetencion(this.cuentacontableclienteretencionsForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFactura(List<Factura> facturasForeignKey)throws Exception{
		TableColumn tableColumnFactura=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDFACTURA));
		TableCellEditor tableCellEditorFactura =tableColumnFactura.getCellEditor();

		FacturaTableCell facturaTableCellFk=(FacturaTableCell)tableCellEditorFactura;

		if(facturaTableCellFk!=null) {
			facturaTableCellFk.setfacturasForeignKey(facturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//facturaTableCellFk.setRowActual(intSelectedRow);
			//facturaTableCellFk.setfacturasForeignKeyActual(facturasForeignKey);
		//}


		if(facturaTableCellFk!=null) {
			facturaTableCellFk.RecargarFacturasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRetencion(List<TipoRetencion> tiporetencionsForeignKey)throws Exception{
		TableColumn tableColumnTipoRetencion=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION));
		TableCellEditor tableCellEditorTipoRetencion =tableColumnTipoRetencion.getCellEditor();

		TipoRetencionTableCell tiporetencionTableCellFk=(TipoRetencionTableCell)tableCellEditorTipoRetencion;

		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.settiporetencionsForeignKey(tiporetencionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporetencionTableCellFk.setRowActual(intSelectedRow);
			//tiporetencionTableCellFk.settiporetencionsForeignKeyActual(tiporetencionsForeignKey);
		//}


		if(tiporetencionTableCellFk!=null) {
			tiporetencionTableCellFk.RecargarTipoRetencionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableClienteRetencion(List<CuentaContable> cuentacontableclienteretencionsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableClienteRetencion=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION));
		TableCellEditor tableCellEditorCuentaContableClienteRetencion =tableColumnCuentaContableClienteRetencion.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableClienteRetencion;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableclienteretencionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableclienteretencionsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoRetencion(List<EstadoRetencion> estadoretencionsForeignKey)throws Exception{
		TableColumn tableColumnEstadoRetencion=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION));
		TableCellEditor tableCellEditorEstadoRetencion =tableColumnEstadoRetencion.getCellEditor();

		EstadoRetencionTableCell estadoretencionTableCellFk=(EstadoRetencionTableCell)tableCellEditorEstadoRetencion;

		if(estadoretencionTableCellFk!=null) {
			estadoretencionTableCellFk.setestadoretencionsForeignKey(estadoretencionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoretencionTableCellFk.setRowActual(intSelectedRow);
			//estadoretencionTableCellFk.setestadoretencionsForeignKeyActual(estadoretencionsForeignKey);
		//}


		if(estadoretencionTableCellFk!=null) {
			estadoretencionTableCellFk.RecargarEstadoRetencionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_factura (Long id) throws Exception {
		this.setActualFacturaForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion (Long id) throws Exception {
		this.setActualCuentaContableClienteRetencionForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesClienteRetencion(false);
			
			//if(!this.isEsNuevoClienteRetencion) {								
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				
			}
			
			if(this.permiteMantenimiento(this.clienteretencion)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoClienteRetencion=true;
					this.inicializarActualizarBindingTablaClienteRetencion(false);
					this.isEsNuevoClienteRetencion=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoClienteRetencion=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoClienteRetencion=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesClienteRetencion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualClienteRetencion(false);
				
				this.habilitarDeshabilitarControlesClienteRetencion(false);
			
												
				
				if(ClienteRetencionJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleClienteRetencion();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoClienteRetencionActionPerformed(evt,clienteretencionSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualClienteRetencion(this.clienteretencion,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,clienteretencionSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.clienteretencion.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarClienteRetencionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				this.clienteretencion.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				this.clienteretencion.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.clienteretencion)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ClienteRetencionModel) this.jTableDatosClienteRetencion.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoClienteRetencion=true;
				this.inicializarActualizarBindingTablaClienteRetencion(false);
				this.isEsNuevoClienteRetencion=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesClienteRetencion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualClienteRetencion(false);
				
				this.habilitarDeshabilitarControlesClienteRetencion(false);
				
				
				
				if(ClienteRetencionJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleClienteRetencion();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarClienteRetencionActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosClienteRetencion.getRowCount()>=1) {
				jTableDatosClienteRetencion.removeRowSelectionInterval(0, jTableDatosClienteRetencion.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesClienteRetencion(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaClienteRetencion(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesClienteRetencion(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualClienteRetencion(false) ;
			
			this.isEsNuevoClienteRetencion=false;
			
			if(ClienteRetencionJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleClienteRetencion();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingClienteRetencion(false);
				
				//SI ES MANUAL
				if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualClienteRetencion();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoClienteRetencion--;			
			//ClienteRetencion clienteretencionAux= new ClienteRetencion();			
			//clienteretencionAux.setId(this.iIdNuevoClienteRetencion);
			
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaClienteRetencion();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
			
			this.clienteretencion.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.clienteretencionLogic.getClienteRetencions().add(this.clienteretencionAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.clienteretencions.add(this.clienteretencionAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaClienteRetencion(false);
			
			this.jTableDatosClienteRetencion.setRowSelectionInterval(this.getIndiceNuevoClienteRetencion(), this.getIndiceNuevoClienteRetencion());
			
			int iLastRow =  this.jTableDatosClienteRetencion.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosClienteRetencion.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosClienteRetencion.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaClienteRetencion(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingClienteRetencion(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingClienteRetencion(false);
			
			//SI ES MANUAL
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualClienteRetencion();
			}
			
			//this.abrirFrameTreeClienteRetencion();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE RetencionES ?", "MANTENIMIENTO DE Retencion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionClienteRetencion.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralClienteRetencion();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.clienteretencionReturnGeneral=clienteretencionLogic.procesarImportacionClienteRetencionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.clienteretencionParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarClienteRetencionReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionClienteRetencion.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionClienteRetencion.setFileImportacion(this.jInternalFrameImportacionClienteRetencion.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionClienteRetencion.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionClienteRetencion.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionClienteRetencion.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionClienteRetencion.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		

		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ClienteRetencionBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ClienteRetencionBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteClienteRetencions("Todos",clienteretencionsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Factura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Factura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Factura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Factura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_seImponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_seImponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_seImponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_seImponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableClienteRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableClienteRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableClienteRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableClienteRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorTipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorTipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorTipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorTipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bitoMoneLocal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bitoMoneLocal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bitoMoneLocal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bitoMoneLocal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_editoMoneLocal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_editoMoneLocal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_editoMoneLocal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_editoMoneLocal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bitoMoneExtra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bitoMoneExtra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bitoMoneExtra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bitoMoneExtra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_editoMoneExtra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_editoMoneExtra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_editoMoneExtra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_editoMoneExtra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_neficiario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_neficiario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_neficiario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_neficiario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreBenef_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreBenef_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreBenef_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreBenef_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccionBenef_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccionBenef_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccionBenef_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccionBenef_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefonoBenef_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefonoBenef_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefonoBenef_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefonoBenef_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_RUCBENEF:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cBenef_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cBenef_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cBenef_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cBenef_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoClienteRetencion.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoria="id_factura";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION:
					sNombreCampoCategoria="id_tipo_retencion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoria="porcentaje";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE:
					sNombreCampoCategoria="base_imponible";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoria="valor";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoria="numero_retencion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION:
					sNombreCampoCategoria="id_cuenta_contable_retencion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO:
					sNombreCampoCategoria="valor_tipo_cambio";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL:
					sNombreCampoCategoria="debito_mone_local";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL:
					sNombreCampoCategoria="credito_mone_local";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					sNombreCampoCategoria="debito_mone_extra";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					sNombreCampoCategoria="credito_mone_extra";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO:
					sNombreCampoCategoria="beneficiario";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF:
					sNombreCampoCategoria="nombre_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF:
					sNombreCampoCategoria="direccion_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF:
					sNombreCampoCategoria="telefono_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_RUCBENEF:
					sNombreCampoCategoria="ruc_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION:
					sNombreCampoCategoria="id_estado_retencion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoriaValor="id_factura";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION:
					sNombreCampoCategoriaValor="id_tipo_retencion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoriaValor="porcentaje";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE:
					sNombreCampoCategoriaValor="base_imponible";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoriaValor="valor";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoriaValor="numero_retencion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION:
					sNombreCampoCategoriaValor="id_cuenta_contable_retencion";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO:
					sNombreCampoCategoriaValor="valor_tipo_cambio";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL:
					sNombreCampoCategoriaValor="debito_mone_local";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL:
					sNombreCampoCategoriaValor="credito_mone_local";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					sNombreCampoCategoriaValor="debito_mone_extra";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					sNombreCampoCategoriaValor="credito_mone_extra";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO:
					sNombreCampoCategoriaValor="beneficiario";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF:
					sNombreCampoCategoriaValor="nombre_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF:
					sNombreCampoCategoriaValor="direccion_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF:
					sNombreCampoCategoriaValor="telefono_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_RUCBENEF:
					sNombreCampoCategoriaValor="ruc_benef";
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION:
					sNombreCampoCategoriaValor="id_estado_retencion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_factura");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_retencion");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Base Imponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"base_imponible");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_retencion");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_retencion");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_tipo_cambio");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Debito Mone Local",sNombreCampoCategoria,sNombreCampoCategoriaValor,"debito_mone_local");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Credito Mone Local",sNombreCampoCategoria,sNombreCampoCategoriaValor,"credito_mone_local");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Debito Mone Extra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"debito_mone_extra");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Credito Mone Extra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"credito_mone_extra");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Beneficiario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"beneficiario");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Benef",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_benef");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion Benef",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion_benef");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono Benef",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono_benef");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_RUCBENEF:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc Benef",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc_benef");
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_retencion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoClienteRetencionActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"clienteretencion";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ClienteRetencions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDFACTURA);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.gettiporetencion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getporcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getbase_imponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_VALOR);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getvalor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getnumero_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getcuentacontableclienteretencion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getvalor_tipo_cambio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getdebito_mone_local());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getcredito_mone_local());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getdebito_mone_extra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getcredito_mone_extra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getbeneficiario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getnombre_benef());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getdireccion_benef());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.gettelefono_benef());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_RUCBENEF:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_RUCBENEF);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getruc_benef());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION);
					iRow++;

					for(ClienteRetencion clienteretencion:clienteretencionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(clienteretencion.getestadoretencion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelClienteRetencion(row);				
			//	iRow++;
			//}				
			
			//for(ClienteRetencion clienteretencionAux:clienteretencionsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelClienteRetencion(clienteretencionAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingClienteRetencion(false);
			
			//SI ES MANUAL
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualClienteRetencion();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingClienteRetencion(false);
			
			//SI ES MANUAL
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualClienteRetencion();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesClienteRetencionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingClienteRetencion(false);
			
			//SI ES MANUAL
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualClienteRetencion();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaClienteRetencion() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosClienteRetencion.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosClienteRetencion.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosClienteRetencion.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosClienteRetencion.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosClienteRetencion.setMinimumSize(dimensionMinimum);
		this.jTableDatosClienteRetencion.setMaximumSize(dimensionMaximum);
		this.jTableDatosClienteRetencion.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingClienteRetencion(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingClienteRetencion(esInicializar,true);
	}
	
	public void inicializarActualizarBindingClienteRetencion(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaClienteRetencion(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesClienteRetencion(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasClienteRetencion(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesClienteRetencion(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesClienteRetencion(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualClienteRetencion() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaClienteRetencion();
		
		this.inicializarActualizarBindingBotonesManualClienteRetencion(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualClienteRetencion();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesClienteRetencion() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualClienteRetencion(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualClienteRetencion(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosClienteRetencion.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosClienteRetencion.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteClienteRetencion.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormClienteRetencion.jCheckBoxPostAccionNuevoClienteRetencion.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormClienteRetencion.jCheckBoxPostAccionSinCerrarClienteRetencion.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormClienteRetencion.jCheckBoxPostAccionSinMensajeClienteRetencion.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosClienteRetencion.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosClienteRetencion.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteClienteRetencion.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
				this.jInternalFrameDetalleFormClienteRetencion.jCheckBoxPostAccionNuevoClienteRetencion.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormClienteRetencion.jCheckBoxPostAccionSinCerrarClienteRetencion.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormClienteRetencion.jCheckBoxPostAccionSinMensajeClienteRetencion.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionClienteRetencion.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionClienteRetencion.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesClienteRetencion.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesClienteRetencion.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesClienteRetencion.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarClienteRetencion.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesClienteRetencion.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesClienteRetencion.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralClienteRetencion.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesClienteRetencion(Boolean esInicializar) throws Exception {
		try	{	
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualClienteRetencion(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesClienteRetencion() throws Exception {
		try	{
			if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualClienteRetencion();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleClienteRetencion() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualClienteRetencion() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesClienteRetencion.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesClienteRetencion.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesClienteRetencion.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesClienteRetencion.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesClienteRetencion.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesClienteRetencion.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionClienteRetencion.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionClienteRetencion.addItem(reporte);
			}
			
			
			if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionClienteRetencion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionClienteRetencion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesClienteRetencion.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesClienteRetencion.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesClienteRetencion.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesClienteRetencion.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarClienteRetencion.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarClienteRetencion.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarClienteRetencion.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualClienteRetencion();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualClienteRetencion() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
				this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
				this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
				
				if(this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoClienteRetencion.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoClienteRetencion.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=ClienteRetencionConstantesFunciones.getTiposSeleccionarClienteRetencion(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=ClienteRetencionConstantesFunciones.getTiposSeleccionarClienteRetencion(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=ClienteRetencionConstantesFunciones.getTiposSeleccionarClienteRetencion(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoClienteRetencion.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoClienteRetencion.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualClienteRetencion()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableClienteRetencion.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteClienteRetencion.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteClienteRetencion.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.getSelectedItem()!=null){this.id_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion=((CuentaContable)this.jComboBoxid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencionClienteRetencion.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.getSelectedItem()!=null){this.id_estado_retencionFK_IdEstadoRetencion=((EstadoRetencion)this.jComboBoxid_estado_retencionFK_IdEstadoRetencionClienteRetencion.getSelectedItem()).getId();}
		if(this.jComboBoxid_facturaFK_IdFacturaClienteRetencion.getSelectedItem()!=null){this.id_facturaFK_IdFactura=((Factura)this.jComboBoxid_facturaFK_IdFacturaClienteRetencion.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.getSelectedItem()!=null){this.id_tipo_retencionFK_IdTipoRetencion=((TipoRetencion)this.jComboBoxid_tipo_retencionFK_IdTipoRetencionClienteRetencion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionClienteRetencion.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasClienteRetencion(Boolean esInicializar) throws Exception {				
		if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualClienteRetencion();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaClienteRetencion() throws Exception {
		this.inicializarActualizarBindingTablaClienteRetencion(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByClienteRetencion() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosClienteRetencionOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencionOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaClienteRetencion(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=clienteretencionLogic.getClienteRetencions().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=clienteretencions.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosClienteRetencion.setModel(new ClienteRetencionModel(this.clienteretencionLogic.getClienteRetencions(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosClienteRetencion.setModel(new ClienteRetencionModel(this.clienteretencions,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByClienteRetencion!=null && this.jInternalFrameOrderByClienteRetencion.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByClienteRetencion();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ClienteRetencionConstantesFunciones.SCLASSWEBTITULO,clienteretencionConstantesFunciones.resaltarSeleccionarClienteRetencion,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ClienteRetencionConstantesFunciones.SCLASSWEBTITULO,clienteretencionConstantesFunciones.resaltarSeleccionarClienteRetencion,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_ID));

		if(this.clienteretencionConstantesFunciones.mostraridClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteretencionConstantesFunciones.resaltaridClienteRetencion,this.clienteretencionConstantesFunciones.activaridClienteRetencion,iSizeTabla,this,true,"idClienteRetencion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteretencionConstantesFunciones.resaltaridClienteRetencion,this.clienteretencionConstantesFunciones.activaridClienteRetencion,this,true,"idClienteRetencion","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA));

		if(this.clienteretencionConstantesFunciones.mostrarid_empresaClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.clienteretencionConstantesFunciones.resaltarid_empresaClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_empresaClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.clienteretencionConstantesFunciones.resaltarid_empresaClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_empresaClienteRetencion,false,"id_empresaClienteRetencion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.clienteretencionConstantesFunciones.mostrarid_sucursalClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.clienteretencionConstantesFunciones.resaltarid_sucursalClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_sucursalClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.clienteretencionConstantesFunciones.resaltarid_sucursalClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_sucursalClienteRetencion,false,"id_sucursalClienteRetencion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.clienteretencionConstantesFunciones.mostrarid_ejercicioClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.clienteretencionConstantesFunciones.resaltarid_ejercicioClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_ejercicioClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.clienteretencionConstantesFunciones.resaltarid_ejercicioClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_ejercicioClienteRetencion,false,"id_ejercicioClienteRetencion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDPERIODO));

		if(this.clienteretencionConstantesFunciones.mostrarid_periodoClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.clienteretencionConstantesFunciones.resaltarid_periodoClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_periodoClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.clienteretencionConstantesFunciones.resaltarid_periodoClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_periodoClienteRetencion,false,"id_periodoClienteRetencion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDANIO));

		if(this.clienteretencionConstantesFunciones.mostrarid_anioClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.clienteretencionConstantesFunciones.resaltarid_anioClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_anioClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.clienteretencionConstantesFunciones.resaltarid_anioClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_anioClienteRetencion,true,"id_anioClienteRetencion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDMES));

		if(this.clienteretencionConstantesFunciones.mostrarid_mesClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.clienteretencionConstantesFunciones.resaltarid_mesClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_mesClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.clienteretencionConstantesFunciones.resaltarid_mesClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_mesClienteRetencion,true,"id_mesClienteRetencion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_FECHA));

		if(this.clienteretencionConstantesFunciones.mostrarfechaClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.clienteretencionConstantesFunciones.resaltarfechaClienteRetencion,this.clienteretencionConstantesFunciones.activarfechaClienteRetencion,iSizeTabla,this,true,"fechaClienteRetencion","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.clienteretencionConstantesFunciones.resaltarfechaClienteRetencion,this.clienteretencionConstantesFunciones.activarfechaClienteRetencion,this,true,"fechaClienteRetencion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE));

		if(this.clienteretencionConstantesFunciones.mostrarid_clienteClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.clienteretencionConstantesFunciones.resaltarid_clienteClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_clienteClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.clienteretencionConstantesFunciones.resaltarid_clienteClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_clienteClienteRetencion,true,"id_clienteClienteRetencion","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDFACTURA));

		if(this.clienteretencionConstantesFunciones.mostrarid_facturaClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FacturaTableCell(this.facturasForeignKey,this.clienteretencionConstantesFunciones.resaltarid_facturaClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_facturaClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new FacturaTableCell(this.facturasForeignKey,this.clienteretencionConstantesFunciones.resaltarid_facturaClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_facturaClienteRetencion,true,"id_facturaClienteRetencion","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.clienteretencionConstantesFunciones.mostrarid_transaccionClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.clienteretencionConstantesFunciones.resaltarid_transaccionClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_transaccionClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.clienteretencionConstantesFunciones.resaltarid_transaccionClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_transaccionClienteRetencion,true,"id_transaccionClienteRetencion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION));

		if(this.clienteretencionConstantesFunciones.mostrarid_tipo_retencionClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRetencionTableCell(this.tiporetencionsForeignKey,this.clienteretencionConstantesFunciones.resaltarid_tipo_retencionClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_tipo_retencionClienteRetencion,iSizeTabla));
			tableColumn.setCellEditor(new TipoRetencionTableCell(this.tiporetencionsForeignKey,this.clienteretencionConstantesFunciones.resaltarid_tipo_retencionClienteRetencion,this,this.clienteretencionConstantesFunciones.activarid_tipo_retencionClienteRetencion,true,"id_tipo_retencionClienteRetencion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE));

		if(this.clienteretencionConstantesFunciones.mostrarporcentajeClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteretencionConstantesFunciones.resaltarporcentajeClienteRetencion,this.clienteretencionConstantesFunciones.activarporcentajeClienteRetencion,iSizeTabla,this,true,"porcentajeClienteRetencion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteretencionConstantesFunciones.resaltarporcentajeClienteRetencion,this.clienteretencionConstantesFunciones.activarporcentajeClienteRetencion,this,true,"porcentajeClienteRetencion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE));

		if(this.clienteretencionConstantesFunciones.mostrarbase_imponibleClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteretencionConstantesFunciones.resaltarbase_imponibleClienteRetencion,this.clienteretencionConstantesFunciones.activarbase_imponibleClienteRetencion,iSizeTabla,this,true,"base_imponibleClienteRetencion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteretencionConstantesFunciones.resaltarbase_imponibleClienteRetencion,this.clienteretencionConstantesFunciones.activarbase_imponibleClienteRetencion,this,true,"base_imponibleClienteRetencion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_VALOR));

		if(this.clienteretencionConstantesFunciones.mostrarvalorClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_VALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.clienteretencionConstantesFunciones.resaltarvalorClienteRetencion,this.clienteretencionConstantesFunciones.activarvalorClienteRetencion,iSizeTabla,this,true,"valorClienteRetencion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteretencionConstantesFunciones.resaltarvalorClienteRetencion,this.clienteretencionConstantesFunciones.activarvalorClienteRetencion,this,true,"valorClienteRetencion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION));

		if(this.clienteretencionConstantesFunciones.mostrarnumero_retencionClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteretencionConstantesFunciones.resaltarnumero_retencionClienteRetencion,this.clienteretencionConstantesFunciones.activarnumero_retencionClienteRetencion,iSizeTabla,this,true,"numero_retencionClienteRetencion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteretencionConstantesFunciones.resaltarnumero_retencionClienteRetencion,this.clienteretencionConstantesFunciones.activarnumero_retencionClienteRetencion,this,true,"numero_retencionClienteRetencion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION));

		if(this.clienteretencionConstantesFunciones.mostrardescripcionClienteRetencion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.clienteretencionConstantesFunciones.resaltardescripcionClienteRetencion,this.clienteretencionConstantesFunciones.activardescripcionClienteRetencion,iSizeTabla,this,true,"descripcionClienteRetencion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.clienteretencionConstantesFunciones.resaltardescripcionClienteRetencion,this.clienteretencionConstantesFunciones.activardescripcionClienteRetencion,this,true,"descripcionClienteRetencion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,250));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,250));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,250));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,250));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,250);
			//tableColumn.addPropertyChangeListener(new ClienteRetencionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.clienteretencionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.clienteretencionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosClienteRetencion.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.clienteretencionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.clienteretencionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosClienteRetencion.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.clienteretencionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.clienteretencionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosClienteRetencion.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosClienteRetencion.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosClienteRetencion.moveColumn(this.jTableDatosClienteRetencion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosClienteRetencion.moveColumn(this.jTableDatosClienteRetencion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosClienteRetencion.moveColumn(this.jTableDatosClienteRetencion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosClienteRetencion.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosClienteRetencion.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosClienteRetencion,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosClienteRetencion.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosClienteRetencion.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosClienteRetencion.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosClienteRetencion.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosClienteRetencion.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=clienteretencionLogic.getClienteRetencions().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=clienteretencions.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosClienteRetencion.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosClienteRetencion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosClienteRetencion();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoClienteRetencion=false;
					
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
				if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormClienteRetencion==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosClienteRetencion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.clienteretencion.getsType().equals("DUPLICADO")
				   || this.clienteretencion.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoClienteRetencion=true;
				
				} else {
					this.isEsNuevoClienteRetencion=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
					if(this.clienteretencion.getId()>=0 && !this.clienteretencion.getIsNew()) {						
						this.isEsNuevoClienteRetencion=false;
						
					} else {
						this.isEsNuevoClienteRetencion=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoClienteRetencion(esRelaciones);						
				
				this.seleccionarClienteRetencion(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.clienteretencion.getId()<0) {
					this.isEsNuevoClienteRetencion=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarClienteRetencion(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarClienteRetencion(evt,rowIndex);
				}	
				
				if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ClienteRetencion: " + this.dDif); 
					}
				}								
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarClienteRetencion(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.clienteretencion)) {
					if(this.clienteretencion.getId()>0) {
						this.clienteretencion.setIsDeleted(true);
						
						this.clienteretencionsEliminados.add(this.clienteretencion);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.clienteretencionLogic.getClienteRetencions().remove(this.clienteretencion);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.clienteretencions.remove(this.clienteretencion);				
					}
					
					
					((ClienteRetencionModel) this.jTableDatosClienteRetencion.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaClienteRetencion(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarClienteRetencion(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoClienteRetencion) {
			
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosClienteRetencion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosClienteRetencion.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioClienteRetencion(this.clienteretencion);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.clienteretencionConstantesFunciones.cargarid_empresaClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_empresaClienteRetencion) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.clienteretencion.getid_empresa());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(clienteretencion.getEmpresa()!=null) {
							this.empresasForeignKey.add(clienteretencion.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.clienteretencion.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.clienteretencionConstantesFunciones.cargarid_sucursalClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_sucursalClienteRetencion) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.clienteretencion.getid_sucursal());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(clienteretencion.getSucursal()!=null) {
							this.sucursalsForeignKey.add(clienteretencion.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.clienteretencion.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.clienteretencionConstantesFunciones.cargarid_ejercicioClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_ejercicioClienteRetencion) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.clienteretencion.getid_ejercicio());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(clienteretencion.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(clienteretencion.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.clienteretencion.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.clienteretencionConstantesFunciones.cargarid_periodoClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_periodoClienteRetencion) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.clienteretencion.getid_periodo());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(clienteretencion.getPeriodo()!=null) {
							this.periodosForeignKey.add(clienteretencion.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.clienteretencion.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.clienteretencionConstantesFunciones.cargarid_anioClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_anioClienteRetencion) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.clienteretencion.getid_anio());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(clienteretencion.getAnio()!=null) {
							this.aniosForeignKey.add(clienteretencion.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.clienteretencion.getid_anio(),false,"Formulario");

					//Mes
					if(!this.clienteretencionConstantesFunciones.cargarid_mesClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_mesClienteRetencion) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.clienteretencion.getid_mes());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(clienteretencion.getMes()!=null) {
							this.messForeignKey.add(clienteretencion.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.clienteretencion.getid_mes(),false,"Formulario");

					//Cliente
					if(!this.clienteretencionConstantesFunciones.cargarid_clienteClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_clienteClienteRetencion) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.clienteretencion.getid_cliente());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(clienteretencion.getCliente()!=null) {
							this.clientesForeignKey.add(clienteretencion.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.clienteretencion.getid_cliente(),false,"Formulario");

					//Factura
					if(!this.clienteretencionConstantesFunciones.cargarid_facturaClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_facturaClienteRetencion) {
						//this.cargarCombosFacturasForeignKeyLista(" where id="+this.clienteretencion.getid_factura());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.facturasForeignKey=new ArrayList<Factura>();

						if(clienteretencion.getFactura()!=null) {
							this.facturasForeignKey.add(clienteretencion.getFactura());
						}

						this.addItemDefectoCombosForeignKeyFactura();
						this.cargarCombosFrameFacturasForeignKey("Todos");
					}
					this.setActualFacturaForeignKey(this.clienteretencion.getid_factura(),false,"Formulario");

					//Transaccion
					if(!this.clienteretencionConstantesFunciones.cargarid_transaccionClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_transaccionClienteRetencion) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.clienteretencion.getid_transaccion());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(clienteretencion.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(clienteretencion.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.clienteretencion.getid_transaccion(),false,"Formulario");

					//TipoRetencion
					if(!this.clienteretencionConstantesFunciones.cargarid_tipo_retencionClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_tipo_retencionClienteRetencion) {
						//this.cargarCombosTipoRetencionsForeignKeyLista(" where id="+this.clienteretencion.getid_tipo_retencion());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.tiporetencionsForeignKey=new ArrayList<TipoRetencion>();

						if(clienteretencion.getTipoRetencion()!=null) {
							this.tiporetencionsForeignKey.add(clienteretencion.getTipoRetencion());
						}

						this.addItemDefectoCombosForeignKeyTipoRetencion();
						this.cargarCombosFrameTipoRetencionsForeignKey("Todos");
					}
					this.setActualTipoRetencionForeignKey(this.clienteretencion.getid_tipo_retencion(),false,"Formulario");

					//AsientoContable
					if(!this.clienteretencionConstantesFunciones.cargarid_asiento_contableClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_asiento_contableClienteRetencion) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.clienteretencion.getid_asiento_contable());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(clienteretencion.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(clienteretencion.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.clienteretencion.getid_asiento_contable(),false,"Formulario");

					//CuentaContableClienteRetencion
					if(!this.clienteretencionConstantesFunciones.cargarid_cuenta_contable_retencionClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_cuenta_contable_retencionClienteRetencion) {
						//this.cargarCombosCuentaContableClienteRetencionsForeignKeyLista(" where id="+this.clienteretencion.getid_cuenta_contable_retencion());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.cuentacontableclienteretencionsForeignKey=new ArrayList<CuentaContable>();

						if(clienteretencion.getCuentaContableClienteRetencion()!=null) {
							this.cuentacontableclienteretencionsForeignKey.add(clienteretencion.getCuentaContableClienteRetencion());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableClienteRetencion();
						this.cargarCombosFrameCuentaContableClienteRetencionsForeignKey("Todos");
					}
					this.setActualCuentaContableClienteRetencionForeignKey(this.clienteretencion.getid_cuenta_contable_retencion(),false,"Formulario");

					//EstadoRetencion
					if(!this.clienteretencionConstantesFunciones.cargarid_estado_retencionClienteRetencion || this.clienteretencionConstantesFunciones.event_dependid_estado_retencionClienteRetencion) {
						//this.cargarCombosEstadoRetencionsForeignKeyLista(" where id="+this.clienteretencion.getid_estado_retencion());
									//this.inicializarActualizarBindingClienteRetencion(false,false);
						this.estadoretencionsForeignKey=new ArrayList<EstadoRetencion>();

						if(clienteretencion.getEstadoRetencion()!=null) {
							this.estadoretencionsForeignKey.add(clienteretencion.getEstadoRetencion());
						}

						this.addItemDefectoCombosForeignKeyEstadoRetencion();
						this.cargarCombosFrameEstadoRetencionsForeignKey("Todos");
					}
					this.setActualEstadoRetencionForeignKey(this.clienteretencion.getid_estado_retencion(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesClienteRetencion("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesClienteRetencion(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualClienteRetencion() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoClienteRetencion(ClienteRetencion clienteretencion) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoClienteRetencion(clienteretencion,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoClienteRetencion(ClienteRetencion clienteretencion,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioClienteRetencion(clienteretencion);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyClienteRetencion(clienteretencion,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyClienteRetencion(clienteretencion);
	}
	
	public void setVariablesObjetoActualToFormularioClienteRetencion(ClienteRetencion clienteretencion) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.setText(clienteretencion.getId().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.setDate(clienteretencion.getfecha());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.setText(clienteretencion.getporcentaje().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.setText(clienteretencion.getbase_imponible().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.setText(clienteretencion.getvalor().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.setText(clienteretencion.getnumero_retencion());
			this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.setText(clienteretencion.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ClienteRetencion clienteretencionLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,clienteretencionLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ClienteRetencion clienteretencionLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				clienteretencionLocal=this.clienteretencion;
			} else {
				clienteretencionLocal=this.clienteretencionAnterior;
			}
		}
		
		if(this.permiteMantenimiento(clienteretencionLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoClienteRetencion(clienteretencionLocal,true);
					
					if(clienteretencionSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(clienteretencionLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(clienteretencionLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoClienteRetencion(ClienteRetencion clienteretencion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualClienteRetencion(clienteretencion,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(clienteretencion);
	}
	
	public void setVariablesFormularioToObjetoActualClienteRetencion(ClienteRetencion clienteretencion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualClienteRetencion(clienteretencion,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualClienteRetencion(ClienteRetencion clienteretencion,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.getText()==null || this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.getText()=="" || this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.getText()=="Id") {
				this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.setText("0");
			}

			if(conColumnasBase) {clienteretencion.setId(Long.parseLong(this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteRetencionConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelIdClienteRetencion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			clienteretencion.setfecha(this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteRetencionConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelfechaClienteRetencion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			clienteretencion.setporcentaje(Double.parseDouble(this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelporcentajeClienteRetencion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			clienteretencion.setbase_imponible(Double.parseDouble(this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelbase_imponibleClienteRetencion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			clienteretencion.setvalor(Double.parseDouble(this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteRetencionConstantesFunciones.LABEL_VALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelvalorClienteRetencion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			clienteretencion.setnumero_retencion(this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabelnumero_retencionClienteRetencion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			clienteretencion.setdescripcion(this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormClienteRetencion.jLabeldescripcionClienteRetencion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualClienteRetencion(ClienteRetencion clienteretencionBean,ClienteRetencion clienteretencion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosClienteRetencion(ClienteRetencion clienteretencionOrigen,ClienteRetencion clienteretencion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && clienteretencionOrigen.getId()!=null && !clienteretencionOrigen.getId().equals(0L))) {clienteretencion.setId(clienteretencionOrigen.getId());}}
			if(conDefault || (!conDefault && clienteretencionOrigen.getfecha()!=null && !clienteretencionOrigen.getfecha().equals(new Date()))) {clienteretencion.setfecha(clienteretencionOrigen.getfecha());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getporcentaje()!=null && !clienteretencionOrigen.getporcentaje().equals(0.0))) {clienteretencion.setporcentaje(clienteretencionOrigen.getporcentaje());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getbase_imponible()!=null && !clienteretencionOrigen.getbase_imponible().equals(0.0))) {clienteretencion.setbase_imponible(clienteretencionOrigen.getbase_imponible());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getvalor()!=null && !clienteretencionOrigen.getvalor().equals(0.0))) {clienteretencion.setvalor(clienteretencionOrigen.getvalor());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getnumero_retencion()!=null && !clienteretencionOrigen.getnumero_retencion().equals(""))) {clienteretencion.setnumero_retencion(clienteretencionOrigen.getnumero_retencion());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getdescripcion()!=null && !clienteretencionOrigen.getdescripcion().equals(""))) {clienteretencion.setdescripcion(clienteretencionOrigen.getdescripcion());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getvalor_tipo_cambio()!=null && !clienteretencionOrigen.getvalor_tipo_cambio().equals(0.0))) {clienteretencion.setvalor_tipo_cambio(clienteretencionOrigen.getvalor_tipo_cambio());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getdebito_mone_local()!=null && !clienteretencionOrigen.getdebito_mone_local().equals(0.0))) {clienteretencion.setdebito_mone_local(clienteretencionOrigen.getdebito_mone_local());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getcredito_mone_local()!=null && !clienteretencionOrigen.getcredito_mone_local().equals(0.0))) {clienteretencion.setcredito_mone_local(clienteretencionOrigen.getcredito_mone_local());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getdebito_mone_extra()!=null && !clienteretencionOrigen.getdebito_mone_extra().equals(0.0))) {clienteretencion.setdebito_mone_extra(clienteretencionOrigen.getdebito_mone_extra());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getcredito_mone_extra()!=null && !clienteretencionOrigen.getcredito_mone_extra().equals(0.0))) {clienteretencion.setcredito_mone_extra(clienteretencionOrigen.getcredito_mone_extra());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getbeneficiario()!=null && !clienteretencionOrigen.getbeneficiario().equals(""))) {clienteretencion.setbeneficiario(clienteretencionOrigen.getbeneficiario());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getnombre_benef()!=null && !clienteretencionOrigen.getnombre_benef().equals(""))) {clienteretencion.setnombre_benef(clienteretencionOrigen.getnombre_benef());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getdireccion_benef()!=null && !clienteretencionOrigen.getdireccion_benef().equals(""))) {clienteretencion.setdireccion_benef(clienteretencionOrigen.getdireccion_benef());}
			if(conDefault || (!conDefault && clienteretencionOrigen.gettelefono_benef()!=null && !clienteretencionOrigen.gettelefono_benef().equals(""))) {clienteretencion.settelefono_benef(clienteretencionOrigen.gettelefono_benef());}
			if(conDefault || (!conDefault && clienteretencionOrigen.getruc_benef()!=null && !clienteretencionOrigen.getruc_benef().equals(""))) {clienteretencion.setruc_benef(clienteretencionOrigen.getruc_benef());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioClienteRetencion(ClienteRetencion clienteretencion) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.setText(clienteretencion.getId().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.setDate(clienteretencion.getfecha());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.setText(clienteretencion.getporcentaje().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.setText(clienteretencion.getbase_imponible().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.setText(clienteretencion.getvalor().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.setText(clienteretencion.getnumero_retencion());
			this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.setText(clienteretencion.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioClienteRetencion(ClienteRetencionBean clienteretencionBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.setText(clienteretencionBean.getId().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.setDate(clienteretencionBean.getfecha());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.setText(clienteretencionBean.getporcentaje().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.setText(clienteretencionBean.getbase_imponible().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.setText(clienteretencionBean.getvalor().toString());
			this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.setText(clienteretencionBean.getnumero_retencion());
			this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.setText(clienteretencionBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanClienteRetencion(ClienteRetencionParameterReturnGeneral clienteretencionReturnGeneral,ClienteRetencionBean clienteretencionBean,Boolean conDefault) throws Exception { 
		try {
			ClienteRetencion clienteretencionLocal=new ClienteRetencion();
			
			clienteretencionLocal=clienteretencionReturnGeneral.getClienteRetencion();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && clienteretencionLocal.getId()!=null && !clienteretencionLocal.getId().equals(0L))) {clienteretencionBean.setId(clienteretencionLocal.getId());}}
			if(conDefault || (!conDefault && clienteretencionLocal.getfecha()!=null && !clienteretencionLocal.getfecha().equals(new Date()))) {clienteretencionBean.setfecha(clienteretencionLocal.getfecha());}
			if(conDefault || (!conDefault && clienteretencionLocal.getporcentaje()!=null && !clienteretencionLocal.getporcentaje().equals(0.0))) {clienteretencionBean.setporcentaje(clienteretencionLocal.getporcentaje());}
			if(conDefault || (!conDefault && clienteretencionLocal.getbase_imponible()!=null && !clienteretencionLocal.getbase_imponible().equals(0.0))) {clienteretencionBean.setbase_imponible(clienteretencionLocal.getbase_imponible());}
			if(conDefault || (!conDefault && clienteretencionLocal.getvalor()!=null && !clienteretencionLocal.getvalor().equals(0.0))) {clienteretencionBean.setvalor(clienteretencionLocal.getvalor());}
			if(conDefault || (!conDefault && clienteretencionLocal.getnumero_retencion()!=null && !clienteretencionLocal.getnumero_retencion().equals(""))) {clienteretencionBean.setnumero_retencion(clienteretencionLocal.getnumero_retencion());}
			if(conDefault || (!conDefault && clienteretencionLocal.getdescripcion()!=null && !clienteretencionLocal.getdescripcion().equals(""))) {clienteretencionBean.setdescripcion(clienteretencionLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxClienteRetencionGenerico(Long idClienteRetencionSeleccionado,JComboBox jComboBoxClienteRetencion,List<ClienteRetencion> clienteretencionsLocal)throws Exception {
		try {
			ClienteRetencion  clienteretencionTemp=null;

			for(ClienteRetencion clienteretencionAux:clienteretencionsLocal) {
				if(clienteretencionAux.getId()!=null && clienteretencionAux.getId().equals(idClienteRetencionSeleccionado)) {
					clienteretencionTemp=clienteretencionAux;
					break;
				}
			}

			jComboBoxClienteRetencion.setSelectedItem(clienteretencionTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxClienteRetencionGenerico(JComboBox jComboBoxClienteRetencion,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxClienteRetencion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxClienteRetencion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxClienteRetencion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxClienteRetencion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxClienteRetencion.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxClienteRetencion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxClienteRetencion.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxClienteRetencion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxClienteRetencion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxClienteRetencion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			clienteretencion=(ClienteRetencion) clienteretencionLogic.getClienteRetencions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			clienteretencion =(ClienteRetencion) clienteretencions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getmes_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Factura")) {
			//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getfactura_descripcion();
			} else {
				//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getfactura_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("TipoRetencion")) {
			//sDescripcion=this.getActualTipoRetencionForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.gettiporetencion_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRetencionForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.gettiporetencion_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getasientocontable_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableClienteRetencion")) {
			//sDescripcion=this.getActualCuentaContableClienteRetencionForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getcuentacontableclienteretencion_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableClienteRetencionForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getcuentacontableclienteretencion_descripcion();
			}
		}

		if(sTipo.equals("EstadoRetencion")) {
			//sDescripcion=this.getActualEstadoRetencionForeignKeyDescripcion((Long)value);
			if(!clienteretencion.getIsNew() && !clienteretencion.getIsChanged() && !clienteretencion.getIsDeleted()) {
				sDescripcion=clienteretencion.getestadoretencion_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoRetencionForeignKeyDescripcion((Long)value);
				sDescripcion=clienteretencion.getestadoretencion_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ClienteRetencion clienteretencionRow=new ClienteRetencion();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			clienteretencionRow=(ClienteRetencion) clienteretencionLogic.getClienteRetencions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			clienteretencionRow=(ClienteRetencion) clienteretencions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualClienteRetencion(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoClienteRetencion && this.isPermisoNuevoClienteRetencion));			
			this.jButtonDuplicarClienteRetencion.setVisible((this.isVisibilidadCeldaDuplicarClienteRetencion && this.isPermisoDuplicarClienteRetencion));			
			this.jButtonCopiarClienteRetencion.setVisible((this.isVisibilidadCeldaCopiarClienteRetencion && this.isPermisoCopiarClienteRetencion));
			this.jButtonVerFormClienteRetencion.setVisible((this.isVisibilidadCeldaVerFormClienteRetencion && this.isPermisoVerFormClienteRetencion));
			
			this.jButtonAbrirOrderByClienteRetencion.setVisible((this.isVisibilidadCeldaOrdenClienteRetencion && this.isPermisoOrdenClienteRetencion));			
			
			this.jButtonNuevoRelacionesClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoRelacionesClienteRetencion && this.isPermisoNuevoClienteRetencion));			
			this.jButtonNuevoGuardarCambiosClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoClienteRetencion && this.isPermisoNuevoClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));
			
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarClienteRetencion.setVisible((this.isVisibilidadCeldaModificarClienteRetencion && this.isPermisoActualizarClienteRetencion));	
			this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarClienteRetencion.setVisible((this.isVisibilidadCeldaActualizarClienteRetencion && this.isPermisoActualizarClienteRetencion));	
			this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarClienteRetencion.setVisible((this.isVisibilidadCeldaEliminarClienteRetencion && this.isPermisoEliminarClienteRetencion));
			this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarClienteRetencion.setVisible(this.isVisibilidadCeldaCancelarClienteRetencion);							
			this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.setVisible((this.isVisibilidadCeldaGuardarClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));			
			
			}
						
			this.jButtonGuardarCambiosTablaClienteRetencion.setVisible((this.isVisibilidadCeldaGuardarCambiosClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoClienteRetencion && this.isPermisoNuevoClienteRetencion));						
			this.jButtonDuplicarToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaDuplicarClienteRetencion && this.isPermisoDuplicarClienteRetencion));						
			this.jButtonCopiarToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaCopiarClienteRetencion && this.isPermisoCopiarClienteRetencion));			
			this.jButtonVerFormToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaVerFormClienteRetencion && this.isPermisoVerFormClienteRetencion));			
			this.jButtonAbrirOrderByToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaOrdenClienteRetencion && this.isPermisoOrdenClienteRetencion));
			this.jButtonNuevoRelacionesToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoRelacionesClienteRetencion && this.isPermisoNuevoClienteRetencion));			
			this.jButtonNuevoGuardarCambiosToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoClienteRetencion && this.isPermisoNuevoClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));			
			
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaModificarClienteRetencion && this.isPermisoActualizarClienteRetencion));	
			this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaActualizarClienteRetencion  && this.isPermisoActualizarClienteRetencion));	
			this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaEliminarClienteRetencion && this.isPermisoEliminarClienteRetencion));
			this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarToolBarClienteRetencion.setVisible(this.isVisibilidadCeldaCancelarClienteRetencion);				
			this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaGuardarClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarClienteRetencion.setVisible((this.isVisibilidadCeldaGuardarCambiosClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoClienteRetencion && this.isPermisoNuevoClienteRetencion));			
			this.jMenuItemDuplicarClienteRetencion.setVisible((this.isVisibilidadCeldaDuplicarClienteRetencion && this.isPermisoDuplicarClienteRetencion));			
			this.jMenuItemCopiarClienteRetencion.setVisible((this.isVisibilidadCeldaCopiarClienteRetencion && this.isPermisoCopiarClienteRetencion));			
			this.jMenuItemVerFormClienteRetencion.setVisible((this.isVisibilidadCeldaVerFormClienteRetencion && this.isPermisoVerFormClienteRetencion));			
			this.jMenuItemAbrirOrderByClienteRetencion.setVisible((this.isVisibilidadCeldaOrdenClienteRetencion && this.isPermisoOrdenClienteRetencion));			
			//this.jMenuItemMostrarOcultarClienteRetencion.setVisible((this.isVisibilidadCeldaOrdenClienteRetencion && this.isPermisoOrdenClienteRetencion));
			this.jMenuItemDetalleAbrirOrderByClienteRetencion.setVisible((this.isVisibilidadCeldaOrdenClienteRetencion && this.isPermisoOrdenClienteRetencion));			
			//this.jMenuItemDetalleMostrarOcultarClienteRetencion.setVisible((this.isVisibilidadCeldaOrdenClienteRetencion && this.isPermisoOrdenClienteRetencion));			
			this.jMenuItemNuevoRelacionesClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoRelacionesClienteRetencion && this.isPermisoNuevoClienteRetencion));			
			this.jMenuItemNuevoGuardarCambiosClienteRetencion.setVisible((this.isVisibilidadCeldaNuevoClienteRetencion && this.isPermisoNuevoClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));									
			
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemModificarClienteRetencion.setVisible((this.isVisibilidadCeldaModificarClienteRetencion && this.isPermisoActualizarClienteRetencion));	
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemActualizarClienteRetencion.setVisible((this.isVisibilidadCeldaActualizarClienteRetencion && this.isPermisoActualizarClienteRetencion));	
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemEliminarClienteRetencion.setVisible((this.isVisibilidadCeldaEliminarClienteRetencion && this.isPermisoEliminarClienteRetencion));
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemCancelarClienteRetencion.setVisible(this.isVisibilidadCeldaCancelarClienteRetencion);				
			}
			
			this.jMenuItemGuardarCambiosClienteRetencion.setVisible((this.isVisibilidadCeldaGuardarClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));						
			this.jMenuItemGuardarCambiosTablaClienteRetencion.setVisible((this.isVisibilidadCeldaGuardarCambiosClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoClienteRetencion=this.jButtonNuevoClienteRetencion.isVisible();
			this.isVisibilidadCeldaDuplicarClienteRetencion=this.jButtonDuplicarClienteRetencion.isVisible();
			this.isVisibilidadCeldaCopiarClienteRetencion=this.jButtonCopiarClienteRetencion.isVisible();
			this.isVisibilidadCeldaVerFormClienteRetencion=this.jButtonVerFormClienteRetencion.isVisible();
			
			this.isVisibilidadCeldaOrdenClienteRetencion=this.jButtonAbrirOrderByClienteRetencion.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=this.jButtonNuevoRelacionesClienteRetencion.isVisible();
			this.isVisibilidadCeldaModificarClienteRetencion=this.jButtonModificarClienteRetencion.isVisible();
			
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.isVisibilidadCeldaActualizarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarClienteRetencion.isVisible();
			this.isVisibilidadCeldaEliminarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarClienteRetencion.isVisible();
			this.isVisibilidadCeldaCancelarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarClienteRetencion.isVisible();
			this.isVisibilidadCeldaGuardarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=this.jButtonGuardarCambiosTablaClienteRetencion.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoClienteRetencion=this.jButtonNuevoToolBarClienteRetencion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=this.jButtonNuevoRelacionesToolBarClienteRetencion.isVisible();
			
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.isVisibilidadCeldaModificarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarToolBarClienteRetencion.isVisible();
			this.isVisibilidadCeldaActualizarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarToolBarClienteRetencion.isVisible();
			this.isVisibilidadCeldaEliminarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarToolBarClienteRetencion.isVisible();
			this.isVisibilidadCeldaCancelarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarToolBarClienteRetencion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarClienteRetencion=this.jButtonGuardarCambiosToolBarClienteRetencion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=this.jButtonGuardarCambiosTablaToolBarClienteRetencion.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoClienteRetencion=this.jMenuItemNuevoClienteRetencion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=this.jMenuItemNuevoRelacionesClienteRetencion.isVisible();
			
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.isVisibilidadCeldaModificarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jMenuItemModificarClienteRetencion.isVisible();
			this.isVisibilidadCeldaActualizarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jMenuItemActualizarClienteRetencion.isVisible();
			this.isVisibilidadCeldaEliminarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jMenuItemEliminarClienteRetencion.isVisible();
			this.isVisibilidadCeldaCancelarClienteRetencion=this.jInternalFrameDetalleFormClienteRetencion.jMenuItemCancelarClienteRetencion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarClienteRetencion=this.jMenuItemGuardarCambiosClienteRetencion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=this.jMenuItemGuardarCambiosTablaClienteRetencion.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesClienteRetencion(Boolean esInicializar) {
		if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {			
			if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
				//if(this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesClienteRetencion();
			}
			
			this.inicializarActualizarBindingBotonesManualClienteRetencion(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualClienteRetencion() {
		this.jButtonNuevoClienteRetencion.setVisible(this.isPermisoNuevoClienteRetencion);			
		this.jButtonDuplicarClienteRetencion.setVisible(this.isPermisoDuplicarClienteRetencion);			
		this.jButtonCopiarClienteRetencion.setVisible(this.isPermisoCopiarClienteRetencion);			
		this.jButtonVerFormClienteRetencion.setVisible(this.isPermisoVerFormClienteRetencion);			
		
		this.jButtonAbrirOrderByClienteRetencion.setVisible(this.isPermisoOrdenClienteRetencion);					
		
		this.jButtonNuevoRelacionesClienteRetencion.setVisible(this.isPermisoNuevoClienteRetencion);			
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarClienteRetencion.setVisible(this.isPermisoActualizarClienteRetencion);	
			this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarClienteRetencion.setVisible(this.isPermisoActualizarClienteRetencion);	
			this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarClienteRetencion.setVisible(this.isPermisoEliminarClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarClienteRetencion.setVisible(this.isVisibilidadCeldaCancelarClienteRetencion);						
			this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.setVisible(this.isPermisoGuardarCambiosClienteRetencion);							
		}
		
		this.jButtonGuardarCambiosTablaClienteRetencion.setVisible(this.isPermisoActualizarClienteRetencion);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleClienteRetencion() {
		this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarClienteRetencion.setVisible(this.isPermisoActualizarClienteRetencion);	
		this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarClienteRetencion.setVisible(this.isPermisoActualizarClienteRetencion);	
		this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarClienteRetencion.setVisible(this.isPermisoEliminarClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarClienteRetencion.setVisible(this.isVisibilidadCeldaCancelarClienteRetencion);							
		this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.setVisible((this.isVisibilidadCeldaGuardarClienteRetencion && this.isPermisoGuardarCambiosClienteRetencion));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosClienteRetencion() {
		if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualClienteRetencion();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesClienteRetencion() {
	}
	
	public void jTableDatosClienteRetencionListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarClienteRetencion(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.clienteretencion.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderClienteRetencion.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.clienteretencion.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderClienteRetencion.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.clienteretencion.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderClienteRetencion.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.clienteretencion.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderClienteRetencion.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.clienteretencion.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderClienteRetencion.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.clienteretencion.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderClienteRetencion.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.clienteretencion.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.clienteretencion.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteClienteRetencionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderClienteRetencion=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosClienteRetencion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderClienteRetencion.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderClienteRetencion.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.clienteretencion.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_facturaClienteRetencionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.facturaBeanSwingJInternalFrame.sTipoBusqueda="Factura";

			if(!this.sFinalQueryGeneral_factura.equals("")) {
				this.facturaBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_factura);
				this.facturaBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.facturaBeanSwingJInternalFrame.procesarBusqueda(this.facturaBeanSwingJInternalFrame.sAccionBusqueda);
				this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingFactura(false);
			}

			if(!this.sFinalQueryComboFactura.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderClienteRetencion=null;
			TitledBorder titledBorderfactura=null;

			if(!this.jScrollPanelDatosClienteRetencion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderClienteRetencion.getTitle() + " -> Factura");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_facturaClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisofactura=true;

			idTienePermisofactura=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(FacturaConstantesFunciones.CLASSNAME);

			if(idTienePermisofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.facturaBeanSwingJInternalFrame.getFacturaLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_factura()!=null) {
					this.facturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.facturaBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_factura());
					this.facturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura();
				}

				JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderClienteRetencion.getTitle() + " -> Factura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_facturaClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_factura = "+this.clienteretencion.getid_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderClienteRetencion.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.clienteretencion.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_retencionClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporetencion=true;

			idTienePermisotiporetencion=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(TipoRetencionConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporetencion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.tiporetencionBeanSwingJInternalFrame=new TipoRetencionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporetencionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporetencionBeanSwingJInternalFrame.getTipoRetencionLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_tipo_retencion()!=null) {
					this.tiporetencionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporetencionBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_tipo_retencion());
					this.tiporetencionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporetencionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporetencionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRetencion();
				}

				JInternalFrameBase jinternalFrame =this.tiporetencionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBordertiporetencion=(TitledBorder)this.tiporetencionBeanSwingJInternalFrame.jScrollPanelDatosTipoRetencion.getBorder();

				titledBordertiporetencion.setTitle(titledBorderClienteRetencion.getTitle() + " -> Tipo Retencion ");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_retencionClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_tipo_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_retencion = "+this.clienteretencion.getid_tipo_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentajeClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getporcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje = "+this.clienteretencion.getporcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbase_imponibleClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getbase_imponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where base_imponible = "+this.clienteretencion.getbase_imponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalorClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getvalor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor = "+this.clienteretencion.getvalor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_retencionClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getnumero_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_retencion like '%"+this.clienteretencion.getnumero_retencion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.clienteretencion.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableClienteRetencionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderClienteRetencion=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosClienteRetencion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderClienteRetencion.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderClienteRetencion.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.clienteretencion.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_retencionClienteRetencionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableclienteretencionBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableclienteretencionBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableclienteretencionBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableClienteRetencion";

			if(!this.sFinalQueryGeneral_cuentacontableclienteretencion.equals("")) {
				this.cuentacontableclienteretencionBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableclienteretencion);
				this.cuentacontableclienteretencionBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableclienteretencionBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableclienteretencionBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableclienteretencionBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableClienteRetencion.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableclienteretencionBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderClienteRetencion=null;
			TitledBorder titledBordercuentacontableclienteretencion=null;

			if(!this.jScrollPanelDatosClienteRetencion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				titledBordercuentacontableclienteretencion=(TitledBorder)this.cuentacontableclienteretencionBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableclienteretencion.setTitle(titledBorderClienteRetencion.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_retencionClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableclienteretencion=true;

			idTienePermisocuentacontableclienteretencion=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableclienteretencion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.cuentacontableclienteretencionBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableclienteretencionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableclienteretencionBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_cuenta_contable_retencion()!=null) {
					this.cuentacontableclienteretencionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableclienteretencionBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_cuenta_contable_retencion());
					this.cuentacontableclienteretencionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableclienteretencionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableclienteretencionBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableclienteretencionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBordercuentacontableclienteretencion=(TitledBorder)this.cuentacontableclienteretencionBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableclienteretencion.setTitle(titledBorderClienteRetencion.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_retencionClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_cuenta_contable_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_retencion = "+this.clienteretencion.getid_cuenta_contable_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_tipo_cambioClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getvalor_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_tipo_cambio = "+this.clienteretencion.getvalor_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondebito_mone_localClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getdebito_mone_local()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where debito_mone_local = "+this.clienteretencion.getdebito_mone_local().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncredito_mone_localClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getcredito_mone_local()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where credito_mone_local = "+this.clienteretencion.getcredito_mone_local().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondebito_mone_extraClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getdebito_mone_extra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where debito_mone_extra = "+this.clienteretencion.getdebito_mone_extra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncredito_mone_extraClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getcredito_mone_extra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where credito_mone_extra = "+this.clienteretencion.getcredito_mone_extra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonbeneficiarioClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getbeneficiario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where beneficiario like '%"+this.clienteretencion.getbeneficiario()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_benefClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getnombre_benef()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_benef like '%"+this.clienteretencion.getnombre_benef()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccion_benefClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getdireccion_benef()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion_benef like '%"+this.clienteretencion.getdireccion_benef()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefono_benefClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.gettelefono_benef()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono_benef like '%"+this.clienteretencion.gettelefono_benef()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonruc_benefClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getruc_benef()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc_benef like '%"+this.clienteretencion.getruc_benef()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_retencionClienteRetencionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadoretencion=true;

			idTienePermisoestadoretencion=this.tienePermisosUsuarioEnPaginaWebClienteRetencion(EstadoRetencionConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadoretencion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosClienteRetencion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosClienteRetencion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);

				this.estadoretencionBeanSwingJInternalFrame=new EstadoRetencionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoretencionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoretencionBeanSwingJInternalFrame.getEstadoRetencionLogic().setConnexion(this.clienteretencionLogic.getConnexion());

				if(this.clienteretencion.getid_estado_retencion()!=null) {
					this.estadoretencionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoretencionBeanSwingJInternalFrame.setIdActual(this.clienteretencion.getid_estado_retencion());
					this.estadoretencionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoretencionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoretencionBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoRetencion();
				}

				JInternalFrameBase jinternalFrame =this.estadoretencionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderClienteRetencion=(TitledBorder)this.jScrollPanelDatosClienteRetencion.getBorder();
				TitledBorder titledBorderestadoretencion=(TitledBorder)this.estadoretencionBeanSwingJInternalFrame.jScrollPanelDatosEstadoRetencion.getBorder();

				titledBorderestadoretencion.setTitle(titledBorderClienteRetencion.getTitle() + " -> Estado Retencion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_retencionClienteRetencionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.getclienteretencion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.clienteretencion==null) {
						this.clienteretencion = new ClienteRetencion();
					}

					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);
				}

				if(this.clienteretencion.getid_estado_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_retencion = "+this.clienteretencion.getid_estado_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingClienteRetencion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdAnio();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdAsientoContableClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdAsientoContable();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdCliente();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableClienteRetencionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdCuentaContableClienteRetencion();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdEjercicio();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdEmpresa();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoRetencionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdEstadoRetencion();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFacturaClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdFactura();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdMes();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdPeriodo();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdSucursal();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRetencionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdTipoRetencion();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionClienteRetencionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingClienteRetencion(false,false);

			this.getClienteRetencionsFK_IdTransaccion();

			this.inicializarActualizarBindingClienteRetencion(false);

			//if(ClienteRetencionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingClienteRetencion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.clienteretencionLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameClienteRetencion() {
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
			this.jInternalFrameDetalleFormClienteRetencion.setVisible(false);	    			
			this.jInternalFrameDetalleFormClienteRetencion.dispose();
			this.jInternalFrameDetalleFormClienteRetencion=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
			this.jInternalFrameReporteDinamicoClienteRetencion.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoClienteRetencion.dispose();
			this.jInternalFrameReporteDinamicoClienteRetencion=null;
		}
		
		if(this.jInternalFrameImportacionClienteRetencion!=null) {
			this.jInternalFrameImportacionClienteRetencion.setVisible(false);	    			
			this.jInternalFrameImportacionClienteRetencion.dispose();
			this.jInternalFrameImportacionClienteRetencion=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessClienteRetencion();
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			
			if(sTipo.equals("NuevoClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarClienteRetencion")) {
				jButtonDuplicarClienteRetencionActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarClienteRetencion")) {
				jButtonCopiarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("VerFormClienteRetencion")) {
				jButtonVerFormClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarClienteRetencion")) {
				jButtonDuplicarClienteRetencionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarClienteRetencion")) {
				jButtonDuplicarClienteRetencionActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarClienteRetencion")) {
				jButtonModificarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarClienteRetencion")) {
				jButtonModificarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarClienteRetencion")) {
				jButtonModificarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarClienteRetencion")) {
				jButtonActualizarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarClienteRetencion")) {
				jButtonActualizarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarClienteRetencion")) {
				jButtonActualizarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("EliminarClienteRetencion")) {
				jButtonEliminarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarClienteRetencion")) {
				jButtonEliminarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarClienteRetencion")) {
				jButtonEliminarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("CancelarClienteRetencion")) {
				jButtonCancelarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarClienteRetencion")) {
				jButtonCancelarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarClienteRetencion")) {
				jButtonCancelarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("CerrarClienteRetencion")) {
				jButtonCerrarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarClienteRetencion")) {
				jButtonCerrarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarClienteRetencion")) {
				jButtonCerrarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarClienteRetencion")) {
				jButtonMostrarOcultarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarClienteRetencion")) {
				jButtonCancelarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarClienteRetencion")) {
				jButtonCopiarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarClienteRetencion")) {
				jButtonVerFormClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarClienteRetencion")) {
				jButtonCopiarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormClienteRetencion")) {
				jButtonVerFormClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionClienteRetencion")) {
				jButtonRecargarInformacionClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarClienteRetencion")) {
				jButtonRecargarInformacionClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionClienteRetencion")) {
				jButtonRecargarInformacionClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresClienteRetencion")) {
				jButtonAnterioresClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarClienteRetencion")) {
				jButtonAnterioresClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreClienteRetencion")) {
				jButtonAnterioresClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesClienteRetencion")) {
				jButtonSiguientesClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarClienteRetencion")) {
				jButtonSiguientesClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesClienteRetencion")) {
				jButtonSiguientesClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByClienteRetencion") || sTipo.equals("MenuItemDetalleAbrirOrderByClienteRetencion")) {
				jButtonAbrirOrderByClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarClienteRetencion") || sTipo.equals("MenuItemDetalleMostrarOcultarClienteRetencion")) {
				jButtonMostrarOcultarClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosClienteRetencion")) {
				jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarClienteRetencion")) {
				jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosClienteRetencion")) {
				jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoClienteRetencion")) {
				jButtonCerrarReporteDinamicoClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoClienteRetencion")) {
				jButtonGenerarReporteDinamicoClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoClienteRetencion")) {
				
				jButtonGenerarExcelReporteDinamicoClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionClienteRetencion")) {
				jButtonCerrarImportacionClienteRetencionActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionClienteRetencion")) {
				
				jButtonGenerarImportacionClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionClienteRetencion")) {
				
				jButtonAbrirImportacionClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesClienteRetencion")) {
				jComboBoxTiposAccionesClienteRetencionActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesClienteRetencion")) {
				jComboBoxTiposRelacionesClienteRetencionActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioClienteRetencion")) {
				jComboBoxTiposAccionesClienteRetencionActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarClienteRetencion")) {
				
				jComboBoxTiposSeleccionarClienteRetencionActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralClienteRetencion")) {
				jTextFieldValorCampoGeneralClienteRetencionActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByClienteRetencion")) {
				jButtonAbrirOrderByClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarClienteRetencion")) {
				jButtonAbrirOrderByClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByClienteRetencion")) {
				jButtonCerrarOrderByClienteRetencionActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idClienteRetencionBusqueda")) {
				this.jButtonidClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaClienteRetencionUpdate")) {
				this.jButtonid_empresaClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaClienteRetencionBusqueda")) {
				this.jButtonid_empresaClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalClienteRetencionUpdate")) {
				this.jButtonid_sucursalClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalClienteRetencionBusqueda")) {
				this.jButtonid_sucursalClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioClienteRetencionUpdate")) {
				this.jButtonid_ejercicioClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioClienteRetencionBusqueda")) {
				this.jButtonid_ejercicioClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoClienteRetencionUpdate")) {
				this.jButtonid_periodoClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoClienteRetencionBusqueda")) {
				this.jButtonid_periodoClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioClienteRetencionUpdate")) {
				this.jButtonid_anioClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioClienteRetencionBusqueda")) {
				this.jButtonid_anioClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesClienteRetencionUpdate")) {
				this.jButtonid_mesClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesClienteRetencionBusqueda")) {
				this.jButtonid_mesClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaClienteRetencionBusqueda")) {
				this.jButtonfechaClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteClienteRetencion")) {
				this.jButtonid_clienteClienteRetencionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteClienteRetencionUpdate")) {
				this.jButtonid_clienteClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteClienteRetencionBusqueda")) {
				this.jButtonid_clienteClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaClienteRetencion")) {
				this.jButtonid_facturaClienteRetencionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaClienteRetencionUpdate")) {
				this.jButtonid_facturaClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaClienteRetencionBusqueda")) {
				this.jButtonid_facturaClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionClienteRetencionUpdate")) {
				this.jButtonid_transaccionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionClienteRetencionBusqueda")) {
				this.jButtonid_transaccionClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencionClienteRetencionUpdate")) {
				this.jButtonid_tipo_retencionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencionClienteRetencionBusqueda")) {
				this.jButtonid_tipo_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeClienteRetencionBusqueda")) {
				this.jButtonporcentajeClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_imponibleClienteRetencionBusqueda")) {
				this.jButtonbase_imponibleClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorClienteRetencionBusqueda")) {
				this.jButtonvalorClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionClienteRetencionBusqueda")) {
				this.jButtonnumero_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionClienteRetencionBusqueda")) {
				this.jButtondescripcionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableClienteRetencion")) {
				this.jButtonid_asiento_contableClienteRetencionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableClienteRetencionUpdate")) {
				this.jButtonid_asiento_contableClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableClienteRetencionBusqueda")) {
				this.jButtonid_asiento_contableClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencion")) {
				this.jButtonid_cuenta_contable_retencionClienteRetencionActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencionArbol")) {
				this.abrirFrameTreeCuentaContableClienteRetencion("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencionUpdate")) {
				this.jButtonid_cuenta_contable_retencionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencionBusqueda")) {
				this.jButtonid_cuenta_contable_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_tipo_cambioClienteRetencionBusqueda")) {
				this.jButtonvalor_tipo_cambioClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_localClienteRetencionBusqueda")) {
				this.jButtondebito_mone_localClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_localClienteRetencionBusqueda")) {
				this.jButtoncredito_mone_localClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_extraClienteRetencionBusqueda")) {
				this.jButtondebito_mone_extraClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_extraClienteRetencionBusqueda")) {
				this.jButtoncredito_mone_extraClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("beneficiarioClienteRetencionBusqueda")) {
				this.jButtonbeneficiarioClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_benefClienteRetencionBusqueda")) {
				this.jButtonnombre_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccion_benefClienteRetencionBusqueda")) {
				this.jButtondireccion_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefono_benefClienteRetencionBusqueda")) {
				this.jButtontelefono_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ruc_benefClienteRetencionBusqueda")) {
				this.jButtonruc_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_retencionClienteRetencionUpdate")) {
				this.jButtonid_estado_retencionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_retencionClienteRetencionBusqueda")) {
				this.jButtonid_estado_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableClienteRetencion")) {
				this.jButtonid_asiento_contableClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteClienteRetencion")) {
				this.jButtonid_clienteClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencion")) {
				this.jButtonid_cuenta_contable_retencionClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("id_facturaClienteRetencion")) {
				this.jButtonid_facturaClienteRetencionActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdAsientoContableClienteRetencion")) {
				this.jButtonFK_IdAsientoContableClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteClienteRetencion")) {
				this.jButtonFK_IdClienteClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableClienteRetencionClienteRetencion")) {
				this.jButtonFK_IdCuentaContableClienteRetencionClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoRetencionClienteRetencion")) {
				this.jButtonFK_IdEstadoRetencionClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFacturaClienteRetencion")) {
				this.jButtonFK_IdFacturaClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoRetencionClienteRetencion")) {
				this.jButtonFK_IdTipoRetencionClienteRetencionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionClienteRetencion")) {
				this.jButtonFK_IdTransaccionClienteRetencionActionPerformed(evt);
			}
			
			;
			
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessClienteRetencion();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteRetencionActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ClienteRetencion clienteretencionLocal=null;
			
			if(!this.getEsControlTabla()) {
				clienteretencionLocal=this.clienteretencion;
			} else {
				clienteretencionLocal=this.clienteretencionAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
							
				
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteRetencionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
								
						
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
								
				
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
							
				
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteRetencionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
								
				
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteRetencionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosClienteRetencion")) {
					jCheckBoxSeleccionarTodosClienteRetencionItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosClienteRetencion")) {
					jCheckBoxSeleccionadosClienteRetencionItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarClienteRetencion")) {
					
				}
				
				


				
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
												
				
				


				
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteRetencionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteRetencionActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaClienteRetencionActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.clienteretencion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.clienteretencion);
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ClienteRetencion.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ClienteRetencion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaClienteRetencionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.clienteretencionAnterior =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarClienteRetencion")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosClienteRetencionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosClienteRetencion.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.clienteretencion =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.clienteretencion =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.clienteretencion);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarClienteRetencion")) {
				
				}
				
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarClienteRetencion")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosClienteRetencion.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarClienteRetencion")) {
			
			}
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessClienteRetencion();
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			if(sTipo.equals("NuevoClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarClienteRetencion")) {
				jButtonDuplicarClienteRetencionActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarClienteRetencion")) {
				jButtonCopiarClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormClienteRetencion")) {
				jButtonVerFormClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesClienteRetencion")) {
				jButtonNuevoClienteRetencionActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarClienteRetencion")) {
				jButtonModificarClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarClienteRetencion")) {
				jButtonActualizarClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarClienteRetencion")) {
				jButtonEliminarClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarClienteRetencion")) {
				jButtonCancelarClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarClienteRetencion")) {
				jButtonCerrarClienteRetencionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosClienteRetencion")) {
				jButtonGuardarCambiosClienteRetencionActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosClienteRetencion")) {
				jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByClienteRetencion")) {
				jButtonAbrirOrderByClienteRetencionActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionClienteRetencion")) {
				jButtonRecargarInformacionClienteRetencionActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresClienteRetencion")) {
				jButtonAnterioresClienteRetencionActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesClienteRetencion")) {
				jButtonSiguientesClienteRetencionActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idClienteRetencionBusqueda")) {
				this.jButtonidClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaClienteRetencionUpdate")) {
				this.jButtonid_empresaClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaClienteRetencionBusqueda")) {
				this.jButtonid_empresaClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalClienteRetencionUpdate")) {
				this.jButtonid_sucursalClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalClienteRetencionBusqueda")) {
				this.jButtonid_sucursalClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioClienteRetencionUpdate")) {
				this.jButtonid_ejercicioClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioClienteRetencionBusqueda")) {
				this.jButtonid_ejercicioClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoClienteRetencionUpdate")) {
				this.jButtonid_periodoClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoClienteRetencionBusqueda")) {
				this.jButtonid_periodoClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioClienteRetencionUpdate")) {
				this.jButtonid_anioClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioClienteRetencionBusqueda")) {
				this.jButtonid_anioClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesClienteRetencionUpdate")) {
				this.jButtonid_mesClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesClienteRetencionBusqueda")) {
				this.jButtonid_mesClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaClienteRetencionBusqueda")) {
				this.jButtonfechaClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteClienteRetencion")) {
				this.jButtonid_clienteClienteRetencionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteClienteRetencionUpdate")) {
				this.jButtonid_clienteClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteClienteRetencionBusqueda")) {
				this.jButtonid_clienteClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaClienteRetencion")) {
				this.jButtonid_facturaClienteRetencionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaClienteRetencionUpdate")) {
				this.jButtonid_facturaClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaClienteRetencionBusqueda")) {
				this.jButtonid_facturaClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionClienteRetencionUpdate")) {
				this.jButtonid_transaccionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionClienteRetencionBusqueda")) {
				this.jButtonid_transaccionClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_retencionClienteRetencionUpdate")) {
				this.jButtonid_tipo_retencionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_retencionClienteRetencionBusqueda")) {
				this.jButtonid_tipo_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeClienteRetencionBusqueda")) {
				this.jButtonporcentajeClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("base_imponibleClienteRetencionBusqueda")) {
				this.jButtonbase_imponibleClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorClienteRetencionBusqueda")) {
				this.jButtonvalorClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionClienteRetencionBusqueda")) {
				this.jButtonnumero_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionClienteRetencionBusqueda")) {
				this.jButtondescripcionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableClienteRetencion")) {
				this.jButtonid_asiento_contableClienteRetencionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableClienteRetencionUpdate")) {
				this.jButtonid_asiento_contableClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableClienteRetencionBusqueda")) {
				this.jButtonid_asiento_contableClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencion")) {
				this.jButtonid_cuenta_contable_retencionClienteRetencionActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencionArbol")) {
				this.abrirFrameTreeCuentaContableClienteRetencion("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencionUpdate")) {
				this.jButtonid_cuenta_contable_retencionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_retencionClienteRetencionBusqueda")) {
				this.jButtonid_cuenta_contable_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_tipo_cambioClienteRetencionBusqueda")) {
				this.jButtonvalor_tipo_cambioClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_localClienteRetencionBusqueda")) {
				this.jButtondebito_mone_localClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_localClienteRetencionBusqueda")) {
				this.jButtoncredito_mone_localClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_extraClienteRetencionBusqueda")) {
				this.jButtondebito_mone_extraClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_extraClienteRetencionBusqueda")) {
				this.jButtoncredito_mone_extraClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("beneficiarioClienteRetencionBusqueda")) {
				this.jButtonbeneficiarioClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_benefClienteRetencionBusqueda")) {
				this.jButtonnombre_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccion_benefClienteRetencionBusqueda")) {
				this.jButtondireccion_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefono_benefClienteRetencionBusqueda")) {
				this.jButtontelefono_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ruc_benefClienteRetencionBusqueda")) {
				this.jButtonruc_benefClienteRetencionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_retencionClienteRetencionUpdate")) {
				this.jButtonid_estado_retencionClienteRetencionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_retencionClienteRetencionBusqueda")) {
				this.jButtonid_estado_retencionClienteRetencionBusquedaActionPerformed(evt);
			}
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessClienteRetencion();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameClienteRetencion")) {
				closingInternalFrameClienteRetencion();
				
			} else if(sTipo.equals("jButtonCancelarClienteRetencion")) {
				JInternalFrameBase jInternalFrameDetalleFormClienteRetencion = (JInternalFrameBase)evt.getSource();
	            	
	            ClienteRetencionBeanSwingJInternalFrame jInternalFrameParent=(ClienteRetencionBeanSwingJInternalFrame)jInternalFrameDetalleFormClienteRetencion.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarClienteRetencionActionPerformed(null);
			}
			
			ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.clienteretencion,new Object(),this.clienteretencionParameterGeneral,this.clienteretencionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormClienteRetencion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormClienteRetencion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormClienteRetencion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.clienteretencion)) {
			if(!esControlTabla) {
				if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);			
				}
				
				if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualClienteRetencion(this.clienteretencion,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.clienteretencionReturnGeneral=clienteretencionLogic.procesarEventosClienteRetencionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.clienteretencionLogic.getClienteRetencions(),this.clienteretencion,this.clienteretencionParameterGeneral,this.isEsNuevoClienteRetencion,classes);//this.clienteretencionLogic.getClienteRetencion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanClienteRetencion(this.clienteretencionReturnGeneral,this.clienteretencionBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanClienteRetencion(classes,this.clienteretencionReturnGeneral,this.clienteretencionBean,false);
					}
						
					if(this.clienteretencionReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyClienteRetencion(this.clienteretencionReturnGeneral.getClienteRetencion());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioClienteRetencion(this.clienteretencionReturnGeneral.getClienteRetencion());	
					}
						
					if(this.clienteretencionReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioClienteRetencion(this.clienteretencionReturnGeneral.getClienteRetencion(),classes);//this.clienteretencionBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioClienteRetencion(this.clienteretencion,classes);//this.clienteretencionBean);									
				}
			
				if(ClienteRetencionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualClienteRetencion(this.clienteretencion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysClienteRetencion(this.clienteretencion);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.clienteretencionAnterior!=null) {
						this.clienteretencion=this.clienteretencionAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.clienteretencionReturnGeneral=clienteretencionLogic.procesarEventosClienteRetencionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.clienteretencionLogic.getClienteRetencions(),this.clienteretencion,this.clienteretencionParameterGeneral,this.isEsNuevoClienteRetencion,classes);//this.clienteretencionLogic.getClienteRetencion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.clienteretencionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.clienteretencionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.clienteretencionReturnGeneral.getClienteRetencion(),clienteretencionLogic.getClienteRetencions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.clienteretencionReturnGeneral.getClienteRetencion(),this.clienteretencions);
				}
				//ARCHITECTURE
				
				//this.jTableDatosClienteRetencion.repaint();
				
				//((AbstractTableModel) this.jTableDatosClienteRetencion.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosClienteRetencion();
			}
		}
	}
	
	public void actualizarVisualTableDatosClienteRetencion() throws Exception {
		
		ClienteRetencionModel clienteretencionModel=(ClienteRetencionModel)this.jTableDatosClienteRetencion.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			clienteretencionModel.clienteretencions=this.clienteretencionLogic.getClienteRetencions();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			clienteretencionModel.clienteretencions=this.clienteretencions;
		}
		
		
		((ClienteRetencionModel) this.jTableDatosClienteRetencion.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaClienteRetencion() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getclienteretencionAnterior(),this.clienteretencionLogic.getClienteRetencions());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getclienteretencionAnterior(),this.clienteretencions);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosClienteRetencion();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioClienteRetencion(ClienteRetencion clienteretencion,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.clienteretencion,new Object(),generalEntityParameterGeneral,this.clienteretencionReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.clienteretencionSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ClienteRetencionConstantesFunciones.getClassesRelationshipsOfClienteRetencion(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ClienteRetencionConstantesFunciones.getClassesRelationshipsFromStringsOfClienteRetencion(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormClienteRetencion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ClienteRetencionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.clienteretencion,new Object(),generalEntityParameterGeneral,this.clienteretencionReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioClienteRetencion(ClienteRetencionBean clienteretencionBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanClienteRetencion(ArrayList<Classe> classes,ClienteRetencionReturnGeneral clienteretencionReturnGeneral,ClienteRetencionBean clienteretencionBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualClienteRetencion(ClienteRetencion clienteretencion,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.clienteretencion)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormClienteRetencion = new ClienteRetencionDetalleFormJInternalFrame(jDesktopPane,this.clienteretencionSessionBean.getConGuardarRelaciones(),this.clienteretencionSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.setVisible(false);
		this.jInternalFrameDetalleFormClienteRetencion.setSelected(false);						
		
		this.jInternalFrameDetalleFormClienteRetencion.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormClienteRetencion.clienteretencionLogic=this.clienteretencionLogic;
		
		this.cargarCombosFrameForeignKeyClienteRetencion("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleClienteRetencion();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleClienteRetencion();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyClienteRetencion("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyClienteRetencion();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormClienteRetencion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarClienteRetencion"));
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarClienteRetencion.addActionListener(new ButtonActionListener(this,"ModificarClienteRetencion"));

		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarToolBarClienteRetencion.addActionListener(new ButtonActionListener(this,"ModificarToolBarClienteRetencion"));
					
		this.jInternalFrameDetalleFormClienteRetencion.jMenuItemModificarClienteRetencion.addActionListener(new ButtonActionListener(this,"MenuItemModificarClienteRetencion"));		
		
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarClienteRetencion.addActionListener (new ButtonActionListener(this,"ActualizarClienteRetencion"));
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarToolBarClienteRetencion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarClienteRetencion"));
						
		this.jInternalFrameDetalleFormClienteRetencion.jMenuItemActualizarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarClienteRetencion"));		
		
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarClienteRetencion.addActionListener (new ButtonActionListener(this,"EliminarClienteRetencion"));
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"EliminarToolBarClienteRetencion"));
								
		this.jInternalFrameDetalleFormClienteRetencion.jMenuItemEliminarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarClienteRetencion"));		
		
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarClienteRetencion.addActionListener (new ButtonActionListener(this,"CancelarClienteRetencion"));
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"CancelarToolBarClienteRetencion"));
					
		this.jInternalFrameDetalleFormClienteRetencion.jMenuItemCancelarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarClienteRetencion"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jMenuItemDetalleCerrarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarClienteRetencion"));		
		
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarClienteRetencion"));
		
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarClienteRetencion"));
		
		
		
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioClienteRetencion"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonidClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"idClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_empresaClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_empresaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_sucursalClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_sucursalClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_ejercicioClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_ejercicioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_periodoClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_periodoClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_anioClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_anioClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_anioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_mesClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_mesClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_mesClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonfechaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"fechaClienteRetencionBusqueda"));
		//jButtonid_clienteClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencion.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencionBusqueda"));
		//jButtonid_facturaClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencion.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_transaccionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_transaccionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_tipo_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_tipo_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonporcentajeClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonbase_imponibleClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"base_imponibleClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonvalorClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"valorClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonnumero_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondescripcionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionClienteRetencionBusqueda"));
		//jButtonid_asiento_contableClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencion.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencionBusqueda"));
		//jButtonid_cuenta_contable_retencionClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencionClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencion.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencion"));
		//jButtonid_cuenta_contable_retencionClienteRetencionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableClienteRetencion("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonvalor_tipo_cambioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"valor_tipo_cambioClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondebito_mone_localClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_localClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtoncredito_mone_localClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_localClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondebito_mone_extraClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_extraClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtoncredito_mone_extraClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_extraClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonbeneficiarioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"beneficiarioClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonnombre_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"nombre_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondireccion_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"direccion_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtontelefono_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"telefono_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonruc_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"ruc_benefClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_estado_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_estado_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_retencionClienteRetencionBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesClienteRetencion"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameClienteRetencion"));
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarClienteRetencion"));
		}
		
		this.jTableDatosClienteRetencion.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarClienteRetencion"));
		
		this.jTableDatosClienteRetencion.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarClienteRetencion"));
		
		this.jButtonNuevoClienteRetencion.addActionListener(new ButtonActionListener(this,"NuevoClienteRetencion"));
		
		this.jButtonDuplicarClienteRetencion.addActionListener(new ButtonActionListener(this,"DuplicarClienteRetencion"));
		
		this.jButtonCopiarClienteRetencion.addActionListener(new ButtonActionListener(this,"CopiarClienteRetencion"));
		
		this.jButtonVerFormClienteRetencion.addActionListener(new ButtonActionListener(this,"VerFormClienteRetencion"));
		
		
		this.jButtonNuevoToolBarClienteRetencion.addActionListener(new ButtonActionListener(this,"NuevoToolBarClienteRetencion"));
			
		this.jButtonDuplicarToolBarClienteRetencion.addActionListener(new ButtonActionListener(this,"DuplicarToolBarClienteRetencion"));
			
		this.jMenuItemNuevoClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoClienteRetencion"));
			
		this.jMenuItemDuplicarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarClienteRetencion"));		
		
		
		this.jButtonNuevoRelacionesClienteRetencion.addActionListener (new ButtonActionListener(this,"NuevoRelacionesClienteRetencion"));
		
		
		this.jButtonNuevoRelacionesToolBarClienteRetencion.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarClienteRetencion"));
			
		this.jMenuItemNuevoRelacionesClienteRetencion.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesClienteRetencion"));		
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarClienteRetencion.addActionListener(new ButtonActionListener(this,"ModificarClienteRetencion"));
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonModificarToolBarClienteRetencion.addActionListener(new ButtonActionListener(this,"ModificarToolBarClienteRetencion"));
			
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemModificarClienteRetencion.addActionListener(new ButtonActionListener(this,"MenuItemModificarClienteRetencion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarClienteRetencion.addActionListener (new ButtonActionListener(this,"ActualizarClienteRetencion"));
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonActualizarToolBarClienteRetencion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarClienteRetencion"));
				
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemActualizarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarClienteRetencion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarClienteRetencion.addActionListener (new ButtonActionListener(this,"EliminarClienteRetencion"));
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonEliminarToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"EliminarToolBarClienteRetencion"));
						
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemEliminarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarClienteRetencion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarClienteRetencion.addActionListener (new ButtonActionListener(this,"CancelarClienteRetencion"));
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonCancelarToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"CancelarToolBarClienteRetencion"));
			
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemCancelarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarClienteRetencion"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarClienteRetencion"));		
		
		
		this.jButtonCerrarClienteRetencion.addActionListener (new ButtonActionListener(this,"CerrarClienteRetencion"));
		
		
		this.jButtonCerrarToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"CerrarToolBarClienteRetencion"));
			
		this.jMenuItemCerrarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemCerrarClienteRetencion"));
			
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jMenuItemDetalleCerrarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarClienteRetencion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.addActionListener (new ButtonActionListener(this,"GuardarCambiosClienteRetencion"));
		}
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarClienteRetencion"));
		}
		
		this.jButtonCopiarToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"CopiarToolBarClienteRetencion"));
			
		this.jButtonVerFormToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"VerFormToolBarClienteRetencion"));
		
		this.jMenuItemGuardarCambiosClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosClienteRetencion"));
			
		this.jMenuItemCopiarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemCopiarClienteRetencion"));		
		
		this.jMenuItemVerFormClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemVerFormClienteRetencion"));		
		
		
		this.jButtonGuardarCambiosTablaClienteRetencion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaClienteRetencion"));
		
		
		this.jButtonGuardarCambiosTablaToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarClienteRetencion"));
			
		this.jMenuItemGuardarCambiosTablaClienteRetencion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaClienteRetencion"));		
		
		
		
		this.jButtonRecargarInformacionClienteRetencion.addActionListener (new ButtonActionListener(this,"RecargarInformacionClienteRetencion"));
					
		this.jButtonRecargarInformacionToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarClienteRetencion"));
		
		this.jMenuItemRecargarInformacionClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionClienteRetencion"));		
		
		
		
		this.jButtonAnterioresClienteRetencion.addActionListener (new ButtonActionListener(this,"AnterioresClienteRetencion"));
		
		
		this.jButtonAnterioresToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"AnterioresToolBarClienteRetencion"));
		
		this.jMenuItemAnterioresClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresClienteRetencion"));		
		
		
		this.jButtonSiguientesClienteRetencion.addActionListener (new ButtonActionListener(this,"SiguientesClienteRetencion"));
		
		
		this.jButtonSiguientesToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"SiguientesToolBarClienteRetencion"));
			
		this.jMenuItemSiguientesClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesClienteRetencion"));
			
		this.jMenuItemAbrirOrderByClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByClienteRetencion"));
			
		this.jMenuItemMostrarOcultarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarClienteRetencion"));
			
		this.jMenuItemDetalleAbrirOrderByClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByClienteRetencion"));
			
		this.jMenuItemDetalleMostarOcultarClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarClienteRetencion"));		
		
		
		this.jButtonNuevoGuardarCambiosClienteRetencion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosClienteRetencion"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarClienteRetencion"));
			
		this.jMenuItemNuevoGuardarCambiosClienteRetencion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosClienteRetencion"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosClienteRetencion.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosClienteRetencion"));

		this.jCheckBoxSeleccionadosClienteRetencion.addItemListener(new CheckBoxItemListener(this,"SeleccionadosClienteRetencion"));
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioClienteRetencion"));
		}
		
		
		this.jComboBoxTiposRelacionesClienteRetencion.addActionListener (new ButtonActionListener(this,"TiposRelacionesClienteRetencion"));
			
		this.jComboBoxTiposAccionesClienteRetencion.addActionListener (new ButtonActionListener(this,"TiposAccionesClienteRetencion"));
					
		this.jComboBoxTiposSeleccionarClienteRetencion.addActionListener (new ButtonActionListener(this,"TiposSeleccionarClienteRetencion"));
			
		this.jTextFieldValorCampoGeneralClienteRetencion.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralClienteRetencion"));		
		
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonidClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"idClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_empresaClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_empresaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_sucursalClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_sucursalClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_ejercicioClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_ejercicioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_periodoClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_periodoClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_anioClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_anioClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_anioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_mesClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_mesClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_mesClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonfechaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"fechaClienteRetencionBusqueda"));
		//jButtonid_clienteClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencion.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencionBusqueda"));
		//jButtonid_facturaClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencion.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_transaccionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_transaccionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_tipo_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_tipo_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonporcentajeClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonbase_imponibleClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"base_imponibleClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonvalorClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"valorClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonnumero_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondescripcionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionClienteRetencionBusqueda"));
		//jButtonid_asiento_contableClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencion.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencionBusqueda"));
		//jButtonid_cuenta_contable_retencionClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencionClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencion.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencion"));
		//jButtonid_cuenta_contable_retencionClienteRetencionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableClienteRetencion("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonvalor_tipo_cambioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"valor_tipo_cambioClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondebito_mone_localClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_localClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtoncredito_mone_localClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_localClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondebito_mone_extraClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_extraClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtoncredito_mone_extraClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_extraClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonbeneficiarioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"beneficiarioClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonnombre_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"nombre_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondireccion_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"direccion_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtontelefono_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"telefono_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonruc_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"ruc_benefClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_estado_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_estado_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_retencionClienteRetencionBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAsientoContableClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableClienteRetencion"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableClienteRetencion.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencion"));

			this.jButtonFK_IdClienteClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdClienteClienteRetencion"));

			this.jButtonBuscarFK_IdClienteid_clienteClienteRetencion.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencion"));

			this.jButtonFK_IdCuentaContableClienteRetencionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableClienteRetencionClienteRetencion"));

			this.jButtonBuscarFK_IdCuentaContableClienteRetencionid_cuenta_contable_retencionClienteRetencion.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencion"));

			this.jButtonFK_IdEstadoRetencionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdEstadoRetencionClienteRetencion"));

			this.jButtonFK_IdFacturaClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdFacturaClienteRetencion"));

			this.jButtonBuscarFK_IdFacturaid_facturaClienteRetencion.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencion"));

			this.jButtonFK_IdTipoRetencionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionClienteRetencion"));

			this.jButtonFK_IdTransaccionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionClienteRetencion"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoClienteRetencion!=null) {
				this.jInternalFrameReporteDinamicoClienteRetencion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoClienteRetencion"));
				this.jInternalFrameReporteDinamicoClienteRetencion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoClienteRetencion"));
				this.jInternalFrameReporteDinamicoClienteRetencion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoClienteRetencion"));
			}
			
			//this.jButtonCerrarReporteDinamicoClienteRetencion.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoClienteRetencion"));				
			//this.jButtonGenerarReporteDinamicoClienteRetencion.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoClienteRetencion"));
			//this.jButtonGenerarExcelReporteDinamicoClienteRetencion.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoClienteRetencion"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionClienteRetencion!=null) {
				this.jInternalFrameImportacionClienteRetencion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionClienteRetencion"));
				this.jInternalFrameImportacionClienteRetencion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionClienteRetencion"));
				this.jInternalFrameImportacionClienteRetencion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionClienteRetencion"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByClienteRetencion.addActionListener (new ButtonActionListener(this,"AbrirOrderByClienteRetencion"));
			
			this.jButtonAbrirOrderByToolBarClienteRetencion.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarClienteRetencion"));			
			
			if(this.jInternalFrameOrderByClienteRetencion!=null) {
				this.jInternalFrameOrderByClienteRetencion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByClienteRetencion"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormClienteRetencion.jTabbedPaneRelacionesClienteRetencion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesClienteRetencion"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameClienteRetencion();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormClienteRetencion.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormClienteRetencion = (JInternalFrameBase)event.getSource();
	            	
	            ClienteRetencionBeanSwingJInternalFrame jInternalFrameParent=(ClienteRetencionBeanSwingJInternalFrame)jInternalFrameDetalleFormClienteRetencion.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarClienteRetencionActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosClienteRetencion.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosClienteRetencionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosClienteRetencion.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosClienteRetencion.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteRetencionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteRetencionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteRetencionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoClienteRetencion";
		inputMap = this.jButtonNuevoClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoClienteRetencionActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteRetencionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteRetencionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoClienteRetencionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesClienteRetencion";
		inputMap = this.jButtonNuevoRelacionesClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoClienteRetencionActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarClienteRetencion";
		inputMap = this.jButtonModificarClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarClienteRetencionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarClienteRetencion";
		inputMap = this.jButtonActualizarClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarClienteRetencionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarClienteRetencion";
		inputMap = this.jButtonEliminarClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarClienteRetencionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarClienteRetencion";
		inputMap = this.jButtonCancelarClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarClienteRetencionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarClienteRetencion";
		inputMap = this.jButtonCerrarClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarClienteRetencionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosClienteRetencion";
		inputMap = this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormClienteRetencion.jButtonGuardarCambiosClienteRetencion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosClienteRetencionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosClienteRetencion.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosClienteRetencionItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesClienteRetencion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesClienteRetencionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarClienteRetencion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarClienteRetencionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralClienteRetencion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralClienteRetencionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonidClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"idClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_empresaClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_empresaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_sucursalClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_sucursalClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_ejercicioClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_ejercicioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_periodoClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_periodoClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_anioClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_anioClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_anioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_mesClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_mesClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_mesClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonfechaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"fechaClienteRetencionBusqueda"));
		//jButtonid_clienteClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencion.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencionBusqueda"));
		//jButtonid_facturaClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencion.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_transaccionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_transaccionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_tipo_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_tipo_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonporcentajeClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonbase_imponibleClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"base_imponibleClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonvalorClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"valorClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonnumero_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondescripcionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionClienteRetencionBusqueda"));
		//jButtonid_asiento_contableClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencion.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencionBusqueda"));
		//jButtonid_cuenta_contable_retencionClienteRetencion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_retencionClienteRetencionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencion.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencion"));
		//jButtonid_cuenta_contable_retencionClienteRetencionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableClienteRetencion("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonvalor_tipo_cambioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"valor_tipo_cambioClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondebito_mone_localClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_localClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtoncredito_mone_localClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_localClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondebito_mone_extraClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_extraClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtoncredito_mone_extraClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_extraClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonbeneficiarioClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"beneficiarioClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonnombre_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"nombre_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtondireccion_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"direccion_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtontelefono_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"telefono_benefClienteRetencionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonruc_benefClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"ruc_benefClienteRetencionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_estado_retencionClienteRetencionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_retencionClienteRetencionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormClienteRetencion.jButtonid_estado_retencionClienteRetencionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_retencionClienteRetencionBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableClienteRetencion"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableClienteRetencion.addActionListener(new ButtonActionListener(this,"id_asiento_contableClienteRetencion"));

		this.jButtonFK_IdClienteClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdClienteClienteRetencion"));

		this.jButtonBuscarFK_IdClienteid_clienteClienteRetencion.addActionListener(new ButtonActionListener(this,"id_clienteClienteRetencion"));

		this.jButtonFK_IdCuentaContableClienteRetencionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableClienteRetencionClienteRetencion"));

		this.jButtonBuscarFK_IdCuentaContableClienteRetencionid_cuenta_contable_retencionClienteRetencion.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_retencionClienteRetencion"));

		this.jButtonFK_IdEstadoRetencionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdEstadoRetencionClienteRetencion"));

		this.jButtonFK_IdFacturaClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdFacturaClienteRetencion"));

		this.jButtonBuscarFK_IdFacturaid_facturaClienteRetencion.addActionListener(new ButtonActionListener(this,"id_facturaClienteRetencion"));

		this.jButtonFK_IdTipoRetencionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdTipoRetencionClienteRetencion"));

		this.jButtonFK_IdTransaccionClienteRetencion.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionClienteRetencion"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionClienteRetencion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionClienteRetencionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarClienteRetencionActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarClienteRetencion.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosClienteRetencion(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
					clienteretencionAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ClienteRetencion clienteretencionAux:clienteretencions) {
					clienteretencionAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosClienteRetencionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingClienteRetencion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
						clienteretencionAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ClienteRetencion clienteretencionAux:clienteretencions) {
						clienteretencionAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ClienteRetencion clienteretencionAux:clienteretencions) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaClienteRetencion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosClienteRetencion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosClienteRetencion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosClienteRetencionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingClienteRetencion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosClienteRetencion.getSelectedRows();
			
			ClienteRetencion clienteretencionLocal=new ClienteRetencion();
			
			//this.seleccionarTodosClienteRetencion(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteretencionLocal =(ClienteRetencion) this.clienteretencionLogic.getClienteRetencions().toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					clienteretencionLocal =(ClienteRetencion) this.clienteretencions.toArray()[this.jTableDatosClienteRetencion.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				clienteretencionLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
						clienteretencionAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ClienteRetencion clienteretencionAux:clienteretencions) {
						clienteretencionAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaClienteRetencion(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosClienteRetencion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosClienteRetencion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosClienteRetencion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualClienteRetencionItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarClienteRetencionParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralClienteRetencionActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingClienteRetencion(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralClienteRetencion.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ClienteRetencion clienteretencionAux:this.clienteretencionLogic.getClienteRetencions()) {
				
						if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							clienteretencionAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							clienteretencionAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE)) {
							existe=true;
							clienteretencionAux.setbase_imponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							clienteretencionAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							clienteretencionAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							clienteretencionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO)) {
							existe=true;
							clienteretencionAux.setvalor_tipo_cambio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL)) {
							existe=true;
							clienteretencionAux.setdebito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL)) {
							existe=true;
							clienteretencionAux.setcredito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA)) {
							existe=true;
							clienteretencionAux.setdebito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA)) {
							existe=true;
							clienteretencionAux.setcredito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO)) {
							existe=true;
							clienteretencionAux.setbeneficiario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF)) {
							existe=true;
							clienteretencionAux.setnombre_benef(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF)) {
							existe=true;
							clienteretencionAux.setdireccion_benef(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF)) {
							existe=true;
							clienteretencionAux.settelefono_benef(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_RUCBENEF)) {
							existe=true;
							clienteretencionAux.setruc_benef(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ClienteRetencion clienteretencionAux:clienteretencions) {
					
						if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							clienteretencionAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							clienteretencionAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE)) {
							existe=true;
							clienteretencionAux.setbase_imponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							clienteretencionAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							clienteretencionAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							clienteretencionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO)) {
							existe=true;
							clienteretencionAux.setvalor_tipo_cambio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL)) {
							existe=true;
							clienteretencionAux.setdebito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL)) {
							existe=true;
							clienteretencionAux.setcredito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA)) {
							existe=true;
							clienteretencionAux.setdebito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA)) {
							existe=true;
							clienteretencionAux.setcredito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO)) {
							existe=true;
							clienteretencionAux.setbeneficiario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF)) {
							existe=true;
							clienteretencionAux.setnombre_benef(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF)) {
							existe=true;
							clienteretencionAux.setdireccion_benef(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF)) {
							existe=true;
							clienteretencionAux.settelefono_benef(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_RUCBENEF)) {
							existe=true;
							clienteretencionAux.setruc_benef(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaClienteRetencion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesClienteRetencionActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingClienteRetencion(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioClienteRetencion=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesClienteRetencion.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteClienteRetencion) {				
					conSplash=true;//false;										
					
					//this.startProcessClienteRetencion(conSplash);
				
					this.generarReporteClienteRetencionsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoClienteRetencionsSeleccionados();
				//this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoClienteRetencionsSeleccionados(false);
				//this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoClienteRetencionsSeleccionados(true);
				//this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessClienteRetencion();
				
				this.exportarClienteRetencionsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionClienteRetencions();
				//this.importarClienteRetencions();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessClienteRetencion();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelClienteRetencionsSeleccionados();
				//this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Retencion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessClienteRetencion();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoClienteRetencion)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyClienteRetencion(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.setSelectedIndex(0);					
				}	
			} 			
			else if(ClienteRetencionBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteClienteRetencion) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessClienteRetencion(conSplash);
					
						//this.actualizarParametrosGeneralClienteRetencion();
						
						this.generarReporteProcesoAccionClienteRetencionsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ClienteRetencionBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO RetencionES SELECCIONADOS?", "MANTENIMIENTO DE Retencion", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessClienteRetencion();
				
						this.actualizarParametrosGeneralClienteRetencion();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.clienteretencionReturnGeneral=clienteretencionLogic.procesarAccionClienteRetencionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.clienteretencionLogic.getClienteRetencions(),this.clienteretencionParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarClienteRetencionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralClienteRetencion();
					
					ClienteRetencionBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarClienteRetencionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesClienteRetencion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormClienteRetencion.jComboBoxTiposAccionesFormularioClienteRetencion.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessClienteRetencion(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesClienteRetencionActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessClienteRetencion();
			
			if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
			ClienteRetencion clienteretencion=new ClienteRetencion();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingClienteRetencion(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesClienteRetencion.getSelectedItem();
			
			
			
			
			clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
			//this.sTipoAccion;
			
			if(clienteretencionsSeleccionados.size()==1) {
				for(ClienteRetencion clienteretencionAux:clienteretencionsSeleccionados) {
					clienteretencion=clienteretencionAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessClienteRetencion();
			
      		//this.finishProcessClienteRetencion(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarClienteRetencionReturnGeneral() throws Exception {
		if(this.clienteretencionReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.clienteretencionReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.clienteretencionReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.clienteretencionReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.clienteretencionReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.clienteretencionReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingClienteRetencion(false);
		}
		
		if(this.clienteretencionReturnGeneral.getConRetornoLista() || this.clienteretencionReturnGeneral.getConRetornoObjeto()) {
			if(this.clienteretencionReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.clienteretencionLogic.setClienteRetencions(this.clienteretencionReturnGeneral.getClienteRetencions());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.clienteretencionReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.clienteretencionLogic.setClienteRetencion(this.clienteretencionReturnGeneral.getClienteRetencion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingClienteRetencion(false);
		}
	}
	
	public void actualizarParametrosGeneralClienteRetencion() throws Exception {
		
		
	}
	
	public ArrayList<ClienteRetencion> getClienteRetencionsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioClienteRetencion) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ClienteRetencion clienteretencionAux:clienteretencionLogic.getClienteRetencions()) {
					if(clienteretencionAux.getIsSelected()) {
						clienteretencionsSeleccionados.add(clienteretencionAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ClienteRetencion clienteretencionAux:this.clienteretencions) {
					if(clienteretencionAux.getIsSelected()) {
						clienteretencionsSeleccionados.add(clienteretencionAux);				
					}
				}
			}
			
			if(clienteretencionsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						clienteretencionsSeleccionados.addAll(this.clienteretencionLogic.getClienteRetencions());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						clienteretencionsSeleccionados.addAll(this.clienteretencions);				
					}
				}
			}
		} else {
			clienteretencionsSeleccionados.add(this.clienteretencion);
		}
		
		return clienteretencionsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteClienteRetencionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalClienteRetencionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoClienteRetencionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoClienteRetencionsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoClienteRetencionsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Retencion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesClienteRetencionsSeleccionados() throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteClienteRetencions("Todos",clienteretencionsSeleccionados);
		
	}	
	
	public void generarReporteNormalClienteRetencionsSeleccionados() throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteClienteRetencions("Todos",clienteretencionsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionClienteRetencionsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteClienteRetencions("Todos",clienteretencionsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoClienteRetencionsSeleccionados() throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
		
		
		this.abrirInicializarFrameReporteDinamicoClienteRetencion();
		
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoClienteRetencion();
		
		
		//this.generarReporteClienteRetencions("Todos",clienteretencionsSeleccionados ,clienteretencionImplementable,clienteretencionImplementableHome);
	}
	
	public void mostrarImportacionClienteRetencions() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionClienteRetencion();
		
		this.abrirFrameImportacionClienteRetencion();		
		
			
		//this.generarReporteClienteRetencions("Todos",clienteretencionsSeleccionados ,clienteretencionImplementable,clienteretencionImplementableHome);
	}
	
	public void importarClienteRetencions() throws Exception {		
	
	}
	
	public void exportarClienteRetencionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelClienteRetencionsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoClienteRetencionsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlClienteRetencionsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Retencion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoClienteRetencionsSeleccionados() throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"clienteretencion."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarClienteRetencion(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ClienteRetencion clienteretencionAux:clienteretencionsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarClienteRetencion(clienteretencionAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//clienteretencionAux.setsDetalleGeneralEntityReporte(clienteretencionAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarClienteRetencion(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_VALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_RUCBENEF;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarClienteRetencion(ClienteRetencion clienteretencion,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=clienteretencion.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.gettiporetencion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getporcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getbase_imponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getvalor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getnumero_retencion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getcuentacontableclienteretencion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getvalor_tipo_cambio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getdebito_mone_local().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getcredito_mone_local().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getdebito_mone_extra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getcredito_mone_extra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getbeneficiario();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getnombre_benef();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getdireccion_benef();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.gettelefono_benef();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getruc_benef();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=clienteretencion.getestadoretencion_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelClienteRetencionsSeleccionados() throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"clienteretencion.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ClienteRetencions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelClienteRetencion(row);				
				iRow++;
			}				
			
			for(ClienteRetencion clienteretencionAux:clienteretencionsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelClienteRetencion(clienteretencionAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlClienteRetencionsSeleccionados() throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();		
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"clienteretencion.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("clienteretencions");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("clienteretencion");
			//elementRoot.appendChild(element);
		
			for(ClienteRetencion clienteretencionAux:clienteretencionsSeleccionados) {
				element = document.createElement("clienteretencion");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlClienteRetencion(clienteretencionAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Retencion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelClienteRetencion(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_BASEIMPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_VALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_VALORTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONELOCAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONELOCAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DEBITOMONEEXTRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_CREDITOMONEEXTRA);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_RUCBENEF);
		cell = row.createCell(iColumn++);cell.setCellValue(ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelClienteRetencion(ClienteRetencion clienteretencion,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.gettiporetencion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getporcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getbase_imponible());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getvalor());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getnumero_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getcuentacontableclienteretencion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getvalor_tipo_cambio());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getdebito_mone_local());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getcredito_mone_local());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getdebito_mone_extra());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getcredito_mone_extra());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getbeneficiario());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getnombre_benef());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getdireccion_benef());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.gettelefono_benef());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getruc_benef());
		cell = row.createCell(iColumn++);cell.setCellValue(clienteretencion.getestadoretencion_descripcion());				
	}
	
	public void setFilaDatosExportarXmlClienteRetencion(ClienteRetencion clienteretencion,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ClienteRetencionConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(clienteretencion.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ClienteRetencionConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(clienteretencion.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(clienteretencion.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(clienteretencion.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(clienteretencion.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(clienteretencion.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(clienteretencion.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(clienteretencion.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementfecha = document.createElement(ClienteRetencionConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(clienteretencion.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementcliente_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(clienteretencion.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementfactura_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDFACTURA);
		elementfactura_descripcion.appendChild(document.createTextNode(clienteretencion.getfactura_descripcion()));
		element.appendChild(elementfactura_descripcion);

		Element elementtransaccion_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(clienteretencion.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementtiporetencion_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDTIPORETENCION);
		elementtiporetencion_descripcion.appendChild(document.createTextNode(clienteretencion.gettiporetencion_descripcion()));
		element.appendChild(elementtiporetencion_descripcion);

		Element elementporcentaje = document.createElement(ClienteRetencionConstantesFunciones.PORCENTAJE);
		elementporcentaje.appendChild(document.createTextNode(clienteretencion.getporcentaje().toString().trim()));
		element.appendChild(elementporcentaje);

		Element elementbase_imponible = document.createElement(ClienteRetencionConstantesFunciones.BASEIMPONIBLE);
		elementbase_imponible.appendChild(document.createTextNode(clienteretencion.getbase_imponible().toString().trim()));
		element.appendChild(elementbase_imponible);

		Element elementvalor = document.createElement(ClienteRetencionConstantesFunciones.VALOR);
		elementvalor.appendChild(document.createTextNode(clienteretencion.getvalor().toString().trim()));
		element.appendChild(elementvalor);

		Element elementnumero_retencion = document.createElement(ClienteRetencionConstantesFunciones.NUMERORETENCION);
		elementnumero_retencion.appendChild(document.createTextNode(clienteretencion.getnumero_retencion().trim()));
		element.appendChild(elementnumero_retencion);

		Element elementdescripcion = document.createElement(ClienteRetencionConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(clienteretencion.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementasientocontable_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(clienteretencion.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementcuentacontableclienteretencion_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDCUENTACONTABLECLIENTERETENCION);
		elementcuentacontableclienteretencion_descripcion.appendChild(document.createTextNode(clienteretencion.getcuentacontableclienteretencion_descripcion()));
		element.appendChild(elementcuentacontableclienteretencion_descripcion);

		Element elementvalor_tipo_cambio = document.createElement(ClienteRetencionConstantesFunciones.VALORTIPOCAMBIO);
		elementvalor_tipo_cambio.appendChild(document.createTextNode(clienteretencion.getvalor_tipo_cambio().toString().trim()));
		element.appendChild(elementvalor_tipo_cambio);

		Element elementdebito_mone_local = document.createElement(ClienteRetencionConstantesFunciones.DEBITOMONELOCAL);
		elementdebito_mone_local.appendChild(document.createTextNode(clienteretencion.getdebito_mone_local().toString().trim()));
		element.appendChild(elementdebito_mone_local);

		Element elementcredito_mone_local = document.createElement(ClienteRetencionConstantesFunciones.CREDITOMONELOCAL);
		elementcredito_mone_local.appendChild(document.createTextNode(clienteretencion.getcredito_mone_local().toString().trim()));
		element.appendChild(elementcredito_mone_local);

		Element elementdebito_mone_extra = document.createElement(ClienteRetencionConstantesFunciones.DEBITOMONEEXTRA);
		elementdebito_mone_extra.appendChild(document.createTextNode(clienteretencion.getdebito_mone_extra().toString().trim()));
		element.appendChild(elementdebito_mone_extra);

		Element elementcredito_mone_extra = document.createElement(ClienteRetencionConstantesFunciones.CREDITOMONEEXTRA);
		elementcredito_mone_extra.appendChild(document.createTextNode(clienteretencion.getcredito_mone_extra().toString().trim()));
		element.appendChild(elementcredito_mone_extra);

		Element elementbeneficiario = document.createElement(ClienteRetencionConstantesFunciones.BENEFICIARIO);
		elementbeneficiario.appendChild(document.createTextNode(clienteretencion.getbeneficiario().trim()));
		element.appendChild(elementbeneficiario);

		Element elementnombre_benef = document.createElement(ClienteRetencionConstantesFunciones.NOMBREBENEF);
		elementnombre_benef.appendChild(document.createTextNode(clienteretencion.getnombre_benef().trim()));
		element.appendChild(elementnombre_benef);

		Element elementdireccion_benef = document.createElement(ClienteRetencionConstantesFunciones.DIRECCIONBENEF);
		elementdireccion_benef.appendChild(document.createTextNode(clienteretencion.getdireccion_benef().trim()));
		element.appendChild(elementdireccion_benef);

		Element elementtelefono_benef = document.createElement(ClienteRetencionConstantesFunciones.TELEFONOBENEF);
		elementtelefono_benef.appendChild(document.createTextNode(clienteretencion.gettelefono_benef().trim()));
		element.appendChild(elementtelefono_benef);

		Element elementruc_benef = document.createElement(ClienteRetencionConstantesFunciones.RUCBENEF);
		elementruc_benef.appendChild(document.createTextNode(clienteretencion.getruc_benef().trim()));
		element.appendChild(elementruc_benef);

		Element elementestadoretencion_descripcion = document.createElement(ClienteRetencionConstantesFunciones.IDESTADORETENCION);
		elementestadoretencion_descripcion.appendChild(document.createTextNode(clienteretencion.getestadoretencion_descripcion()));
		element.appendChild(elementestadoretencion_descripcion);
	}
	
	public void generarReporteGroupGenericoClienteRetencionsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ClienteRetencion> clienteretencionsSeleccionados=new ArrayList<ClienteRetencion>();
		
		clienteretencionsSeleccionados=this.getClienteRetencionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoClienteRetencion(clienteretencionsSeleccionados);
		
		this.generarReporteClienteRetencions("Todos",clienteretencionsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoClienteRetencion(ArrayList<ClienteRetencion> clienteretencionsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ClienteRetencion clienteretencionAux:clienteretencionsSeleccionados) {
				clienteretencionAux.setsDetalleGeneralEntityReporte(clienteretencionAux.toString());
			
				if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(clienteretencionAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDFACTURA)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDTIPORETENCION)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.gettiporetencion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_NUMERORETENCION)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getnumero_retencion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDCUENTACONTABLECLIENTERETENCION)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getcuentacontableclienteretencion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_BENEFICIARIO)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getbeneficiario());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_NOMBREBENEF)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getnombre_benef());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_DIRECCIONBENEF)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getdireccion_benef());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_TELEFONOBENEF)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.gettelefono_benef());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_RUCBENEF)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getruc_benef());
				}
				 else if(sTipoSeleccionar.equals(ClienteRetencionConstantesFunciones.LABEL_IDESTADORETENCION)) {
					existe=true;
					clienteretencionAux.setsDescripcionGeneralEntityReporte1(clienteretencionAux.getestadoretencion_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ClienteRetencionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesClienteRetencion(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoClienteRetencion=true;
				this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=true;
				this.isVisibilidadCeldaGuardarCambiosClienteRetencion=true;
			}
			
			this.isVisibilidadCeldaModificarClienteRetencion=false;
			this.isVisibilidadCeldaActualizarClienteRetencion=false;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
			this.isVisibilidadCeldaCancelarClienteRetencion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarClienteRetencion=true;
				} else {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoClienteRetencion=false;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=false;
			this.isVisibilidadCeldaModificarClienteRetencion=false;
			this.isVisibilidadCeldaActualizarClienteRetencion=true;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
			this.isVisibilidadCeldaCancelarClienteRetencion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarClienteRetencion=true;
				} else {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoClienteRetencion=false;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=false;
			this.isVisibilidadCeldaModificarClienteRetencion=false;
			this.isVisibilidadCeldaActualizarClienteRetencion=true;
			this.isVisibilidadCeldaEliminarClienteRetencion=true;
			this.isVisibilidadCeldaCancelarClienteRetencion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarClienteRetencion=true;
				} else {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoClienteRetencion=false;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=false;
			this.isVisibilidadCeldaModificarClienteRetencion=false;
			this.isVisibilidadCeldaActualizarClienteRetencion=true;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
			this.isVisibilidadCeldaCancelarClienteRetencion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				} else {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoClienteRetencion=true;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=true;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=true;
			this.isVisibilidadCeldaModificarClienteRetencion=false;
			this.isVisibilidadCeldaActualizarClienteRetencion=false;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
			this.isVisibilidadCeldaCancelarClienteRetencion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarClienteRetencion=true;
				} else {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoClienteRetencion=false;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=false;
			this.isVisibilidadCeldaActualizarClienteRetencion=false;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
			this.isVisibilidadCeldaCancelarClienteRetencion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				} else {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoClienteRetencion=false;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=false;
			this.isVisibilidadCeldaModificarClienteRetencion=true;
			this.isVisibilidadCeldaActualizarClienteRetencion=false;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
			this.isVisibilidadCeldaCancelarClienteRetencion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				} else {
					this.isVisibilidadCeldaGuardarClienteRetencion=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ClienteRetencionJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoClienteRetencion=true;
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=true;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=true;
		} else {
			this.actualizarEstadoPanelsClienteRetencion(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarClienteRetencion=false;
			//this.isVisibilidadCeldaVerFormClienteRetencion=false;
			this.isVisibilidadCeldaDuplicarClienteRetencion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!clienteretencionSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
		} else {
			this.isVisibilidadCeldaNuevoClienteRetencion=false;
			this.isVisibilidadCeldaGuardarCambiosClienteRetencion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(clienteretencionSessionBean.getEsGuardarRelacionado()) {
			if(!clienteretencionSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;												
			}
			
			this.jButtonCerrarClienteRetencion.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesClienteRetencion=false;
		}
		
		if(!this.permiteMantenimiento(this.clienteretencion)) {
			this.isVisibilidadCeldaActualizarClienteRetencion=false;
			this.isVisibilidadCeldaEliminarClienteRetencion=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesClienteRetencion() {
	}
	
	public void actualizarEstadoPanelsClienteRetencion(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionClienteRetencion!=null) {
				this.jScrollPanelDatosEdicionClienteRetencion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosClienteRetencion!=null) {
				this.jScrollPanelDatosClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelPaginacionClienteRetencion!=null) {
				this.jPanelPaginacionClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionClienteRetencion!=null) {
				this.jScrollPanelDatosEdicionClienteRetencion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosClienteRetencion!=null) {
				this.jScrollPanelDatosClienteRetencion.setVisible(false);
			}
			
			if(this.jPanelPaginacionClienteRetencion!=null) {
				this.jPanelPaginacionClienteRetencion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionClienteRetencion!=null) {
				this.jScrollPanelDatosEdicionClienteRetencion.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosClienteRetencion!=null) {
				this.jScrollPanelDatosClienteRetencion.setVisible(false);
			}
			
			if(this.jPanelPaginacionClienteRetencion!=null) {
				this.jPanelPaginacionClienteRetencion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionClienteRetencion!=null) {
				this.jScrollPanelDatosEdicionClienteRetencion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosClienteRetencion!=null) {
				this.jScrollPanelDatosClienteRetencion.setVisible(false);
			}
			
			if(this.jPanelPaginacionClienteRetencion!=null) {
				this.jPanelPaginacionClienteRetencion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionClienteRetencion!=null) {
				this.jScrollPanelDatosEdicionClienteRetencion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosClienteRetencion!=null) {
				this.jScrollPanelDatosClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelPaginacionClienteRetencion!=null) {
				this.jPanelPaginacionClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionClienteRetencion!=null) {
				this.jScrollPanelDatosEdicionClienteRetencion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosClienteRetencion!=null) {
				this.jScrollPanelDatosClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelPaginacionClienteRetencion!=null) {
				this.jPanelPaginacionClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionClienteRetencion!=null) {
				this.jScrollPanelDatosEdicionClienteRetencion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosClienteRetencion!=null) {
				this.jScrollPanelDatosClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelPaginacionClienteRetencion!=null) {
				this.jPanelPaginacionClienteRetencion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
					this.jTabbedPaneBusquedasClienteRetencion.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.clienteretencionSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasClienteRetencion!=null) {
				this.jTabbedPaneBusquedasClienteRetencion.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesClienteRetencion!=null) {
				this.jPanelParametrosReportesClienteRetencion.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdAsientoContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdAsientoContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdAsientoContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaFactura(Boolean isParaFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFacturaNegation=!isParaFactura;

			this.isVisibilidadFK_IdAsientoContable=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaFactura;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadFK_IdAsientoContable=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRetencion(Boolean isParaTipoRetencion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRetencionNegation=!isParaTipoRetencion;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaTipoRetencion;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoRetencionNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableClienteRetencion(Boolean isParaCuentaContableClienteRetencion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableClienteRetencionNegation=!isParaCuentaContableClienteRetencion;

			this.isVisibilidadFK_IdAsientoContable=isParaCuentaContableClienteRetencionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaCuentaContableClienteRetencionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaCuentaContableClienteRetencion;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaCuentaContableClienteRetencionNegation;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaCuentaContableClienteRetencionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaCuentaContableClienteRetencionNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaCuentaContableClienteRetencionNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoRetencion(Boolean isParaEstadoRetencion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoRetencionNegation=!isParaEstadoRetencion;

			this.isVisibilidadFK_IdAsientoContable=isParaEstadoRetencionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdAsientoContableClienteRetencion);}

			this.isVisibilidadFK_IdCliente=isParaEstadoRetencionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdClienteClienteRetencion);}

			this.isVisibilidadFK_IdCuentaContableClienteRetencion=isParaEstadoRetencionNegation;
			if(!this.isVisibilidadFK_IdCuentaContableClienteRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);}

			this.isVisibilidadFK_IdEstadoRetencion=isParaEstadoRetencion;
			if(!this.isVisibilidadFK_IdEstadoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdEstadoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdFactura=isParaEstadoRetencionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdFacturaClienteRetencion);}

			this.isVisibilidadFK_IdTipoRetencion=isParaEstadoRetencionNegation;
			if(!this.isVisibilidadFK_IdTipoRetencion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTipoRetencionClienteRetencion);}

			this.isVisibilidadFK_IdTransaccion=isParaEstadoRetencionNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasClienteRetencion.remove(jPanelFK_IdTransaccionClienteRetencion);}
		}
		
	}
	
	
	
	

	public String registrarSesionClienteRetencionParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(clienteretencionSessionBean==null) {
				clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(clienteretencionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.clienteretencionFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ClienteRetencionConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionClienteRetencion(true);
			//clienteSessionBean.setlidClienteRetencionActual(this.idClienteRetencionActual);

			clienteretencionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyClienteRetencion(true);
			clienteretencionSessionBean.setlIdClienteRetencionActualForeignKey(this.idClienteRetencionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionClienteRetencionParaBusquedaFacturas() throws Exception {
		Boolean isPaginaPopupFactura=false;

		try {

			if(clienteretencionSessionBean==null) {
				clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(facturaSessionBean==null) {
				facturaSessionBean=new FacturaSessionBean();
			}

			facturaSessionBean.setsPathNavegacionActual(clienteretencionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaConstantesFunciones.SCLASSWEBTITULO);
			facturaSessionBean.setisPermiteRecargarInformacion(false);
			facturaSessionBean.setisPaginaPopup(true);
			isPaginaPopupFactura=facturaSessionBean.getisPaginaPopup();
			facturaSessionBean.setisPaginaPopup(false);
			facturaSessionBean.setEstaModoBusqueda(true);
			facturaSessionBean.setsFuncionBusquedaRapida("window.opener.clienteretencionFuncionGeneral.setCombosCodigoDesdeBusquedaid_factura(TO_REPLACE);");
			facturaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFactura(true);
			facturaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFactura(ClienteRetencionConstantesFunciones.SNOMBREOPCION);
			//facturaSessionBean.setisBusquedaDesdeForeignKeySesionClienteRetencion(true);
			//facturaSessionBean.setlidClienteRetencionActual(this.idClienteRetencionActual);

			clienteretencionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyClienteRetencion(true);
			clienteretencionSessionBean.setlIdClienteRetencionActualForeignKey(this.idClienteRetencionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionClienteRetencionParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(clienteretencionSessionBean==null) {
				clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(clienteretencionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.clienteretencionFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(ClienteRetencionConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionClienteRetencion(true);
			//asientocontableSessionBean.setlidClienteRetencionActual(this.idClienteRetencionActual);

			clienteretencionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyClienteRetencion(true);
			clienteretencionSessionBean.setlIdClienteRetencionActualForeignKey(this.idClienteRetencionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionClienteRetencionParaBusquedaCuentaContableClienteRetencions() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(clienteretencionSessionBean==null) {
				clienteretencionSessionBean=new ClienteRetencionSessionBean();
			}

			if(cuentacontableclienteretencionSessionBean==null) {
				cuentacontableclienteretencionSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableclienteretencionSessionBean.setsPathNavegacionActual(clienteretencionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableclienteretencionSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableclienteretencionSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableclienteretencionSessionBean.getisPaginaPopup();
			cuentacontableclienteretencionSessionBean.setisPaginaPopup(false);
			cuentacontableclienteretencionSessionBean.setEstaModoBusqueda(true);
			cuentacontableclienteretencionSessionBean.setsFuncionBusquedaRapida("window.opener.clienteretencionFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_retencion(TO_REPLACE);");
			cuentacontableclienteretencionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableclienteretencionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ClienteRetencionConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionClienteRetencion(true);
			//cuentacontableSessionBean.setlidClienteRetencionActual(this.idClienteRetencionActual);

			clienteretencionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyClienteRetencion(true);
			clienteretencionSessionBean.setlIdClienteRetencionActualForeignKey(this.idClienteRetencionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ClienteRetencionSessionBean clienteretencionSessionBean=new ClienteRetencionSessionBean();
		
		if(this.clienteretencionSessionBean==null) {
			this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
		}
		
		this.clienteretencionSessionBean.setsUltimaBusquedaClienteRetencion(this.getsAccionBusqueda());
		this.clienteretencionSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.clienteretencionSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			clienteretencionSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			clienteretencionSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableClienteRetencion")) {
			clienteretencionSessionBean.setid_cuenta_contable_retencion(this.getid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			clienteretencionSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			clienteretencionSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoRetencion")) {
			clienteretencionSessionBean.setid_estado_retencion(this.getid_estado_retencionFK_IdEstadoRetencion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
			clienteretencionSessionBean.setid_factura(this.getid_facturaFK_IdFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			clienteretencionSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			clienteretencionSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencion")) {
			clienteretencionSessionBean.setid_tipo_retencion(this.getid_tipo_retencionFK_IdTipoRetencion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			clienteretencionSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ClienteRetencionSessionBean clienteretencionSessionBean=new ClienteRetencionSessionBean();
		
		if(this.clienteretencionSessionBean==null) {
			this.clienteretencionSessionBean=new ClienteRetencionSessionBean();
		}
		
		if(this.clienteretencionSessionBean.getsUltimaBusquedaClienteRetencion()!=null&&!this.clienteretencionSessionBean.getsUltimaBusquedaClienteRetencion().equals("")) {
			this.setsAccionBusqueda(clienteretencionSessionBean.getsUltimaBusquedaClienteRetencion());
			this.setiNumeroPaginacion(clienteretencionSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(clienteretencionSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(clienteretencionSessionBean.getid_asiento_contable());
				clienteretencionSessionBean.setid_asiento_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(clienteretencionSessionBean.getid_cliente());
				clienteretencionSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableClienteRetencion")) {
				this.setid_cuenta_contable_retencionFK_IdCuentaContableClienteRetencion(clienteretencionSessionBean.getid_cuenta_contable_retencion());
				clienteretencionSessionBean.setid_cuenta_contable_retencion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(clienteretencionSessionBean.getid_ejercicio());
				clienteretencionSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(clienteretencionSessionBean.getid_empresa());
				clienteretencionSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoRetencion")) {
				this.setid_estado_retencionFK_IdEstadoRetencion(clienteretencionSessionBean.getid_estado_retencion());
				clienteretencionSessionBean.setid_estado_retencion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
				this.setid_facturaFK_IdFactura(clienteretencionSessionBean.getid_factura());
				clienteretencionSessionBean.setid_factura(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(clienteretencionSessionBean.getid_periodo());
				clienteretencionSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(clienteretencionSessionBean.getid_sucursal());
				clienteretencionSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRetencion")) {
				this.setid_tipo_retencionFK_IdTipoRetencion(clienteretencionSessionBean.getid_tipo_retencion());
				clienteretencionSessionBean.setid_tipo_retencion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(clienteretencionSessionBean.getid_transaccion());
				clienteretencionSessionBean.setid_transaccion(-1L);
			}
		}
		
		this.clienteretencionSessionBean.setsUltimaBusquedaClienteRetencion("");
		this.clienteretencionSessionBean.setiNumeroPaginacion(ClienteRetencionConstantesFunciones.INUMEROPAGINACION);
		this.clienteretencionSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaClienteRetencion(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioClienteRetencion() {
		this.updateBorderResaltarBusquedasFormularioClienteRetencion();
		this.updateVisibilidadBusquedasFormularioClienteRetencion();
		this.updateHabilitarBusquedasFormularioClienteRetencion();
	}
	
	public void updateBorderResaltarBusquedasFormularioClienteRetencion() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasClienteRetencion.getComponents().length>0) {
	

		if(this.clienteretencionConstantesFunciones.resaltarFK_IdAsientoContableClienteRetencion!=null) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdAsientoContableClienteRetencion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdAsientoContableClienteRetencion);
			}
		}

		if(this.clienteretencionConstantesFunciones.resaltarFK_IdClienteClienteRetencion!=null) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdClienteClienteRetencion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdClienteClienteRetencion);
			}
		}

		if(this.clienteretencionConstantesFunciones.resaltarFK_IdCuentaContableClienteRetencionClienteRetencion!=null) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdCuentaContableClienteRetencionClienteRetencion);
			}
		}

		if(this.clienteretencionConstantesFunciones.resaltarFK_IdEstadoRetencionClienteRetencion!=null) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdEstadoRetencionClienteRetencion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdEstadoRetencionClienteRetencion);
			}
		}

		if(this.clienteretencionConstantesFunciones.resaltarFK_IdFacturaClienteRetencion!=null) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdFacturaClienteRetencion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdFacturaClienteRetencion);
			}
		}

		if(this.clienteretencionConstantesFunciones.resaltarFK_IdTipoRetencionClienteRetencion!=null) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTipoRetencionClienteRetencion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdTipoRetencionClienteRetencion);
			}
		}

		if(this.clienteretencionConstantesFunciones.resaltarFK_IdTransaccionClienteRetencion!=null) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTransaccionClienteRetencion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdTransaccionClienteRetencion);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioClienteRetencion() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasClienteRetencion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdAsientoContableClienteRetencion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteretencionConstantesFunciones.mostrarFK_IdAsientoContableClienteRetencion);
			if(!this.clienteretencionConstantesFunciones.mostrarFK_IdAsientoContableClienteRetencion && index>-1) {
				this.jTabbedPaneBusquedasClienteRetencion.remove(index);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdClienteClienteRetencion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteretencionConstantesFunciones.mostrarFK_IdClienteClienteRetencion);
			if(!this.clienteretencionConstantesFunciones.mostrarFK_IdClienteClienteRetencion && index>-1) {
				this.jTabbedPaneBusquedasClienteRetencion.remove(index);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteretencionConstantesFunciones.mostrarFK_IdCuentaContableClienteRetencionClienteRetencion);
			if(!this.clienteretencionConstantesFunciones.mostrarFK_IdCuentaContableClienteRetencionClienteRetencion && index>-1) {
				this.jTabbedPaneBusquedasClienteRetencion.remove(index);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdEstadoRetencionClienteRetencion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteretencionConstantesFunciones.mostrarFK_IdEstadoRetencionClienteRetencion);
			if(!this.clienteretencionConstantesFunciones.mostrarFK_IdEstadoRetencionClienteRetencion && index>-1) {
				this.jTabbedPaneBusquedasClienteRetencion.remove(index);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdFacturaClienteRetencion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteretencionConstantesFunciones.mostrarFK_IdFacturaClienteRetencion);
			if(!this.clienteretencionConstantesFunciones.mostrarFK_IdFacturaClienteRetencion && index>-1) {
				this.jTabbedPaneBusquedasClienteRetencion.remove(index);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTipoRetencionClienteRetencion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteretencionConstantesFunciones.mostrarFK_IdTipoRetencionClienteRetencion);
			if(!this.clienteretencionConstantesFunciones.mostrarFK_IdTipoRetencionClienteRetencion && index>-1) {
				this.jTabbedPaneBusquedasClienteRetencion.remove(index);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTransaccionClienteRetencion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.clienteretencionConstantesFunciones.mostrarFK_IdTransaccionClienteRetencion);
			if(!this.clienteretencionConstantesFunciones.mostrarFK_IdTransaccionClienteRetencion && index>-1) {
				this.jTabbedPaneBusquedasClienteRetencion.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioClienteRetencion() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasClienteRetencion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdAsientoContableClienteRetencion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteretencionConstantesFunciones.activarFK_IdAsientoContableClienteRetencion);
				this.jTabbedPaneBusquedasClienteRetencion.setEnabledAt(index,this.clienteretencionConstantesFunciones.activarFK_IdAsientoContableClienteRetencion);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdClienteClienteRetencion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteretencionConstantesFunciones.activarFK_IdClienteClienteRetencion);
				this.jTabbedPaneBusquedasClienteRetencion.setEnabledAt(index,this.clienteretencionConstantesFunciones.activarFK_IdClienteClienteRetencion);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteretencionConstantesFunciones.activarFK_IdCuentaContableClienteRetencionClienteRetencion);
				this.jTabbedPaneBusquedasClienteRetencion.setEnabledAt(index,this.clienteretencionConstantesFunciones.activarFK_IdCuentaContableClienteRetencionClienteRetencion);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdEstadoRetencionClienteRetencion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteretencionConstantesFunciones.activarFK_IdEstadoRetencionClienteRetencion);
				this.jTabbedPaneBusquedasClienteRetencion.setEnabledAt(index,this.clienteretencionConstantesFunciones.activarFK_IdEstadoRetencionClienteRetencion);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdFacturaClienteRetencion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteretencionConstantesFunciones.activarFK_IdFacturaClienteRetencion);
				this.jTabbedPaneBusquedasClienteRetencion.setEnabledAt(index,this.clienteretencionConstantesFunciones.activarFK_IdFacturaClienteRetencion);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTipoRetencionClienteRetencion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteretencionConstantesFunciones.activarFK_IdTipoRetencionClienteRetencion);
				this.jTabbedPaneBusquedasClienteRetencion.setEnabledAt(index,this.clienteretencionConstantesFunciones.activarFK_IdTipoRetencionClienteRetencion);
			}

			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTransaccionClienteRetencion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.clienteretencionConstantesFunciones.activarFK_IdTransaccionClienteRetencion);
				this.jTabbedPaneBusquedasClienteRetencion.setEnabledAt(index,this.clienteretencionConstantesFunciones.activarFK_IdTransaccionClienteRetencion);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaClienteRetencion(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdAsientoContableClienteRetencion);

			this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);

			this.clienteretencionConstantesFunciones.setResaltarFK_IdAsientoContableClienteRetencion(resaltar);

			jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdAsientoContableClienteRetencion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdClienteClienteRetencion);

			this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);

			this.clienteretencionConstantesFunciones.setResaltarFK_IdClienteClienteRetencion(resaltar);

			jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdClienteClienteRetencion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableClienteRetencion")) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdCuentaContableClienteRetencionClienteRetencion);

			this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);

			this.clienteretencionConstantesFunciones.setResaltarFK_IdCuentaContableClienteRetencionClienteRetencion(resaltar);

			jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdCuentaContableClienteRetencionClienteRetencion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoRetencion")) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdEstadoRetencionClienteRetencion);

			this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);

			this.clienteretencionConstantesFunciones.setResaltarFK_IdEstadoRetencionClienteRetencion(resaltar);

			jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdEstadoRetencionClienteRetencion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFactura")) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdFacturaClienteRetencion);

			this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);

			this.clienteretencionConstantesFunciones.setResaltarFK_IdFacturaClienteRetencion(resaltar);

			jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdFacturaClienteRetencion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRetencion")) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTipoRetencionClienteRetencion);

			this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);

			this.clienteretencionConstantesFunciones.setResaltarFK_IdTipoRetencionClienteRetencion(resaltar);

			jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdTipoRetencionClienteRetencion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasClienteRetencion.indexOfComponent(this.jPanelFK_IdTransaccionClienteRetencion);

			this.jTabbedPaneBusquedasClienteRetencion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasClienteRetencion.getComponent(index);

			this.clienteretencionConstantesFunciones.setResaltarFK_IdTransaccionClienteRetencion(resaltar);

			jPanel.setBorder(this.clienteretencionConstantesFunciones.resaltarFK_IdTransaccionClienteRetencion);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarClienteRetencion.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioClienteRetencion() throws Exception {

		if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioClienteRetencion();
		this.updateVisibilidadResaltarControlesFormularioClienteRetencion();
		this.updateHabilitarResaltarControlesFormularioClienteRetencion();
		
	}
	
	public void updateBorderResaltarControlesFormularioClienteRetencion() throws Exception {
		if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.clienteretencionConstantesFunciones.resaltaridClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltaridClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_empresaClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_empresaClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_sucursalClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_sucursalClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_ejercicioClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_ejercicioClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_periodoClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_periodoClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_anioClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_anioClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_mesClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_mesClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarfechaClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarfechaClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_clienteClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_clienteClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_facturaClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_facturaClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_transaccionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_transaccionClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_tipo_retencionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_tipo_retencionClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarporcentajeClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarporcentajeClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarbase_imponibleClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarbase_imponibleClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarvalorClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarvalorClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarnumero_retencionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarnumero_retencionClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltardescripcionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltardescripcionClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_asiento_contableClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_asiento_contableClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_cuenta_contable_retencionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_cuenta_contable_retencionClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarvalor_tipo_cambioClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalor_tipo_cambioClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarvalor_tipo_cambioClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltardebito_mone_localClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_localClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltardebito_mone_localClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarcredito_mone_localClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_localClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarcredito_mone_localClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltardebito_mone_extraClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_extraClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltardebito_mone_extraClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarcredito_mone_extraClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_extraClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarcredito_mone_extraClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarbeneficiarioClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextAreabeneficiarioClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarbeneficiarioClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarnombre_benefClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextAreanombre_benefClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarnombre_benefClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltardireccion_benefClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextAreadireccion_benefClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltardireccion_benefClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltartelefono_benefClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextAreatelefono_benefClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltartelefono_benefClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarruc_benefClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jTextFieldruc_benefClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarruc_benefClienteRetencion);}
		if(this.clienteretencionConstantesFunciones.resaltarid_estado_retencionClienteRetencion!=null && this.jInternalFrameDetalleFormClienteRetencion!=null) {this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setBorder(this.clienteretencionConstantesFunciones.resaltarid_estado_retencionClienteRetencion);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioClienteRetencion() throws Exception {		
		if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
	
		//this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostraridClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelidClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostraridClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_empresaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_empresaClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_empresaClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_sucursalClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_sucursalClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_sucursalClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_ejercicioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_ejercicioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_ejercicioClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_periodoClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_periodoClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_periodoClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_anioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_anioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_anioClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_mesClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_mesClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_mesClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarfechaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelfechaClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarfechaClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_clienteClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_clienteClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_clienteClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_clienteClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_facturaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_facturaClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_facturaClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_facturaClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_transaccionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_transaccionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_transaccionClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_tipo_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_tipo_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_tipo_retencionClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarporcentajeClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelporcentajeClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarporcentajeClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarbase_imponibleClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelbase_imponibleClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarbase_imponibleClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarvalorClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelvalorClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarvalorClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarnumero_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelnumero_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarnumero_retencionClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardescripcionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPaneldescripcionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardescripcionClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_asiento_contableClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_asiento_contableClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_asiento_contableClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_asiento_contableClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_cuenta_contable_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_cuenta_contable_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_cuenta_contable_retencionClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_cuenta_contable_retencionClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalor_tipo_cambioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarvalor_tipo_cambioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelvalor_tipo_cambioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarvalor_tipo_cambioClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_localClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardebito_mone_localClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPaneldebito_mone_localClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardebito_mone_localClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_localClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarcredito_mone_localClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelcredito_mone_localClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarcredito_mone_localClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_extraClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardebito_mone_extraClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPaneldebito_mone_extraClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardebito_mone_extraClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_extraClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarcredito_mone_extraClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelcredito_mone_extraClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarcredito_mone_extraClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextAreabeneficiarioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarbeneficiarioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelbeneficiarioClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarbeneficiarioClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextAreanombre_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarnombre_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelnombre_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarnombre_benefClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextAreadireccion_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardireccion_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPaneldireccion_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrardireccion_benefClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextAreatelefono_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrartelefono_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPaneltelefono_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrartelefono_benefClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jTextFieldruc_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarruc_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelruc_benefClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarruc_benefClienteRetencion);
		//this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_estado_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jPanelid_estado_retencionClienteRetencion.setVisible(this.clienteretencionConstantesFunciones.mostrarid_estado_retencionClienteRetencion);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioClienteRetencion() throws Exception {
		if(this.jInternalFrameDetalleFormClienteRetencion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormClienteRetencion!=null) {
	
		this.jInternalFrameDetalleFormClienteRetencion.jLabelidClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activaridClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_empresaClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_empresaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_sucursalClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_sucursalClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_ejercicioClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_ejercicioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_periodoClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_periodoClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_anioClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_anioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_mesClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_mesClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jDateChooserfechaClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarfechaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_clienteClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_clienteClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_clienteClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_clienteClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_facturaClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_facturaClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_facturaClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_facturaClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_transaccionClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_transaccionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_tipo_retencionClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_tipo_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldporcentajeClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarporcentajeClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldbase_imponibleClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarbase_imponibleClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalorClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarvalorClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldnumero_retencionClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarnumero_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreadescripcionClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activardescripcionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_asiento_contableClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_asiento_contableClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_asiento_contableClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_asiento_contableClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_cuenta_contable_retencionClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_cuenta_contable_retencionClienteRetencion);
			this.jInternalFrameDetalleFormClienteRetencion.jButtonid_cuenta_contable_retencionClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_cuenta_contable_retencionClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldvalor_tipo_cambioClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarvalor_tipo_cambioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_localClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activardebito_mone_localClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_localClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarcredito_mone_localClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFielddebito_mone_extraClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activardebito_mone_extraClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldcredito_mone_extraClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarcredito_mone_extraClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreabeneficiarioClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarbeneficiarioClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreanombre_benefClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarnombre_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreadireccion_benefClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activardireccion_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextAreatelefono_benefClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activartelefono_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jTextFieldruc_benefClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarruc_benefClienteRetencion);
		this.jInternalFrameDetalleFormClienteRetencion.jComboBoxid_estado_retencionClienteRetencion.setEnabled(this.clienteretencionConstantesFunciones.activarid_estado_retencionClienteRetencion);
		}
	}
	
		
}