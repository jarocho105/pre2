/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.cartera.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.cartera.util.NegocioClienteConstantesFunciones;
import com.bydan.erp.cartera.util.NegocioClienteParameterReturnGeneral;
//import com.bydan.erp.cartera.util.NegocioClienteParameterGeneral;
//import com.bydan.erp.cartera.presentation.report.source.NegocioClienteBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.cartera.resources.reportes.AuxiliarReportes;


import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.cartera.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class NegocioClienteBeanSwingJInternalFrame extends NegocioClienteJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(NegocioClienteBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<NegocioCliente> negocioclienteValidator = new ClassValidator<NegocioCliente>(NegocioCliente.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public NegocioCliente negociocliente;	
	public NegocioCliente negocioclienteAux;
	public NegocioCliente negocioclienteAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public NegocioCliente negocioclienteTotales;
	public Long idNegocioClienteActual;
	public Long iIdNuevoNegocioCliente=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboTipoUbicacionNegocio="";

	public List<TipoUbicacionNegocio> tipoubicacionnegociosForeignKey;

	public List<TipoUbicacionNegocio> gettipoubicacionnegociosForeignKey() {
		return tipoubicacionnegociosForeignKey;
	}

	public void settipoubicacionnegociosForeignKey(List<TipoUbicacionNegocio> tipoubicacionnegociosForeignKey) {
		this.tipoubicacionnegociosForeignKey = tipoubicacionnegociosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoUbicacionNegocio tipoubicacionnegocioForeignKey;

	public TipoUbicacionNegocio gettipoubicacionnegocioForeignKey() {
		return tipoubicacionnegocioForeignKey;
	}

	public void settipoubicacionnegocioForeignKey(TipoUbicacionNegocio tipoubicacionnegocioForeignKey) {
		this.tipoubicacionnegocioForeignKey = tipoubicacionnegocioForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoNegocioCliente;
	public Boolean isPermisoNuevoNegocioCliente;
	public Boolean isPermisoActualizarNegocioCliente;
	public Boolean isPermisoActualizarOriginalNegocioCliente;
	public Boolean isPermisoEliminarNegocioCliente;
	public Boolean isPermisoGuardarCambiosNegocioCliente;
	public Boolean isPermisoConsultaNegocioCliente;
	public Boolean isPermisoBusquedaNegocioCliente;
	public Boolean isPermisoReporteNegocioCliente;
	public Boolean isPermisoPaginacionMedioNegocioCliente;
	public Boolean isPermisoPaginacionAltoNegocioCliente;
	public Boolean isPermisoPaginacionTodoNegocioCliente;
	public Boolean isPermisoCopiarNegocioCliente;
	public Boolean isPermisoVerFormNegocioCliente;
	public Boolean isPermisoDuplicarNegocioCliente;
	public Boolean isPermisoOrdenNegocioCliente;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public NegocioClienteParameterReturnGeneral negocioclienteReturnGeneral;
	public NegocioClienteParameterReturnGeneral negocioclienteParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoNegocioCliente=false;
	public Boolean esParaAccionDesdeFormularioNegocioCliente=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected NegocioClienteSessionBeanAdditional negocioclienteSessionBeanAdditional=null;
	
	public NegocioClienteSessionBeanAdditional getNegocioClienteSessionBeanAdditional() {
		return this.negocioclienteSessionBeanAdditional;
	}
	
	public void setNegocioClienteSessionBeanAdditional(NegocioClienteSessionBeanAdditional negocioclienteSessionBeanAdditional) {
		try {
			this.negocioclienteSessionBeanAdditional=negocioclienteSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected NegocioClienteBeanSwingJInternalFrameAdditional negocioclienteBeanSwingJInternalFrameAdditional=null;
	//public class NegocioClienteBeanSwingJInternalFrame
	
	public NegocioClienteBeanSwingJInternalFrameAdditional getNegocioClienteBeanSwingJInternalFrameAdditional() {
		return this.negocioclienteBeanSwingJInternalFrameAdditional;
	}
	
	public void setNegocioClienteBeanSwingJInternalFrameAdditional(NegocioClienteBeanSwingJInternalFrameAdditional negocioclienteBeanSwingJInternalFrameAdditional) {
		try {
			this.negocioclienteBeanSwingJInternalFrameAdditional=negocioclienteBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public NegocioClienteLogic negocioclienteLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public NegocioCliente negocioclienteBean;
	public NegocioClienteConstantesFunciones negocioclienteConstantesFunciones;
	//public NegocioClienteParameterReturnGeneral negocioclienteReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public ClienteLogic clienteLogic;
	public TipoUbicacionNegocioLogic tipoubicacionnegocioLogic;
	
	//PARAMETROS
	
	
	//public List<NegocioCliente> negocioclientes;	
	//public List<NegocioCliente> negocioclientesEliminados;
	//public List<NegocioCliente> negocioclientesAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoNegocioCliente=false;
	public Boolean isVisibilidadCeldaDuplicarNegocioCliente=true;
	public Boolean isVisibilidadCeldaCopiarNegocioCliente=true;
	public Boolean isVisibilidadCeldaVerFormNegocioCliente=true;
	public Boolean isVisibilidadCeldaOrdenNegocioCliente=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
	public Boolean isVisibilidadCeldaModificarNegocioCliente=false;
	public Boolean isVisibilidadCeldaActualizarNegocioCliente=false;
	public Boolean isVisibilidadCeldaEliminarNegocioCliente=false;
	public Boolean isVisibilidadCeldaCancelarNegocioCliente=false;
	public Boolean isVisibilidadCeldaGuardarNegocioCliente=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosNegocioCliente=false;	
	
	
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdTipoUbicacionNegocio=false;
	
	public Long getiIdNuevoNegocioCliente() {
		return this.iIdNuevoNegocioCliente;
	}

	public void setiIdNuevoNegocioCliente(Long iIdNuevoNegocioCliente) {
		this.iIdNuevoNegocioCliente = iIdNuevoNegocioCliente;
	}
	
	public Long getidNegocioClienteActual() {
		return this.idNegocioClienteActual;
	}

	public void setidNegocioClienteActual(Long idNegocioClienteActual) {
		this.idNegocioClienteActual = idNegocioClienteActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public NegocioCliente getnegociocliente() {
		return this.negociocliente;
	}

	public void setnegociocliente(NegocioCliente negociocliente) {
		this.negociocliente = negociocliente;
	}
	
	public NegocioCliente getnegocioclienteAux() {
		return this.negocioclienteAux;
	}

	public void setnegocioclienteAux(NegocioCliente negocioclienteAux) {
		this.negocioclienteAux = negocioclienteAux;
	}				
	
	public NegocioCliente getnegocioclienteAnterior() {
		return this.negocioclienteAnterior;
	}

	public void setnegocioclienteAnterior(NegocioCliente negocioclienteAnterior) {
		this.negocioclienteAnterior = negocioclienteAnterior;
	}	
	
	public NegocioCliente getnegocioclienteTotales() {
		return this.negocioclienteTotales;
	}

	public void setnegocioclienteTotales(NegocioCliente negocioclienteTotales) {
		this.negocioclienteTotales = negocioclienteTotales;
	}	
	
	public NegocioCliente getnegocioclienteBean() {
		return this.negocioclienteBean;
	}

	public void setnegocioclienteBean(NegocioCliente negocioclienteBean) {
		this.negocioclienteBean = negocioclienteBean;
	}	
	
	public NegocioClienteParameterReturnGeneral getnegocioclienteReturnGeneral() {
		return this.negocioclienteReturnGeneral;
	}

	public void setnegocioclienteReturnGeneral(NegocioClienteParameterReturnGeneral negocioclienteReturnGeneral) {
		this.negocioclienteReturnGeneral = negocioclienteReturnGeneral;
	}	
	
	
	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio=-1L;

	public Long getid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio() {
		return this.id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio;
	}

	public void setid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio(Long id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio) {
		this.id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio = id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public NegocioClienteLogic getNegocioClienteLogic()	{		
		return negocioclienteLogic;
	}

	public void setNegocioClienteLogic(NegocioClienteLogic negocioclienteLogic) {
		this.negocioclienteLogic = negocioclienteLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoNegocioCliente() {
		return isEsNuevoNegocioCliente;
	}

	public void setIsEsNuevoNegocioCliente(Boolean isEsNuevoNegocioCliente) {
		this.isEsNuevoNegocioCliente = isEsNuevoNegocioCliente;
	}

	public Boolean getEsParaAccionDesdeFormularioNegocioCliente() {
		return esParaAccionDesdeFormularioNegocioCliente;
	}
	
	public void setEsParaAccionDesdeFormularioNegocioCliente(Boolean esParaAccionDesdeFormularioNegocioCliente) {
		this.esParaAccionDesdeFormularioNegocioCliente = esParaAccionDesdeFormularioNegocioCliente;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.negocioclienteSessionBean==null) {
				this.negocioclienteSessionBean=new NegocioClienteSessionBean();
			}

			if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(negocioclienteSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.negocioclienteSessionBean==null) {
				this.negocioclienteSessionBean=new NegocioClienteSessionBean();
			}

			if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(negocioclienteSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoUbicacionNegociosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoubicacionnegociosForeignKey=new ArrayList<TipoUbicacionNegocio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoUbicacionNegocioLogic tipoubicacionnegocioLogic=new TipoUbicacionNegocioLogic();

			//tipoubicacionnegocioLogic.getTipoUbicacionNegocioDataAccess().setIsForForeingKeyData(true);

			if(this.negocioclienteSessionBean==null) {
				this.negocioclienteSessionBean=new NegocioClienteSessionBean();
			}

			if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoUbicacionNegocio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoubicacionnegocioLogic.getTipoUbicacionNegocioDataAccess().setIsForForeingKeyData(true);

					tipoubicacionnegocioLogic.getTodosTipoUbicacionNegociosWithConnection(sFinalQuery,new Pagination());

					this.tipoubicacionnegociosForeignKey=tipoubicacionnegocioLogic.getTipoUbicacionNegocios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoUbicacionNegocio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoubicacionnegocioLogic.getEntityWithConnection(negocioclienteSessionBean.getlidTipoUbicacionNegocioActual());
					this.tipoubicacionnegociosForeignKey.add(tipoubicacionnegocioLogic.getTipoUbicacionNegocio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.negociocliente!=null) {
						this.negociocliente.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
						this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaNegocioCliente.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
						if(this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaNegocioClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaNegocioClienteGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaNegocioClienteGenerico!=null && jComboBoxid_empresaNegocioClienteGenerico.getItemCount()>0) {
					jComboBoxid_empresaNegocioClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.negociocliente!=null) {
						this.negociocliente.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
						this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteNegocioCliente.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
						if(this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteNegocioCliente!=null) {
						jComboBoxid_clienteFK_IdClienteNegocioCliente.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteNegocioCliente!=null) {
							//jComboBoxid_clienteFK_IdClienteNegocioCliente.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteNegocioCliente.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteNegocioCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteNegocioClienteGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteNegocioClienteGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteNegocioClienteGenerico!=null && jComboBoxid_clienteNegocioClienteGenerico.getItemCount()>0) {
					jComboBoxid_clienteNegocioClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoUbicacionNegocioForeignKey(Long idTipoUbicacionNegocioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoUbicacionNegocio  tipoubicacionnegocioTemp=null;

			for(TipoUbicacionNegocio tipoubicacionnegocioAux:tipoubicacionnegociosForeignKey) {
				if(tipoubicacionnegocioAux.getId()!=null && tipoubicacionnegocioAux.getId().equals(idTipoUbicacionNegocioSeleccionado)) {
					tipoubicacionnegocioTemp=tipoubicacionnegocioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoubicacionnegocioTemp!=null) {

					if(this.negociocliente!=null) {
						this.negociocliente.setTipoUbicacionNegocio(tipoubicacionnegocioTemp);
					}

					if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
						this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setSelectedItem(tipoubicacionnegocioTemp);
					}
				} else {
					//jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setSelectedItem(tipoubicacionnegocioTemp);
					if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
						if(this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.getItemCount()>0) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoUbicacionNegocio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoubicacionnegocioTemp!=null && jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente!=null) {
						jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.setSelectedItem(tipoubicacionnegocioTemp);
					} else {
						if(jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente!=null) {
							//jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.setSelectedItem(tipoubicacionnegocioTemp);
							if(jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.getItemCount()>0) {
								jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoUbicacionNegocioForeignKeyDescripcion(Long idTipoUbicacionNegocioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoUbicacionNegocio  tipoubicacionnegocioTemp=null;

			for(TipoUbicacionNegocio tipoubicacionnegocioAux:tipoubicacionnegociosForeignKey) {
				if(tipoubicacionnegocioAux.getId()!=null && tipoubicacionnegocioAux.getId().equals(idTipoUbicacionNegocioSeleccionado)) {
					tipoubicacionnegocioTemp=tipoubicacionnegocioAux;
					break;
				}
			}


			sDescripcion=TipoUbicacionNegocioConstantesFunciones.getTipoUbicacionNegocioDescripcion(tipoubicacionnegocioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoUbicacionNegocioForeignKeyGenerico(Long idTipoUbicacionNegocioSeleccionado,JComboBox jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico)throws Exception
	{
		try
		{
			TipoUbicacionNegocio  tipoubicacionnegocioTemp=null;

			for(TipoUbicacionNegocio tipoubicacionnegocioAux:tipoubicacionnegociosForeignKey) {
				if(tipoubicacionnegocioAux.getId()!=null && tipoubicacionnegocioAux.getId().equals(idTipoUbicacionNegocioSeleccionado)) {
					tipoubicacionnegocioTemp=tipoubicacionnegocioAux;
					break;
				}
			}

			if(tipoubicacionnegocioTemp!=null) {
				jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico.setSelectedItem(tipoubicacionnegocioTemp);
			} else {
				if(jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico!=null && jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico.getItemCount()>0) {
					jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(NegocioCliente negociocliente,JComboBox jComboBoxid_empresaNegocioClienteGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaNegocioClienteGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaNegocioClienteGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				negociocliente.setid_empresa(empresaAux.getId());
				negociocliente.setempresa_descripcion(NegocioClienteConstantesFunciones.getEmpresaDescripcion(empresaAux));
				negociocliente.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(NegocioCliente negociocliente,JComboBox jComboBoxid_clienteNegocioClienteGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteNegocioClienteGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteNegocioClienteGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				negociocliente.setid_cliente(clienteAux.getId());
				negociocliente.setcliente_descripcion(NegocioClienteConstantesFunciones.getClienteDescripcion(clienteAux));
				negociocliente.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoUbicacionNegocioForeignKey(NegocioCliente negociocliente,JComboBox jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico)throws Exception
	{
		try
		{
			TipoUbicacionNegocio  tipoubicacionnegocioAux=new TipoUbicacionNegocio();

			if(jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico==null) {
				tipoubicacionnegocioAux=(TipoUbicacionNegocio)this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.getSelectedItem();
			} else {
				tipoubicacionnegocioAux=(TipoUbicacionNegocio)jComboBoxid_tipo_ubicacion_negocioNegocioClienteGenerico.getSelectedItem();
			}

			if(tipoubicacionnegocioAux!=null && tipoubicacionnegocioAux.getId()!=null) {
				negociocliente.setid_tipo_ubicacion_negocio(tipoubicacionnegocioAux.getId());
				negociocliente.settipoubicacionnegocio_descripcion(NegocioClienteConstantesFunciones.getTipoUbicacionNegocioDescripcion(tipoubicacionnegocioAux));
				negociocliente.setTipoUbicacionNegocio(tipoubicacionnegocioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) { 
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormNegocioCliente!=null) { 
					}

					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) { 
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormNegocioCliente!=null) { 
					}

					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteNegocioCliente.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteNegocioCliente.addItem(cliente);
							}
						}

						if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoUbicacionNegociosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoUbicacionNegocio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) { 
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.removeAllItems();

							for(TipoUbicacionNegocio tipoubicacionnegocio:this.tipoubicacionnegociosForeignKey) {
								this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.addItem(tipoubicacionnegocio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormNegocioCliente!=null) { 
					}

					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoUbicacionNegocio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.removeAllItems();

							for(TipoUbicacionNegocio tipoubicacionnegocio:this.tipoubicacionnegociosForeignKey) {
								this.jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.addItem(tipoubicacionnegocio);
							}
						}

						if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteNegocioCliente.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteNegocioCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoUbicacionNegocioForeignKey(TipoUbicacionNegocio tipoubicacionnegocio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setSelectedItem(tipoubicacionnegocio);
						}
					} else {
						if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.setSelectedItem(tipoubicacionnegocio);
						} else {
							this.jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesNegocioCliente() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			NegocioClienteConstantesFunciones.refrescarForeignKeysDescripcionesNegocioCliente(this.negocioclienteLogic.getNegocioClientes());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			NegocioClienteConstantesFunciones.refrescarForeignKeysDescripcionesNegocioCliente(this.negocioclientes);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(TipoUbicacionNegocio.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//negocioclienteLogic.setNegocioClientes(this.negocioclientes);
			negocioclienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public NegocioClienteParameterReturnGeneral getNegocioClienteParameterGeneral() {
		return this.negocioclienteParameterGeneral;
	}
	
	public void setNegocioClienteParameterGeneral(NegocioClienteParameterReturnGeneral negocioclienteParameterGeneral) {
		this.negocioclienteParameterGeneral = negocioclienteParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoNegocioCliente() {
		return isPermisoTodoNegocioCliente;
	}

	public void setIsPermisoTodoNegocioCliente(Boolean isPermisoTodoNegocioCliente) {
		this.isPermisoTodoNegocioCliente = isPermisoTodoNegocioCliente;
	}

	public Boolean getIsPermisoNuevoNegocioCliente() {
		return isPermisoNuevoNegocioCliente;
	}

	public void setIsPermisoNuevoNegocioCliente(Boolean isPermisoNuevoNegocioCliente) {
		this.isPermisoNuevoNegocioCliente = isPermisoNuevoNegocioCliente;
	}

	public Boolean getIsPermisoActualizarNegocioCliente() {
		return isPermisoActualizarNegocioCliente;
	}

	public void setIsPermisoActualizarNegocioCliente(Boolean isPermisoActualizarNegocioCliente) {
		this.isPermisoActualizarNegocioCliente = isPermisoActualizarNegocioCliente;
	}

	public Boolean getIsPermisoEliminarNegocioCliente() {
		return isPermisoEliminarNegocioCliente;
	}

	public void setIsPermisoEliminarNegocioCliente(Boolean isPermisoEliminarNegocioCliente) {
		this.isPermisoEliminarNegocioCliente = isPermisoEliminarNegocioCliente;
	}

	public Boolean getIsPermisoGuardarCambiosNegocioCliente() {
		return isPermisoGuardarCambiosNegocioCliente;
	}

	public void setIsPermisoGuardarCambiosNegocioCliente(Boolean isPermisoGuardarCambiosNegocioCliente) {
		this.isPermisoGuardarCambiosNegocioCliente = isPermisoGuardarCambiosNegocioCliente;
	}
	
	public Boolean getIsPermisoConsultaNegocioCliente() {
		return isPermisoConsultaNegocioCliente;
	}

	public void setIsPermisoConsultaNegocioCliente(Boolean isPermisoConsultaNegocioCliente) {
		this.isPermisoConsultaNegocioCliente = isPermisoConsultaNegocioCliente;
	}

	public Boolean getIsPermisoBusquedaNegocioCliente() {
		return isPermisoBusquedaNegocioCliente;
	}

	public void setIsPermisoBusquedaNegocioCliente(Boolean isPermisoBusquedaNegocioCliente) {
		this.isPermisoBusquedaNegocioCliente = isPermisoBusquedaNegocioCliente;
	}

	public Boolean getIsPermisoReporteNegocioCliente() {
		return isPermisoReporteNegocioCliente;
	}

	public void setIsPermisoReporteNegocioCliente(Boolean isPermisoReporteNegocioCliente) {
		this.isPermisoReporteNegocioCliente = isPermisoReporteNegocioCliente;
	}
	
	public Boolean getIsPermisoPaginacionMedioNegocioCliente() {
		return isPermisoPaginacionMedioNegocioCliente;
	}

	public void setIsPermisoPaginacionMedioNegocioCliente(Boolean isPermisoPaginacionMedioNegocioCliente) {
		this.isPermisoPaginacionMedioNegocioCliente = isPermisoPaginacionMedioNegocioCliente;
	}
	
	public Boolean getIsPermisoPaginacionTodoNegocioCliente() {
		return isPermisoPaginacionTodoNegocioCliente;
	}

	public void setIsPermisoPaginacionTodoNegocioCliente(Boolean isPermisoPaginacionTodoNegocioCliente) {
		this.isPermisoPaginacionTodoNegocioCliente = isPermisoPaginacionTodoNegocioCliente;
	}
	
	public Boolean getIsPermisoPaginacionAltoNegocioCliente() {
		return isPermisoPaginacionAltoNegocioCliente;
	}

	public void setIsPermisoPaginacionAltoNegocioCliente(Boolean isPermisoPaginacionAltoNegocioCliente) {
		this.isPermisoPaginacionAltoNegocioCliente = isPermisoPaginacionAltoNegocioCliente;
	}
	
	public Boolean getIsPermisoCopiarNegocioCliente() {
		return isPermisoCopiarNegocioCliente;
	}

	public void setIsPermisoCopiarNegocioCliente(Boolean isPermisoCopiarNegocioCliente) {
		this.isPermisoCopiarNegocioCliente = isPermisoCopiarNegocioCliente;
	}
	
	public Boolean getIsPermisoVerFormNegocioCliente() {
		return isPermisoVerFormNegocioCliente;
	}

	public void setIsPermisoVerFormNegocioCliente(Boolean isPermisoVerFormNegocioCliente) {
		this.isPermisoVerFormNegocioCliente = isPermisoVerFormNegocioCliente;
	}
	
	public Boolean getIsPermisoDuplicarNegocioCliente() {
		return isPermisoDuplicarNegocioCliente;
	}

	public void setIsPermisoDuplicarNegocioCliente(Boolean isPermisoDuplicarNegocioCliente) {
		this.isPermisoDuplicarNegocioCliente = isPermisoDuplicarNegocioCliente;
	}
	
	public Boolean getIsPermisoOrdenNegocioCliente() {
		return isPermisoOrdenNegocioCliente;
	}

	public void setIsPermisoOrdenNegocioCliente(Boolean isPermisoOrdenNegocioCliente) {
		this.isPermisoOrdenNegocioCliente = isPermisoOrdenNegocioCliente;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoNegocioCliente() {
		return isVisibilidadCeldaNuevoNegocioCliente;
	}

	public void setIsVisibilidadCeldaNuevoNegocioCliente(Boolean isVisibilidadCeldaNuevoNegocioCliente) {
		this.isVisibilidadCeldaNuevoNegocioCliente = isVisibilidadCeldaNuevoNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarNegocioCliente() {
		return isVisibilidadCeldaDuplicarNegocioCliente;
	}

	public void setIsVisibilidadCeldaDuplicarNegocioCliente(Boolean isVisibilidadCeldaDuplicarNegocioCliente) {
		this.isVisibilidadCeldaDuplicarNegocioCliente = isVisibilidadCeldaDuplicarNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarNegocioCliente() {
		return isVisibilidadCeldaCopiarNegocioCliente;
	}

	public void setIsVisibilidadCeldaCopiarNegocioCliente(Boolean isVisibilidadCeldaCopiarNegocioCliente) {
		this.isVisibilidadCeldaCopiarNegocioCliente = isVisibilidadCeldaCopiarNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormNegocioCliente() {
		return isVisibilidadCeldaVerFormNegocioCliente;
	}

	public void setIsVisibilidadCeldaVerFormNegocioCliente(Boolean isVisibilidadCeldaVerFormNegocioCliente) {
		this.isVisibilidadCeldaVerFormNegocioCliente = isVisibilidadCeldaVerFormNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenNegocioCliente() {
		return isVisibilidadCeldaOrdenNegocioCliente;
	}

	public void setIsVisibilidadCeldaOrdenNegocioCliente(Boolean isVisibilidadCeldaOrdenNegocioCliente) {
		this.isVisibilidadCeldaOrdenNegocioCliente = isVisibilidadCeldaOrdenNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesNegocioCliente() {
		return isVisibilidadCeldaNuevoRelacionesNegocioCliente;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesNegocioCliente(Boolean isVisibilidadCeldaNuevoRelacionesNegocioCliente) {
		this.isVisibilidadCeldaNuevoRelacionesNegocioCliente = isVisibilidadCeldaNuevoRelacionesNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaModificarNegocioCliente() {
		return isVisibilidadCeldaModificarNegocioCliente;
	}

	public void setIsVisibilidadCeldaModificarNegocioCliente(Boolean isVisibilidadCeldaModificarNegocioCliente) {
		this.isVisibilidadCeldaModificarNegocioCliente = isVisibilidadCeldaModificarNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarNegocioCliente() {
		return isVisibilidadCeldaActualizarNegocioCliente;
	}

	public void setIsVisibilidadCeldaActualizarNegocioCliente(Boolean isVisibilidadCeldaActualizarNegocioCliente) {
		this.isVisibilidadCeldaActualizarNegocioCliente = isVisibilidadCeldaActualizarNegocioCliente;
	}

	public Boolean getIsVisibilidadCeldaEliminarNegocioCliente() {
		return isVisibilidadCeldaEliminarNegocioCliente;
	}

	public void setIsVisibilidadCeldaEliminarNegocioCliente(Boolean isVisibilidadCeldaEliminarNegocioCliente) {
		this.isVisibilidadCeldaEliminarNegocioCliente = isVisibilidadCeldaEliminarNegocioCliente;
	}

	public Boolean getIsVisibilidadCeldaCancelarNegocioCliente() {
		return isVisibilidadCeldaCancelarNegocioCliente;
	}

	public void setIsVisibilidadCeldaCancelarNegocioCliente(Boolean isVisibilidadCeldaCancelarNegocioCliente) {
		this.isVisibilidadCeldaCancelarNegocioCliente = isVisibilidadCeldaCancelarNegocioCliente;
	}

	public Boolean getIsVisibilidadCeldaGuardarNegocioCliente() {
		return isVisibilidadCeldaGuardarNegocioCliente;
	}

	public void setIsVisibilidadCeldaGuardarNegocioCliente(Boolean isVisibilidadCeldaGuardarNegocioCliente) {
		this.isVisibilidadCeldaGuardarNegocioCliente = isVisibilidadCeldaGuardarNegocioCliente;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosNegocioCliente() {
		return isVisibilidadCeldaGuardarCambiosNegocioCliente;
	}

	public void setIsVisibilidadCeldaGuardarCambiosNegocioCliente(Boolean isVisibilidadCeldaGuardarCambiosNegocioCliente) {
		this.isVisibilidadCeldaGuardarCambiosNegocioCliente = isVisibilidadCeldaGuardarCambiosNegocioCliente;
	}
		
	public NegocioClienteSessionBean getnegocioclienteSessionBean() {
		return this.negocioclienteSessionBean;
	}
	
	public void setnegocioclienteSessionBean(NegocioClienteSessionBean negocioclienteSessionBean) {
		this.negocioclienteSessionBean=negocioclienteSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdTipoUbicacionNegocio() {
		return this.isVisibilidadFK_IdTipoUbicacionNegocio;
	}

	public void setisVisibilidadFK_IdTipoUbicacionNegocio(Boolean isVisibilidadFK_IdTipoUbicacionNegocio) {
		this.isVisibilidadFK_IdTipoUbicacionNegocio=isVisibilidadFK_IdTipoUbicacionNegocio;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(NegocioCliente negociocliente)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(negociocliente,null);
				this.setActualParaGuardarClienteForeignKey(negociocliente,null);
				this.setActualParaGuardarTipoUbicacionNegocioForeignKey(negociocliente,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(NegocioCliente negociocliente,NegocioCliente negocioclienteAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalNegocioCliente(negociocliente);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		negocioclienteAux.setId(negociocliente.getId());
		negocioclienteAux.setVersionRow(negociocliente.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessNegocioCliente();
		
			int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = negocioclienteValidator.getInvalidValues(this.negociocliente);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			negocioclienteLogic.setDatosCliente(datosCliente);
			negocioclienteLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				negocioclienteAux=new  NegocioCliente();
				
				negocioclienteAux.setIsNew(true);
				negocioclienteAux.setIsChanged(true);
				
				negocioclienteAux.setNegocioClienteOriginal(this.negociocliente);
				
				negocioclienteAux.setId(this.negociocliente.getId());	
				negocioclienteAux.setVersionRow(this.negociocliente.getVersionRow());	
				negocioclienteAux.setid_empresa(this.negociocliente.getid_empresa());	
				negocioclienteAux.setid_cliente(this.negociocliente.getid_cliente());	
				negocioclienteAux.setnombre_quien_se_factura(this.negociocliente.getnombre_quien_se_factura());	
				negocioclienteAux.setfax(this.negociocliente.getfax());	
				negocioclienteAux.setruc(this.negociocliente.getruc());	
				negocioclienteAux.settelefono(this.negociocliente.gettelefono());	
				negocioclienteAux.setnombre_local(this.negociocliente.getnombre_local());	
				negocioclienteAux.sete_mail(this.negociocliente.gete_mail());	
				negocioclienteAux.setdireccion(this.negociocliente.getdireccion());	
				negocioclienteAux.setes_local_propio(this.negociocliente.getes_local_propio());	
				negocioclienteAux.setnumero_anios(this.negociocliente.getnumero_anios());	
				negocioclienteAux.setnumero_meses(this.negociocliente.getnumero_meses());	
				negocioclienteAux.setid_tipo_ubicacion_negocio(this.negociocliente.getid_tipo_ubicacion_negocio());	
				negocioclienteAux.setempleados_fijos(this.negociocliente.getempleados_fijos());	
				negocioclienteAux.setempleado_temporales(this.negociocliente.getempleado_temporales());	
				negocioclienteAux.setempleados_total(this.negociocliente.getempleados_total());	
				negocioclienteAux.setporcentaje_ventas_contado(this.negociocliente.getporcentaje_ventas_contado());	
				negocioclienteAux.setporcentaje_ventas_credito(this.negociocliente.getporcentaje_ventas_credito());	
				negocioclienteAux.setplazo_dias(this.negociocliente.getplazo_dias());	
				negocioclienteAux.setnumero_clientes(this.negociocliente.getnumero_clientes());	
				negocioclienteAux.setmonto_maximo_ventas_mensual(this.negociocliente.getmonto_maximo_ventas_mensual());	
				negocioclienteAux.setmonto_minimo_ventas_mensual(this.negociocliente.getmonto_minimo_ventas_mensual());	
				negocioclienteAux.setes_enero_alto(this.negociocliente.getes_enero_alto());	
				negocioclienteAux.setes_febrero_alto(this.negociocliente.getes_febrero_alto());	
				negocioclienteAux.setes_marzo_alto(this.negociocliente.getes_marzo_alto());	
				negocioclienteAux.setes_abril_alto(this.negociocliente.getes_abril_alto());	
				negocioclienteAux.setes_mayo_alto(this.negociocliente.getes_mayo_alto());	
				negocioclienteAux.setes_junio_alto(this.negociocliente.getes_junio_alto());	
				negocioclienteAux.setes_julio_alto(this.negociocliente.getes_julio_alto());	
				negocioclienteAux.setes_agosto_alto(this.negociocliente.getes_agosto_alto());	
				negocioclienteAux.setes_septiembre_alto(this.negociocliente.getes_septiembre_alto());	
				negocioclienteAux.setes_octubre_alto(this.negociocliente.getes_octubre_alto());	
				negocioclienteAux.setes_noviembre_alto(this.negociocliente.getes_noviembre_alto());	
				negocioclienteAux.setes_diciembre_alto(this.negociocliente.getes_diciembre_alto());	
				negocioclienteAux.setes_enero_bajo(this.negociocliente.getes_enero_bajo());	
				negocioclienteAux.setes_febrero_bajo(this.negociocliente.getes_febrero_bajo());	
				negocioclienteAux.setes_marzo_bajo(this.negociocliente.getes_marzo_bajo());	
				negocioclienteAux.setes_abril_bajo(this.negociocliente.getes_abril_bajo());	
				negocioclienteAux.setes_mayo_bajo(this.negociocliente.getes_mayo_bajo());	
				negocioclienteAux.setes_junio_bajo(this.negociocliente.getes_junio_bajo());	
				negocioclienteAux.setes_julio_bajo(this.negociocliente.getes_julio_bajo());	
				negocioclienteAux.setes_agosto_bajo(this.negociocliente.getes_agosto_bajo());	
				negocioclienteAux.setes_septiembre_bajo(this.negociocliente.getes_septiembre_bajo());	
				negocioclienteAux.setes_octubre_bajo(this.negociocliente.getes_octubre_bajo());	
				negocioclienteAux.setes_noviembre_bajo(this.negociocliente.getes_noviembre_bajo());	
				negocioclienteAux.setes_diciembre_bajo(this.negociocliente.getes_diciembre_bajo());	
				negocioclienteAux.setdescripcion(this.negociocliente.getdescripcion());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(negocioclienteAux,negocioclienteLogic.getNegocioClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(negocioclienteAux,negocioclientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteLogic.saveNegocioClientes();//WithConnection
						//negocioclienteLogic.getSetVersionRowNegocioClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.negociocliente,negocioclienteAux);
					
					this.refrescarForeignKeysDescripcionesNegocioCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								negocioclienteLogic.saveNegocioClienteRelaciones(negocioclienteAux);//WithConnection
								//negocioclienteLogic.getSetVersionRowNegocioClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.negociocliente,negocioclienteAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(negocioclienteAux,negocioclienteLogic.getNegocioClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(negocioclienteAux,negocioclientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.negociocliente,negocioclienteAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				negocioclienteAux=new  NegocioCliente();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.negocioclienteSessionBean.getEsGuardarRelacionado() 
					|| (this.negocioclienteSessionBean.getEsGuardarRelacionado() && this.negociocliente.getId()>=0)) {
						
					negocioclienteAux.setIsNew(false);
				}
				
				negocioclienteAux.setIsDeleted(false);
			
				negocioclienteAux.setId(this.negociocliente.getId());	
				negocioclienteAux.setVersionRow(this.negociocliente.getVersionRow());	
				negocioclienteAux.setid_empresa(this.negociocliente.getid_empresa());	
				negocioclienteAux.setid_cliente(this.negociocliente.getid_cliente());	
				negocioclienteAux.setnombre_quien_se_factura(this.negociocliente.getnombre_quien_se_factura());	
				negocioclienteAux.setfax(this.negociocliente.getfax());	
				negocioclienteAux.setruc(this.negociocliente.getruc());	
				negocioclienteAux.settelefono(this.negociocliente.gettelefono());	
				negocioclienteAux.setnombre_local(this.negociocliente.getnombre_local());	
				negocioclienteAux.sete_mail(this.negociocliente.gete_mail());	
				negocioclienteAux.setdireccion(this.negociocliente.getdireccion());	
				negocioclienteAux.setes_local_propio(this.negociocliente.getes_local_propio());	
				negocioclienteAux.setnumero_anios(this.negociocliente.getnumero_anios());	
				negocioclienteAux.setnumero_meses(this.negociocliente.getnumero_meses());	
				negocioclienteAux.setid_tipo_ubicacion_negocio(this.negociocliente.getid_tipo_ubicacion_negocio());	
				negocioclienteAux.setempleados_fijos(this.negociocliente.getempleados_fijos());	
				negocioclienteAux.setempleado_temporales(this.negociocliente.getempleado_temporales());	
				negocioclienteAux.setempleados_total(this.negociocliente.getempleados_total());	
				negocioclienteAux.setporcentaje_ventas_contado(this.negociocliente.getporcentaje_ventas_contado());	
				negocioclienteAux.setporcentaje_ventas_credito(this.negociocliente.getporcentaje_ventas_credito());	
				negocioclienteAux.setplazo_dias(this.negociocliente.getplazo_dias());	
				negocioclienteAux.setnumero_clientes(this.negociocliente.getnumero_clientes());	
				negocioclienteAux.setmonto_maximo_ventas_mensual(this.negociocliente.getmonto_maximo_ventas_mensual());	
				negocioclienteAux.setmonto_minimo_ventas_mensual(this.negociocliente.getmonto_minimo_ventas_mensual());	
				negocioclienteAux.setes_enero_alto(this.negociocliente.getes_enero_alto());	
				negocioclienteAux.setes_febrero_alto(this.negociocliente.getes_febrero_alto());	
				negocioclienteAux.setes_marzo_alto(this.negociocliente.getes_marzo_alto());	
				negocioclienteAux.setes_abril_alto(this.negociocliente.getes_abril_alto());	
				negocioclienteAux.setes_mayo_alto(this.negociocliente.getes_mayo_alto());	
				negocioclienteAux.setes_junio_alto(this.negociocliente.getes_junio_alto());	
				negocioclienteAux.setes_julio_alto(this.negociocliente.getes_julio_alto());	
				negocioclienteAux.setes_agosto_alto(this.negociocliente.getes_agosto_alto());	
				negocioclienteAux.setes_septiembre_alto(this.negociocliente.getes_septiembre_alto());	
				negocioclienteAux.setes_octubre_alto(this.negociocliente.getes_octubre_alto());	
				negocioclienteAux.setes_noviembre_alto(this.negociocliente.getes_noviembre_alto());	
				negocioclienteAux.setes_diciembre_alto(this.negociocliente.getes_diciembre_alto());	
				negocioclienteAux.setes_enero_bajo(this.negociocliente.getes_enero_bajo());	
				negocioclienteAux.setes_febrero_bajo(this.negociocliente.getes_febrero_bajo());	
				negocioclienteAux.setes_marzo_bajo(this.negociocliente.getes_marzo_bajo());	
				negocioclienteAux.setes_abril_bajo(this.negociocliente.getes_abril_bajo());	
				negocioclienteAux.setes_mayo_bajo(this.negociocliente.getes_mayo_bajo());	
				negocioclienteAux.setes_junio_bajo(this.negociocliente.getes_junio_bajo());	
				negocioclienteAux.setes_julio_bajo(this.negociocliente.getes_julio_bajo());	
				negocioclienteAux.setes_agosto_bajo(this.negociocliente.getes_agosto_bajo());	
				negocioclienteAux.setes_septiembre_bajo(this.negociocliente.getes_septiembre_bajo());	
				negocioclienteAux.setes_octubre_bajo(this.negociocliente.getes_octubre_bajo());	
				negocioclienteAux.setes_noviembre_bajo(this.negociocliente.getes_noviembre_bajo());	
				negocioclienteAux.setes_diciembre_bajo(this.negociocliente.getes_diciembre_bajo());	
				negocioclienteAux.setdescripcion(this.negociocliente.getdescripcion());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(negocioclienteAux,negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(negocioclienteAux,negocioclientes);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteLogic.saveNegocioClientes();//WithConnection
						//negocioclienteLogic.getSetVersionRowNegocioClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.negociocliente,negocioclienteAux);
					
					this.refrescarForeignKeysDescripcionesNegocioCliente();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								negocioclienteLogic.saveNegocioClienteRelaciones(negocioclienteAux);//WithConnection
								//negocioclienteLogic.getSetVersionRowNegocioClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.negociocliente,negocioclienteAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
									|| this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(negocioclienteAux,negocioclienteLogic.getNegocioClientes());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(negocioclienteAux,negocioclientes);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.negociocliente,negocioclienteAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				negocioclienteAux=new  NegocioCliente();
				
				negocioclienteAux.setIsNew(false);
				negocioclienteAux.setIsChanged(false);
				
				negocioclienteAux.setIsDeleted(true);
				
				negocioclienteAux.setId(this.negociocliente.getId());	
				negocioclienteAux.setVersionRow(this.negociocliente.getVersionRow());	
				negocioclienteAux.setid_empresa(this.negociocliente.getid_empresa());	
				negocioclienteAux.setid_cliente(this.negociocliente.getid_cliente());	
				negocioclienteAux.setnombre_quien_se_factura(this.negociocliente.getnombre_quien_se_factura());	
				negocioclienteAux.setfax(this.negociocliente.getfax());	
				negocioclienteAux.setruc(this.negociocliente.getruc());	
				negocioclienteAux.settelefono(this.negociocliente.gettelefono());	
				negocioclienteAux.setnombre_local(this.negociocliente.getnombre_local());	
				negocioclienteAux.sete_mail(this.negociocliente.gete_mail());	
				negocioclienteAux.setdireccion(this.negociocliente.getdireccion());	
				negocioclienteAux.setes_local_propio(this.negociocliente.getes_local_propio());	
				negocioclienteAux.setnumero_anios(this.negociocliente.getnumero_anios());	
				negocioclienteAux.setnumero_meses(this.negociocliente.getnumero_meses());	
				negocioclienteAux.setid_tipo_ubicacion_negocio(this.negociocliente.getid_tipo_ubicacion_negocio());	
				negocioclienteAux.setempleados_fijos(this.negociocliente.getempleados_fijos());	
				negocioclienteAux.setempleado_temporales(this.negociocliente.getempleado_temporales());	
				negocioclienteAux.setempleados_total(this.negociocliente.getempleados_total());	
				negocioclienteAux.setporcentaje_ventas_contado(this.negociocliente.getporcentaje_ventas_contado());	
				negocioclienteAux.setporcentaje_ventas_credito(this.negociocliente.getporcentaje_ventas_credito());	
				negocioclienteAux.setplazo_dias(this.negociocliente.getplazo_dias());	
				negocioclienteAux.setnumero_clientes(this.negociocliente.getnumero_clientes());	
				negocioclienteAux.setmonto_maximo_ventas_mensual(this.negociocliente.getmonto_maximo_ventas_mensual());	
				negocioclienteAux.setmonto_minimo_ventas_mensual(this.negociocliente.getmonto_minimo_ventas_mensual());	
				negocioclienteAux.setes_enero_alto(this.negociocliente.getes_enero_alto());	
				negocioclienteAux.setes_febrero_alto(this.negociocliente.getes_febrero_alto());	
				negocioclienteAux.setes_marzo_alto(this.negociocliente.getes_marzo_alto());	
				negocioclienteAux.setes_abril_alto(this.negociocliente.getes_abril_alto());	
				negocioclienteAux.setes_mayo_alto(this.negociocliente.getes_mayo_alto());	
				negocioclienteAux.setes_junio_alto(this.negociocliente.getes_junio_alto());	
				negocioclienteAux.setes_julio_alto(this.negociocliente.getes_julio_alto());	
				negocioclienteAux.setes_agosto_alto(this.negociocliente.getes_agosto_alto());	
				negocioclienteAux.setes_septiembre_alto(this.negociocliente.getes_septiembre_alto());	
				negocioclienteAux.setes_octubre_alto(this.negociocliente.getes_octubre_alto());	
				negocioclienteAux.setes_noviembre_alto(this.negociocliente.getes_noviembre_alto());	
				negocioclienteAux.setes_diciembre_alto(this.negociocliente.getes_diciembre_alto());	
				negocioclienteAux.setes_enero_bajo(this.negociocliente.getes_enero_bajo());	
				negocioclienteAux.setes_febrero_bajo(this.negociocliente.getes_febrero_bajo());	
				negocioclienteAux.setes_marzo_bajo(this.negociocliente.getes_marzo_bajo());	
				negocioclienteAux.setes_abril_bajo(this.negociocliente.getes_abril_bajo());	
				negocioclienteAux.setes_mayo_bajo(this.negociocliente.getes_mayo_bajo());	
				negocioclienteAux.setes_junio_bajo(this.negociocliente.getes_junio_bajo());	
				negocioclienteAux.setes_julio_bajo(this.negociocliente.getes_julio_bajo());	
				negocioclienteAux.setes_agosto_bajo(this.negociocliente.getes_agosto_bajo());	
				negocioclienteAux.setes_septiembre_bajo(this.negociocliente.getes_septiembre_bajo());	
				negocioclienteAux.setes_octubre_bajo(this.negociocliente.getes_octubre_bajo());	
				negocioclienteAux.setes_noviembre_bajo(this.negociocliente.getes_noviembre_bajo());	
				negocioclienteAux.setes_diciembre_bajo(this.negociocliente.getes_diciembre_bajo());	
				negocioclienteAux.setdescripcion(this.negociocliente.getdescripcion());	
				
				if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.negocioclienteAux.getId()>=0) {	
						this.negocioclientesEliminados.add(negocioclienteAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(negocioclienteAux,negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(negocioclienteAux,negocioclientes);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteLogic.saveNegocioClientes();//WithConnection
						//negocioclienteLogic.getSetVersionRowNegocioClientes();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								negocioclienteLogic.saveNegocioClienteRelaciones(negocioclienteAux);//WithConnection
								//negocioclienteLogic.getSetVersionRowNegocioClientes();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
								|| this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(negocioclienteAux,negocioclienteLogic.getNegocioClientes());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(negocioclienteAux,negocioclientes);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNegocioClientes().addAll(this.negocioclientesEliminados);
					
					negocioclienteLogic.saveNegocioClientes();//WithConnection
					//negocioclienteLogic.getSetVersionRowNegocioClientes();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesNegocioCliente();
				
				this.negocioclientesEliminados= new ArrayList<NegocioCliente>();		
			}
			
			if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Negocio Cliente GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.negociocliente=negocioclienteAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessNegocioCliente();
      	}
		
	}	
	
	public void actualizarRelaciones(NegocioCliente negocioclienteLocal) throws Exception {
		
		if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(NegocioCliente negocioclienteLocal) throws Exception {	
		if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				negocioclienteLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				negocioclienteLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoUbicacionNegocioDetalleFormJInternalFrame.class)) {
				TipoUbicacionNegocioBeanSwingJInternalFrame tipoubicacionnegocioBeanSwingJInternalFrameLocal=(TipoUbicacionNegocioBeanSwingJInternalFrame) ((TipoUbicacionNegocioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoubicacionnegocioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoUbicacionNegocio(tipoubicacionnegocioBeanSwingJInternalFrameLocal.gettipoubicacionnegocio(),true);
				tipoubicacionnegocioBeanSwingJInternalFrameLocal.actualizarLista(tipoubicacionnegocioBeanSwingJInternalFrameLocal.tipoubicacionnegocio,this.tipoubicacionnegociosForeignKey);

				tipoubicacionnegocioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoubicacionnegocioBeanSwingJInternalFrameLocal.tipoubicacionnegocio);

				negocioclienteLocal.setTipoUbicacionNegocio(tipoubicacionnegocioBeanSwingJInternalFrameLocal.tipoubicacionnegocio);

				this.addItemDefectoCombosForeignKeyTipoUbicacionNegocio();
				this.cargarCombosFrameTipoUbicacionNegociosForeignKey("Formulario");
				this.setActualTipoUbicacionNegocioForeignKey(tipoubicacionnegocioBeanSwingJInternalFrameLocal.tipoubicacionnegocio.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarNegocioClienteActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = negocioclienteValidator.getInvalidValues(this.negociocliente);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(NegocioCliente negociocliente,List<NegocioCliente> negocioclientes) throws Exception {
		try	{		
			NegocioClienteConstantesFunciones.actualizarLista(negociocliente,negocioclientes,this.negocioclienteSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(NegocioCliente negociocliente,List<NegocioCliente> negocioclientes) throws Exception {
		try	{			
			NegocioClienteConstantesFunciones.actualizarSelectedLista(negociocliente,negocioclientes);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<NegocioCliente> negocioclientesLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				negocioclientesLocal=this.negocioclienteLogic.getNegocioClientes();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				negocioclientesLocal=this.negocioclientes;
			}
			//ARCHITECTURE
		
			for(NegocioCliente negocioclienteLocal:negocioclientesLocal) {
				if(this.permiteMantenimiento(negocioclienteLocal) && negocioclienteLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+NegocioClienteConstantesFunciones.getNegocioClienteLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelid_empresaNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelid_clienteNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.NOMBREQUIENSEFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnombre_quien_se_facturaNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.FAX)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelfaxNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelrucNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeltelefonoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.NOMBRELOCAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnombre_localNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.EMAIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabele_mailNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeldireccionNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESLOCALPROPIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_local_propioNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.NUMEROANIOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_aniosNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.NUMEROMESES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_mesesNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.IDTIPOUBICACIONNEGOCIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelid_tipo_ubicacion_negocioNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.EMPLEADOSFIJOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleados_fijosNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.EMPLEADOTEMPORALES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleado_temporalesNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.EMPLEADOSTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleados_totalNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.PORCENTAJEVENTASCONTADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelporcentaje_ventas_contadoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.PORCENTAJEVENTASCREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelporcentaje_ventas_creditoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.PLAZODIAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelplazo_diasNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.NUMEROCLIENTES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_clientesNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.MONTOMAXIMOVENTASMENSUAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelmonto_maximo_ventas_mensualNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.MONTOMINIMOVENTASMENSUAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelmonto_minimo_ventas_mensualNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESENEROALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_enero_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESFEBREROALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_febrero_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESMARZOALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_marzo_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESABRILALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_abril_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESMAYOALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_mayo_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESJUNIOALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_junio_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESJULIOALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_julio_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESAGOSTOALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_agosto_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESSEPTIEMBREALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_septiembre_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESOCTUBREALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_octubre_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESNOVIEMBREALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_noviembre_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESDICIEMBREALTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_diciembre_altoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESENEROBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_enero_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESFEBREROBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_febrero_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESMARZOBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_marzo_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESABRILBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_abril_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESMAYOBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_mayo_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESJUNIOBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_junio_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESJULIOBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_julio_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESAGOSTOBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_agosto_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESSEPTIEMBREBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_septiembre_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESOCTUBREBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_octubre_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESNOVIEMBREBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_noviembre_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.ESDICIEMBREBAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_diciembre_bajoNegocioCliente,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(NegocioClienteConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeldescripcionNegocioCliente,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelid_empresaNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelid_clienteNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelnombre_quien_se_facturaNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelfaxNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelrucNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeltelefonoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelnombre_localNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabele_mailNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeldireccionNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_local_propioNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_aniosNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_mesesNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelid_tipo_ubicacion_negocioNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleados_fijosNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleado_temporalesNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleados_totalNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelporcentaje_ventas_contadoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelporcentaje_ventas_creditoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelplazo_diasNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_clientesNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelmonto_maximo_ventas_mensualNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabelmonto_minimo_ventas_mensualNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_enero_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_febrero_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_marzo_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_abril_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_mayo_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_junio_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_julio_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_agosto_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_septiembre_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_octubre_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_noviembre_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_diciembre_altoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_enero_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_febrero_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_marzo_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_abril_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_mayo_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_junio_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_julio_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_agosto_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_septiembre_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_octubre_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_noviembre_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_diciembre_bajoNegocioCliente,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormNegocioCliente.jLabeldescripcionNegocioCliente,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoNegocioCliente--;	
		
		
		this.negocioclienteAux=new NegocioCliente();
		
		this.negocioclienteAux.setId(this.iIdNuevoNegocioCliente);
		this.negocioclienteAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.negocioclienteLogic.getNegocioClientes().add(this.negocioclienteAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.negocioclientes.add(this.negocioclienteAux);
		}
		//ARCHITECTURE
		
		this.negociocliente=this.negocioclienteAux;
		
		if(NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioNegocioCliente(this.negociocliente);
			this.setVariablesObjetoActualToFormularioForeignKeyNegocioCliente(this.negociocliente);
		}
				
		//this.setDefaultControlesNegocioCliente();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyNegocioCliente();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyNegocioCliente();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyNegocioCliente();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualNegocioCliente(this.negocioclienteBean,this.negociocliente,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(NegocioClienteConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
			classes=NegocioClienteConstantesFunciones.getClassesRelationshipsOfNegocioCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.negocioclienteReturnGeneral=negocioclienteLogic.procesarEventosNegocioClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.negocioclienteLogic.getNegocioClientes(),this.negociocliente,this.negocioclienteParameterGeneral,this.isEsNuevoNegocioCliente,classes);//this.negocioclienteLogic.getNegocioCliente()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanNegocioCliente(this.negocioclienteReturnGeneral,this.negocioclienteBean,false);
		
		if(this.negocioclienteReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyNegocioCliente(this.negocioclienteReturnGeneral.getNegocioCliente());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioNegocioCliente(this.negocioclienteReturnGeneral.getNegocioCliente());
		}
		
		if(this.negocioclienteReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioNegocioCliente(this.negocioclienteReturnGeneral.getNegocioCliente(),classes);//this.negocioclienteBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyNegocioCliente();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyNegocioCliente();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			NegocioClienteBeanSwingJInternalFrameAdditional.RecargarFormNegocioCliente(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingNegocioCliente(false);
						
			if(negocioclienteSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualNegocioCliente();
			}
			
			this.actualizarVisualTableDatosNegocioCliente();
			
			this.jTableDatosNegocioCliente.setRowSelectionInterval(this.getIndiceNuevoNegocioCliente(), this.getIndiceNuevoNegocioCliente());
			
			this.seleccionarFilaTablaNegocioClienteActual();
						
			this.actualizarEstadoCeldasBotonesNegocioCliente("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesNegocioCliente(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarnombre_quien_se_facturaNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarfaxNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarrucNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activartelefonoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarnombre_localNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activare_mailNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activardireccionNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_local_propioNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarnumero_aniosNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarnumero_mesesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarempleados_fijosNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarempleado_temporalesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarempleados_totalNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarporcentaje_ventas_contadoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarporcentaje_ventas_creditoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarplazo_diasNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarnumero_clientesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarmonto_maximo_ventas_mensualNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarmonto_minimo_ventas_mensualNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_enero_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_febrero_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_marzo_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_abril_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_mayo_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_junio_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_julio_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_agosto_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_septiembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_octubre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_noviembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_diciembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_enero_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_febrero_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_marzo_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_abril_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_mayo_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_junio_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_julio_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_agosto_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_septiembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_octubre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_noviembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activares_diciembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activardescripcionNegocioCliente);	
		//
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarid_empresaNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarid_clienteNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setEnabled(isHabilitar && this.negocioclienteConstantesFunciones.activarid_tipo_ubicacion_negocioNegocioCliente);
	};
	
	public void setDefaultControlesNegocioCliente() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoNegocioCliente(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.negocioclienteSessionBean.setConGuardarRelaciones(true);			
			this.negocioclienteSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.setVisible(true);
			
					
		} else {
			//this.negocioclienteSessionBean.setConGuardarRelaciones(false);			
			this.negocioclienteSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoNegocioCliente() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
				if(negocioclienteAux.getId().equals(this.iIdNuevoNegocioCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(NegocioCliente negocioclienteAux:this.negocioclientes) {
				if(negocioclienteAux.getId().equals(this.iIdNuevoNegocioCliente)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualNegocioCliente(NegocioCliente negociocliente,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
				if(negocioclienteAux.getId().equals(negociocliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(NegocioCliente negocioclienteAux:this.negocioclientes) {
				if(negocioclienteAux.getId().equals(negociocliente.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalNegocioCliente(NegocioCliente negocioclienteOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
				if(negocioclienteAux.getNegocioClienteOriginal().getId().equals(negocioclienteOriginal.getId())) {
					existe=true;
					negocioclienteOriginal.setId(negocioclienteAux.getId());
					negocioclienteOriginal.setVersionRow(negocioclienteAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(NegocioCliente negocioclienteAux:this.negocioclientes) {
				if(negocioclienteAux.getNegocioClienteOriginal().getId().equals(negocioclienteOriginal.getId())) {
					existe=true;
					negocioclienteOriginal.setId(negocioclienteAux.getId());
					negocioclienteOriginal.setVersionRow(negocioclienteAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosNegocioCliente(Boolean esParaCancelar) throws Exception {
		negocioclientesAux=new ArrayList<NegocioCliente>();
		negocioclienteAux=new NegocioCliente();
		
		if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
					if(negocioclienteAux.getId()<0) {
						negocioclientesAux.add(negocioclienteAux);
					}		
				}
				this.iIdNuevoNegocioCliente=0L;
				this.negocioclienteLogic.getNegocioClientes().removeAll(negocioclientesAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(NegocioCliente negocioclienteAux:this.negocioclientes) {
					if(negocioclienteAux.getId()<0) {
						negocioclientesAux.add(negocioclienteAux);
					}		
				}
				this.iIdNuevoNegocioCliente=0L;
				this.negocioclientes.removeAll(negocioclientesAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoNegocioCliente 
					&& this.negocioclienteLogic.getNegocioClientes().size()>0
					) {
					negocioclienteAux=this.negocioclienteLogic.getNegocioClientes().get(this.negocioclienteLogic.getNegocioClientes().size() - 1);
				
					if(negocioclienteAux.getId()<0) {
						this.negocioclienteLogic.getNegocioClientes().remove(negocioclienteAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoNegocioCliente && this.negocioclientes.size()>0) {
					negocioclienteAux=this.negocioclientes.get(this.negocioclientes.size() - 1);
				
					if(negocioclienteAux.getId()<0) {
						this.negocioclientes.remove(negocioclienteAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoNegocioCliente(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(negociocliente.getId()<0) {
				this.negocioclienteLogic.getNegocioClientes().remove(this.negociocliente);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(negociocliente.getId()<0) {
				this.negocioclientes.remove(this.negociocliente);
			}
		}			
	}
	
	public void setEstadosInicialesNegocioCliente(List<NegocioCliente> negocioclientesAux) throws Exception {
		NegocioClienteConstantesFunciones.setEstadosInicialesNegocioCliente(negocioclientesAux);
	}
	
	public void setEstadosInicialesNegocioCliente(NegocioCliente negocioclienteAux) throws Exception {
		NegocioClienteConstantesFunciones.setEstadosInicialesNegocioCliente(negocioclienteAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarNegocioClienteActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesNegocioCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarNegocioClienteActual()) {
				if(!this.isEsNuevoNegocioCliente) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesNegocioCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoNegocioCliente=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarNegocioClienteActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Negocio Cliente ?", "MANTENIMIENTO DE Negocio Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesNegocioCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(NegocioCliente negociocliente) throws Exception {
		NegocioClienteConstantesFunciones.seleccionarAsignar(this.negociocliente,negociocliente);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarNegocioCliente=this.isPermisoActualizarOriginalNegocioCliente;
			
			
			this.seleccionarAsignar(negociocliente);
			
			

			idClienteActual=negociocliente.getid_cliente();
			this.seleccionarClienteActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			NegocioClienteConstantesFunciones.quitarEspaciosNegocioCliente(this.negociocliente,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesNegocioCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.negocioclienteSessionBean.setsFuncionBusquedaRapida(this.negocioclienteSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoNegocioCliente) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosNegocioCliente(esParaCancelar);				
				this.cancelarNuevoNegocioCliente(esParaCancelar);								
			}
			
			this.negociocliente=new NegocioCliente();
			
			this.inicializarNegocioCliente();
			
			this.actualizarEstadoCeldasBotonesNegocioCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarNegocioCliente() throws Exception {
		try {
			NegocioClienteConstantesFunciones.inicializarNegocioCliente(this.negociocliente);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.negocioclienteLogic.getNegocioClientes().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteNegocioClientes(String sAccionBusqueda,List<NegocioCliente> negocioclientesParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="NegocioCliente"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="NegocioClienteMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("NegocioClienteMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="NegocioCliente"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Negocio Clientes");		
		parameters.put("busquedapor", NegocioClienteConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceNegocioCliente=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			NegocioClienteConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			NegocioClienteConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceNegocioCliente=new JRBeanArrayDataSource(NegocioClienteJInternalFrame.TraerNegocioClienteBeans(negocioclientesParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceNegocioCliente);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+NegocioClienteConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+NegocioClienteConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(NegocioClienteBean.TraerNegocioClienteBeans(negocioclientesParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteNegocioClientes(sAccionBusqueda,sTipoArchivoReporte,negocioclientesParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalNegocioClientes(sAccionBusqueda,sTipoArchivoReporte,negocioclientesParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoNegocioClienteActionPerformed(null);
					//this.generarExcelReporteNegocioClientes(sAccionBusqueda,sTipoArchivoReporte,negocioclientesParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalNegocioClientes(sAccionBusqueda,sTipoArchivoReporte,negocioclientesParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesNegocioClientes(sAccionBusqueda,sTipoArchivoReporte,negocioclientesParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesNegocioClientes(sAccionBusqueda,sTipoArchivoReporte,negocioclientesParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteNegocioClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<NegocioCliente> negocioclientesParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"negociocliente";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("NegocioClientes");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderNegocioCliente("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(NegocioCliente negociocliente : negocioclientesParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			NegocioClienteConstantesFunciones.generarExcelReporteDataNegocioCliente("NORMAL",row,workbook,negociocliente,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderNegocioCliente(String sTipo,Row row,Workbook workbook) {
		
		NegocioClienteConstantesFunciones.generarExcelReporteHeaderNegocioCliente(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalNegocioClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<NegocioCliente> negocioclientesParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"negociocliente_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("NegocioClientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(NegocioCliente negociocliente : negocioclientesParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(NegocioClienteConstantesFunciones.getNegocioClienteDescripcion(negociocliente));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getnombre_quien_se_factura());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_FAX))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_FAX);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getfax());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getnombre_local());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_EMAIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMAIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.gete_mail());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_local_propio()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getnumero_anios());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_NUMEROMESES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROMESES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getnumero_meses());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.gettipoubicacionnegocio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getempleados_fijos());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getempleado_temporales());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getempleados_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getporcentaje_ventas_contado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getporcentaje_ventas_credito());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_PLAZODIAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PLAZODIAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getplazo_dias());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getnumero_clientes());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getmonto_maximo_ventas_mensual());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getmonto_minimo_ventas_mensual());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESENEROALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESENEROALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_enero_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_febrero_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_marzo_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESABRILALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESABRILALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_abril_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_mayo_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_junio_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_julio_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_agosto_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_septiembre_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_octubre_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_noviembre_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_diciembre_alto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_enero_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_febrero_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_marzo_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_abril_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_mayo_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_junio_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_julio_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_agosto_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_septiembre_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_octubre_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_noviembre_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(negociocliente.getes_diciembre_bajo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(NegocioClienteConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(negociocliente.getdescripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesNegocioClientes(String sAccionBusqueda,String sTipoArchivoReporte,List<NegocioCliente> negocioclientesParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<NegocioCliente> negocioclientesRespaldo=null;
		
		classes=NegocioClienteConstantesFunciones.getClassesRelationshipsOfNegocioCliente(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.negocioclienteLogic.setDatosCliente(this.datosCliente);
		this.negocioclienteLogic.setDatosDeep(this.datosDeep);
		this.negocioclienteLogic.setIsConDeep(true);
		
		negocioclientesRespaldo=this.negocioclienteLogic.getNegocioClientes();
		
		this.negocioclienteLogic.setNegocioClientes(negocioclientesParaReportes);	
		this.negocioclienteLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		negocioclientesParaReportes=this.negocioclienteLogic.getNegocioClientes();
		this.negocioclienteLogic.setNegocioClientes(negocioclientesRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"negociocliente_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("NegocioClientes");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderNegocioCliente("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(NegocioCliente negociocliente : negocioclientesParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderNegocioCliente("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			NegocioClienteConstantesFunciones.generarExcelReporteDataNegocioCliente("NORMAL",row,workbook,negociocliente,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(NegocioClienteConstantesFunciones.getNegocioClienteDescripcion(negociocliente));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoNegocioCliente.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessNegocioCliente() throws Exception {		
		this.startProcessNegocioCliente(true);
	}
	
	public void startProcessNegocioCliente(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasNegocioCliente ,this.jPanelParametrosReportesNegocioCliente, this.jScrollPanelDatosNegocioCliente,this.jPanelPaginacionNegocioCliente, this.jScrollPanelDatosEdicionNegocioCliente, this.jPanelAccionesNegocioCliente,this.jPanelAccionesFormularioNegocioCliente,this.jmenuBarNegocioCliente,this.jmenuBarDetalleNegocioCliente,this.jTtoolBarNegocioCliente,this.jTtoolBarDetalleNegocioCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasNegocioCliente=this.jTabbedPaneBusquedasNegocioCliente; 
		
		final JPanel jPanelParametrosReportesNegocioCliente=this.jPanelParametrosReportesNegocioCliente;
		//final JScrollPane jScrollPanelDatosNegocioCliente=this.jScrollPanelDatosNegocioCliente;
		final JTable jTableDatosNegocioCliente=this.jTableDatosNegocioCliente;		
		final JPanel jPanelPaginacionNegocioCliente=this.jPanelPaginacionNegocioCliente;
		//final JScrollPane jScrollPanelDatosEdicionNegocioCliente=this.jScrollPanelDatosEdicionNegocioCliente;
		final JPanel jPanelAccionesNegocioCliente=this.jPanelAccionesNegocioCliente;
		
		JPanel jPanelCamposAuxiliarNegocioCliente=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarNegocioCliente=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			jPanelCamposAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jPanelCamposNegocioCliente;
			jPanelAccionesFormularioAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jPanelAccionesFormularioNegocioCliente;
		}
		
		final JPanel jPanelCamposNegocioCliente=jPanelCamposAuxiliarNegocioCliente;
		final JPanel jPanelAccionesFormularioNegocioCliente=jPanelAccionesFormularioAuxiliarNegocioCliente;
		
		
		final JMenuBar jmenuBarNegocioCliente=this.jmenuBarNegocioCliente;
		final JToolBar jTtoolBarNegocioCliente=this.jTtoolBarNegocioCliente;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarNegocioCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarNegocioCliente=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			jmenuBarDetalleAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jmenuBarDetalleNegocioCliente;
			jTtoolBarDetalleAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jTtoolBarDetalleNegocioCliente;
		}
		
		final JMenuBar jmenuBarDetalleNegocioCliente=jmenuBarDetalleAuxiliarNegocioCliente;
		final JToolBar jTtoolBarDetalleNegocioCliente=jTtoolBarDetalleAuxiliarNegocioCliente;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasNegocioCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesNegocioCliente;
			processRunnable.jTableDatos=jTableDatosNegocioCliente;
			processRunnable.jPanelCampos=jPanelCamposNegocioCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionNegocioCliente;
			processRunnable.jPanelAcciones=jPanelAccionesNegocioCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioNegocioCliente;
			
			
			processRunnable.jmenuBar=jmenuBarNegocioCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleNegocioCliente;
			processRunnable.jTtoolBar=jTtoolBarNegocioCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleNegocioCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasNegocioCliente ,jPanelParametrosReportesNegocioCliente,jTableDatosNegocioCliente, /*jScrollPanelDatosNegocioCliente,*/jPanelCamposNegocioCliente,jPanelPaginacionNegocioCliente, /*jScrollPanelDatosEdicionNegocioCliente,*/ jPanelAccionesNegocioCliente,jPanelAccionesFormularioNegocioCliente,jmenuBarNegocioCliente,jmenuBarDetalleNegocioCliente,jTtoolBarNegocioCliente,jTtoolBarDetalleNegocioCliente);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasNegocioCliente ,jPanelParametrosReportesNegocioCliente, jScrollPanelDatosNegocioCliente,jPanelPaginacionNegocioCliente, jScrollPanelDatosEdicionNegocioCliente, jPanelAccionesNegocioCliente,jPanelAccionesFormularioNegocioCliente,jmenuBarNegocioCliente,jmenuBarDetalleNegocioCliente,jTtoolBarNegocioCliente,jTtoolBarDetalleNegocioCliente);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessNegocioCliente() {// throws Exception 
		this.finishProcessNegocioCliente(true);
	}
	
	public void finishProcessNegocioCliente(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasNegocioCliente ,this.jPanelParametrosReportesNegocioCliente, this.jScrollPanelDatosNegocioCliente,this.jPanelPaginacionNegocioCliente, this.jScrollPanelDatosEdicionNegocioCliente, this.jPanelAccionesNegocioCliente,this.jPanelAccionesFormularioNegocioCliente,this.jmenuBarNegocioCliente,this.jmenuBarDetalleNegocioCliente,this.jTtoolBarNegocioCliente,this.jTtoolBarDetalleNegocioCliente);		
		
		final JTabbedPane jTabbedPaneBusquedasNegocioCliente=this.jTabbedPaneBusquedasNegocioCliente; 
		
		final JPanel jPanelParametrosReportesNegocioCliente=this.jPanelParametrosReportesNegocioCliente;
		//final JScrollPane jScrollPanelDatosNegocioCliente=this.jScrollPanelDatosNegocioCliente;
		final JTable jTableDatosNegocioCliente=this.jTableDatosNegocioCliente;		
		final JPanel jPanelPaginacionNegocioCliente=this.jPanelPaginacionNegocioCliente;
		//final JScrollPane jScrollPanelDatosEdicionNegocioCliente=this.jScrollPanelDatosEdicionNegocioCliente;
		final JPanel jPanelAccionesNegocioCliente=this.jPanelAccionesNegocioCliente;
		
		JPanel jPanelCamposAuxiliarNegocioCliente=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarNegocioCliente=new JPanel();
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			jPanelCamposAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jPanelCamposNegocioCliente;
			jPanelAccionesFormularioAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jPanelAccionesFormularioNegocioCliente;
		}
		
		final JPanel jPanelCamposNegocioCliente=jPanelCamposAuxiliarNegocioCliente;
		final JPanel jPanelAccionesFormularioNegocioCliente=jPanelAccionesFormularioAuxiliarNegocioCliente;
		
		
		final JMenuBar jmenuBarNegocioCliente=this.jmenuBarNegocioCliente;		
		final JToolBar jTtoolBarNegocioCliente=this.jTtoolBarNegocioCliente;
				
		JMenuBar jmenuBarDetalleAuxiliarNegocioCliente=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarNegocioCliente=new JToolBar();
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			jmenuBarDetalleAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jmenuBarDetalleNegocioCliente;
			jTtoolBarDetalleAuxiliarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jTtoolBarDetalleNegocioCliente;		
		}
		
		final JMenuBar jmenuBarDetalleNegocioCliente=jmenuBarDetalleAuxiliarNegocioCliente;
		final JToolBar jTtoolBarDetalleNegocioCliente=jTtoolBarDetalleAuxiliarNegocioCliente;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasNegocioCliente;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesNegocioCliente;
			processRunnable.jTableDatos=jTableDatosNegocioCliente;
			processRunnable.jPanelCampos=jPanelCamposNegocioCliente;
			processRunnable.jPanelPaginacion=jPanelPaginacionNegocioCliente;
			processRunnable.jPanelAcciones=jPanelAccionesNegocioCliente;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioNegocioCliente;
			
			
			processRunnable.jmenuBar=jmenuBarNegocioCliente;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleNegocioCliente;
			processRunnable.jTtoolBar=jTtoolBarNegocioCliente;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleNegocioCliente;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasNegocioCliente ,jPanelParametrosReportesNegocioCliente, jTableDatosNegocioCliente,/*jScrollPanelDatosNegocioCliente,*/jPanelCamposNegocioCliente,jPanelPaginacionNegocioCliente, /*jScrollPanelDatosEdicionNegocioCliente,*/ jPanelAccionesNegocioCliente,jPanelAccionesFormularioNegocioCliente,jmenuBarNegocioCliente,jmenuBarDetalleNegocioCliente,jTtoolBarNegocioCliente,jTtoolBarDetalleNegocioCliente));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesNegocioCliente(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarNegocioCliente(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuNegocioCliente(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarNegocioCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarNegocioCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleNegocioCliente,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuNegocioCliente(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarNegocioCliente,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleNegocioCliente,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.negocioclienteConstantesFunciones.getsFinalQueryNegocioCliente();
		String  finalQueryPaginacionTodos=this.negocioclienteConstantesFunciones.getsFinalQueryNegocioCliente();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=NegocioClienteConstantesFunciones.getArrayColumnasGlobalesNoNegocioCliente(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=NegocioClienteConstantesFunciones.getArrayColumnasGlobalesNegocioCliente(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,NegocioClienteConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.negocioclientesEliminados= new ArrayList<NegocioCliente>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessNegocioCliente();
		
				///*NegocioClienteSessionBean*/this.negocioclienteSessionBean=new NegocioClienteSessionBean();
			
			if(this.negocioclienteSessionBean==null) {
				this.negocioclienteSessionBean=new NegocioClienteSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=NegocioClienteConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=NegocioClienteConstantesFunciones.getClassesForeignKeysOfNegocioCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/negociocliente."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			negocioclientesAux= new ArrayList<NegocioCliente>();
			
				
			negocioclienteLogic.setDatosCliente(this.datosCliente);
			negocioclienteLogic.setDatosDeep(this.datosDeep);
			negocioclienteLogic.setIsConDeep(true);
			
			
			negocioclienteLogic.getNegocioClienteDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					negocioclienteLogic.getTodosNegocioClientes(finalQueryGlobal,pagination);
					
					//negocioclienteLogic.getTodosNegocioClientesWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(negocioclienteLogic.getNegocioClientes()==null|| negocioclienteLogic.getNegocioClientes().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							negocioclientesAux= new ArrayList<NegocioCliente>();
							negocioclientesAux.addAll(negocioclienteLogic.getNegocioClientes());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientesAux= new ArrayList<NegocioCliente>();
							negocioclientesAux.addAll(negocioclientes);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							negocioclienteLogic.getTodosNegocioClientes(finalQueryGlobal+"",this.pagination);												
							
							//negocioclienteLogic.getTodosNegocioClientesWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteNegocioClientes("Todos",negocioclienteLogic.getNegocioClientes() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());					
							negocioclienteLogic.getNegocioClientes().addAll(negocioclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientes=new ArrayList<NegocioCliente>();
							negocioclientes.addAll(negocioclientesAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idNegocioCliente=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idNegocioCliente=this.idActual;
				
				} else if(this.idNegocioClienteActual!=null && this.idNegocioClienteActual!=0L) {
					idNegocioCliente=idNegocioClienteActual;
				}
				
					
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndicePorId(idNegocioCliente);
				
				this.negocioclientes=new ArrayList<NegocioCliente>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					negocioclienteLogic.getEntity(idNegocioCliente);
					
					//negocioclienteLogic.getEntityWithConnection(idNegocioCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());
					negocioclienteLogic.getNegocioClientes().add(negocioclienteLogic.getNegocioCliente());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.negocioclientes=new ArrayList<NegocioCliente>();
					this.negocioclientes.add(negociocliente);
				}
				
				if(negocioclienteLogic.getNegocioCliente()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					negocioclienteLogic.getNegocioClientesFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=negocioclienteLogic.getNegocioClientes()==null||negocioclienteLogic.getNegocioClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=negocioclientes==null|| negocioclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclientesAux=new ArrayList<NegocioCliente>();
						negocioclientesAux.addAll(negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientesAux=new ArrayList<NegocioCliente>();
							negocioclientesAux.addAll(negocioclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							negocioclienteLogic.getNegocioClientesFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteNegocioClientes("FK_IdCliente",negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteNegocioClientes("FK_IdCliente",negocioclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());
						negocioclienteLogic.getNegocioClientes().addAll(negocioclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientes=new ArrayList<NegocioCliente>();
							negocioclientes.addAll(negocioclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					negocioclienteLogic.getNegocioClientesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=negocioclienteLogic.getNegocioClientes()==null||negocioclienteLogic.getNegocioClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=negocioclientes==null|| negocioclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclientesAux=new ArrayList<NegocioCliente>();
						negocioclientesAux.addAll(negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientesAux=new ArrayList<NegocioCliente>();
							negocioclientesAux.addAll(negocioclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							negocioclienteLogic.getNegocioClientesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteNegocioClientes("FK_IdEmpresa",negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteNegocioClientes("FK_IdEmpresa",negocioclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());
						negocioclienteLogic.getNegocioClientes().addAll(negocioclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientes=new ArrayList<NegocioCliente>();
							negocioclientes.addAll(negocioclientesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoUbicacionNegocio")) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdTipoUbicacionNegocio(id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					negocioclienteLogic.getNegocioClientesFK_IdTipoUbicacionNegocio(finalQueryGlobal,pagination,id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdTipoUbicacionNegocio(id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdTipoUbicacionNegocio(id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=negocioclienteLogic.getNegocioClientes()==null||negocioclienteLogic.getNegocioClientes().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=negocioclientes==null|| negocioclientes.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclientesAux=new ArrayList<NegocioCliente>();
						negocioclientesAux.addAll(negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientesAux=new ArrayList<NegocioCliente>();
							negocioclientesAux.addAll(negocioclientes);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							negocioclienteLogic.getNegocioClientesFK_IdTipoUbicacionNegocio(finalQueryGlobal,pagination,id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdTipoUbicacionNegocio(id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=NegocioClienteConstantesFunciones.getDetalleIndiceFK_IdTipoUbicacionNegocio(id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteNegocioClientes("FK_IdTipoUbicacionNegocio",negocioclienteLogic.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteNegocioClientes("FK_IdTipoUbicacionNegocio",negocioclientes);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteLogic.setNegocioClientes(new ArrayList<NegocioCliente>());
						negocioclienteLogic.getNegocioClientes().addAll(negocioclientesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclientes=new ArrayList<NegocioCliente>();
							negocioclientes.addAll(negocioclientesAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesNegocioCliente();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessNegocioCliente();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=negocioclienteLogic.getNegocioClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=negocioclientes.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=negocioclienteLogic.getNegocioClientes().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=negocioclientes.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(NegocioCliente negociocliente) {
		Boolean permite=true;
		
		if(this.negociocliente.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=NegocioClienteConstantesFunciones.getOrderByListaNegocioCliente();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=NegocioClienteConstantesFunciones.getOrderByListaNegocioCliente();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(NegocioCliente negociocliente:negocioclienteLogic.getNegocioClientes()) {
				if(negociocliente.getsType().equals(Constantes2.S_TOTALES)) {
					negocioclienteTotales=negociocliente;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(NegocioCliente negociocliente:this.negocioclientes) {
				if(negociocliente.getsType().equals(Constantes2.S_TOTALES)) {
					negocioclienteTotales=negociocliente;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.negocioclienteAux=new NegocioCliente();
			this.negocioclienteAux.setsType(Constantes2.S_TOTALES);
			this.negocioclienteAux.setIsNew(false);
			this.negocioclienteAux.setIsChanged(false);
			this.negocioclienteAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				NegocioClienteConstantesFunciones.TotalizarValoresFilaNegocioCliente(this.negocioclienteLogic.getNegocioClientes(),this.negocioclienteAux);
				
				this.negocioclienteLogic.getNegocioClientes().add(this.negocioclienteAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				NegocioClienteConstantesFunciones.TotalizarValoresFilaNegocioCliente(this.negocioclientes,this.negocioclienteAux);
				
				this.negocioclientes.add(this.negocioclienteAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		negocioclienteTotales=new NegocioCliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.negocioclienteLogic.getNegocioClientes().remove(negocioclienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.negocioclientes.remove(negocioclienteTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		negocioclienteTotales=new NegocioCliente();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(NegocioCliente negociocliente:negocioclienteLogic.getNegocioClientes()) {
				if(negociocliente.getsType().equals(Constantes2.S_TOTALES)) {
					negocioclienteTotales=negociocliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				NegocioClienteConstantesFunciones.TotalizarValoresFilaNegocioCliente(this.negocioclienteLogic.getNegocioClientes(),negocioclienteTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(NegocioCliente negociocliente:this.negocioclientes) {
				if(negociocliente.getsType().equals(Constantes2.S_TOTALES)) {
					negocioclienteTotales=negociocliente;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				NegocioClienteConstantesFunciones.TotalizarValoresFilaNegocioCliente(this.negocioclientes,negocioclienteTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getNegocioClientesFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getNegocioClientesFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getNegocioClientesFK_IdTipoUbicacionNegocio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoUbicacionNegocio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getNegocioClientesFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					negocioclienteLogic.getNegocioClientesFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getNegocioClientesFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					negocioclienteLogic.getNegocioClientesFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getNegocioClientesFK_IdTipoUbicacionNegocio(String sFinalQuery,Long id_tipo_ubicacion_negocio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					negocioclienteLogic.getNegocioClientesFK_IdTipoUbicacionNegocio(sFinalQuery,this.pagination,id_tipo_ubicacion_negocio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosNegocioCliente() {
		this.isPermisoTodoNegocioCliente=false;
		this.isPermisoNuevoNegocioCliente=false;
		this.isPermisoActualizarNegocioCliente=false;
		this.isPermisoActualizarOriginalNegocioCliente=false;
		this.isPermisoEliminarNegocioCliente=false;
		this.isPermisoGuardarCambiosNegocioCliente=false;
		this.isPermisoConsultaNegocioCliente=false;
		this.isPermisoBusquedaNegocioCliente=false;
		this.isPermisoReporteNegocioCliente=false;		
		this.isPermisoOrdenNegocioCliente=false;		
		this.isPermisoPaginacionMedioNegocioCliente=false;		
		this.isPermisoPaginacionAltoNegocioCliente=false;
		this.isPermisoPaginacionTodoNegocioCliente=false;
		this.isPermisoCopiarNegocioCliente=false;		
		this.isPermisoVerFormNegocioCliente=false;		
		this.isPermisoDuplicarNegocioCliente=false;		
		this.isPermisoOrdenNegocioCliente=false;		
	}
	
	public void setPermisosUsuarioNegocioCliente(Boolean isPermiso) {
		this.isPermisoTodoNegocioCliente=isPermiso;
		this.isPermisoNuevoNegocioCliente=isPermiso;
		this.isPermisoActualizarNegocioCliente=isPermiso;
		this.isPermisoActualizarOriginalNegocioCliente=isPermiso;
		this.isPermisoEliminarNegocioCliente=isPermiso;
		this.isPermisoGuardarCambiosNegocioCliente=isPermiso;
		this.isPermisoConsultaNegocioCliente=isPermiso;
		this.isPermisoBusquedaNegocioCliente=isPermiso;
		this.isPermisoReporteNegocioCliente=isPermiso;
		this.isPermisoOrdenNegocioCliente=isPermiso;		
		this.isPermisoPaginacionMedioNegocioCliente=isPermiso;		
		this.isPermisoPaginacionAltoNegocioCliente=isPermiso;		
		this.isPermisoPaginacionTodoNegocioCliente=isPermiso;		
		this.isPermisoCopiarNegocioCliente=isPermiso;		
		this.isPermisoVerFormNegocioCliente=isPermiso;		
		this.isPermisoDuplicarNegocioCliente=isPermiso;
		this.isPermisoOrdenNegocioCliente=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioNegocioCliente(Boolean isPermiso) {
		//this.isPermisoTodoNegocioCliente=isPermiso;
		this.isPermisoNuevoNegocioCliente=isPermiso;
		this.isPermisoActualizarNegocioCliente=isPermiso;
		this.isPermisoActualizarOriginalNegocioCliente=isPermiso;
		this.isPermisoEliminarNegocioCliente=isPermiso;
		this.isPermisoGuardarCambiosNegocioCliente=isPermiso;
		//this.isPermisoConsultaNegocioCliente=isPermiso;
		//this.isPermisoBusquedaNegocioCliente=isPermiso;
		//this.isPermisoReporteNegocioCliente=isPermiso;
		//this.isPermisoOrdenNegocioCliente=isPermiso;		
		//this.isPermisoPaginacionMedioNegocioCliente=isPermiso;		
		//this.isPermisoPaginacionAltoNegocioCliente=isPermiso;		
		//this.isPermisoPaginacionTodoNegocioCliente=isPermiso;		
		//this.isPermisoCopiarNegocioCliente=isPermiso;		
		//this.isPermisoDuplicarNegocioCliente=isPermiso;
		//this.isPermisoOrdenNegocioCliente=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioNegocioClienteClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(NegocioClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebNegocioCliente(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioNegocioClienteClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioNegocioClienteClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionNegocioClienteClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioNegocioClienteClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioNegocioCliente() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(NegocioClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, NegocioClienteConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoNegocioCliente=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarNegocioCliente=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalNegocioCliente=this.isPermisoActualizarNegocioCliente;
			this.isPermisoEliminarNegocioCliente=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosNegocioCliente=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaNegocioCliente=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaNegocioCliente=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoNegocioCliente=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteNegocioCliente=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenNegocioCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioNegocioCliente=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoNegocioCliente=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoNegocioCliente=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarNegocioCliente=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormNegocioCliente=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarNegocioCliente=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenNegocioCliente=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosNegocioCliente.setToolTipText(this.jTableDatosNegocioCliente.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioNegocioCliente(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioNegocioCliente(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(NegocioClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(NegocioClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioNegocioCliente() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyNegocioClienteListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.tipoubicacionnegociosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyNegocioClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(NegocioClienteJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyNegocioClienteListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoUbicacionNegocioListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoUbicacionNegocioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoubicacionnegociosForeignKey==null||this.tipoubicacionnegociosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoUbicacionNegocioConstantesFunciones.getArrayColumnasGlobalesTipoUbicacionNegocio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoUbicacionNegocioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoUbicacionNegocioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoUbicacionNegociosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyNegocioClienteListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			NegocioClienteParameterReturnGeneral negocioclienteReturnGeneral=new NegocioClienteParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.negocioclienteConstantesFunciones.cargarid_empresaNegocioCliente)
					 || (this.esRecargarFks && this.negocioclienteConstantesFunciones.cargarid_empresaNegocioCliente)) {

					if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+negocioclienteSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.negocioclienteConstantesFunciones.cargarid_clienteNegocioCliente)
					 || (this.esRecargarFks && this.negocioclienteConstantesFunciones.cargarid_clienteNegocioCliente)) {

					if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+negocioclienteSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalTipoUbicacionNegocio="";

				if(((this.tipoubicacionnegociosForeignKey==null||this.tipoubicacionnegociosForeignKey.size()<=0) && this.negocioclienteConstantesFunciones.cargarid_tipo_ubicacion_negocioNegocioCliente)
					 || (this.esRecargarFks && this.negocioclienteConstantesFunciones.cargarid_tipo_ubicacion_negocioNegocioCliente)) {

					if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoUbicacionNegocio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoUbicacionNegocioConstantesFunciones.getArrayColumnasGlobalesTipoUbicacionNegocio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoUbicacionNegocio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoUbicacionNegocioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoUbicacionNegocio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoUbicacionNegocio, "");
						finalQueryGlobalTipoUbicacionNegocio+=TipoUbicacionNegocioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoUbicacionNegociosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoUbicacionNegocio=" WHERE " + ConstantesSql.ID + "="+negocioclienteSessionBean.getlidTipoUbicacionNegocioActual();
					}
				} else {
					finalQueryGlobalTipoUbicacionNegocio="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				negocioclienteReturnGeneral=negocioclienteLogic.cargarCombosLoteForeignKeyNegocioCliente(finalQueryGlobalEmpresa,finalQueryGlobalCliente,finalQueryGlobalTipoUbicacionNegocio);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=negocioclienteReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=negocioclienteReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalTipoUbicacionNegocio.equals("NONE")) {
				this.tipoubicacionnegociosForeignKey=negocioclienteReturnGeneral.gettipoubicacionnegociosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyNegocioCliente()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyTipoUbicacionNegocio();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.negocioclienteSessionBean==null) {
				this.negocioclienteSessionBean=new NegocioClienteSessionBean();
			}

			if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoUbicacionNegocio()throws Exception {
		try {

			if(!this.negocioclienteSessionBean.getisBusquedaDesdeForeignKeySesionTipoUbicacionNegocio()) {
				TipoUbicacionNegocio tipoubicacionnegocio=new TipoUbicacionNegocio();
				TipoUbicacionNegocioConstantesFunciones.setTipoUbicacionNegocioDescripcion(tipoubicacionnegocio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoubicacionnegocio.setId(null);

				if(!TipoUbicacionNegocioConstantesFunciones.ExisteEnLista(this.tipoubicacionnegociosForeignKey,tipoubicacionnegocio,true)) {

					this.tipoubicacionnegociosForeignKey.add(0,tipoubicacionnegocio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyNegocioCliente()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyNegocioCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyNegocioCliente()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyNegocioCliente();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyNegocioCliente(NegocioCliente negociocliente)throws Exception {	
		try {
			
			this.setActualClienteForeignKey(negociocliente.getid_cliente(),false,"Formulario");
			this.setActualTipoUbicacionNegocioForeignKey(negociocliente.getid_tipo_ubicacion_negocio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyNegocioCliente(NegocioCliente negociocliente,String sTipoEvento)throws Exception {	
		try {
			
			

				if(negociocliente.getCliente()!=null && !sTipoEvento.equals("id_clienteNegocioCliente")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(negociocliente.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyNegocioCliente()throws Exception {	
		try {
			
			this.setActualClienteForeignKey(this.negocioclienteConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualTipoUbicacionNegocioForeignKey(this.negocioclienteConstantesFunciones.getid_tipo_ubicacion_negocio(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyNegocioCliente()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyNegocioCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyNegocioCliente()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroNegocioCliente()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyNegocioCliente()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameTipoUbicacionNegociosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyNegocioCliente(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoUbicacionNegociosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyNegocioCliente()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.getItemCount()>0) {
				this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	






	
	

	public NegocioClienteBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public NegocioClienteBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public NegocioClienteBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.negocioclienteSessionBean=new NegocioClienteSessionBean(); 
		this.negocioclienteConstantesFunciones=new NegocioClienteConstantesFunciones(); 
		this.negocioclienteBean=new NegocioCliente();//(this.negocioclienteConstantesFunciones); 		
		this.negocioclienteReturnGeneral=new NegocioClienteParameterReturnGeneral(); 
		
		this.negocioclienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.negocioclienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public NegocioClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public NegocioClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public NegocioClienteBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessNegocioCliente(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.negocioclienteConstantesFunciones=new NegocioClienteConstantesFunciones(); 
			this.negocioclienteBean=new NegocioCliente();//this.negocioclienteConstantesFunciones); 			
			this.negocioclienteReturnGeneral=new NegocioClienteParameterReturnGeneral(); 
		
			NegocioClienteBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Negocio Cliente Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.negociocliente=new NegocioCliente();
			this.negocioclientes = new ArrayList<NegocioCliente>();
			this.negocioclientesAux = new ArrayList<NegocioCliente>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic=new NegocioClienteLogic();
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			//this.negocioclienteSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.negocioclienteSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormNegocioCliente);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoNegocioCliente);	
					}
					
					if(this.jInternalFrameImportacionNegocioCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionNegocioCliente);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByNegocioCliente!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByNegocioCliente);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormNegocioCliente);
				this.jInternalFrameDetalleFormNegocioCliente.setVisible(false);
				this.jInternalFrameDetalleFormNegocioCliente.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoNegocioCliente);
					this.jInternalFrameReporteDinamicoNegocioCliente.setVisible(false);
					this.jInternalFrameReporteDinamicoNegocioCliente.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionNegocioCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionNegocioCliente);
					this.jInternalFrameImportacionNegocioCliente.setVisible(false);
					this.jInternalFrameImportacionNegocioCliente.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByNegocioCliente!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByNegocioCliente);
					this.jInternalFrameOrderByNegocioCliente.setVisible(false);
					this.jInternalFrameOrderByNegocioCliente.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idNegocioClienteActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=NegocioClienteConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.negocioclienteReturnGeneral=new NegocioClienteParameterReturnGeneral();
			
			this.negocioclienteParameterGeneral=new NegocioClienteParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.negocioclienteLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(NegocioClienteJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,NegocioClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.negocioclienteSessionBean.getEsGuardarRelacionado(),this.negocioclienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,NegocioClienteConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.negocioclienteSessionBean.getEsGuardarRelacionado(),this.negocioclienteSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoNegocioCliente=false;
			this.isVisibilidadCeldaDuplicarNegocioCliente=true;
			this.isVisibilidadCeldaCopiarNegocioCliente=true;
			this.isVisibilidadCeldaVerFormNegocioCliente=true;
			this.isVisibilidadCeldaOrdenNegocioCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
			this.isVisibilidadCeldaModificarNegocioCliente=false;
			this.isVisibilidadCeldaActualizarNegocioCliente=false;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
			this.isVisibilidadCeldaCancelarNegocioCliente=false;
			this.isVisibilidadCeldaGuardarNegocioCliente=false;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=false;
			
			
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdTipoUbicacionNegocio=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesNegocioCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosNegocioCliente();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioNegocioCliente(false);
			
			this.setPermisosUsuarioNegocioCliente();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.negocioclienteSessionBean.getEsGuardarRelacionado() 
				|| (this.negocioclienteSessionBean.getEsGuardarRelacionado() && this.negocioclienteSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioNegocioClienteClasesRelacionadas();
			}
			
			if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioNegocioClienteClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosNegocioCliente();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualNegocioCliente();
			}
			
			if(!this.isPermisoBusquedaNegocioCliente) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioNegocioCliente,this.isPermisoPaginacionMedioNegocioCliente,this.isPermisoPaginacionTodoNegocioCliente);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(NegocioClienteConstantesFunciones.getTiposSeleccionarNegocioCliente());
				
				this.tiposColumnasSelect=NegocioClienteConstantesFunciones.getTiposSeleccionarNegocioCliente(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioNegocioCliente();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioNegocioCliente(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioNegocioCliente(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesNegocioCliente() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.clienteLogic=new ClienteLogic();
			this.tipoubicacionnegocioLogic=new TipoUbicacionNegocioLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				negocioclienteImplementable= (NegocioClienteImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+NegocioClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				negocioclienteImplementableHome= (NegocioClienteImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+NegocioClienteConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.negocioclientes= new ArrayList<NegocioCliente>();
			this.negocioclientesEliminados= new ArrayList<NegocioCliente>();
						
			this.isEsNuevoNegocioCliente=false;
			this.esParaAccionDesdeFormularioNegocioCliente=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.tipoubicacionnegociosForeignKey=new ArrayList<TipoUbicacionNegocio>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyNegocioCliente(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroNegocioCliente();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			NegocioClienteBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=NegocioClienteConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesNegocioCliente("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingNegocioCliente(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioNegocioCliente();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioNegocioCliente();
			}
			
			NegocioClienteBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasNegocioCliente.getTabCount(); i++) {
					this.jTabbedPaneBusquedasNegocioCliente.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasNegocioCliente.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessNegocioCliente(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga NegocioCliente: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectNegocioCliente() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesNegocioCliente")) {
				iIndex=this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessNegocioCliente();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyNegocioCliente(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyNegocioCliente(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyNegocioCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyNegocioClienteListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyNegocioCliente();
		
		this.cargarCombosFrameForeignKeyNegocioCliente();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyNegocioCliente();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyNegocioCliente();
		}
	}
	
	

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoUbicacionNegocio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoUbicacionNegocioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoUbicacionNegocio();
				this.cargarCombosFrameTipoUbicacionNegociosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoUbicacionNegocio(this.tipoubicacionnegociosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoNegocioClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			
			if(jTableDatosNegocioCliente.getRowCount()>=1) {
				jTableDatosNegocioCliente.removeRowSelectionInterval(0, jTableDatosNegocioCliente.getRowCount()-1);						
			}
			
			this.isEsNuevoNegocioCliente=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoNegocioCliente(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesNegocioCliente(true);			
			//this.negociocliente=new NegocioCliente();
			//this.negociocliente.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesNegocioCliente(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualNegocioCliente() ;
			
			if(NegocioClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleNegocioCliente(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.negociocliente);	
			this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);				
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar NegocioCliente: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarNegocioClienteActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosNegocioCliente.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosNegocioCliente.getSelectedRows().length;			
			}
			
			negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoNegocioCliente--;			
				//NegocioCliente negocioclienteAux= new NegocioCliente();			
				//negocioclienteAux.setId(this.iIdNuevoNegocioCliente);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//NegocioCliente negocioclienteOrigen=new NegocioCliente();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(NegocioCliente negocioclienteOrigen : negocioclientesSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							negocioclienteOrigen =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							negocioclienteOrigen =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaNegocioCliente();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.negociocliente.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosNegocioCliente(negocioclienteOrigen,this.negociocliente,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.negocioclienteLogic.getNegocioClientes().add(this.negocioclienteAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.negocioclientes.add(this.negocioclienteAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaNegocioCliente(false);
				
				this.jTableDatosNegocioCliente.setRowSelectionInterval(this.getIndiceNuevoNegocioCliente(), this.getIndiceNuevoNegocioCliente());
				
				int iLastRow =  this.jTableDatosNegocioCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosNegocioCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosNegocioCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaNegocioCliente(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();									
		
			NegocioCliente negocioclienteOrigen=new NegocioCliente();
			NegocioCliente negocioclienteDestino=new NegocioCliente();
				
			negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosNegocioCliente.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || negocioclientesSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosNegocioCliente.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteOrigen =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						negocioclienteOrigen =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						negocioclienteDestino =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						negocioclienteDestino =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				negocioclienteOrigen =negocioclientesSeleccionados.get(0);
				negocioclienteDestino =negocioclientesSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosNegocioCliente(negocioclienteOrigen,negocioclienteDestino,true,false);
				
				negocioclienteDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(negocioclienteDestino,negocioclienteLogic.getNegocioClientes());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(negocioclienteDestino,negocioclientes);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaNegocioCliente(false);
				
				//this.jTableDatosNegocioCliente.setRowSelectionInterval(this.getIndiceNuevoNegocioCliente(), this.getIndiceNuevoNegocioCliente());
				
				int iLastRow =  this.jTableDatosNegocioCliente.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosNegocioCliente.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosNegocioCliente.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaNegocioCliente(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormNegocioCliente.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesNegocioCliente.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasNegocioCliente.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesNegocioCliente.setVisible(!isVisible);
			this.jPanelPaginacionNegocioCliente.setVisible(!isVisible);
			this.jPanelAccionesNegocioCliente.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameNegocioCliente();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoNegocioCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionNegocioCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByNegocioCliente();
			
			this.abrirFrameOrderByNegocioCliente();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByNegocioCliente();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleNegocioCliente(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormNegocioCliente);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormNegocioCliente.isMaximum()) {
					this.jInternalFrameDetalleFormNegocioCliente.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormNegocioCliente.setSize(this.jInternalFrameDetalleFormNegocioCliente.iWidthFormulario,this.jInternalFrameDetalleFormNegocioCliente.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormNegocioCliente.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormNegocioCliente.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormNegocioCliente.isMaximum()) {
						this.jInternalFrameDetalleFormNegocioCliente.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormNegocioCliente.jContentPaneDetalleNegocioCliente.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormNegocioCliente.jContentPaneDetalleNegocioCliente.getWidth(),NegocioClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormNegocioCliente.jContentPaneDetalleNegocioCliente.getWidth(),NegocioClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormNegocioCliente.jContentPaneDetalleNegocioCliente.getWidth(),NegocioClienteConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormNegocioCliente.setVisible(true);
	        this.jInternalFrameDetalleFormNegocioCliente.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByNegocioCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByNegocioCliente==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByNegocioCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByNegocioCliente,false,this);
				} else {
					this.jInternalFrameOrderByNegocioCliente=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByNegocioCliente,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByNegocioCliente);
				this.jInternalFrameOrderByNegocioCliente.setVisible(false);
				this.jInternalFrameOrderByNegocioCliente.setSelected(false);
				
				this.jInternalFrameOrderByNegocioCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByNegocioCliente"));
				
				this.inicializarActualizarBindingTablaOrderByNegocioCliente();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionNegocioCliente() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionNegocioCliente==null) {
				
				this.jInternalFrameImportacionNegocioCliente=new ImportacionJInternalFrame(NegocioClienteConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionNegocioCliente);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionNegocioCliente);
				this.jInternalFrameImportacionNegocioCliente.setVisible(false);
				this.jInternalFrameImportacionNegocioCliente.setSelected(false);


				this.jInternalFrameImportacionNegocioCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionNegocioCliente"));
				this.jInternalFrameImportacionNegocioCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionNegocioCliente"));
				this.jInternalFrameImportacionNegocioCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionNegocioCliente"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoNegocioCliente() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoNegocioCliente==null) {
				this.jInternalFrameReporteDinamicoNegocioCliente=new ReporteDinamicoJInternalFrame(NegocioClienteConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoNegocioCliente);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoNegocioCliente);
				this.jInternalFrameReporteDinamicoNegocioCliente.setVisible(false);
				this.jInternalFrameReporteDinamicoNegocioCliente.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoNegocioCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoNegocioCliente"));
				this.jInternalFrameReporteDinamicoNegocioCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoNegocioCliente"));
				this.jInternalFrameReporteDinamicoNegocioCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoNegocioCliente"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualNegocioCliente();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleNegocioCliente() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormNegocioCliente);
			
	       	this.jInternalFrameDetalleFormNegocioCliente.setVisible(false);
	        this.jInternalFrameDetalleFormNegocioCliente.setSelected(false);
			
			//this.jInternalFrameDetalleFormNegocioCliente.dispose();
			//this.jInternalFrameDetalleFormNegocioCliente=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoNegocioCliente() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoNegocioCliente.setVisible(true);
	        this.jInternalFrameReporteDinamicoNegocioCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionNegocioCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionNegocioCliente.setVisible(true);
	        this.jInternalFrameImportacionNegocioCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByNegocioCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByNegocioCliente.setVisible(true);
	        this.jInternalFrameOrderByNegocioCliente.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByNegocioCliente() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByNegocioCliente.setVisible(false);
	        this.jInternalFrameOrderByNegocioCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoNegocioCliente() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoNegocioCliente.setVisible(false);
	        this.jInternalFrameReporteDinamicoNegocioCliente.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionNegocioCliente() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionNegocioCliente.setVisible(false);
	        this.jInternalFrameImportacionNegocioCliente.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarNegocioCliente(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarNegocioCliente(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesNegocioCliente(true);
			//this.isEsNuevoNegocioCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesNegocioCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesNegocioCliente(false) ;
			
			if(negocioclienteSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(NegocioClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleNegocioCliente(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualNegocioCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaNegocioClienteActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarNegocioCliente(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesNegocioCliente(true);
			//this.isEsNuevoNegocioCliente=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.negociocliente.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesNegocioCliente("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesNegocioCliente(false) ;
			
			if(NegocioClienteJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleNegocioCliente(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualNegocioCliente(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.negocioclienteConstantesFunciones.cargarid_clienteNegocioCliente) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingNegocioCliente(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosNegocioCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoUbicacionNegocio(List<TipoUbicacionNegocio> tipoubicacionnegociosForeignKey)throws Exception{
		TableColumn tableColumnTipoUbicacionNegocio=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO));
		TableCellEditor tableCellEditorTipoUbicacionNegocio =tableColumnTipoUbicacionNegocio.getCellEditor();

		TipoUbicacionNegocioTableCell tipoubicacionnegocioTableCellFk=(TipoUbicacionNegocioTableCell)tableCellEditorTipoUbicacionNegocio;

		if(tipoubicacionnegocioTableCellFk!=null) {
			tipoubicacionnegocioTableCellFk.settipoubicacionnegociosForeignKey(tipoubicacionnegociosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosNegocioCliente.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoubicacionnegocioTableCellFk.setRowActual(intSelectedRow);
			//tipoubicacionnegocioTableCellFk.settipoubicacionnegociosForeignKeyActual(tipoubicacionnegociosForeignKey);
		//}


		if(tipoubicacionnegocioTableCellFk!=null) {
			tipoubicacionnegocioTableCellFk.RecargarTipoUbicacionNegociosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesNegocioCliente(false);
			
			//if(!this.isEsNuevoNegocioCliente) {								
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
				this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				
			}
			
			if(this.permiteMantenimiento(this.negociocliente)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoNegocioCliente=true;
					this.inicializarActualizarBindingTablaNegocioCliente(false);
					this.isEsNuevoNegocioCliente=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoNegocioCliente=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoNegocioCliente=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesNegocioCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualNegocioCliente(false);
				
				this.habilitarDeshabilitarControlesNegocioCliente(false);
			
												
				
				if(NegocioClienteJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleNegocioCliente();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoNegocioClienteActionPerformed(evt,negocioclienteSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualNegocioCliente(this.negociocliente,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosNegocioCliente.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,negocioclienteSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.negociocliente.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarNegocioClienteActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				this.negociocliente.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				this.negociocliente.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.negociocliente)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((NegocioClienteModel) this.jTableDatosNegocioCliente.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoNegocioCliente=true;
				this.inicializarActualizarBindingTablaNegocioCliente(false);
				this.isEsNuevoNegocioCliente=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesNegocioCliente(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualNegocioCliente(false);
				
				this.habilitarDeshabilitarControlesNegocioCliente(false);
				
				
				
				if(NegocioClienteJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleNegocioCliente();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarNegocioClienteActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosNegocioCliente.getRowCount()>=1) {
				jTableDatosNegocioCliente.removeRowSelectionInterval(0, jTableDatosNegocioCliente.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesNegocioCliente(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaNegocioCliente(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesNegocioCliente(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualNegocioCliente(false) ;
			
			this.isEsNuevoNegocioCliente=false;
			
			if(NegocioClienteJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleNegocioCliente();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingNegocioCliente(false);
				
				//SI ES MANUAL
				if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualNegocioCliente();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoNegocioCliente--;			
			//NegocioCliente negocioclienteAux= new NegocioCliente();			
			//negocioclienteAux.setId(this.iIdNuevoNegocioCliente);
			
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaNegocioCliente();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
			
			this.negociocliente.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.negocioclienteLogic.getNegocioClientes().add(this.negocioclienteAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.negocioclientes.add(this.negocioclienteAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaNegocioCliente(false);
			
			this.jTableDatosNegocioCliente.setRowSelectionInterval(this.getIndiceNuevoNegocioCliente(), this.getIndiceNuevoNegocioCliente());
			
			int iLastRow =  this.jTableDatosNegocioCliente.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosNegocioCliente.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosNegocioCliente.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaNegocioCliente(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingNegocioCliente(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingNegocioCliente(false);
			
			//SI ES MANUAL
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualNegocioCliente();
			}
			
			//this.abrirFrameTreeNegocioCliente();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Negocio ClienteS ?", "MANTENIMIENTO DE Negocio Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionNegocioCliente.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralNegocioCliente();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.negocioclienteReturnGeneral=negocioclienteLogic.procesarImportacionNegocioClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.negocioclienteParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarNegocioClienteReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionNegocioCliente.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionNegocioCliente.setFileImportacion(this.jInternalFrameImportacionNegocioCliente.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionNegocioCliente.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionNegocioCliente.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionNegocioCliente.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionNegocioCliente.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		

		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("NegocioClienteBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"NegocioClienteBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteNegocioClientes("Todos",negocioclientesSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case NegocioClienteConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreQuienSeFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreQuienSeFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreQuienSeFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreQuienSeFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_FAX:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_x_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_x_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_x_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_x_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbreLocal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbreLocal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbreLocal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbreLocal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_EMAIL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ail_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ail_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ail_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ail_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LocalPropio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LocalPropio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LocalPropio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LocalPropio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroAnios_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroAnios_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroAnios_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroAnios_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROMESES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroMeses_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroMeses_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroMeses_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroMeses_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoUbicacionNegocio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoUbicacionNegocio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoUbicacionNegocio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoUbicacionNegocio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_pleadosFijos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_pleadosFijos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_pleadosFijos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_pleadosFijos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_pleadoTemporales_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_pleadoTemporales_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_pleadoTemporales_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_pleadoTemporales_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_pleadosTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_pleadosTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_pleadosTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_pleadosTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeVentasContado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeVentasContado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeVentasContado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeVentasContado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeVentasCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeVentasCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeVentasCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeVentasCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_PLAZODIAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_azoDias_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_azoDias_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_azoDias_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_azoDias_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroClientes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroClientes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroClientes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroClientes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoMaximoVentasMensual_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoMaximoVentasMensual_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoMaximoVentasMensual_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoMaximoVentasMensual_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoMinimoVentasMensual_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoMinimoVentasMensual_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoMinimoVentasMensual_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoMinimoVentasMensual_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EneroAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EneroAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EneroAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EneroAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FebreroAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FebreroAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FebreroAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FebreroAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_MarzoAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_MarzoAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_MarzoAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_MarzoAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AbrilAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AbrilAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AbrilAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AbrilAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_MayoAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_MayoAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_MayoAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_MayoAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_JunioAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_JunioAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_JunioAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_JunioAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_JulioAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_JulioAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_JulioAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_JulioAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AgostoAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AgostoAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AgostoAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AgostoAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SeptiembreAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SeptiembreAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SeptiembreAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SeptiembreAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_OctubreAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_OctubreAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_OctubreAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_OctubreAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_NoviembreAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_NoviembreAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_NoviembreAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_NoviembreAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_DiciembreAlto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_DiciembreAlto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_DiciembreAlto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_DiciembreAlto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EneroBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EneroBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EneroBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EneroBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FebreroBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FebreroBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FebreroBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FebreroBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_MarzoBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_MarzoBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_MarzoBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_MarzoBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AbrilBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AbrilBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AbrilBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AbrilBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_MayoBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_MayoBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_MayoBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_MayoBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_JunioBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_JunioBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_JunioBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_JunioBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_JulioBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_JulioBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_JulioBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_JulioBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AgostoBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AgostoBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AgostoBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AgostoBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SeptiembreBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SeptiembreBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SeptiembreBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SeptiembreBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_OctubreBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_OctubreBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_OctubreBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_OctubreBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_NoviembreBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_NoviembreBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_NoviembreBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_NoviembreBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_DiciembreBajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_DiciembreBajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_DiciembreBajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_DiciembreBajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case NegocioClienteConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoNegocioCliente.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case NegocioClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA:
					sNombreCampoCategoria="nombre_quien_se_factura";
					break;

				case NegocioClienteConstantesFunciones.LABEL_FAX:
					sNombreCampoCategoria="fax";
					break;

				case NegocioClienteConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case NegocioClienteConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL:
					sNombreCampoCategoria="nombre_local";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMAIL:
					sNombreCampoCategoria="e_mail";
					break;

				case NegocioClienteConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO:
					sNombreCampoCategoria="es_local_propio";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS:
					sNombreCampoCategoria="numero_anios";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROMESES:
					sNombreCampoCategoria="numero_meses";
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO:
					sNombreCampoCategoria="id_tipo_ubicacion_negocio";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS:
					sNombreCampoCategoria="empleados_fijos";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES:
					sNombreCampoCategoria="empleado_temporales";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL:
					sNombreCampoCategoria="empleados_total";
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO:
					sNombreCampoCategoria="porcentaje_ventas_contado";
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO:
					sNombreCampoCategoria="porcentaje_ventas_credito";
					break;

				case NegocioClienteConstantesFunciones.LABEL_PLAZODIAS:
					sNombreCampoCategoria="plazo_dias";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES:
					sNombreCampoCategoria="numero_clientes";
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL:
					sNombreCampoCategoria="monto_maximo_ventas_mensual";
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL:
					sNombreCampoCategoria="monto_minimo_ventas_mensual";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROALTO:
					sNombreCampoCategoria="es_enero_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO:
					sNombreCampoCategoria="es_febrero_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO:
					sNombreCampoCategoria="es_marzo_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILALTO:
					sNombreCampoCategoria="es_abril_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO:
					sNombreCampoCategoria="es_mayo_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO:
					sNombreCampoCategoria="es_junio_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO:
					sNombreCampoCategoria="es_julio_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO:
					sNombreCampoCategoria="es_agosto_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO:
					sNombreCampoCategoria="es_septiembre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO:
					sNombreCampoCategoria="es_octubre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO:
					sNombreCampoCategoria="es_noviembre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO:
					sNombreCampoCategoria="es_diciembre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO:
					sNombreCampoCategoria="es_enero_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO:
					sNombreCampoCategoria="es_febrero_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO:
					sNombreCampoCategoria="es_marzo_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO:
					sNombreCampoCategoria="es_abril_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO:
					sNombreCampoCategoria="es_mayo_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO:
					sNombreCampoCategoria="es_junio_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO:
					sNombreCampoCategoria="es_julio_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO:
					sNombreCampoCategoria="es_agosto_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO:
					sNombreCampoCategoria="es_septiembre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO:
					sNombreCampoCategoria="es_octubre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO:
					sNombreCampoCategoria="es_noviembre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO:
					sNombreCampoCategoria="es_diciembre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case NegocioClienteConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA:
					sNombreCampoCategoriaValor="nombre_quien_se_factura";
					break;

				case NegocioClienteConstantesFunciones.LABEL_FAX:
					sNombreCampoCategoriaValor="fax";
					break;

				case NegocioClienteConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case NegocioClienteConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL:
					sNombreCampoCategoriaValor="nombre_local";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMAIL:
					sNombreCampoCategoriaValor="e_mail";
					break;

				case NegocioClienteConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO:
					sNombreCampoCategoriaValor="es_local_propio";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS:
					sNombreCampoCategoriaValor="numero_anios";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROMESES:
					sNombreCampoCategoriaValor="numero_meses";
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO:
					sNombreCampoCategoriaValor="id_tipo_ubicacion_negocio";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS:
					sNombreCampoCategoriaValor="empleados_fijos";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES:
					sNombreCampoCategoriaValor="empleado_temporales";
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL:
					sNombreCampoCategoriaValor="empleados_total";
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO:
					sNombreCampoCategoriaValor="porcentaje_ventas_contado";
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO:
					sNombreCampoCategoriaValor="porcentaje_ventas_credito";
					break;

				case NegocioClienteConstantesFunciones.LABEL_PLAZODIAS:
					sNombreCampoCategoriaValor="plazo_dias";
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES:
					sNombreCampoCategoriaValor="numero_clientes";
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL:
					sNombreCampoCategoriaValor="monto_maximo_ventas_mensual";
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL:
					sNombreCampoCategoriaValor="monto_minimo_ventas_mensual";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROALTO:
					sNombreCampoCategoriaValor="es_enero_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO:
					sNombreCampoCategoriaValor="es_febrero_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO:
					sNombreCampoCategoriaValor="es_marzo_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILALTO:
					sNombreCampoCategoriaValor="es_abril_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO:
					sNombreCampoCategoriaValor="es_mayo_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO:
					sNombreCampoCategoriaValor="es_junio_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO:
					sNombreCampoCategoriaValor="es_julio_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO:
					sNombreCampoCategoriaValor="es_agosto_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO:
					sNombreCampoCategoriaValor="es_septiembre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO:
					sNombreCampoCategoriaValor="es_octubre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO:
					sNombreCampoCategoriaValor="es_noviembre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO:
					sNombreCampoCategoriaValor="es_diciembre_alto";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO:
					sNombreCampoCategoriaValor="es_enero_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO:
					sNombreCampoCategoriaValor="es_febrero_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO:
					sNombreCampoCategoriaValor="es_marzo_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO:
					sNombreCampoCategoriaValor="es_abril_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO:
					sNombreCampoCategoriaValor="es_mayo_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO:
					sNombreCampoCategoriaValor="es_junio_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO:
					sNombreCampoCategoriaValor="es_julio_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO:
					sNombreCampoCategoriaValor="es_agosto_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO:
					sNombreCampoCategoriaValor="es_septiembre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO:
					sNombreCampoCategoriaValor="es_octubre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO:
					sNombreCampoCategoriaValor="es_noviembre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO:
					sNombreCampoCategoriaValor="es_diciembre_bajo";
					break;

				case NegocioClienteConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case NegocioClienteConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Quien Se Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_quien_se_factura");
					break;

				case NegocioClienteConstantesFunciones.LABEL_FAX:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fax",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fax");
					break;

				case NegocioClienteConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case NegocioClienteConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Local",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_local");
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMAIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"E Mail",sNombreCampoCategoria,sNombreCampoCategoriaValor,"e_mail");
					break;

				case NegocioClienteConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Local Propio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_local_propio");
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Anios",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_anios");
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROMESES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Meses",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_meses");
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Ubicacion Negocio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_ubicacion_negocio");
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleados Fijos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"empleados_fijos");
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado Temporales",sNombreCampoCategoria,sNombreCampoCategoriaValor,"empleado_temporales");
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleados Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"empleados_total");
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje Ventas Contado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_ventas_contado");
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje Ventas Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_ventas_credito");
					break;

				case NegocioClienteConstantesFunciones.LABEL_PLAZODIAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Plazo Dias",sNombreCampoCategoria,sNombreCampoCategoriaValor,"plazo_dias");
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Clientes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_clientes");
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Maximo Ventas Mensual",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_maximo_ventas_mensual");
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Minimo Ventas Mensual",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_minimo_ventas_mensual");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Enero Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_enero_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Febrero Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_febrero_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Marzo Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_marzo_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Abril Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_abril_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Mayo Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_mayo_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Junio Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_junio_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Julio Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_julio_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Agosto Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_agosto_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Septiembre Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_septiembre_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Octubre Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_octubre_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Noviembre Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_noviembre_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Diciembre Alto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_diciembre_alto");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Enero Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_enero_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Febrero Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_febrero_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Marzo Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_marzo_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Abril Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_abril_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Mayo Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_mayo_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Junio Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_junio_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Julio Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_julio_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Agosto Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_agosto_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Septiembre Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_septiembre_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Octubre Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_octubre_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Noviembre Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_noviembre_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Diciembre Bajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_diciembre_bajo");
					break;

				case NegocioClienteConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoNegocioClienteActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"negociocliente";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("NegocioClientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case NegocioClienteConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getnombre_quien_se_factura());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_FAX:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_FAX);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getfax());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_RUC);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getnombre_local());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMAIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMAIL);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.gete_mail());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_local_propio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getnumero_anios());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROMESES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROMESES);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getnumero_meses());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.gettipoubicacionnegocio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getempleados_fijos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getempleado_temporales());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getempleados_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getporcentaje_ventas_contado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getporcentaje_ventas_credito());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_PLAZODIAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PLAZODIAS);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getplazo_dias());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getnumero_clientes());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getmonto_maximo_ventas_mensual());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getmonto_minimo_ventas_mensual());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESENEROALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_enero_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_febrero_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_marzo_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESABRILALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_abril_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_mayo_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_junio_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_julio_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_agosto_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_septiembre_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_octubre_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_noviembre_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_diciembre_alto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_enero_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_febrero_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_marzo_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_abril_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_mayo_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_junio_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_julio_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_agosto_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_septiembre_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_octubre_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_noviembre_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getes_diciembre_bajo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case NegocioClienteConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(NegocioCliente negociocliente:negocioclientesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(negociocliente.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelNegocioCliente(row);				
			//	iRow++;
			//}				
			
			//for(NegocioCliente negocioclienteAux:negocioclientesSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelNegocioCliente(negocioclienteAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingNegocioCliente(false);
			
			//SI ES MANUAL
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualNegocioCliente();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingNegocioCliente(false);
			
			//SI ES MANUAL
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualNegocioCliente();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesNegocioClienteActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingNegocioCliente(false);
			
			//SI ES MANUAL
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualNegocioCliente();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaNegocioCliente() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosNegocioCliente.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosNegocioCliente.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosNegocioCliente.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosNegocioCliente.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosNegocioCliente.setMinimumSize(dimensionMinimum);
		this.jTableDatosNegocioCliente.setMaximumSize(dimensionMaximum);
		this.jTableDatosNegocioCliente.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingNegocioCliente(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingNegocioCliente(esInicializar,true);
	}
	
	public void inicializarActualizarBindingNegocioCliente(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaNegocioCliente(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesNegocioCliente(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasNegocioCliente(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesNegocioCliente(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesNegocioCliente(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualNegocioCliente() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaNegocioCliente();
		
		this.inicializarActualizarBindingBotonesManualNegocioCliente(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualNegocioCliente();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesNegocioCliente() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualNegocioCliente(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualNegocioCliente(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosNegocioCliente.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosNegocioCliente.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteNegocioCliente.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxPostAccionNuevoNegocioCliente.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxPostAccionSinCerrarNegocioCliente.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxPostAccionSinMensajeNegocioCliente.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosNegocioCliente.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosNegocioCliente.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteNegocioCliente.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
				this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxPostAccionNuevoNegocioCliente.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxPostAccionSinCerrarNegocioCliente.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxPostAccionSinMensajeNegocioCliente.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionNegocioCliente.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionNegocioCliente.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesNegocioCliente.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesNegocioCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesNegocioCliente.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarNegocioCliente.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesNegocioCliente.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesNegocioCliente.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralNegocioCliente.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesNegocioCliente(Boolean esInicializar) throws Exception {
		try	{	
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualNegocioCliente(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesNegocioCliente() throws Exception {
		try	{
			if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualNegocioCliente();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleNegocioCliente() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualNegocioCliente() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesNegocioCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesNegocioCliente.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesNegocioCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesNegocioCliente.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesNegocioCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesNegocioCliente.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionNegocioCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionNegocioCliente.addItem(reporte);
			}
			
			
			if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionNegocioCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionNegocioCliente.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesNegocioCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesNegocioCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesNegocioCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesNegocioCliente.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarNegocioCliente.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarNegocioCliente.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarNegocioCliente.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualNegocioCliente();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualNegocioCliente() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
				this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
				this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
				
				if(this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoNegocioCliente.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoNegocioCliente.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=NegocioClienteConstantesFunciones.getTiposSeleccionarNegocioCliente(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=NegocioClienteConstantesFunciones.getTiposSeleccionarNegocioCliente(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=NegocioClienteConstantesFunciones.getTiposSeleccionarNegocioCliente(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoNegocioCliente.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoNegocioCliente.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualNegocioCliente()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_clienteFK_IdClienteNegocioCliente.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteNegocioCliente.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.getSelectedItem()!=null){this.id_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio=((TipoUbicacionNegocio)this.jComboBoxid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocioNegocioCliente.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasNegocioCliente(Boolean esInicializar) throws Exception {				
		if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualNegocioCliente();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaNegocioCliente() throws Exception {
		this.inicializarActualizarBindingTablaNegocioCliente(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByNegocioCliente() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosNegocioClienteOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioClienteOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaNegocioCliente(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=negocioclienteLogic.getNegocioClientes().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=negocioclientes.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosNegocioCliente.setModel(new NegocioClienteModel(this.negocioclienteLogic.getNegocioClientes(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosNegocioCliente.setModel(new NegocioClienteModel(this.negocioclientes,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByNegocioCliente!=null && this.jInternalFrameOrderByNegocioCliente.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByNegocioCliente();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+NegocioClienteConstantesFunciones.SCLASSWEBTITULO,negocioclienteConstantesFunciones.resaltarSeleccionarNegocioCliente,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+NegocioClienteConstantesFunciones.SCLASSWEBTITULO,negocioclienteConstantesFunciones.resaltarSeleccionarNegocioCliente,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ID));

		if(this.negocioclienteConstantesFunciones.mostraridNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltaridNegocioCliente,this.negocioclienteConstantesFunciones.activaridNegocioCliente,iSizeTabla,this,true,"idNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltaridNegocioCliente,this.negocioclienteConstantesFunciones.activaridNegocioCliente,this,true,"idNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_IDEMPRESA));

		if(this.negocioclienteConstantesFunciones.mostrarid_empresaNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.negocioclienteConstantesFunciones.resaltarid_empresaNegocioCliente,this,this.negocioclienteConstantesFunciones.activarid_empresaNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.negocioclienteConstantesFunciones.resaltarid_empresaNegocioCliente,this,this.negocioclienteConstantesFunciones.activarid_empresaNegocioCliente,false,"id_empresaNegocioCliente","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_IDCLIENTE));

		if(this.negocioclienteConstantesFunciones.mostrarid_clienteNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.negocioclienteConstantesFunciones.resaltarid_clienteNegocioCliente,this,this.negocioclienteConstantesFunciones.activarid_clienteNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.negocioclienteConstantesFunciones.resaltarid_clienteNegocioCliente,this,this.negocioclienteConstantesFunciones.activarid_clienteNegocioCliente,true,"id_clienteNegocioCliente","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA));

		if(this.negocioclienteConstantesFunciones.mostrarnombre_quien_se_facturaNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltarnombre_quien_se_facturaNegocioCliente,this.negocioclienteConstantesFunciones.activarnombre_quien_se_facturaNegocioCliente,iSizeTabla,this,true,"nombre_quien_se_facturaNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarnombre_quien_se_facturaNegocioCliente,this.negocioclienteConstantesFunciones.activarnombre_quien_se_facturaNegocioCliente,this,true,"nombre_quien_se_facturaNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_FAX));

		if(this.negocioclienteConstantesFunciones.mostrarfaxNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_FAX,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltarfaxNegocioCliente,this.negocioclienteConstantesFunciones.activarfaxNegocioCliente,iSizeTabla,this,true,"faxNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarfaxNegocioCliente,this.negocioclienteConstantesFunciones.activarfaxNegocioCliente,this,true,"faxNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_RUC));

		if(this.negocioclienteConstantesFunciones.mostrarrucNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltarrucNegocioCliente,this.negocioclienteConstantesFunciones.activarrucNegocioCliente,iSizeTabla,this,true,"rucNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarrucNegocioCliente,this.negocioclienteConstantesFunciones.activarrucNegocioCliente,this,true,"rucNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_TELEFONO));

		if(this.negocioclienteConstantesFunciones.mostrartelefonoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltartelefonoNegocioCliente,this.negocioclienteConstantesFunciones.activartelefonoNegocioCliente,iSizeTabla,this,true,"telefonoNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltartelefonoNegocioCliente,this.negocioclienteConstantesFunciones.activartelefonoNegocioCliente,this,true,"telefonoNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL));

		if(this.negocioclienteConstantesFunciones.mostrarnombre_localNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltarnombre_localNegocioCliente,this.negocioclienteConstantesFunciones.activarnombre_localNegocioCliente,iSizeTabla,this,true,"nombre_localNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarnombre_localNegocioCliente,this.negocioclienteConstantesFunciones.activarnombre_localNegocioCliente,this,true,"nombre_localNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_EMAIL));

		if(this.negocioclienteConstantesFunciones.mostrare_mailNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_EMAIL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltare_mailNegocioCliente,this.negocioclienteConstantesFunciones.activare_mailNegocioCliente,iSizeTabla,this,true,"e_mailNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltare_mailNegocioCliente,this.negocioclienteConstantesFunciones.activare_mailNegocioCliente,this,true,"e_mailNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_DIRECCION));

		if(this.negocioclienteConstantesFunciones.mostrardireccionNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltardireccionNegocioCliente,this.negocioclienteConstantesFunciones.activardireccionNegocioCliente,iSizeTabla,this,true,"direccionNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltardireccionNegocioCliente,this.negocioclienteConstantesFunciones.activardireccionNegocioCliente,this,true,"direccionNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO));

		if(this.negocioclienteConstantesFunciones.mostrares_local_propioNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_local_propioNegocioCliente,this.negocioclienteConstantesFunciones.activares_local_propioNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_local_propioNegocioCliente,this.negocioclienteConstantesFunciones.activares_local_propioNegocioCliente,this,true,"es_local_propioNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS));

		if(this.negocioclienteConstantesFunciones.mostrarnumero_aniosNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarnumero_aniosNegocioCliente,this.negocioclienteConstantesFunciones.activarnumero_aniosNegocioCliente,iSizeTabla,this,true,"numero_aniosNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarnumero_aniosNegocioCliente,this.negocioclienteConstantesFunciones.activarnumero_aniosNegocioCliente,this,true,"numero_aniosNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_NUMEROMESES));

		if(this.negocioclienteConstantesFunciones.mostrarnumero_mesesNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_NUMEROMESES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarnumero_mesesNegocioCliente,this.negocioclienteConstantesFunciones.activarnumero_mesesNegocioCliente,iSizeTabla,this,true,"numero_mesesNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarnumero_mesesNegocioCliente,this.negocioclienteConstantesFunciones.activarnumero_mesesNegocioCliente,this,true,"numero_mesesNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO));

		if(this.negocioclienteConstantesFunciones.mostrarid_tipo_ubicacion_negocioNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoUbicacionNegocioTableCell(this.tipoubicacionnegociosForeignKey,this.negocioclienteConstantesFunciones.resaltarid_tipo_ubicacion_negocioNegocioCliente,this,this.negocioclienteConstantesFunciones.activarid_tipo_ubicacion_negocioNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new TipoUbicacionNegocioTableCell(this.tipoubicacionnegociosForeignKey,this.negocioclienteConstantesFunciones.resaltarid_tipo_ubicacion_negocioNegocioCliente,this,this.negocioclienteConstantesFunciones.activarid_tipo_ubicacion_negocioNegocioCliente,true,"id_tipo_ubicacion_negocioNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS));

		if(this.negocioclienteConstantesFunciones.mostrarempleados_fijosNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarempleados_fijosNegocioCliente,this.negocioclienteConstantesFunciones.activarempleados_fijosNegocioCliente,iSizeTabla,this,true,"empleados_fijosNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarempleados_fijosNegocioCliente,this.negocioclienteConstantesFunciones.activarempleados_fijosNegocioCliente,this,true,"empleados_fijosNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES));

		if(this.negocioclienteConstantesFunciones.mostrarempleado_temporalesNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarempleado_temporalesNegocioCliente,this.negocioclienteConstantesFunciones.activarempleado_temporalesNegocioCliente,iSizeTabla,this,true,"empleado_temporalesNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarempleado_temporalesNegocioCliente,this.negocioclienteConstantesFunciones.activarempleado_temporalesNegocioCliente,this,true,"empleado_temporalesNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL));

		if(this.negocioclienteConstantesFunciones.mostrarempleados_totalNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarempleados_totalNegocioCliente,this.negocioclienteConstantesFunciones.activarempleados_totalNegocioCliente,iSizeTabla,this,true,"empleados_totalNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarempleados_totalNegocioCliente,this.negocioclienteConstantesFunciones.activarempleados_totalNegocioCliente,this,true,"empleados_totalNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO));

		if(this.negocioclienteConstantesFunciones.mostrarporcentaje_ventas_contadoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_contadoNegocioCliente,this.negocioclienteConstantesFunciones.activarporcentaje_ventas_contadoNegocioCliente,iSizeTabla,this,true,"porcentaje_ventas_contadoNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_contadoNegocioCliente,this.negocioclienteConstantesFunciones.activarporcentaje_ventas_contadoNegocioCliente,this,true,"porcentaje_ventas_contadoNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO));

		if(this.negocioclienteConstantesFunciones.mostrarporcentaje_ventas_creditoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_creditoNegocioCliente,this.negocioclienteConstantesFunciones.activarporcentaje_ventas_creditoNegocioCliente,iSizeTabla,this,true,"porcentaje_ventas_creditoNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_creditoNegocioCliente,this.negocioclienteConstantesFunciones.activarporcentaje_ventas_creditoNegocioCliente,this,true,"porcentaje_ventas_creditoNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_PLAZODIAS));

		if(this.negocioclienteConstantesFunciones.mostrarplazo_diasNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_PLAZODIAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarplazo_diasNegocioCliente,this.negocioclienteConstantesFunciones.activarplazo_diasNegocioCliente,iSizeTabla,this,true,"plazo_diasNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarplazo_diasNegocioCliente,this.negocioclienteConstantesFunciones.activarplazo_diasNegocioCliente,this,true,"plazo_diasNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES));

		if(this.negocioclienteConstantesFunciones.mostrarnumero_clientesNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarnumero_clientesNegocioCliente,this.negocioclienteConstantesFunciones.activarnumero_clientesNegocioCliente,iSizeTabla,this,true,"numero_clientesNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarnumero_clientesNegocioCliente,this.negocioclienteConstantesFunciones.activarnumero_clientesNegocioCliente,this,true,"numero_clientesNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL));

		if(this.negocioclienteConstantesFunciones.mostrarmonto_maximo_ventas_mensualNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarmonto_maximo_ventas_mensualNegocioCliente,this.negocioclienteConstantesFunciones.activarmonto_maximo_ventas_mensualNegocioCliente,iSizeTabla,this,true,"monto_maximo_ventas_mensualNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarmonto_maximo_ventas_mensualNegocioCliente,this.negocioclienteConstantesFunciones.activarmonto_maximo_ventas_mensualNegocioCliente,this,true,"monto_maximo_ventas_mensualNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL));

		if(this.negocioclienteConstantesFunciones.mostrarmonto_minimo_ventas_mensualNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.negocioclienteConstantesFunciones.resaltarmonto_minimo_ventas_mensualNegocioCliente,this.negocioclienteConstantesFunciones.activarmonto_minimo_ventas_mensualNegocioCliente,iSizeTabla,this,true,"monto_minimo_ventas_mensualNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltarmonto_minimo_ventas_mensualNegocioCliente,this.negocioclienteConstantesFunciones.activarmonto_minimo_ventas_mensualNegocioCliente,this,true,"monto_minimo_ventas_mensualNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESENEROALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_enero_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESENEROALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_enero_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_enero_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_enero_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_enero_altoNegocioCliente,this,true,"es_enero_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_febrero_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_febrero_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_febrero_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_febrero_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_febrero_altoNegocioCliente,this,true,"es_febrero_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_marzo_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_marzo_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_marzo_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_marzo_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_marzo_altoNegocioCliente,this,true,"es_marzo_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESABRILALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_abril_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESABRILALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_abril_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_abril_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_abril_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_abril_altoNegocioCliente,this,true,"es_abril_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_mayo_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_mayo_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_mayo_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_mayo_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_mayo_altoNegocioCliente,this,true,"es_mayo_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_junio_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_junio_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_junio_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_junio_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_junio_altoNegocioCliente,this,true,"es_junio_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_julio_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_julio_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_julio_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_julio_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_julio_altoNegocioCliente,this,true,"es_julio_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_agosto_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_agosto_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_agosto_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_agosto_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_agosto_altoNegocioCliente,this,true,"es_agosto_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_septiembre_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_septiembre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_septiembre_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_septiembre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_septiembre_altoNegocioCliente,this,true,"es_septiembre_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_octubre_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_octubre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_octubre_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_octubre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_octubre_altoNegocioCliente,this,true,"es_octubre_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_noviembre_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_noviembre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_noviembre_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_noviembre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_noviembre_altoNegocioCliente,this,true,"es_noviembre_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO));

		if(this.negocioclienteConstantesFunciones.mostrares_diciembre_altoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_diciembre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_diciembre_altoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_diciembre_altoNegocioCliente,this.negocioclienteConstantesFunciones.activares_diciembre_altoNegocioCliente,this,true,"es_diciembre_altoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_enero_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_enero_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_enero_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_enero_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_enero_bajoNegocioCliente,this,true,"es_enero_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_febrero_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_febrero_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_febrero_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_febrero_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_febrero_bajoNegocioCliente,this,true,"es_febrero_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_marzo_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_marzo_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_marzo_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_marzo_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_marzo_bajoNegocioCliente,this,true,"es_marzo_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_abril_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_abril_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_abril_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_abril_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_abril_bajoNegocioCliente,this,true,"es_abril_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_mayo_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_mayo_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_mayo_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_mayo_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_mayo_bajoNegocioCliente,this,true,"es_mayo_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_junio_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_junio_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_junio_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_junio_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_junio_bajoNegocioCliente,this,true,"es_junio_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_julio_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_julio_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_julio_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_julio_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_julio_bajoNegocioCliente,this,true,"es_julio_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_agosto_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_agosto_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_agosto_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_agosto_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_agosto_bajoNegocioCliente,this,true,"es_agosto_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_septiembre_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_septiembre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_septiembre_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_septiembre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_septiembre_bajoNegocioCliente,this,true,"es_septiembre_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_octubre_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_octubre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_octubre_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_octubre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_octubre_bajoNegocioCliente,this,true,"es_octubre_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_noviembre_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_noviembre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_noviembre_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_noviembre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_noviembre_bajoNegocioCliente,this,true,"es_noviembre_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO));

		if(this.negocioclienteConstantesFunciones.mostrares_diciembre_bajoNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.negocioclienteConstantesFunciones.resaltares_diciembre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_diciembre_bajoNegocioCliente,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.negocioclienteConstantesFunciones.resaltares_diciembre_bajoNegocioCliente,this.negocioclienteConstantesFunciones.activares_diciembre_bajoNegocioCliente,this,true,"es_diciembre_bajoNegocioCliente","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,NegocioClienteConstantesFunciones.LABEL_DESCRIPCION));

		if(this.negocioclienteConstantesFunciones.mostrardescripcionNegocioCliente && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,NegocioClienteConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.negocioclienteConstantesFunciones.resaltardescripcionNegocioCliente,this.negocioclienteConstantesFunciones.activardescripcionNegocioCliente,iSizeTabla,this,true,"descripcionNegocioCliente","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.negocioclienteConstantesFunciones.resaltardescripcionNegocioCliente,this.negocioclienteConstantesFunciones.activardescripcionNegocioCliente,this,true,"descripcionNegocioCliente","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new NegocioClientePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.negocioclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.negocioclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosNegocioCliente.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.negocioclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.negocioclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosNegocioCliente.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.negocioclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.negocioclienteSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosNegocioCliente.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosNegocioCliente.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosNegocioCliente.moveColumn(this.jTableDatosNegocioCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosNegocioCliente.moveColumn(this.jTableDatosNegocioCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosNegocioCliente.moveColumn(this.jTableDatosNegocioCliente.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosNegocioCliente.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosNegocioCliente.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosNegocioCliente,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosNegocioCliente.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosNegocioCliente.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosNegocioCliente.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosNegocioCliente.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosNegocioCliente.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=negocioclienteLogic.getNegocioClientes().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=negocioclientes.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosNegocioCliente.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosNegocioCliente.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosNegocioCliente();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoNegocioCliente=false;
					
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
				if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormNegocioCliente==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosNegocioCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosNegocioCliente.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.negociocliente.getsType().equals("DUPLICADO")
				   || this.negociocliente.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoNegocioCliente=true;
				
				} else {
					this.isEsNuevoNegocioCliente=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
					if(this.negociocliente.getId()>=0 && !this.negociocliente.getIsNew()) {						
						this.isEsNuevoNegocioCliente=false;
						
					} else {
						this.isEsNuevoNegocioCliente=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoNegocioCliente(esRelaciones);						
				
				this.seleccionarNegocioCliente(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.negociocliente.getId()<0) {
					this.isEsNuevoNegocioCliente=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarNegocioCliente(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarNegocioCliente(evt,rowIndex);
				}	
				
				if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion NegocioCliente: " + this.dDif); 
					}
				}								
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarNegocioCliente(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.negociocliente)) {
					if(this.negociocliente.getId()>0) {
						this.negociocliente.setIsDeleted(true);
						
						this.negocioclientesEliminados.add(this.negociocliente);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.negocioclienteLogic.getNegocioClientes().remove(this.negociocliente);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.negocioclientes.remove(this.negociocliente);				
					}
					
					
					((NegocioClienteModel) this.jTableDatosNegocioCliente.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaNegocioCliente(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarNegocioCliente(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoNegocioCliente) {
			
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosNegocioCliente.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosNegocioCliente.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioNegocioCliente(this.negociocliente);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.negocioclienteConstantesFunciones.cargarid_empresaNegocioCliente || this.negocioclienteConstantesFunciones.event_dependid_empresaNegocioCliente) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.negociocliente.getid_empresa());
									//this.inicializarActualizarBindingNegocioCliente(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(negociocliente.getEmpresa()!=null) {
							this.empresasForeignKey.add(negociocliente.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.negociocliente.getid_empresa(),false,"Formulario");

					//Cliente
					if(!this.negocioclienteConstantesFunciones.cargarid_clienteNegocioCliente || this.negocioclienteConstantesFunciones.event_dependid_clienteNegocioCliente) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.negociocliente.getid_cliente());
									//this.inicializarActualizarBindingNegocioCliente(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(negociocliente.getCliente()!=null) {
							this.clientesForeignKey.add(negociocliente.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.negociocliente.getid_cliente(),false,"Formulario");

					//TipoUbicacionNegocio
					if(!this.negocioclienteConstantesFunciones.cargarid_tipo_ubicacion_negocioNegocioCliente || this.negocioclienteConstantesFunciones.event_dependid_tipo_ubicacion_negocioNegocioCliente) {
						//this.cargarCombosTipoUbicacionNegociosForeignKeyLista(" where id="+this.negociocliente.getid_tipo_ubicacion_negocio());
									//this.inicializarActualizarBindingNegocioCliente(false,false);
						this.tipoubicacionnegociosForeignKey=new ArrayList<TipoUbicacionNegocio>();

						if(negociocliente.getTipoUbicacionNegocio()!=null) {
							this.tipoubicacionnegociosForeignKey.add(negociocliente.getTipoUbicacionNegocio());
						}

						this.addItemDefectoCombosForeignKeyTipoUbicacionNegocio();
						this.cargarCombosFrameTipoUbicacionNegociosForeignKey("Todos");
					}
					this.setActualTipoUbicacionNegocioForeignKey(this.negociocliente.getid_tipo_ubicacion_negocio(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesNegocioCliente("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesNegocioCliente(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualNegocioCliente() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoNegocioCliente(NegocioCliente negociocliente) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoNegocioCliente(negociocliente,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoNegocioCliente(NegocioCliente negociocliente,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioNegocioCliente(negociocliente);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyNegocioCliente(negociocliente,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyNegocioCliente(negociocliente);
	}
	
	public void setVariablesObjetoActualToFormularioNegocioCliente(NegocioCliente negociocliente) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.setText(negociocliente.getId().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.setText(negociocliente.getnombre_quien_se_factura());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.setText(negociocliente.getfax());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.setText(negociocliente.getruc());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.setText(negociocliente.gettelefono());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.setText(negociocliente.getnombre_local());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.setText(negociocliente.gete_mail());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.setText(negociocliente.getdireccion());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setSelected(negociocliente.getes_local_propio());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.setText(negociocliente.getnumero_anios().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.setText(negociocliente.getnumero_meses().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.setText(negociocliente.getempleados_fijos().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.setText(negociocliente.getempleado_temporales().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.setText(negociocliente.getempleados_total().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.setText(negociocliente.getporcentaje_ventas_contado().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.setText(negociocliente.getporcentaje_ventas_credito().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.setText(negociocliente.getplazo_dias().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.setText(negociocliente.getnumero_clientes().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.setText(negociocliente.getmonto_maximo_ventas_mensual().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.setText(negociocliente.getmonto_minimo_ventas_mensual().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setSelected(negociocliente.getes_enero_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setSelected(negociocliente.getes_febrero_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setSelected(negociocliente.getes_marzo_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setSelected(negociocliente.getes_abril_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setSelected(negociocliente.getes_mayo_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setSelected(negociocliente.getes_junio_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setSelected(negociocliente.getes_julio_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setSelected(negociocliente.getes_agosto_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setSelected(negociocliente.getes_septiembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setSelected(negociocliente.getes_octubre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setSelected(negociocliente.getes_noviembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setSelected(negociocliente.getes_diciembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setSelected(negociocliente.getes_enero_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setSelected(negociocliente.getes_febrero_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setSelected(negociocliente.getes_marzo_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setSelected(negociocliente.getes_abril_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setSelected(negociocliente.getes_mayo_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setSelected(negociocliente.getes_junio_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setSelected(negociocliente.getes_julio_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setSelected(negociocliente.getes_agosto_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setSelected(negociocliente.getes_septiembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setSelected(negociocliente.getes_octubre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setSelected(negociocliente.getes_noviembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setSelected(negociocliente.getes_diciembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.setText(negociocliente.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,NegocioCliente negocioclienteLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,negocioclienteLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,NegocioCliente negocioclienteLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				negocioclienteLocal=this.negociocliente;
			} else {
				negocioclienteLocal=this.negocioclienteAnterior;
			}
		}
		
		if(this.permiteMantenimiento(negocioclienteLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoNegocioCliente(negocioclienteLocal,true);
					
					if(negocioclienteSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(negocioclienteLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(negocioclienteLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoNegocioCliente(NegocioCliente negociocliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualNegocioCliente(negociocliente,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(negociocliente);
	}
	
	public void setVariablesFormularioToObjetoActualNegocioCliente(NegocioCliente negociocliente,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualNegocioCliente(negociocliente,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualNegocioCliente(NegocioCliente negociocliente,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.getText()==null || this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.getText()=="" || this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.getText()=="Id") {
				this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.setText("0");
			}

			if(conColumnasBase) {negociocliente.setId(Long.parseLong(this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelIdNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setnombre_quien_se_factura(this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnombre_quien_se_facturaNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setfax(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_FAX+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelfaxNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setruc(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelrucNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.settelefono(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeltelefonoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setnombre_local(this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnombre_localNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.sete_mail(this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_EMAIL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabele_mailNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setdireccion(this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeldireccionNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_local_propio(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_local_propioNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setnumero_anios(Integer.parseInt(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_aniosNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setnumero_meses(Integer.parseInt(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_NUMEROMESES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_mesesNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setempleados_fijos(Integer.parseInt(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleados_fijosNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setempleado_temporales(Integer.parseInt(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleado_temporalesNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setempleados_total(Integer.parseInt(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelempleados_totalNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setporcentaje_ventas_contado(Double.parseDouble(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelporcentaje_ventas_contadoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setporcentaje_ventas_credito(Double.parseDouble(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelporcentaje_ventas_creditoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setplazo_dias(Integer.parseInt(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_PLAZODIAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelplazo_diasNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setnumero_clientes(Integer.parseInt(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelnumero_clientesNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setmonto_maximo_ventas_mensual(Double.parseDouble(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelmonto_maximo_ventas_mensualNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setmonto_minimo_ventas_mensual(Double.parseDouble(this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabelmonto_minimo_ventas_mensualNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_enero_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESENEROALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_enero_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_febrero_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_febrero_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_marzo_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_marzo_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_abril_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESABRILALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_abril_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_mayo_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_mayo_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_junio_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_junio_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_julio_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_julio_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_agosto_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_agosto_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_septiembre_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_septiembre_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_octubre_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_octubre_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_noviembre_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_noviembre_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_diciembre_alto(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_diciembre_altoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_enero_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_enero_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_febrero_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_febrero_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_marzo_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_marzo_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_abril_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_abril_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_mayo_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_mayo_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_junio_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_junio_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_julio_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_julio_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_agosto_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_agosto_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_septiembre_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_septiembre_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_octubre_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_octubre_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_noviembre_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_noviembre_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setes_diciembre_bajo(this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeles_diciembre_bajoNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			negociocliente.setdescripcion(this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+NegocioClienteConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormNegocioCliente.jLabeldescripcionNegocioCliente,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualNegocioCliente(NegocioCliente negocioclienteBean,NegocioCliente negociocliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && negocioclienteBean.getid_cliente()!=null && !negocioclienteBean.getid_cliente().equals(-1L))) {negociocliente.setid_cliente(negocioclienteBean.getid_cliente());}
			if(conDefault || (!conDefault && negocioclienteBean.getid_tipo_ubicacion_negocio()!=null && !negocioclienteBean.getid_tipo_ubicacion_negocio().equals(-1L))) {negociocliente.setid_tipo_ubicacion_negocio(negocioclienteBean.getid_tipo_ubicacion_negocio());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosNegocioCliente(NegocioCliente negocioclienteOrigen,NegocioCliente negociocliente,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && negocioclienteOrigen.getId()!=null && !negocioclienteOrigen.getId().equals(0L))) {negociocliente.setId(negocioclienteOrigen.getId());}}
			if(conDefault || (!conDefault && negocioclienteOrigen.getid_cliente()!=null && !negocioclienteOrigen.getid_cliente().equals(-1L))) {negociocliente.setid_cliente(negocioclienteOrigen.getid_cliente());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getnombre_quien_se_factura()!=null && !negocioclienteOrigen.getnombre_quien_se_factura().equals(""))) {negociocliente.setnombre_quien_se_factura(negocioclienteOrigen.getnombre_quien_se_factura());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getfax()!=null && !negocioclienteOrigen.getfax().equals(""))) {negociocliente.setfax(negocioclienteOrigen.getfax());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getruc()!=null && !negocioclienteOrigen.getruc().equals(""))) {negociocliente.setruc(negocioclienteOrigen.getruc());}
			if(conDefault || (!conDefault && negocioclienteOrigen.gettelefono()!=null && !negocioclienteOrigen.gettelefono().equals(""))) {negociocliente.settelefono(negocioclienteOrigen.gettelefono());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getnombre_local()!=null && !negocioclienteOrigen.getnombre_local().equals(""))) {negociocliente.setnombre_local(negocioclienteOrigen.getnombre_local());}
			if(conDefault || (!conDefault && negocioclienteOrigen.gete_mail()!=null && !negocioclienteOrigen.gete_mail().equals(""))) {negociocliente.sete_mail(negocioclienteOrigen.gete_mail());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getdireccion()!=null && !negocioclienteOrigen.getdireccion().equals(""))) {negociocliente.setdireccion(negocioclienteOrigen.getdireccion());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_local_propio()!=null && !negocioclienteOrigen.getes_local_propio().equals(false))) {negociocliente.setes_local_propio(negocioclienteOrigen.getes_local_propio());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getnumero_anios()!=null && !negocioclienteOrigen.getnumero_anios().equals(0))) {negociocliente.setnumero_anios(negocioclienteOrigen.getnumero_anios());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getnumero_meses()!=null && !negocioclienteOrigen.getnumero_meses().equals(0))) {negociocliente.setnumero_meses(negocioclienteOrigen.getnumero_meses());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getid_tipo_ubicacion_negocio()!=null && !negocioclienteOrigen.getid_tipo_ubicacion_negocio().equals(-1L))) {negociocliente.setid_tipo_ubicacion_negocio(negocioclienteOrigen.getid_tipo_ubicacion_negocio());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getempleados_fijos()!=null && !negocioclienteOrigen.getempleados_fijos().equals(0))) {negociocliente.setempleados_fijos(negocioclienteOrigen.getempleados_fijos());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getempleado_temporales()!=null && !negocioclienteOrigen.getempleado_temporales().equals(0))) {negociocliente.setempleado_temporales(negocioclienteOrigen.getempleado_temporales());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getempleados_total()!=null && !negocioclienteOrigen.getempleados_total().equals(0))) {negociocliente.setempleados_total(negocioclienteOrigen.getempleados_total());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getporcentaje_ventas_contado()!=null && !negocioclienteOrigen.getporcentaje_ventas_contado().equals(0.0))) {negociocliente.setporcentaje_ventas_contado(negocioclienteOrigen.getporcentaje_ventas_contado());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getporcentaje_ventas_credito()!=null && !negocioclienteOrigen.getporcentaje_ventas_credito().equals(0.0))) {negociocliente.setporcentaje_ventas_credito(negocioclienteOrigen.getporcentaje_ventas_credito());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getplazo_dias()!=null && !negocioclienteOrigen.getplazo_dias().equals(0))) {negociocliente.setplazo_dias(negocioclienteOrigen.getplazo_dias());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getnumero_clientes()!=null && !negocioclienteOrigen.getnumero_clientes().equals(0))) {negociocliente.setnumero_clientes(negocioclienteOrigen.getnumero_clientes());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getmonto_maximo_ventas_mensual()!=null && !negocioclienteOrigen.getmonto_maximo_ventas_mensual().equals(0.0))) {negociocliente.setmonto_maximo_ventas_mensual(negocioclienteOrigen.getmonto_maximo_ventas_mensual());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getmonto_minimo_ventas_mensual()!=null && !negocioclienteOrigen.getmonto_minimo_ventas_mensual().equals(0.0))) {negociocliente.setmonto_minimo_ventas_mensual(negocioclienteOrigen.getmonto_minimo_ventas_mensual());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_enero_alto()!=null && !negocioclienteOrigen.getes_enero_alto().equals(false))) {negociocliente.setes_enero_alto(negocioclienteOrigen.getes_enero_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_febrero_alto()!=null && !negocioclienteOrigen.getes_febrero_alto().equals(false))) {negociocliente.setes_febrero_alto(negocioclienteOrigen.getes_febrero_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_marzo_alto()!=null && !negocioclienteOrigen.getes_marzo_alto().equals(false))) {negociocliente.setes_marzo_alto(negocioclienteOrigen.getes_marzo_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_abril_alto()!=null && !negocioclienteOrigen.getes_abril_alto().equals(false))) {negociocliente.setes_abril_alto(negocioclienteOrigen.getes_abril_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_mayo_alto()!=null && !negocioclienteOrigen.getes_mayo_alto().equals(false))) {negociocliente.setes_mayo_alto(negocioclienteOrigen.getes_mayo_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_junio_alto()!=null && !negocioclienteOrigen.getes_junio_alto().equals(false))) {negociocliente.setes_junio_alto(negocioclienteOrigen.getes_junio_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_julio_alto()!=null && !negocioclienteOrigen.getes_julio_alto().equals(false))) {negociocliente.setes_julio_alto(negocioclienteOrigen.getes_julio_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_agosto_alto()!=null && !negocioclienteOrigen.getes_agosto_alto().equals(false))) {negociocliente.setes_agosto_alto(negocioclienteOrigen.getes_agosto_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_septiembre_alto()!=null && !negocioclienteOrigen.getes_septiembre_alto().equals(false))) {negociocliente.setes_septiembre_alto(negocioclienteOrigen.getes_septiembre_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_octubre_alto()!=null && !negocioclienteOrigen.getes_octubre_alto().equals(false))) {negociocliente.setes_octubre_alto(negocioclienteOrigen.getes_octubre_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_noviembre_alto()!=null && !negocioclienteOrigen.getes_noviembre_alto().equals(false))) {negociocliente.setes_noviembre_alto(negocioclienteOrigen.getes_noviembre_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_diciembre_alto()!=null && !negocioclienteOrigen.getes_diciembre_alto().equals(false))) {negociocliente.setes_diciembre_alto(negocioclienteOrigen.getes_diciembre_alto());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_enero_bajo()!=null && !negocioclienteOrigen.getes_enero_bajo().equals(false))) {negociocliente.setes_enero_bajo(negocioclienteOrigen.getes_enero_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_febrero_bajo()!=null && !negocioclienteOrigen.getes_febrero_bajo().equals(false))) {negociocliente.setes_febrero_bajo(negocioclienteOrigen.getes_febrero_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_marzo_bajo()!=null && !negocioclienteOrigen.getes_marzo_bajo().equals(false))) {negociocliente.setes_marzo_bajo(negocioclienteOrigen.getes_marzo_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_abril_bajo()!=null && !negocioclienteOrigen.getes_abril_bajo().equals(false))) {negociocliente.setes_abril_bajo(negocioclienteOrigen.getes_abril_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_mayo_bajo()!=null && !negocioclienteOrigen.getes_mayo_bajo().equals(false))) {negociocliente.setes_mayo_bajo(negocioclienteOrigen.getes_mayo_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_junio_bajo()!=null && !negocioclienteOrigen.getes_junio_bajo().equals(false))) {negociocliente.setes_junio_bajo(negocioclienteOrigen.getes_junio_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_julio_bajo()!=null && !negocioclienteOrigen.getes_julio_bajo().equals(false))) {negociocliente.setes_julio_bajo(negocioclienteOrigen.getes_julio_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_agosto_bajo()!=null && !negocioclienteOrigen.getes_agosto_bajo().equals(false))) {negociocliente.setes_agosto_bajo(negocioclienteOrigen.getes_agosto_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_septiembre_bajo()!=null && !negocioclienteOrigen.getes_septiembre_bajo().equals(false))) {negociocliente.setes_septiembre_bajo(negocioclienteOrigen.getes_septiembre_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_octubre_bajo()!=null && !negocioclienteOrigen.getes_octubre_bajo().equals(false))) {negociocliente.setes_octubre_bajo(negocioclienteOrigen.getes_octubre_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_noviembre_bajo()!=null && !negocioclienteOrigen.getes_noviembre_bajo().equals(false))) {negociocliente.setes_noviembre_bajo(negocioclienteOrigen.getes_noviembre_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getes_diciembre_bajo()!=null && !negocioclienteOrigen.getes_diciembre_bajo().equals(false))) {negociocliente.setes_diciembre_bajo(negocioclienteOrigen.getes_diciembre_bajo());}
			if(conDefault || (!conDefault && negocioclienteOrigen.getdescripcion()!=null && !negocioclienteOrigen.getdescripcion().equals(""))) {negociocliente.setdescripcion(negocioclienteOrigen.getdescripcion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioNegocioCliente(NegocioCliente negociocliente) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.setText(negociocliente.getId().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.setText(negociocliente.getnombre_quien_se_factura());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.setText(negociocliente.getfax());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.setText(negociocliente.getruc());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.setText(negociocliente.gettelefono());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.setText(negociocliente.getnombre_local());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.setText(negociocliente.gete_mail());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.setText(negociocliente.getdireccion());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setSelected(negociocliente.getes_local_propio());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.setText(negociocliente.getnumero_anios().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.setText(negociocliente.getnumero_meses().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.setText(negociocliente.getempleados_fijos().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.setText(negociocliente.getempleado_temporales().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.setText(negociocliente.getempleados_total().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.setText(negociocliente.getporcentaje_ventas_contado().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.setText(negociocliente.getporcentaje_ventas_credito().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.setText(negociocliente.getplazo_dias().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.setText(negociocliente.getnumero_clientes().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.setText(negociocliente.getmonto_maximo_ventas_mensual().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.setText(negociocliente.getmonto_minimo_ventas_mensual().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setSelected(negociocliente.getes_enero_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setSelected(negociocliente.getes_febrero_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setSelected(negociocliente.getes_marzo_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setSelected(negociocliente.getes_abril_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setSelected(negociocliente.getes_mayo_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setSelected(negociocliente.getes_junio_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setSelected(negociocliente.getes_julio_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setSelected(negociocliente.getes_agosto_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setSelected(negociocliente.getes_septiembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setSelected(negociocliente.getes_octubre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setSelected(negociocliente.getes_noviembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setSelected(negociocliente.getes_diciembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setSelected(negociocliente.getes_enero_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setSelected(negociocliente.getes_febrero_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setSelected(negociocliente.getes_marzo_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setSelected(negociocliente.getes_abril_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setSelected(negociocliente.getes_mayo_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setSelected(negociocliente.getes_junio_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setSelected(negociocliente.getes_julio_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setSelected(negociocliente.getes_agosto_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setSelected(negociocliente.getes_septiembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setSelected(negociocliente.getes_octubre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setSelected(negociocliente.getes_noviembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setSelected(negociocliente.getes_diciembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.setText(negociocliente.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioNegocioCliente(NegocioClienteBean negocioclienteBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.setText(negocioclienteBean.getId().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.setText(negocioclienteBean.getnombre_quien_se_factura());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.setText(negocioclienteBean.getfax());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.setText(negocioclienteBean.getruc());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.setText(negocioclienteBean.gettelefono());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.setText(negocioclienteBean.getnombre_local());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.setText(negocioclienteBean.gete_mail());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.setText(negocioclienteBean.getdireccion());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setSelected(negocioclienteBean.getes_local_propio());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.setText(negocioclienteBean.getnumero_anios().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.setText(negocioclienteBean.getnumero_meses().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.setText(negocioclienteBean.getempleados_fijos().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.setText(negocioclienteBean.getempleado_temporales().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.setText(negocioclienteBean.getempleados_total().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.setText(negocioclienteBean.getporcentaje_ventas_contado().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.setText(negocioclienteBean.getporcentaje_ventas_credito().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.setText(negocioclienteBean.getplazo_dias().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.setText(negocioclienteBean.getnumero_clientes().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.setText(negocioclienteBean.getmonto_maximo_ventas_mensual().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.setText(negocioclienteBean.getmonto_minimo_ventas_mensual().toString());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setSelected(negocioclienteBean.getes_enero_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setSelected(negocioclienteBean.getes_febrero_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setSelected(negocioclienteBean.getes_marzo_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setSelected(negocioclienteBean.getes_abril_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setSelected(negocioclienteBean.getes_mayo_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setSelected(negocioclienteBean.getes_junio_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setSelected(negocioclienteBean.getes_julio_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setSelected(negocioclienteBean.getes_agosto_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setSelected(negocioclienteBean.getes_septiembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setSelected(negocioclienteBean.getes_octubre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setSelected(negocioclienteBean.getes_noviembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setSelected(negocioclienteBean.getes_diciembre_alto());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setSelected(negocioclienteBean.getes_enero_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setSelected(negocioclienteBean.getes_febrero_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setSelected(negocioclienteBean.getes_marzo_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setSelected(negocioclienteBean.getes_abril_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setSelected(negocioclienteBean.getes_mayo_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setSelected(negocioclienteBean.getes_junio_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setSelected(negocioclienteBean.getes_julio_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setSelected(negocioclienteBean.getes_agosto_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setSelected(negocioclienteBean.getes_septiembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setSelected(negocioclienteBean.getes_octubre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setSelected(negocioclienteBean.getes_noviembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setSelected(negocioclienteBean.getes_diciembre_bajo());
			this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.setText(negocioclienteBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanNegocioCliente(NegocioClienteParameterReturnGeneral negocioclienteReturnGeneral,NegocioClienteBean negocioclienteBean,Boolean conDefault) throws Exception { 
		try {
			NegocioCliente negocioclienteLocal=new NegocioCliente();
			
			negocioclienteLocal=negocioclienteReturnGeneral.getNegocioCliente();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && negocioclienteLocal.getId()!=null && !negocioclienteLocal.getId().equals(0L))) {negocioclienteBean.setId(negocioclienteLocal.getId());}}
			if(conDefault || (!conDefault && negocioclienteLocal.getid_cliente()!=null && !negocioclienteLocal.getid_cliente().equals(-1L))) {negocioclienteBean.setid_cliente(negocioclienteLocal.getid_cliente());}
			if(conDefault || (!conDefault && negocioclienteLocal.getnombre_quien_se_factura()!=null && !negocioclienteLocal.getnombre_quien_se_factura().equals(""))) {negocioclienteBean.setnombre_quien_se_factura(negocioclienteLocal.getnombre_quien_se_factura());}
			if(conDefault || (!conDefault && negocioclienteLocal.getfax()!=null && !negocioclienteLocal.getfax().equals(""))) {negocioclienteBean.setfax(negocioclienteLocal.getfax());}
			if(conDefault || (!conDefault && negocioclienteLocal.getruc()!=null && !negocioclienteLocal.getruc().equals(""))) {negocioclienteBean.setruc(negocioclienteLocal.getruc());}
			if(conDefault || (!conDefault && negocioclienteLocal.gettelefono()!=null && !negocioclienteLocal.gettelefono().equals(""))) {negocioclienteBean.settelefono(negocioclienteLocal.gettelefono());}
			if(conDefault || (!conDefault && negocioclienteLocal.getnombre_local()!=null && !negocioclienteLocal.getnombre_local().equals(""))) {negocioclienteBean.setnombre_local(negocioclienteLocal.getnombre_local());}
			if(conDefault || (!conDefault && negocioclienteLocal.gete_mail()!=null && !negocioclienteLocal.gete_mail().equals(""))) {negocioclienteBean.sete_mail(negocioclienteLocal.gete_mail());}
			if(conDefault || (!conDefault && negocioclienteLocal.getdireccion()!=null && !negocioclienteLocal.getdireccion().equals(""))) {negocioclienteBean.setdireccion(negocioclienteLocal.getdireccion());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_local_propio()!=null && !negocioclienteLocal.getes_local_propio().equals(false))) {negocioclienteBean.setes_local_propio(negocioclienteLocal.getes_local_propio());}
			if(conDefault || (!conDefault && negocioclienteLocal.getnumero_anios()!=null && !negocioclienteLocal.getnumero_anios().equals(0))) {negocioclienteBean.setnumero_anios(negocioclienteLocal.getnumero_anios());}
			if(conDefault || (!conDefault && negocioclienteLocal.getnumero_meses()!=null && !negocioclienteLocal.getnumero_meses().equals(0))) {negocioclienteBean.setnumero_meses(negocioclienteLocal.getnumero_meses());}
			if(conDefault || (!conDefault && negocioclienteLocal.getid_tipo_ubicacion_negocio()!=null && !negocioclienteLocal.getid_tipo_ubicacion_negocio().equals(-1L))) {negocioclienteBean.setid_tipo_ubicacion_negocio(negocioclienteLocal.getid_tipo_ubicacion_negocio());}
			if(conDefault || (!conDefault && negocioclienteLocal.getempleados_fijos()!=null && !negocioclienteLocal.getempleados_fijos().equals(0))) {negocioclienteBean.setempleados_fijos(negocioclienteLocal.getempleados_fijos());}
			if(conDefault || (!conDefault && negocioclienteLocal.getempleado_temporales()!=null && !negocioclienteLocal.getempleado_temporales().equals(0))) {negocioclienteBean.setempleado_temporales(negocioclienteLocal.getempleado_temporales());}
			if(conDefault || (!conDefault && negocioclienteLocal.getempleados_total()!=null && !negocioclienteLocal.getempleados_total().equals(0))) {negocioclienteBean.setempleados_total(negocioclienteLocal.getempleados_total());}
			if(conDefault || (!conDefault && negocioclienteLocal.getporcentaje_ventas_contado()!=null && !negocioclienteLocal.getporcentaje_ventas_contado().equals(0.0))) {negocioclienteBean.setporcentaje_ventas_contado(negocioclienteLocal.getporcentaje_ventas_contado());}
			if(conDefault || (!conDefault && negocioclienteLocal.getporcentaje_ventas_credito()!=null && !negocioclienteLocal.getporcentaje_ventas_credito().equals(0.0))) {negocioclienteBean.setporcentaje_ventas_credito(negocioclienteLocal.getporcentaje_ventas_credito());}
			if(conDefault || (!conDefault && negocioclienteLocal.getplazo_dias()!=null && !negocioclienteLocal.getplazo_dias().equals(0))) {negocioclienteBean.setplazo_dias(negocioclienteLocal.getplazo_dias());}
			if(conDefault || (!conDefault && negocioclienteLocal.getnumero_clientes()!=null && !negocioclienteLocal.getnumero_clientes().equals(0))) {negocioclienteBean.setnumero_clientes(negocioclienteLocal.getnumero_clientes());}
			if(conDefault || (!conDefault && negocioclienteLocal.getmonto_maximo_ventas_mensual()!=null && !negocioclienteLocal.getmonto_maximo_ventas_mensual().equals(0.0))) {negocioclienteBean.setmonto_maximo_ventas_mensual(negocioclienteLocal.getmonto_maximo_ventas_mensual());}
			if(conDefault || (!conDefault && negocioclienteLocal.getmonto_minimo_ventas_mensual()!=null && !negocioclienteLocal.getmonto_minimo_ventas_mensual().equals(0.0))) {negocioclienteBean.setmonto_minimo_ventas_mensual(negocioclienteLocal.getmonto_minimo_ventas_mensual());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_enero_alto()!=null && !negocioclienteLocal.getes_enero_alto().equals(false))) {negocioclienteBean.setes_enero_alto(negocioclienteLocal.getes_enero_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_febrero_alto()!=null && !negocioclienteLocal.getes_febrero_alto().equals(false))) {negocioclienteBean.setes_febrero_alto(negocioclienteLocal.getes_febrero_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_marzo_alto()!=null && !negocioclienteLocal.getes_marzo_alto().equals(false))) {negocioclienteBean.setes_marzo_alto(negocioclienteLocal.getes_marzo_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_abril_alto()!=null && !negocioclienteLocal.getes_abril_alto().equals(false))) {negocioclienteBean.setes_abril_alto(negocioclienteLocal.getes_abril_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_mayo_alto()!=null && !negocioclienteLocal.getes_mayo_alto().equals(false))) {negocioclienteBean.setes_mayo_alto(negocioclienteLocal.getes_mayo_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_junio_alto()!=null && !negocioclienteLocal.getes_junio_alto().equals(false))) {negocioclienteBean.setes_junio_alto(negocioclienteLocal.getes_junio_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_julio_alto()!=null && !negocioclienteLocal.getes_julio_alto().equals(false))) {negocioclienteBean.setes_julio_alto(negocioclienteLocal.getes_julio_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_agosto_alto()!=null && !negocioclienteLocal.getes_agosto_alto().equals(false))) {negocioclienteBean.setes_agosto_alto(negocioclienteLocal.getes_agosto_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_septiembre_alto()!=null && !negocioclienteLocal.getes_septiembre_alto().equals(false))) {negocioclienteBean.setes_septiembre_alto(negocioclienteLocal.getes_septiembre_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_octubre_alto()!=null && !negocioclienteLocal.getes_octubre_alto().equals(false))) {negocioclienteBean.setes_octubre_alto(negocioclienteLocal.getes_octubre_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_noviembre_alto()!=null && !negocioclienteLocal.getes_noviembre_alto().equals(false))) {negocioclienteBean.setes_noviembre_alto(negocioclienteLocal.getes_noviembre_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_diciembre_alto()!=null && !negocioclienteLocal.getes_diciembre_alto().equals(false))) {negocioclienteBean.setes_diciembre_alto(negocioclienteLocal.getes_diciembre_alto());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_enero_bajo()!=null && !negocioclienteLocal.getes_enero_bajo().equals(false))) {negocioclienteBean.setes_enero_bajo(negocioclienteLocal.getes_enero_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_febrero_bajo()!=null && !negocioclienteLocal.getes_febrero_bajo().equals(false))) {negocioclienteBean.setes_febrero_bajo(negocioclienteLocal.getes_febrero_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_marzo_bajo()!=null && !negocioclienteLocal.getes_marzo_bajo().equals(false))) {negocioclienteBean.setes_marzo_bajo(negocioclienteLocal.getes_marzo_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_abril_bajo()!=null && !negocioclienteLocal.getes_abril_bajo().equals(false))) {negocioclienteBean.setes_abril_bajo(negocioclienteLocal.getes_abril_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_mayo_bajo()!=null && !negocioclienteLocal.getes_mayo_bajo().equals(false))) {negocioclienteBean.setes_mayo_bajo(negocioclienteLocal.getes_mayo_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_junio_bajo()!=null && !negocioclienteLocal.getes_junio_bajo().equals(false))) {negocioclienteBean.setes_junio_bajo(negocioclienteLocal.getes_junio_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_julio_bajo()!=null && !negocioclienteLocal.getes_julio_bajo().equals(false))) {negocioclienteBean.setes_julio_bajo(negocioclienteLocal.getes_julio_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_agosto_bajo()!=null && !negocioclienteLocal.getes_agosto_bajo().equals(false))) {negocioclienteBean.setes_agosto_bajo(negocioclienteLocal.getes_agosto_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_septiembre_bajo()!=null && !negocioclienteLocal.getes_septiembre_bajo().equals(false))) {negocioclienteBean.setes_septiembre_bajo(negocioclienteLocal.getes_septiembre_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_octubre_bajo()!=null && !negocioclienteLocal.getes_octubre_bajo().equals(false))) {negocioclienteBean.setes_octubre_bajo(negocioclienteLocal.getes_octubre_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_noviembre_bajo()!=null && !negocioclienteLocal.getes_noviembre_bajo().equals(false))) {negocioclienteBean.setes_noviembre_bajo(negocioclienteLocal.getes_noviembre_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getes_diciembre_bajo()!=null && !negocioclienteLocal.getes_diciembre_bajo().equals(false))) {negocioclienteBean.setes_diciembre_bajo(negocioclienteLocal.getes_diciembre_bajo());}
			if(conDefault || (!conDefault && negocioclienteLocal.getdescripcion()!=null && !negocioclienteLocal.getdescripcion().equals(""))) {negocioclienteBean.setdescripcion(negocioclienteLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxNegocioClienteGenerico(Long idNegocioClienteSeleccionado,JComboBox jComboBoxNegocioCliente,List<NegocioCliente> negocioclientesLocal)throws Exception {
		try {
			NegocioCliente  negocioclienteTemp=null;

			for(NegocioCliente negocioclienteAux:negocioclientesLocal) {
				if(negocioclienteAux.getId()!=null && negocioclienteAux.getId().equals(idNegocioClienteSeleccionado)) {
					negocioclienteTemp=negocioclienteAux;
					break;
				}
			}

			jComboBoxNegocioCliente.setSelectedItem(negocioclienteTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxNegocioClienteGenerico(JComboBox jComboBoxNegocioCliente,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxNegocioCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxNegocioCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxNegocioCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxNegocioCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxNegocioCliente.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxNegocioCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxNegocioCliente.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxNegocioCliente.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxNegocioCliente.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxNegocioCliente.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			negociocliente=(NegocioCliente) negocioclienteLogic.getNegocioClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			negociocliente =(NegocioCliente) negocioclientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!negociocliente.getIsNew() && !negociocliente.getIsChanged() && !negociocliente.getIsDeleted()) {
				sDescripcion=negociocliente.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=negociocliente.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!negociocliente.getIsNew() && !negociocliente.getIsChanged() && !negociocliente.getIsDeleted()) {
				sDescripcion=negociocliente.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=negociocliente.getcliente_descripcion();
			}
		}

		if(sTipo.equals("TipoUbicacionNegocio")) {
			//sDescripcion=this.getActualTipoUbicacionNegocioForeignKeyDescripcion((Long)value);
			if(!negociocliente.getIsNew() && !negociocliente.getIsChanged() && !negociocliente.getIsDeleted()) {
				sDescripcion=negociocliente.gettipoubicacionnegocio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoUbicacionNegocioForeignKeyDescripcion((Long)value);
				sDescripcion=negociocliente.gettipoubicacionnegocio_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		NegocioCliente negocioclienteRow=new NegocioCliente();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			negocioclienteRow=(NegocioCliente) negocioclienteLogic.getNegocioClientes().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			negocioclienteRow=(NegocioCliente) negocioclientes.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualNegocioCliente(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoNegocioCliente && this.isPermisoNuevoNegocioCliente));			
			this.jButtonDuplicarNegocioCliente.setVisible((this.isVisibilidadCeldaDuplicarNegocioCliente && this.isPermisoDuplicarNegocioCliente));			
			this.jButtonCopiarNegocioCliente.setVisible((this.isVisibilidadCeldaCopiarNegocioCliente && this.isPermisoCopiarNegocioCliente));
			this.jButtonVerFormNegocioCliente.setVisible((this.isVisibilidadCeldaVerFormNegocioCliente && this.isPermisoVerFormNegocioCliente));
			
			this.jButtonAbrirOrderByNegocioCliente.setVisible((this.isVisibilidadCeldaOrdenNegocioCliente && this.isPermisoOrdenNegocioCliente));			
			
			this.jButtonNuevoRelacionesNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesNegocioCliente && this.isPermisoNuevoNegocioCliente));			
			this.jButtonNuevoGuardarCambiosNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoNegocioCliente && this.isPermisoNuevoNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));
			
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarNegocioCliente.setVisible((this.isVisibilidadCeldaModificarNegocioCliente && this.isPermisoActualizarNegocioCliente));	
			this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarNegocioCliente.setVisible((this.isVisibilidadCeldaActualizarNegocioCliente && this.isPermisoActualizarNegocioCliente));	
			this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarNegocioCliente.setVisible((this.isVisibilidadCeldaEliminarNegocioCliente && this.isPermisoEliminarNegocioCliente));
			this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarNegocioCliente.setVisible(this.isVisibilidadCeldaCancelarNegocioCliente);							
			this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.setVisible((this.isVisibilidadCeldaGuardarNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));			
			
			}
						
			this.jButtonGuardarCambiosTablaNegocioCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoNegocioCliente && this.isPermisoNuevoNegocioCliente));						
			this.jButtonDuplicarToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaDuplicarNegocioCliente && this.isPermisoDuplicarNegocioCliente));						
			this.jButtonCopiarToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaCopiarNegocioCliente && this.isPermisoCopiarNegocioCliente));			
			this.jButtonVerFormToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaVerFormNegocioCliente && this.isPermisoVerFormNegocioCliente));			
			this.jButtonAbrirOrderByToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaOrdenNegocioCliente && this.isPermisoOrdenNegocioCliente));
			this.jButtonNuevoRelacionesToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesNegocioCliente && this.isPermisoNuevoNegocioCliente));			
			this.jButtonNuevoGuardarCambiosToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoNegocioCliente && this.isPermisoNuevoNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));			
			
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaModificarNegocioCliente && this.isPermisoActualizarNegocioCliente));	
			this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaActualizarNegocioCliente  && this.isPermisoActualizarNegocioCliente));	
			this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaEliminarNegocioCliente && this.isPermisoEliminarNegocioCliente));
			this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarToolBarNegocioCliente.setVisible(this.isVisibilidadCeldaCancelarNegocioCliente);				
			this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaGuardarNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarNegocioCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoNegocioCliente && this.isPermisoNuevoNegocioCliente));			
			this.jMenuItemDuplicarNegocioCliente.setVisible((this.isVisibilidadCeldaDuplicarNegocioCliente && this.isPermisoDuplicarNegocioCliente));			
			this.jMenuItemCopiarNegocioCliente.setVisible((this.isVisibilidadCeldaCopiarNegocioCliente && this.isPermisoCopiarNegocioCliente));			
			this.jMenuItemVerFormNegocioCliente.setVisible((this.isVisibilidadCeldaVerFormNegocioCliente && this.isPermisoVerFormNegocioCliente));			
			this.jMenuItemAbrirOrderByNegocioCliente.setVisible((this.isVisibilidadCeldaOrdenNegocioCliente && this.isPermisoOrdenNegocioCliente));			
			//this.jMenuItemMostrarOcultarNegocioCliente.setVisible((this.isVisibilidadCeldaOrdenNegocioCliente && this.isPermisoOrdenNegocioCliente));
			this.jMenuItemDetalleAbrirOrderByNegocioCliente.setVisible((this.isVisibilidadCeldaOrdenNegocioCliente && this.isPermisoOrdenNegocioCliente));			
			//this.jMenuItemDetalleMostrarOcultarNegocioCliente.setVisible((this.isVisibilidadCeldaOrdenNegocioCliente && this.isPermisoOrdenNegocioCliente));			
			this.jMenuItemNuevoRelacionesNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoRelacionesNegocioCliente && this.isPermisoNuevoNegocioCliente));			
			this.jMenuItemNuevoGuardarCambiosNegocioCliente.setVisible((this.isVisibilidadCeldaNuevoNegocioCliente && this.isPermisoNuevoNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));									
			
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemModificarNegocioCliente.setVisible((this.isVisibilidadCeldaModificarNegocioCliente && this.isPermisoActualizarNegocioCliente));	
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemActualizarNegocioCliente.setVisible((this.isVisibilidadCeldaActualizarNegocioCliente && this.isPermisoActualizarNegocioCliente));	
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemEliminarNegocioCliente.setVisible((this.isVisibilidadCeldaEliminarNegocioCliente && this.isPermisoEliminarNegocioCliente));
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemCancelarNegocioCliente.setVisible(this.isVisibilidadCeldaCancelarNegocioCliente);				
			}
			
			this.jMenuItemGuardarCambiosNegocioCliente.setVisible((this.isVisibilidadCeldaGuardarNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));						
			this.jMenuItemGuardarCambiosTablaNegocioCliente.setVisible((this.isVisibilidadCeldaGuardarCambiosNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoNegocioCliente=this.jButtonNuevoNegocioCliente.isVisible();
			this.isVisibilidadCeldaDuplicarNegocioCliente=this.jButtonDuplicarNegocioCliente.isVisible();
			this.isVisibilidadCeldaCopiarNegocioCliente=this.jButtonCopiarNegocioCliente.isVisible();
			this.isVisibilidadCeldaVerFormNegocioCliente=this.jButtonVerFormNegocioCliente.isVisible();
			
			this.isVisibilidadCeldaOrdenNegocioCliente=this.jButtonAbrirOrderByNegocioCliente.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=this.jButtonNuevoRelacionesNegocioCliente.isVisible();
			this.isVisibilidadCeldaModificarNegocioCliente=this.jButtonModificarNegocioCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.isVisibilidadCeldaActualizarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarNegocioCliente.isVisible();
			this.isVisibilidadCeldaEliminarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarNegocioCliente.isVisible();
			this.isVisibilidadCeldaCancelarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarNegocioCliente.isVisible();
			this.isVisibilidadCeldaGuardarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=this.jButtonGuardarCambiosTablaNegocioCliente.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoNegocioCliente=this.jButtonNuevoToolBarNegocioCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=this.jButtonNuevoRelacionesToolBarNegocioCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.isVisibilidadCeldaModificarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarToolBarNegocioCliente.isVisible();
			this.isVisibilidadCeldaActualizarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarToolBarNegocioCliente.isVisible();
			this.isVisibilidadCeldaEliminarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarToolBarNegocioCliente.isVisible();
			this.isVisibilidadCeldaCancelarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarToolBarNegocioCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarNegocioCliente=this.jButtonGuardarCambiosToolBarNegocioCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=this.jButtonGuardarCambiosTablaToolBarNegocioCliente.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoNegocioCliente=this.jMenuItemNuevoNegocioCliente.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=this.jMenuItemNuevoRelacionesNegocioCliente.isVisible();
			
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.isVisibilidadCeldaModificarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jMenuItemModificarNegocioCliente.isVisible();
			this.isVisibilidadCeldaActualizarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jMenuItemActualizarNegocioCliente.isVisible();
			this.isVisibilidadCeldaEliminarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jMenuItemEliminarNegocioCliente.isVisible();
			this.isVisibilidadCeldaCancelarNegocioCliente=this.jInternalFrameDetalleFormNegocioCliente.jMenuItemCancelarNegocioCliente.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarNegocioCliente=this.jMenuItemGuardarCambiosNegocioCliente.isVisible();
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=this.jMenuItemGuardarCambiosTablaNegocioCliente.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesNegocioCliente(Boolean esInicializar) {
		if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {			
			if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
				//if(this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesNegocioCliente();
			}
			
			this.inicializarActualizarBindingBotonesManualNegocioCliente(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualNegocioCliente() {
		this.jButtonNuevoNegocioCliente.setVisible(this.isPermisoNuevoNegocioCliente);			
		this.jButtonDuplicarNegocioCliente.setVisible(this.isPermisoDuplicarNegocioCliente);			
		this.jButtonCopiarNegocioCliente.setVisible(this.isPermisoCopiarNegocioCliente);			
		this.jButtonVerFormNegocioCliente.setVisible(this.isPermisoVerFormNegocioCliente);			
		
		this.jButtonAbrirOrderByNegocioCliente.setVisible(this.isPermisoOrdenNegocioCliente);					
		
		this.jButtonNuevoRelacionesNegocioCliente.setVisible(this.isPermisoNuevoNegocioCliente);			
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarNegocioCliente.setVisible(this.isPermisoActualizarNegocioCliente);	
			this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarNegocioCliente.setVisible(this.isPermisoActualizarNegocioCliente);	
			this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarNegocioCliente.setVisible(this.isPermisoEliminarNegocioCliente);
			this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarNegocioCliente.setVisible(this.isVisibilidadCeldaCancelarNegocioCliente);						
			this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.setVisible(this.isPermisoGuardarCambiosNegocioCliente);							
		}
		
		this.jButtonGuardarCambiosTablaNegocioCliente.setVisible(this.isPermisoActualizarNegocioCliente);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleNegocioCliente() {
		this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarNegocioCliente.setVisible(this.isPermisoActualizarNegocioCliente);	
		this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarNegocioCliente.setVisible(this.isPermisoActualizarNegocioCliente);	
		this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarNegocioCliente.setVisible(this.isPermisoEliminarNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarNegocioCliente.setVisible(this.isVisibilidadCeldaCancelarNegocioCliente);							
		this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.setVisible((this.isVisibilidadCeldaGuardarNegocioCliente && this.isPermisoGuardarCambiosNegocioCliente));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosNegocioCliente() {
		if(NegocioClienteJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualNegocioCliente();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesNegocioCliente() {
	}
	
	public void jTableDatosNegocioClienteListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarNegocioCliente(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.negociocliente.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaNegocioClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebNegocioCliente(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosNegocioCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosNegocioCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.negocioclienteLogic.getConnexion());

				if(this.negociocliente.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.negociocliente.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderNegocioCliente=(TitledBorder)this.jScrollPanelDatosNegocioCliente.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderNegocioCliente.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.negociocliente.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteNegocioClienteActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderNegocioCliente=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosNegocioCliente.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderNegocioCliente=(TitledBorder)this.jScrollPanelDatosNegocioCliente.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderNegocioCliente.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteNegocioClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebNegocioCliente(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosNegocioCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosNegocioCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.negocioclienteLogic.getConnexion());

				if(this.negociocliente.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.negociocliente.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderNegocioCliente=(TitledBorder)this.jScrollPanelDatosNegocioCliente.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderNegocioCliente.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.negociocliente.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_quien_se_facturaNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getnombre_quien_se_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_quien_se_factura like '%"+this.negociocliente.getnombre_quien_se_factura()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfaxNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getfax()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fax like '%"+this.negociocliente.getfax()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.negociocliente.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.negociocliente.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_localNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getnombre_local()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_local like '%"+this.negociocliente.getnombre_local()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtone_mailNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.gete_mail()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where e_mail like '%"+this.negociocliente.gete_mail()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.negociocliente.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_local_propioNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_local_propio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_local_propio = "+this.negociocliente.getes_local_propio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_aniosNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getnumero_anios()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_anios = "+this.negociocliente.getnumero_anios().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_mesesNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getnumero_meses()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_meses = "+this.negociocliente.getnumero_meses().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_ubicacion_negocioNegocioClienteUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoubicacionnegocio=true;

			idTienePermisotipoubicacionnegocio=this.tienePermisosUsuarioEnPaginaWebNegocioCliente(TipoUbicacionNegocioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoubicacionnegocio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosNegocioCliente.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosNegocioCliente.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);

				this.tipoubicacionnegocioBeanSwingJInternalFrame=new TipoUbicacionNegocioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoubicacionnegocioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoubicacionnegocioBeanSwingJInternalFrame.getTipoUbicacionNegocioLogic().setConnexion(this.negocioclienteLogic.getConnexion());

				if(this.negociocliente.getid_tipo_ubicacion_negocio()!=null) {
					this.tipoubicacionnegocioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoubicacionnegocioBeanSwingJInternalFrame.setIdActual(this.negociocliente.getid_tipo_ubicacion_negocio());
					this.tipoubicacionnegocioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoubicacionnegocioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoubicacionnegocioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoUbicacionNegocio();
				}

				JInternalFrameBase jinternalFrame =this.tipoubicacionnegocioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderNegocioCliente=(TitledBorder)this.jScrollPanelDatosNegocioCliente.getBorder();
				TitledBorder titledBordertipoubicacionnegocio=(TitledBorder)this.tipoubicacionnegocioBeanSwingJInternalFrame.jScrollPanelDatosTipoUbicacionNegocio.getBorder();

				titledBordertipoubicacionnegocio.setTitle(titledBorderNegocioCliente.getTitle() + " -> Tipo Ubicacion Negocio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_ubicacion_negocioNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getid_tipo_ubicacion_negocio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_ubicacion_negocio = "+this.negociocliente.getid_tipo_ubicacion_negocio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonempleados_fijosNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getempleados_fijos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where empleados_fijos = "+this.negociocliente.getempleados_fijos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonempleado_temporalesNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getempleado_temporales()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where empleado_temporales = "+this.negociocliente.getempleado_temporales().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonempleados_totalNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getempleados_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where empleados_total = "+this.negociocliente.getempleados_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_ventas_contadoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getporcentaje_ventas_contado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_ventas_contado = "+this.negociocliente.getporcentaje_ventas_contado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_ventas_creditoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getporcentaje_ventas_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_ventas_credito = "+this.negociocliente.getporcentaje_ventas_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonplazo_diasNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getplazo_dias()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where plazo_dias = "+this.negociocliente.getplazo_dias().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_clientesNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getnumero_clientes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_clientes = "+this.negociocliente.getnumero_clientes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_maximo_ventas_mensualNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getmonto_maximo_ventas_mensual()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_maximo_ventas_mensual = "+this.negociocliente.getmonto_maximo_ventas_mensual().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_minimo_ventas_mensualNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getmonto_minimo_ventas_mensual()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_minimo_ventas_mensual = "+this.negociocliente.getmonto_minimo_ventas_mensual().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_enero_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_enero_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_enero_alto = "+this.negociocliente.getes_enero_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_febrero_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_febrero_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_febrero_alto = "+this.negociocliente.getes_febrero_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_marzo_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_marzo_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_marzo_alto = "+this.negociocliente.getes_marzo_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_abril_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_abril_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_abril_alto = "+this.negociocliente.getes_abril_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_mayo_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_mayo_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_mayo_alto = "+this.negociocliente.getes_mayo_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_junio_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_junio_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_junio_alto = "+this.negociocliente.getes_junio_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_julio_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_julio_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_julio_alto = "+this.negociocliente.getes_julio_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_agosto_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_agosto_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_agosto_alto = "+this.negociocliente.getes_agosto_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_septiembre_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_septiembre_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_septiembre_alto = "+this.negociocliente.getes_septiembre_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_octubre_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_octubre_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_octubre_alto = "+this.negociocliente.getes_octubre_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_noviembre_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_noviembre_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_noviembre_alto = "+this.negociocliente.getes_noviembre_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_diciembre_altoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_diciembre_alto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_diciembre_alto = "+this.negociocliente.getes_diciembre_alto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_enero_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_enero_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_enero_bajo = "+this.negociocliente.getes_enero_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_febrero_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_febrero_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_febrero_bajo = "+this.negociocliente.getes_febrero_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_marzo_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_marzo_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_marzo_bajo = "+this.negociocliente.getes_marzo_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_abril_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_abril_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_abril_bajo = "+this.negociocliente.getes_abril_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_mayo_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_mayo_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_mayo_bajo = "+this.negociocliente.getes_mayo_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_junio_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_junio_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_junio_bajo = "+this.negociocliente.getes_junio_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_julio_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_julio_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_julio_bajo = "+this.negociocliente.getes_julio_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_agosto_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_agosto_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_agosto_bajo = "+this.negociocliente.getes_agosto_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_septiembre_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_septiembre_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_septiembre_bajo = "+this.negociocliente.getes_septiembre_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_octubre_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_octubre_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_octubre_bajo = "+this.negociocliente.getes_octubre_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_noviembre_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_noviembre_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_noviembre_bajo = "+this.negociocliente.getes_noviembre_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_diciembre_bajoNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getes_diciembre_bajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_diciembre_bajo = "+this.negociocliente.getes_diciembre_bajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionNegocioClienteBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.getnegociocliente(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.negociocliente==null) {
						this.negociocliente = new NegocioCliente();
					}

					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);
				}

				if(this.negociocliente.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.negociocliente.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingNegocioCliente(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdClienteNegocioClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingNegocioCliente(false,false);

			this.getNegocioClientesFK_IdCliente();

			this.inicializarActualizarBindingNegocioCliente(false);

			//if(NegocioClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingNegocioCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaNegocioClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingNegocioCliente(false,false);

			this.getNegocioClientesFK_IdEmpresa();

			this.inicializarActualizarBindingNegocioCliente(false);

			//if(NegocioClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingNegocioCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoUbicacionNegocioNegocioClienteActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingNegocioCliente(false,false);

			this.getNegocioClientesFK_IdTipoUbicacionNegocio();

			this.inicializarActualizarBindingNegocioCliente(false);

			//if(NegocioClienteBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingNegocioCliente(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.negocioclienteLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameNegocioCliente() {
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
			this.jInternalFrameDetalleFormNegocioCliente.setVisible(false);	    			
			this.jInternalFrameDetalleFormNegocioCliente.dispose();
			this.jInternalFrameDetalleFormNegocioCliente=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
			this.jInternalFrameReporteDinamicoNegocioCliente.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoNegocioCliente.dispose();
			this.jInternalFrameReporteDinamicoNegocioCliente=null;
		}
		
		if(this.jInternalFrameImportacionNegocioCliente!=null) {
			this.jInternalFrameImportacionNegocioCliente.setVisible(false);	    			
			this.jInternalFrameImportacionNegocioCliente.dispose();
			this.jInternalFrameImportacionNegocioCliente=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessNegocioCliente();
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			
			if(sTipo.equals("NuevoNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarNegocioCliente")) {
				jButtonDuplicarNegocioClienteActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarNegocioCliente")) {
				jButtonCopiarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormNegocioCliente")) {
				jButtonVerFormNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarNegocioCliente")) {
				jButtonDuplicarNegocioClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarNegocioCliente")) {
				jButtonDuplicarNegocioClienteActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarNegocioCliente")) {
				jButtonModificarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarNegocioCliente")) {
				jButtonModificarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarNegocioCliente")) {
				jButtonModificarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarNegocioCliente")) {
				jButtonActualizarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarNegocioCliente")) {
				jButtonActualizarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarNegocioCliente")) {
				jButtonActualizarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarNegocioCliente")) {
				jButtonEliminarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarNegocioCliente")) {
				jButtonEliminarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarNegocioCliente")) {
				jButtonEliminarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarNegocioCliente")) {
				jButtonCancelarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarNegocioCliente")) {
				jButtonCancelarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarNegocioCliente")) {
				jButtonCancelarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarNegocioCliente")) {
				jButtonCerrarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarNegocioCliente")) {
				jButtonCerrarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarNegocioCliente")) {
				jButtonCerrarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarNegocioCliente")) {
				jButtonMostrarOcultarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarNegocioCliente")) {
				jButtonCancelarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarNegocioCliente")) {
				jButtonCopiarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarNegocioCliente")) {
				jButtonVerFormNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarNegocioCliente")) {
				jButtonCopiarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormNegocioCliente")) {
				jButtonVerFormNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionNegocioCliente")) {
				jButtonRecargarInformacionNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarNegocioCliente")) {
				jButtonRecargarInformacionNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionNegocioCliente")) {
				jButtonRecargarInformacionNegocioClienteActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresNegocioCliente")) {
				jButtonAnterioresNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarNegocioCliente")) {
				jButtonAnterioresNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreNegocioCliente")) {
				jButtonAnterioresNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesNegocioCliente")) {
				jButtonSiguientesNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarNegocioCliente")) {
				jButtonSiguientesNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesNegocioCliente")) {
				jButtonSiguientesNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByNegocioCliente") || sTipo.equals("MenuItemDetalleAbrirOrderByNegocioCliente")) {
				jButtonAbrirOrderByNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarNegocioCliente") || sTipo.equals("MenuItemDetalleMostrarOcultarNegocioCliente")) {
				jButtonMostrarOcultarNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosNegocioCliente")) {
				jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarNegocioCliente")) {
				jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosNegocioCliente")) {
				jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoNegocioCliente")) {
				jButtonCerrarReporteDinamicoNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoNegocioCliente")) {
				jButtonGenerarReporteDinamicoNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoNegocioCliente")) {
				
				jButtonGenerarExcelReporteDinamicoNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionNegocioCliente")) {
				jButtonCerrarImportacionNegocioClienteActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionNegocioCliente")) {
				
				jButtonGenerarImportacionNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionNegocioCliente")) {
				
				jButtonAbrirImportacionNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesNegocioCliente")) {
				jComboBoxTiposAccionesNegocioClienteActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesNegocioCliente")) {
				jComboBoxTiposRelacionesNegocioClienteActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioNegocioCliente")) {
				jComboBoxTiposAccionesNegocioClienteActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarNegocioCliente")) {
				
				jComboBoxTiposSeleccionarNegocioClienteActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralNegocioCliente")) {
				jTextFieldValorCampoGeneralNegocioClienteActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByNegocioCliente")) {
				jButtonAbrirOrderByNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarNegocioCliente")) {
				jButtonAbrirOrderByNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByNegocioCliente")) {
				jButtonCerrarOrderByNegocioClienteActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idNegocioClienteBusqueda")) {
				this.jButtonidNegocioClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaNegocioClienteUpdate")) {
				this.jButtonid_empresaNegocioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaNegocioClienteBusqueda")) {
				this.jButtonid_empresaNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteNegocioCliente")) {
				this.jButtonid_clienteNegocioClienteActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteNegocioClienteUpdate")) {
				this.jButtonid_clienteNegocioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteNegocioClienteBusqueda")) {
				this.jButtonid_clienteNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_quien_se_facturaNegocioClienteBusqueda")) {
				this.jButtonnombre_quien_se_facturaNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("faxNegocioClienteBusqueda")) {
				this.jButtonfaxNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucNegocioClienteBusqueda")) {
				this.jButtonrucNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoNegocioClienteBusqueda")) {
				this.jButtontelefonoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_localNegocioClienteBusqueda")) {
				this.jButtonnombre_localNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("e_mailNegocioClienteBusqueda")) {
				this.jButtone_mailNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionNegocioClienteBusqueda")) {
				this.jButtondireccionNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_local_propioNegocioClienteBusqueda")) {
				this.jButtones_local_propioNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_aniosNegocioClienteBusqueda")) {
				this.jButtonnumero_aniosNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_mesesNegocioClienteBusqueda")) {
				this.jButtonnumero_mesesNegocioClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ubicacion_negocioNegocioClienteUpdate")) {
				this.jButtonid_tipo_ubicacion_negocioNegocioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ubicacion_negocioNegocioClienteBusqueda")) {
				this.jButtonid_tipo_ubicacion_negocioNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("empleados_fijosNegocioClienteBusqueda")) {
				this.jButtonempleados_fijosNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("empleado_temporalesNegocioClienteBusqueda")) {
				this.jButtonempleado_temporalesNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("empleados_totalNegocioClienteBusqueda")) {
				this.jButtonempleados_totalNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ventas_contadoNegocioClienteBusqueda")) {
				this.jButtonporcentaje_ventas_contadoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ventas_creditoNegocioClienteBusqueda")) {
				this.jButtonporcentaje_ventas_creditoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("plazo_diasNegocioClienteBusqueda")) {
				this.jButtonplazo_diasNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_clientesNegocioClienteBusqueda")) {
				this.jButtonnumero_clientesNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_maximo_ventas_mensualNegocioClienteBusqueda")) {
				this.jButtonmonto_maximo_ventas_mensualNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_minimo_ventas_mensualNegocioClienteBusqueda")) {
				this.jButtonmonto_minimo_ventas_mensualNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_enero_altoNegocioClienteBusqueda")) {
				this.jButtones_enero_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_febrero_altoNegocioClienteBusqueda")) {
				this.jButtones_febrero_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_marzo_altoNegocioClienteBusqueda")) {
				this.jButtones_marzo_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_abril_altoNegocioClienteBusqueda")) {
				this.jButtones_abril_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_mayo_altoNegocioClienteBusqueda")) {
				this.jButtones_mayo_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_junio_altoNegocioClienteBusqueda")) {
				this.jButtones_junio_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_julio_altoNegocioClienteBusqueda")) {
				this.jButtones_julio_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_agosto_altoNegocioClienteBusqueda")) {
				this.jButtones_agosto_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_septiembre_altoNegocioClienteBusqueda")) {
				this.jButtones_septiembre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_octubre_altoNegocioClienteBusqueda")) {
				this.jButtones_octubre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_noviembre_altoNegocioClienteBusqueda")) {
				this.jButtones_noviembre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_diciembre_altoNegocioClienteBusqueda")) {
				this.jButtones_diciembre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_enero_bajoNegocioClienteBusqueda")) {
				this.jButtones_enero_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_febrero_bajoNegocioClienteBusqueda")) {
				this.jButtones_febrero_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_marzo_bajoNegocioClienteBusqueda")) {
				this.jButtones_marzo_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_abril_bajoNegocioClienteBusqueda")) {
				this.jButtones_abril_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_mayo_bajoNegocioClienteBusqueda")) {
				this.jButtones_mayo_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_junio_bajoNegocioClienteBusqueda")) {
				this.jButtones_junio_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_julio_bajoNegocioClienteBusqueda")) {
				this.jButtones_julio_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_agosto_bajoNegocioClienteBusqueda")) {
				this.jButtones_agosto_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_septiembre_bajoNegocioClienteBusqueda")) {
				this.jButtones_septiembre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_octubre_bajoNegocioClienteBusqueda")) {
				this.jButtones_octubre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_noviembre_bajoNegocioClienteBusqueda")) {
				this.jButtones_noviembre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_diciembre_bajoNegocioClienteBusqueda")) {
				this.jButtones_diciembre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionNegocioClienteBusqueda")) {
				this.jButtondescripcionNegocioClienteBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clienteNegocioCliente")) {
				this.jButtonid_clienteNegocioClienteActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdClienteNegocioCliente")) {
				this.jButtonFK_IdClienteNegocioClienteActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoUbicacionNegocioNegocioCliente")) {
				this.jButtonFK_IdTipoUbicacionNegocioNegocioClienteActionPerformed(evt);
			}
			
			;
			
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessNegocioCliente();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaNegocioClienteActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			NegocioCliente negocioclienteLocal=null;
			
			if(!this.getEsControlTabla()) {
				negocioclienteLocal=this.negociocliente;
			} else {
				negocioclienteLocal=this.negocioclienteAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
							
				
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaNegocioClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
								
						
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
								
				
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
							
				
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaNegocioClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negocioclienteAnterior =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.negocioclienteAnterior =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
								
				
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
			
			this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaNegocioClienteActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosNegocioCliente")) {
					jCheckBoxSeleccionarTodosNegocioClienteItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosNegocioCliente")) {
					jCheckBoxSeleccionadosNegocioClienteItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarNegocioCliente")) {
					
				}
				
				


				
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
												
				
				


				
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaNegocioClienteActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.negocioclienteAnterior =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.negocioclienteAnterior =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaNegocioClienteActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaNegocioClienteActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.negociocliente);
				
				this.actualizarInformacion("INFO_PADRE",false,this.negociocliente);
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(NegocioCliente.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",NegocioCliente.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaNegocioClienteActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.negocioclienteAnterior =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarNegocioCliente")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosNegocioClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosNegocioCliente.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.negociocliente =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.negociocliente =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.negociocliente);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarNegocioCliente")) {
				
				}
				
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarNegocioCliente")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosNegocioCliente.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarNegocioCliente")) {
			
			}
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessNegocioCliente();
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			if(sTipo.equals("NuevoNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarNegocioCliente")) {
				jButtonDuplicarNegocioClienteActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarNegocioCliente")) {
				jButtonCopiarNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormNegocioCliente")) {
				jButtonVerFormNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesNegocioCliente")) {
				jButtonNuevoNegocioClienteActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarNegocioCliente")) {
				jButtonModificarNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarNegocioCliente")) {
				jButtonActualizarNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarNegocioCliente")) {
				jButtonEliminarNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarNegocioCliente")) {
				jButtonCancelarNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarNegocioCliente")) {
				jButtonCerrarNegocioClienteActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosNegocioCliente")) {
				jButtonGuardarCambiosNegocioClienteActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosNegocioCliente")) {
				jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByNegocioCliente")) {
				jButtonAbrirOrderByNegocioClienteActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionNegocioCliente")) {
				jButtonRecargarInformacionNegocioClienteActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresNegocioCliente")) {
				jButtonAnterioresNegocioClienteActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesNegocioCliente")) {
				jButtonSiguientesNegocioClienteActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idNegocioClienteBusqueda")) {
				this.jButtonidNegocioClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaNegocioClienteUpdate")) {
				this.jButtonid_empresaNegocioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaNegocioClienteBusqueda")) {
				this.jButtonid_empresaNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteNegocioCliente")) {
				this.jButtonid_clienteNegocioClienteActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteNegocioClienteUpdate")) {
				this.jButtonid_clienteNegocioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteNegocioClienteBusqueda")) {
				this.jButtonid_clienteNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_quien_se_facturaNegocioClienteBusqueda")) {
				this.jButtonnombre_quien_se_facturaNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("faxNegocioClienteBusqueda")) {
				this.jButtonfaxNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucNegocioClienteBusqueda")) {
				this.jButtonrucNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoNegocioClienteBusqueda")) {
				this.jButtontelefonoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_localNegocioClienteBusqueda")) {
				this.jButtonnombre_localNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("e_mailNegocioClienteBusqueda")) {
				this.jButtone_mailNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionNegocioClienteBusqueda")) {
				this.jButtondireccionNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_local_propioNegocioClienteBusqueda")) {
				this.jButtones_local_propioNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_aniosNegocioClienteBusqueda")) {
				this.jButtonnumero_aniosNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_mesesNegocioClienteBusqueda")) {
				this.jButtonnumero_mesesNegocioClienteBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ubicacion_negocioNegocioClienteUpdate")) {
				this.jButtonid_tipo_ubicacion_negocioNegocioClienteUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ubicacion_negocioNegocioClienteBusqueda")) {
				this.jButtonid_tipo_ubicacion_negocioNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("empleados_fijosNegocioClienteBusqueda")) {
				this.jButtonempleados_fijosNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("empleado_temporalesNegocioClienteBusqueda")) {
				this.jButtonempleado_temporalesNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("empleados_totalNegocioClienteBusqueda")) {
				this.jButtonempleados_totalNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ventas_contadoNegocioClienteBusqueda")) {
				this.jButtonporcentaje_ventas_contadoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ventas_creditoNegocioClienteBusqueda")) {
				this.jButtonporcentaje_ventas_creditoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("plazo_diasNegocioClienteBusqueda")) {
				this.jButtonplazo_diasNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_clientesNegocioClienteBusqueda")) {
				this.jButtonnumero_clientesNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_maximo_ventas_mensualNegocioClienteBusqueda")) {
				this.jButtonmonto_maximo_ventas_mensualNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_minimo_ventas_mensualNegocioClienteBusqueda")) {
				this.jButtonmonto_minimo_ventas_mensualNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_enero_altoNegocioClienteBusqueda")) {
				this.jButtones_enero_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_febrero_altoNegocioClienteBusqueda")) {
				this.jButtones_febrero_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_marzo_altoNegocioClienteBusqueda")) {
				this.jButtones_marzo_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_abril_altoNegocioClienteBusqueda")) {
				this.jButtones_abril_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_mayo_altoNegocioClienteBusqueda")) {
				this.jButtones_mayo_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_junio_altoNegocioClienteBusqueda")) {
				this.jButtones_junio_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_julio_altoNegocioClienteBusqueda")) {
				this.jButtones_julio_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_agosto_altoNegocioClienteBusqueda")) {
				this.jButtones_agosto_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_septiembre_altoNegocioClienteBusqueda")) {
				this.jButtones_septiembre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_octubre_altoNegocioClienteBusqueda")) {
				this.jButtones_octubre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_noviembre_altoNegocioClienteBusqueda")) {
				this.jButtones_noviembre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_diciembre_altoNegocioClienteBusqueda")) {
				this.jButtones_diciembre_altoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_enero_bajoNegocioClienteBusqueda")) {
				this.jButtones_enero_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_febrero_bajoNegocioClienteBusqueda")) {
				this.jButtones_febrero_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_marzo_bajoNegocioClienteBusqueda")) {
				this.jButtones_marzo_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_abril_bajoNegocioClienteBusqueda")) {
				this.jButtones_abril_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_mayo_bajoNegocioClienteBusqueda")) {
				this.jButtones_mayo_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_junio_bajoNegocioClienteBusqueda")) {
				this.jButtones_junio_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_julio_bajoNegocioClienteBusqueda")) {
				this.jButtones_julio_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_agosto_bajoNegocioClienteBusqueda")) {
				this.jButtones_agosto_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_septiembre_bajoNegocioClienteBusqueda")) {
				this.jButtones_septiembre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_octubre_bajoNegocioClienteBusqueda")) {
				this.jButtones_octubre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_noviembre_bajoNegocioClienteBusqueda")) {
				this.jButtones_noviembre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_diciembre_bajoNegocioClienteBusqueda")) {
				this.jButtones_diciembre_bajoNegocioClienteBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionNegocioClienteBusqueda")) {
				this.jButtondescripcionNegocioClienteBusquedaActionPerformed(evt);
			}
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessNegocioCliente();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameNegocioCliente")) {
				closingInternalFrameNegocioCliente();
				
			} else if(sTipo.equals("jButtonCancelarNegocioCliente")) {
				JInternalFrameBase jInternalFrameDetalleFormNegocioCliente = (JInternalFrameBase)evt.getSource();
	            	
	            NegocioClienteBeanSwingJInternalFrame jInternalFrameParent=(NegocioClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormNegocioCliente.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarNegocioClienteActionPerformed(null);
			}
			
			NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.negociocliente,new Object(),this.negocioclienteParameterGeneral,this.negocioclienteReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormNegocioCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormNegocioCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormNegocioCliente(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.negociocliente)) {
			if(!esControlTabla) {
				if(NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);			
				}
				
				if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualNegocioCliente(this.negociocliente,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.negocioclienteReturnGeneral=negocioclienteLogic.procesarEventosNegocioClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.negocioclienteLogic.getNegocioClientes(),this.negociocliente,this.negocioclienteParameterGeneral,this.isEsNuevoNegocioCliente,classes);//this.negocioclienteLogic.getNegocioCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanNegocioCliente(this.negocioclienteReturnGeneral,this.negocioclienteBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanNegocioCliente(classes,this.negocioclienteReturnGeneral,this.negocioclienteBean,false);
					}
						
					if(this.negocioclienteReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyNegocioCliente(this.negocioclienteReturnGeneral.getNegocioCliente());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioNegocioCliente(this.negocioclienteReturnGeneral.getNegocioCliente());	
					}
						
					if(this.negocioclienteReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioNegocioCliente(this.negocioclienteReturnGeneral.getNegocioCliente(),classes);//this.negocioclienteBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioNegocioCliente(this.negociocliente,classes);//this.negocioclienteBean);									
				}
			
				if(NegocioClienteJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualNegocioCliente(this.negociocliente,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysNegocioCliente(this.negociocliente);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.negocioclienteAnterior!=null) {
						this.negociocliente=this.negocioclienteAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.negocioclienteReturnGeneral=negocioclienteLogic.procesarEventosNegocioClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.negocioclienteLogic.getNegocioClientes(),this.negociocliente,this.negocioclienteParameterGeneral,this.isEsNuevoNegocioCliente,classes);//this.negocioclienteLogic.getNegocioCliente()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.negocioclienteSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.negocioclienteSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.negocioclienteReturnGeneral.getNegocioCliente(),negocioclienteLogic.getNegocioClientes());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.negocioclienteReturnGeneral.getNegocioCliente(),this.negocioclientes);
				}
				//ARCHITECTURE
				
				//this.jTableDatosNegocioCliente.repaint();
				
				//((AbstractTableModel) this.jTableDatosNegocioCliente.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosNegocioCliente();
			}
		}
	}
	
	public void actualizarVisualTableDatosNegocioCliente() throws Exception {
		
		NegocioClienteModel negocioclienteModel=(NegocioClienteModel)this.jTableDatosNegocioCliente.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			negocioclienteModel.negocioclientes=this.negocioclienteLogic.getNegocioClientes();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			negocioclienteModel.negocioclientes=this.negocioclientes;
		}
		
		
		((NegocioClienteModel) this.jTableDatosNegocioCliente.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaNegocioCliente() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getnegocioclienteAnterior(),this.negocioclienteLogic.getNegocioClientes());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getnegocioclienteAnterior(),this.negocioclientes);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosNegocioCliente();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioNegocioCliente(NegocioCliente negociocliente,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.negociocliente,new Object(),generalEntityParameterGeneral,this.negocioclienteReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.negocioclienteSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=NegocioClienteConstantesFunciones.getClassesRelationshipsOfNegocioCliente(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=NegocioClienteConstantesFunciones.getClassesRelationshipsFromStringsOfNegocioCliente(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormNegocioCliente(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				NegocioClienteBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.negociocliente,new Object(),generalEntityParameterGeneral,this.negocioclienteReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioNegocioCliente(NegocioClienteBean negocioclienteBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanNegocioCliente(ArrayList<Classe> classes,NegocioClienteReturnGeneral negocioclienteReturnGeneral,NegocioClienteBean negocioclienteBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualNegocioCliente(NegocioCliente negociocliente,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.negociocliente)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormNegocioCliente = new NegocioClienteDetalleFormJInternalFrame(jDesktopPane,this.negocioclienteSessionBean.getConGuardarRelaciones(),this.negocioclienteSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.setVisible(false);
		this.jInternalFrameDetalleFormNegocioCliente.setSelected(false);						
		
		this.jInternalFrameDetalleFormNegocioCliente.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormNegocioCliente.negocioclienteLogic=this.negocioclienteLogic;
		
		this.cargarCombosFrameForeignKeyNegocioCliente("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleNegocioCliente();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleNegocioCliente();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyNegocioCliente("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyNegocioCliente();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormNegocioCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarNegocioCliente"));
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarNegocioCliente.addActionListener(new ButtonActionListener(this,"ModificarNegocioCliente"));

		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarToolBarNegocioCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarNegocioCliente"));
					
		this.jInternalFrameDetalleFormNegocioCliente.jMenuItemModificarNegocioCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarNegocioCliente"));		
		
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarNegocioCliente.addActionListener (new ButtonActionListener(this,"ActualizarNegocioCliente"));
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarToolBarNegocioCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarNegocioCliente"));
						
		this.jInternalFrameDetalleFormNegocioCliente.jMenuItemActualizarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarNegocioCliente"));		
		
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarNegocioCliente.addActionListener (new ButtonActionListener(this,"EliminarNegocioCliente"));
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarNegocioCliente"));
								
		this.jInternalFrameDetalleFormNegocioCliente.jMenuItemEliminarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarNegocioCliente"));		
		
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarNegocioCliente.addActionListener (new ButtonActionListener(this,"CancelarNegocioCliente"));
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarNegocioCliente"));
					
		this.jInternalFrameDetalleFormNegocioCliente.jMenuItemCancelarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarNegocioCliente"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jMenuItemDetalleCerrarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarNegocioCliente"));		
		
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarNegocioCliente"));
		
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarNegocioCliente"));
		
		
		
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioNegocioCliente"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonidNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"idNegocioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_empresaNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_empresaNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaNegocioClienteBusqueda"));
		//jButtonid_clienteNegocioCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteNegocioClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioCliente.addActionListener(new ButtonActionListener(this,"id_clienteNegocioCliente"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_clienteNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnombre_quien_se_facturaNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_quien_se_facturaNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonfaxNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"faxNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonrucNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtontelefonoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnombre_localNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_localNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtone_mailNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"e_mailNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtondireccionNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_local_propioNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_local_propioNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_aniosNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_aniosNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_mesesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_mesesNegocioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_tipo_ubicacion_negocioNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ubicacion_negocioNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_tipo_ubicacion_negocioNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ubicacion_negocioNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleados_fijosNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleados_fijosNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleado_temporalesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleado_temporalesNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleados_totalNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleados_totalNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonporcentaje_ventas_contadoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ventas_contadoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonporcentaje_ventas_creditoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ventas_creditoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonplazo_diasNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"plazo_diasNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_clientesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_clientesNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonmonto_maximo_ventas_mensualNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"monto_maximo_ventas_mensualNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonmonto_minimo_ventas_mensualNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"monto_minimo_ventas_mensualNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_enero_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_enero_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_febrero_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_febrero_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_marzo_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_marzo_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_abril_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_abril_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_mayo_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_mayo_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_junio_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_junio_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_julio_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_julio_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_agosto_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_agosto_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_septiembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_septiembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_octubre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_octubre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_noviembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_noviembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_diciembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_diciembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_enero_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_enero_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_febrero_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_febrero_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_marzo_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_marzo_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_abril_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_abril_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_mayo_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_mayo_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_junio_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_junio_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_julio_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_julio_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_agosto_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_agosto_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_septiembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_septiembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_octubre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_octubre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_noviembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_noviembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_diciembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_diciembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtondescripcionNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"descripcionNegocioClienteBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesNegocioCliente"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameNegocioCliente"));
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarNegocioCliente"));
		}
		
		this.jTableDatosNegocioCliente.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarNegocioCliente"));
		
		this.jTableDatosNegocioCliente.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarNegocioCliente"));
		
		this.jButtonNuevoNegocioCliente.addActionListener(new ButtonActionListener(this,"NuevoNegocioCliente"));
		
		this.jButtonDuplicarNegocioCliente.addActionListener(new ButtonActionListener(this,"DuplicarNegocioCliente"));
		
		this.jButtonCopiarNegocioCliente.addActionListener(new ButtonActionListener(this,"CopiarNegocioCliente"));
		
		this.jButtonVerFormNegocioCliente.addActionListener(new ButtonActionListener(this,"VerFormNegocioCliente"));
		
		
		this.jButtonNuevoToolBarNegocioCliente.addActionListener(new ButtonActionListener(this,"NuevoToolBarNegocioCliente"));
			
		this.jButtonDuplicarToolBarNegocioCliente.addActionListener(new ButtonActionListener(this,"DuplicarToolBarNegocioCliente"));
			
		this.jMenuItemNuevoNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoNegocioCliente"));
			
		this.jMenuItemDuplicarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarNegocioCliente"));		
		
		
		this.jButtonNuevoRelacionesNegocioCliente.addActionListener (new ButtonActionListener(this,"NuevoRelacionesNegocioCliente"));
		
		
		this.jButtonNuevoRelacionesToolBarNegocioCliente.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarNegocioCliente"));
			
		this.jMenuItemNuevoRelacionesNegocioCliente.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesNegocioCliente"));		
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarNegocioCliente.addActionListener(new ButtonActionListener(this,"ModificarNegocioCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonModificarToolBarNegocioCliente.addActionListener(new ButtonActionListener(this,"ModificarToolBarNegocioCliente"));
			
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemModificarNegocioCliente.addActionListener(new ButtonActionListener(this,"MenuItemModificarNegocioCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarNegocioCliente.addActionListener (new ButtonActionListener(this,"ActualizarNegocioCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonActualizarToolBarNegocioCliente.addActionListener(new ButtonActionListener(this,"ActualizarToolBarNegocioCliente"));
				
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemActualizarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemActualizarNegocioCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarNegocioCliente.addActionListener (new ButtonActionListener(this,"EliminarNegocioCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonEliminarToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"EliminarToolBarNegocioCliente"));
						
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemEliminarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemEliminarNegocioCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarNegocioCliente.addActionListener (new ButtonActionListener(this,"CancelarNegocioCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonCancelarToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"CancelarToolBarNegocioCliente"));
			
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemCancelarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemCancelarNegocioCliente"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarNegocioCliente"));		
		
		
		this.jButtonCerrarNegocioCliente.addActionListener (new ButtonActionListener(this,"CerrarNegocioCliente"));
		
		
		this.jButtonCerrarToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"CerrarToolBarNegocioCliente"));
			
		this.jMenuItemCerrarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemCerrarNegocioCliente"));
			
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jMenuItemDetalleCerrarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarNegocioCliente"));		
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosNegocioCliente"));
		}
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarNegocioCliente"));
		}
		
		this.jButtonCopiarToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"CopiarToolBarNegocioCliente"));
			
		this.jButtonVerFormToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"VerFormToolBarNegocioCliente"));
		
		this.jMenuItemGuardarCambiosNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosNegocioCliente"));
			
		this.jMenuItemCopiarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemCopiarNegocioCliente"));		
		
		this.jMenuItemVerFormNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemVerFormNegocioCliente"));		
		
		
		this.jButtonGuardarCambiosTablaNegocioCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaNegocioCliente"));
		
		
		this.jButtonGuardarCambiosTablaToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarNegocioCliente"));
			
		this.jMenuItemGuardarCambiosTablaNegocioCliente.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaNegocioCliente"));		
		
		
		
		this.jButtonRecargarInformacionNegocioCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionNegocioCliente"));
					
		this.jButtonRecargarInformacionToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarNegocioCliente"));
		
		this.jMenuItemRecargarInformacionNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionNegocioCliente"));		
		
		
		
		this.jButtonAnterioresNegocioCliente.addActionListener (new ButtonActionListener(this,"AnterioresNegocioCliente"));
		
		
		this.jButtonAnterioresToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"AnterioresToolBarNegocioCliente"));
		
		this.jMenuItemAnterioresNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresNegocioCliente"));		
		
		
		this.jButtonSiguientesNegocioCliente.addActionListener (new ButtonActionListener(this,"SiguientesNegocioCliente"));
		
		
		this.jButtonSiguientesToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"SiguientesToolBarNegocioCliente"));
			
		this.jMenuItemSiguientesNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesNegocioCliente"));
			
		this.jMenuItemAbrirOrderByNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByNegocioCliente"));
			
		this.jMenuItemMostrarOcultarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarNegocioCliente"));
			
		this.jMenuItemDetalleAbrirOrderByNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByNegocioCliente"));
			
		this.jMenuItemDetalleMostarOcultarNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarNegocioCliente"));		
		
		
		this.jButtonNuevoGuardarCambiosNegocioCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosNegocioCliente"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarNegocioCliente"));
			
		this.jMenuItemNuevoGuardarCambiosNegocioCliente.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosNegocioCliente"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosNegocioCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosNegocioCliente"));

		this.jCheckBoxSeleccionadosNegocioCliente.addItemListener(new CheckBoxItemListener(this,"SeleccionadosNegocioCliente"));
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioNegocioCliente"));
		}
		
		
		this.jComboBoxTiposRelacionesNegocioCliente.addActionListener (new ButtonActionListener(this,"TiposRelacionesNegocioCliente"));
			
		this.jComboBoxTiposAccionesNegocioCliente.addActionListener (new ButtonActionListener(this,"TiposAccionesNegocioCliente"));
					
		this.jComboBoxTiposSeleccionarNegocioCliente.addActionListener (new ButtonActionListener(this,"TiposSeleccionarNegocioCliente"));
			
		this.jTextFieldValorCampoGeneralNegocioCliente.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralNegocioCliente"));		
		
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonidNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"idNegocioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_empresaNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_empresaNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaNegocioClienteBusqueda"));
		//jButtonid_clienteNegocioCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteNegocioClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioCliente.addActionListener(new ButtonActionListener(this,"id_clienteNegocioCliente"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_clienteNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnombre_quien_se_facturaNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_quien_se_facturaNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonfaxNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"faxNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonrucNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtontelefonoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnombre_localNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_localNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtone_mailNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"e_mailNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtondireccionNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_local_propioNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_local_propioNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_aniosNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_aniosNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_mesesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_mesesNegocioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_tipo_ubicacion_negocioNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ubicacion_negocioNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_tipo_ubicacion_negocioNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ubicacion_negocioNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleados_fijosNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleados_fijosNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleado_temporalesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleado_temporalesNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleados_totalNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleados_totalNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonporcentaje_ventas_contadoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ventas_contadoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonporcentaje_ventas_creditoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ventas_creditoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonplazo_diasNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"plazo_diasNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_clientesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_clientesNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonmonto_maximo_ventas_mensualNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"monto_maximo_ventas_mensualNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonmonto_minimo_ventas_mensualNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"monto_minimo_ventas_mensualNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_enero_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_enero_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_febrero_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_febrero_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_marzo_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_marzo_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_abril_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_abril_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_mayo_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_mayo_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_junio_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_junio_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_julio_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_julio_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_agosto_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_agosto_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_septiembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_septiembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_octubre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_octubre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_noviembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_noviembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_diciembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_diciembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_enero_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_enero_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_febrero_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_febrero_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_marzo_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_marzo_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_abril_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_abril_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_mayo_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_mayo_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_junio_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_junio_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_julio_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_julio_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_agosto_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_agosto_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_septiembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_septiembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_octubre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_octubre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_noviembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_noviembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_diciembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_diciembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtondescripcionNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"descripcionNegocioClienteBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdClienteNegocioCliente.addActionListener(new ButtonActionListener(this,"FK_IdClienteNegocioCliente"));

			this.jButtonBuscarFK_IdClienteid_clienteNegocioCliente.addActionListener(new ButtonActionListener(this,"id_clienteNegocioCliente"));

			this.jButtonFK_IdTipoUbicacionNegocioNegocioCliente.addActionListener(new ButtonActionListener(this,"FK_IdTipoUbicacionNegocioNegocioCliente"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoNegocioCliente!=null) {
				this.jInternalFrameReporteDinamicoNegocioCliente.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoNegocioCliente"));
				this.jInternalFrameReporteDinamicoNegocioCliente.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoNegocioCliente"));
				this.jInternalFrameReporteDinamicoNegocioCliente.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoNegocioCliente"));
			}
			
			//this.jButtonCerrarReporteDinamicoNegocioCliente.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoNegocioCliente"));				
			//this.jButtonGenerarReporteDinamicoNegocioCliente.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoNegocioCliente"));
			//this.jButtonGenerarExcelReporteDinamicoNegocioCliente.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoNegocioCliente"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionNegocioCliente!=null) {
				this.jInternalFrameImportacionNegocioCliente.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionNegocioCliente"));
				this.jInternalFrameImportacionNegocioCliente.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionNegocioCliente"));
				this.jInternalFrameImportacionNegocioCliente.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionNegocioCliente"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByNegocioCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderByNegocioCliente"));
			
			this.jButtonAbrirOrderByToolBarNegocioCliente.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarNegocioCliente"));			
			
			if(this.jInternalFrameOrderByNegocioCliente!=null) {
				this.jInternalFrameOrderByNegocioCliente.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByNegocioCliente"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormNegocioCliente.jTabbedPaneRelacionesNegocioCliente.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesNegocioCliente"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameNegocioCliente();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormNegocioCliente.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormNegocioCliente = (JInternalFrameBase)event.getSource();
	            	
	            NegocioClienteBeanSwingJInternalFrame jInternalFrameParent=(NegocioClienteBeanSwingJInternalFrame)jInternalFrameDetalleFormNegocioCliente.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarNegocioClienteActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosNegocioCliente.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosNegocioClienteListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosNegocioCliente.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosNegocioCliente.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoNegocioClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoNegocioClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoNegocioClienteActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoNegocioCliente";
		inputMap = this.jButtonNuevoNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoNegocioClienteActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoNegocioClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoNegocioClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoNegocioClienteActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesNegocioCliente";
		inputMap = this.jButtonNuevoRelacionesNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoNegocioClienteActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarNegocioCliente";
		inputMap = this.jButtonModificarNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarNegocioClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarNegocioCliente";
		inputMap = this.jButtonActualizarNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarNegocioClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarNegocioCliente";
		inputMap = this.jButtonEliminarNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarNegocioClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarNegocioCliente";
		inputMap = this.jButtonCancelarNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarNegocioClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarNegocioCliente";
		inputMap = this.jButtonCerrarNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarNegocioClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosNegocioCliente";
		inputMap = this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormNegocioCliente.jButtonGuardarCambiosNegocioCliente.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosNegocioClienteActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosNegocioCliente.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosNegocioClienteItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesNegocioCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesNegocioClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarNegocioCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarNegocioClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralNegocioCliente.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralNegocioClienteActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonidNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"idNegocioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_empresaNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_empresaNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_empresaNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaNegocioClienteBusqueda"));
		//jButtonid_clienteNegocioCliente.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteNegocioClienteActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioCliente.addActionListener(new ButtonActionListener(this,"id_clienteNegocioCliente"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_clienteNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnombre_quien_se_facturaNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_quien_se_facturaNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonfaxNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"faxNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonrucNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"rucNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtontelefonoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"telefonoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnombre_localNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"nombre_localNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtone_mailNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"e_mailNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtondireccionNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"direccionNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_local_propioNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_local_propioNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_aniosNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_aniosNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_mesesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_mesesNegocioClienteBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_tipo_ubicacion_negocioNegocioClienteUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ubicacion_negocioNegocioClienteUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonid_tipo_ubicacion_negocioNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ubicacion_negocioNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleados_fijosNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleados_fijosNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleado_temporalesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleado_temporalesNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonempleados_totalNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"empleados_totalNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonporcentaje_ventas_contadoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ventas_contadoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonporcentaje_ventas_creditoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ventas_creditoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonplazo_diasNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"plazo_diasNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonnumero_clientesNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"numero_clientesNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonmonto_maximo_ventas_mensualNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"monto_maximo_ventas_mensualNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtonmonto_minimo_ventas_mensualNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"monto_minimo_ventas_mensualNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_enero_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_enero_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_febrero_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_febrero_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_marzo_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_marzo_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_abril_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_abril_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_mayo_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_mayo_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_junio_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_junio_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_julio_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_julio_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_agosto_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_agosto_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_septiembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_septiembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_octubre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_octubre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_noviembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_noviembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_diciembre_altoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_diciembre_altoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_enero_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_enero_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_febrero_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_febrero_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_marzo_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_marzo_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_abril_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_abril_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_mayo_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_mayo_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_junio_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_junio_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_julio_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_julio_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_agosto_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_agosto_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_septiembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_septiembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_octubre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_octubre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_noviembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_noviembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtones_diciembre_bajoNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"es_diciembre_bajoNegocioClienteBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormNegocioCliente.jButtondescripcionNegocioClienteBusqueda.addActionListener(new ButtonActionListener(this,"descripcionNegocioClienteBusqueda"));
		
		
		this.jButtonFK_IdClienteNegocioCliente.addActionListener(new ButtonActionListener(this,"FK_IdClienteNegocioCliente"));

		this.jButtonBuscarFK_IdClienteid_clienteNegocioCliente.addActionListener(new ButtonActionListener(this,"id_clienteNegocioCliente"));

		this.jButtonFK_IdTipoUbicacionNegocioNegocioCliente.addActionListener(new ButtonActionListener(this,"FK_IdTipoUbicacionNegocioNegocioCliente"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionNegocioCliente.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionNegocioClienteActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarNegocioClienteActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarNegocioCliente.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosNegocioCliente(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
					negocioclienteAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(NegocioCliente negocioclienteAux:negocioclientes) {
					negocioclienteAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosNegocioClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingNegocioCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
						negocioclienteAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(NegocioCliente negocioclienteAux:negocioclientes) {
						negocioclienteAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
					
						if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO)) {
							existe=true;
							negocioclienteAux.setes_local_propio(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESENEROALTO)) {
							existe=true;
							negocioclienteAux.setes_enero_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO)) {
							existe=true;
							negocioclienteAux.setes_febrero_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO)) {
							existe=true;
							negocioclienteAux.setes_marzo_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESABRILALTO)) {
							existe=true;
							negocioclienteAux.setes_abril_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO)) {
							existe=true;
							negocioclienteAux.setes_mayo_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO)) {
							existe=true;
							negocioclienteAux.setes_junio_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO)) {
							existe=true;
							negocioclienteAux.setes_julio_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO)) {
							existe=true;
							negocioclienteAux.setes_agosto_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO)) {
							existe=true;
							negocioclienteAux.setes_septiembre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO)) {
							existe=true;
							negocioclienteAux.setes_octubre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO)) {
							existe=true;
							negocioclienteAux.setes_noviembre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO)) {
							existe=true;
							negocioclienteAux.setes_diciembre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO)) {
							existe=true;
							negocioclienteAux.setes_enero_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO)) {
							existe=true;
							negocioclienteAux.setes_febrero_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO)) {
							existe=true;
							negocioclienteAux.setes_marzo_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO)) {
							existe=true;
							negocioclienteAux.setes_abril_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO)) {
							existe=true;
							negocioclienteAux.setes_mayo_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO)) {
							existe=true;
							negocioclienteAux.setes_junio_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO)) {
							existe=true;
							negocioclienteAux.setes_julio_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO)) {
							existe=true;
							negocioclienteAux.setes_agosto_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_septiembre_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_octubre_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_noviembre_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_diciembre_bajo(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(NegocioCliente negocioclienteAux:negocioclientes) {
						
						if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO)) {
							existe=true;
							negocioclienteAux.setes_local_propio(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESENEROALTO)) {
							existe=true;
							negocioclienteAux.setes_enero_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO)) {
							existe=true;
							negocioclienteAux.setes_febrero_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO)) {
							existe=true;
							negocioclienteAux.setes_marzo_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESABRILALTO)) {
							existe=true;
							negocioclienteAux.setes_abril_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO)) {
							existe=true;
							negocioclienteAux.setes_mayo_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO)) {
							existe=true;
							negocioclienteAux.setes_junio_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO)) {
							existe=true;
							negocioclienteAux.setes_julio_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO)) {
							existe=true;
							negocioclienteAux.setes_agosto_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO)) {
							existe=true;
							negocioclienteAux.setes_septiembre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO)) {
							existe=true;
							negocioclienteAux.setes_octubre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO)) {
							existe=true;
							negocioclienteAux.setes_noviembre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO)) {
							existe=true;
							negocioclienteAux.setes_diciembre_alto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO)) {
							existe=true;
							negocioclienteAux.setes_enero_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO)) {
							existe=true;
							negocioclienteAux.setes_febrero_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO)) {
							existe=true;
							negocioclienteAux.setes_marzo_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO)) {
							existe=true;
							negocioclienteAux.setes_abril_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO)) {
							existe=true;
							negocioclienteAux.setes_mayo_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO)) {
							existe=true;
							negocioclienteAux.setes_junio_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO)) {
							existe=true;
							negocioclienteAux.setes_julio_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO)) {
							existe=true;
							negocioclienteAux.setes_agosto_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_septiembre_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_octubre_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_noviembre_bajo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO)) {
							existe=true;
							negocioclienteAux.setes_diciembre_bajo(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaNegocioCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosNegocioCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosNegocioCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosNegocioClienteItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingNegocioCliente(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosNegocioCliente.getSelectedRows();
			
			NegocioCliente negocioclienteLocal=new NegocioCliente();
			
			//this.seleccionarTodosNegocioCliente(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					negocioclienteLocal =(NegocioCliente) this.negocioclienteLogic.getNegocioClientes().toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					negocioclienteLocal =(NegocioCliente) this.negocioclientes.toArray()[this.jTableDatosNegocioCliente.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				negocioclienteLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
						negocioclienteAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(NegocioCliente negocioclienteAux:negocioclientes) {
						negocioclienteAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaNegocioCliente(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosNegocioCliente.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosNegocioCliente.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosNegocioCliente,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualNegocioClienteItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarNegocioClienteParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralNegocioClienteActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingNegocioCliente(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralNegocioCliente.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(NegocioCliente negocioclienteAux:this.negocioclienteLogic.getNegocioClientes()) {
				
						if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA)) {
							existe=true;
							negocioclienteAux.setnombre_quien_se_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_FAX)) {
							existe=true;
							negocioclienteAux.setfax(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_RUC)) {
							existe=true;
							negocioclienteAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							negocioclienteAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL)) {
							existe=true;
							negocioclienteAux.setnombre_local(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMAIL)) {
							existe=true;
							negocioclienteAux.sete_mail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							negocioclienteAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS)) {
							existe=true;
							negocioclienteAux.setnumero_anios(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROMESES)) {
							existe=true;
							negocioclienteAux.setnumero_meses(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS)) {
							existe=true;
							negocioclienteAux.setempleados_fijos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES)) {
							existe=true;
							negocioclienteAux.setempleado_temporales(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL)) {
							existe=true;
							negocioclienteAux.setempleados_total(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO)) {
							existe=true;
							negocioclienteAux.setporcentaje_ventas_contado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO)) {
							existe=true;
							negocioclienteAux.setporcentaje_ventas_credito(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_PLAZODIAS)) {
							existe=true;
							negocioclienteAux.setplazo_dias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES)) {
							existe=true;
							negocioclienteAux.setnumero_clientes(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL)) {
							existe=true;
							negocioclienteAux.setmonto_maximo_ventas_mensual(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL)) {
							existe=true;
							negocioclienteAux.setmonto_minimo_ventas_mensual(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							negocioclienteAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(NegocioCliente negocioclienteAux:negocioclientes) {
					
						if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA)) {
							existe=true;
							negocioclienteAux.setnombre_quien_se_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_FAX)) {
							existe=true;
							negocioclienteAux.setfax(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_RUC)) {
							existe=true;
							negocioclienteAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							negocioclienteAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL)) {
							existe=true;
							negocioclienteAux.setnombre_local(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMAIL)) {
							existe=true;
							negocioclienteAux.sete_mail(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							negocioclienteAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS)) {
							existe=true;
							negocioclienteAux.setnumero_anios(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROMESES)) {
							existe=true;
							negocioclienteAux.setnumero_meses(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS)) {
							existe=true;
							negocioclienteAux.setempleados_fijos(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES)) {
							existe=true;
							negocioclienteAux.setempleado_temporales(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL)) {
							existe=true;
							negocioclienteAux.setempleados_total(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO)) {
							existe=true;
							negocioclienteAux.setporcentaje_ventas_contado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO)) {
							existe=true;
							negocioclienteAux.setporcentaje_ventas_credito(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_PLAZODIAS)) {
							existe=true;
							negocioclienteAux.setplazo_dias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES)) {
							existe=true;
							negocioclienteAux.setnumero_clientes(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL)) {
							existe=true;
							negocioclienteAux.setmonto_maximo_ventas_mensual(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL)) {
							existe=true;
							negocioclienteAux.setmonto_minimo_ventas_mensual(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							negocioclienteAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaNegocioCliente(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesNegocioClienteActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingNegocioCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioNegocioCliente=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesNegocioCliente.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteNegocioCliente) {				
					conSplash=true;//false;										
					
					//this.startProcessNegocioCliente(conSplash);
				
					this.generarReporteNegocioClientesSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoNegocioClientesSeleccionados();
				//this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoNegocioClientesSeleccionados(false);
				//this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoNegocioClientesSeleccionados(true);
				//this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessNegocioCliente();
				
				this.exportarNegocioClientesSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionNegocioClientes();
				//this.importarNegocioClientes();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessNegocioCliente();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelNegocioClientesSeleccionados();
				//this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Negocio Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessNegocioCliente();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoNegocioCliente)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyNegocioCliente(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.setSelectedIndex(0);					
				}	
			} 			
			else if(NegocioClienteBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteNegocioCliente) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessNegocioCliente(conSplash);
					
						//this.actualizarParametrosGeneralNegocioCliente();
						
						this.generarReporteProcesoAccionNegocioClientesSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(NegocioClienteBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Negocio ClienteS SELECCIONADOS?", "MANTENIMIENTO DE Negocio Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessNegocioCliente();
				
						this.actualizarParametrosGeneralNegocioCliente();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.negocioclienteReturnGeneral=negocioclienteLogic.procesarAccionNegocioClientesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.negocioclienteLogic.getNegocioClientes(),this.negocioclienteParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarNegocioClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralNegocioCliente();
					
					NegocioClienteBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarNegocioClienteReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesNegocioCliente.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormNegocioCliente.jComboBoxTiposAccionesFormularioNegocioCliente.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessNegocioCliente(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesNegocioClienteActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessNegocioCliente();
			
			if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
			NegocioCliente negociocliente=new NegocioCliente();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingNegocioCliente(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesNegocioCliente.getSelectedItem();
			
			
			
			
			negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
			//this.sTipoAccion;
			
			if(negocioclientesSeleccionados.size()==1) {
				for(NegocioCliente negocioclienteAux:negocioclientesSeleccionados) {
					negociocliente=negocioclienteAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessNegocioCliente();
			
      		//this.finishProcessNegocioCliente(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarNegocioClienteReturnGeneral() throws Exception {
		if(this.negocioclienteReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.negocioclienteReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.negocioclienteReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.negocioclienteReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.negocioclienteReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.negocioclienteReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingNegocioCliente(false);
		}
		
		if(this.negocioclienteReturnGeneral.getConRetornoLista() || this.negocioclienteReturnGeneral.getConRetornoObjeto()) {
			if(this.negocioclienteReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.negocioclienteLogic.setNegocioClientes(this.negocioclienteReturnGeneral.getNegocioClientes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.negocioclienteReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.negocioclienteLogic.setNegocioCliente(this.negocioclienteReturnGeneral.getNegocioCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingNegocioCliente(false);
		}
	}
	
	public void actualizarParametrosGeneralNegocioCliente() throws Exception {
		
		
	}
	
	public ArrayList<NegocioCliente> getNegocioClientesSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioNegocioCliente) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(NegocioCliente negocioclienteAux:negocioclienteLogic.getNegocioClientes()) {
					if(negocioclienteAux.getIsSelected()) {
						negocioclientesSeleccionados.add(negocioclienteAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(NegocioCliente negocioclienteAux:this.negocioclientes) {
					if(negocioclienteAux.getIsSelected()) {
						negocioclientesSeleccionados.add(negocioclienteAux);				
					}
				}
			}
			
			if(negocioclientesSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						negocioclientesSeleccionados.addAll(this.negocioclienteLogic.getNegocioClientes());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						negocioclientesSeleccionados.addAll(this.negocioclientes);				
					}
				}
			}
		} else {
			negocioclientesSeleccionados.add(this.negociocliente);
		}
		
		return negocioclientesSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteNegocioClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalNegocioClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoNegocioClientesSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoNegocioClientesSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoNegocioClientesSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Negocio Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesNegocioClientesSeleccionados() throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteNegocioClientes("Todos",negocioclientesSeleccionados);
		
	}	
	
	public void generarReporteNormalNegocioClientesSeleccionados() throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteNegocioClientes("Todos",negocioclientesSeleccionados);
	}		
	
	public void generarReporteProcesoAccionNegocioClientesSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteNegocioClientes("Todos",negocioclientesSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoNegocioClientesSeleccionados() throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
		
		
		this.abrirInicializarFrameReporteDinamicoNegocioCliente();
		
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoNegocioCliente();
		
		
		//this.generarReporteNegocioClientes("Todos",negocioclientesSeleccionados ,negocioclienteImplementable,negocioclienteImplementableHome);
	}
	
	public void mostrarImportacionNegocioClientes() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionNegocioCliente();
		
		this.abrirFrameImportacionNegocioCliente();		
		
			
		//this.generarReporteNegocioClientes("Todos",negocioclientesSeleccionados ,negocioclienteImplementable,negocioclienteImplementableHome);
	}
	
	public void importarNegocioClientes() throws Exception {		
	
	}
	
	public void exportarNegocioClientesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelNegocioClientesSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoNegocioClientesSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlNegocioClientesSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Negocio Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoNegocioClientesSeleccionados() throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"negociocliente."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarNegocioCliente(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(NegocioCliente negocioclienteAux:negocioclientesSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarNegocioCliente(negocioclienteAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//negocioclienteAux.setsDetalleGeneralEntityReporte(negocioclienteAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarNegocioCliente(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_FAX;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_EMAIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_NUMEROMESES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_PLAZODIAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESENEROALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESABRILALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=NegocioClienteConstantesFunciones.LABEL_DESCRIPCION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarNegocioCliente(NegocioCliente negociocliente,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=negociocliente.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getnombre_quien_se_factura();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getfax();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getnombre_local();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.gete_mail();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_local_propio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getnumero_anios().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getnumero_meses().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.gettipoubicacionnegocio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getempleados_fijos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getempleado_temporales().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getempleados_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getporcentaje_ventas_contado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getporcentaje_ventas_credito().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getplazo_dias().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getnumero_clientes().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getmonto_maximo_ventas_mensual().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getmonto_minimo_ventas_mensual().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_enero_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_febrero_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_marzo_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_abril_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_mayo_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_junio_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_julio_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_agosto_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_septiembre_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_octubre_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_noviembre_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_diciembre_alto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_enero_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_febrero_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_marzo_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_abril_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_mayo_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_junio_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_julio_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_agosto_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_septiembre_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_octubre_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_noviembre_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getes_diciembre_bajo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=negociocliente.getdescripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelNegocioClientesSeleccionados() throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"negociocliente.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("NegocioClientes");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelNegocioCliente(row);				
				iRow++;
			}				
			
			for(NegocioCliente negocioclienteAux:negocioclientesSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelNegocioCliente(negocioclienteAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlNegocioClientesSeleccionados() throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();		
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"negociocliente.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("negocioclientes");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("negociocliente");
			//elementRoot.appendChild(element);
		
			for(NegocioCliente negocioclienteAux:negocioclientesSeleccionados) {
				element = document.createElement("negociocliente");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlNegocioCliente(negocioclienteAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Negocio Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelNegocioCliente(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_FAX);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMAIL);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROMESES);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCONTADO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PORCENTAJEVENTASCREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_PLAZODIAS);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_MONTOMAXIMOVENTASMENSUAL);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_MONTOMINIMOVENTASMENSUAL);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESENEROALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESABRILALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(NegocioClienteConstantesFunciones.LABEL_DESCRIPCION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelNegocioCliente(NegocioCliente negociocliente,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getnombre_quien_se_factura());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getfax());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getnombre_local());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.gete_mail());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_local_propio());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getnumero_anios());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getnumero_meses());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.gettipoubicacionnegocio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getempleados_fijos());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getempleado_temporales());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getempleados_total());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getporcentaje_ventas_contado());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getporcentaje_ventas_credito());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getplazo_dias());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getnumero_clientes());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getmonto_maximo_ventas_mensual());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getmonto_minimo_ventas_mensual());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_enero_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_febrero_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_marzo_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_abril_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_mayo_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_junio_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_julio_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_agosto_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_septiembre_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_octubre_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_noviembre_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_diciembre_alto());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_enero_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_febrero_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_marzo_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_abril_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_mayo_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_junio_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_julio_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_agosto_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_septiembre_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_octubre_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_noviembre_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getes_diciembre_bajo());
		cell = row.createCell(iColumn++);cell.setCellValue(negociocliente.getdescripcion());				
	}
	
	public void setFilaDatosExportarXmlNegocioCliente(NegocioCliente negociocliente,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(NegocioClienteConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(negociocliente.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(NegocioClienteConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(negociocliente.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(NegocioClienteConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(negociocliente.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementcliente_descripcion = document.createElement(NegocioClienteConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(negociocliente.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementnombre_quien_se_factura = document.createElement(NegocioClienteConstantesFunciones.NOMBREQUIENSEFACTURA);
		elementnombre_quien_se_factura.appendChild(document.createTextNode(negociocliente.getnombre_quien_se_factura().trim()));
		element.appendChild(elementnombre_quien_se_factura);

		Element elementfax = document.createElement(NegocioClienteConstantesFunciones.FAX);
		elementfax.appendChild(document.createTextNode(negociocliente.getfax().trim()));
		element.appendChild(elementfax);

		Element elementruc = document.createElement(NegocioClienteConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(negociocliente.getruc().trim()));
		element.appendChild(elementruc);

		Element elementtelefono = document.createElement(NegocioClienteConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(negociocliente.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementnombre_local = document.createElement(NegocioClienteConstantesFunciones.NOMBRELOCAL);
		elementnombre_local.appendChild(document.createTextNode(negociocliente.getnombre_local().trim()));
		element.appendChild(elementnombre_local);

		Element elemente_mail = document.createElement(NegocioClienteConstantesFunciones.EMAIL);
		elemente_mail.appendChild(document.createTextNode(negociocliente.gete_mail().trim()));
		element.appendChild(elemente_mail);

		Element elementdireccion = document.createElement(NegocioClienteConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(negociocliente.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementes_local_propio = document.createElement(NegocioClienteConstantesFunciones.ESLOCALPROPIO);
		elementes_local_propio.appendChild(document.createTextNode(negociocliente.getes_local_propio().toString().trim()));
		element.appendChild(elementes_local_propio);

		Element elementnumero_anios = document.createElement(NegocioClienteConstantesFunciones.NUMEROANIOS);
		elementnumero_anios.appendChild(document.createTextNode(negociocliente.getnumero_anios().toString().trim()));
		element.appendChild(elementnumero_anios);

		Element elementnumero_meses = document.createElement(NegocioClienteConstantesFunciones.NUMEROMESES);
		elementnumero_meses.appendChild(document.createTextNode(negociocliente.getnumero_meses().toString().trim()));
		element.appendChild(elementnumero_meses);

		Element elementtipoubicacionnegocio_descripcion = document.createElement(NegocioClienteConstantesFunciones.IDTIPOUBICACIONNEGOCIO);
		elementtipoubicacionnegocio_descripcion.appendChild(document.createTextNode(negociocliente.gettipoubicacionnegocio_descripcion()));
		element.appendChild(elementtipoubicacionnegocio_descripcion);

		Element elementempleados_fijos = document.createElement(NegocioClienteConstantesFunciones.EMPLEADOSFIJOS);
		elementempleados_fijos.appendChild(document.createTextNode(negociocliente.getempleados_fijos().toString().trim()));
		element.appendChild(elementempleados_fijos);

		Element elementempleado_temporales = document.createElement(NegocioClienteConstantesFunciones.EMPLEADOTEMPORALES);
		elementempleado_temporales.appendChild(document.createTextNode(negociocliente.getempleado_temporales().toString().trim()));
		element.appendChild(elementempleado_temporales);

		Element elementempleados_total = document.createElement(NegocioClienteConstantesFunciones.EMPLEADOSTOTAL);
		elementempleados_total.appendChild(document.createTextNode(negociocliente.getempleados_total().toString().trim()));
		element.appendChild(elementempleados_total);

		Element elementporcentaje_ventas_contado = document.createElement(NegocioClienteConstantesFunciones.PORCENTAJEVENTASCONTADO);
		elementporcentaje_ventas_contado.appendChild(document.createTextNode(negociocliente.getporcentaje_ventas_contado().toString().trim()));
		element.appendChild(elementporcentaje_ventas_contado);

		Element elementporcentaje_ventas_credito = document.createElement(NegocioClienteConstantesFunciones.PORCENTAJEVENTASCREDITO);
		elementporcentaje_ventas_credito.appendChild(document.createTextNode(negociocliente.getporcentaje_ventas_credito().toString().trim()));
		element.appendChild(elementporcentaje_ventas_credito);

		Element elementplazo_dias = document.createElement(NegocioClienteConstantesFunciones.PLAZODIAS);
		elementplazo_dias.appendChild(document.createTextNode(negociocliente.getplazo_dias().toString().trim()));
		element.appendChild(elementplazo_dias);

		Element elementnumero_clientes = document.createElement(NegocioClienteConstantesFunciones.NUMEROCLIENTES);
		elementnumero_clientes.appendChild(document.createTextNode(negociocliente.getnumero_clientes().toString().trim()));
		element.appendChild(elementnumero_clientes);

		Element elementmonto_maximo_ventas_mensual = document.createElement(NegocioClienteConstantesFunciones.MONTOMAXIMOVENTASMENSUAL);
		elementmonto_maximo_ventas_mensual.appendChild(document.createTextNode(negociocliente.getmonto_maximo_ventas_mensual().toString().trim()));
		element.appendChild(elementmonto_maximo_ventas_mensual);

		Element elementmonto_minimo_ventas_mensual = document.createElement(NegocioClienteConstantesFunciones.MONTOMINIMOVENTASMENSUAL);
		elementmonto_minimo_ventas_mensual.appendChild(document.createTextNode(negociocliente.getmonto_minimo_ventas_mensual().toString().trim()));
		element.appendChild(elementmonto_minimo_ventas_mensual);

		Element elementes_enero_alto = document.createElement(NegocioClienteConstantesFunciones.ESENEROALTO);
		elementes_enero_alto.appendChild(document.createTextNode(negociocliente.getes_enero_alto().toString().trim()));
		element.appendChild(elementes_enero_alto);

		Element elementes_febrero_alto = document.createElement(NegocioClienteConstantesFunciones.ESFEBREROALTO);
		elementes_febrero_alto.appendChild(document.createTextNode(negociocliente.getes_febrero_alto().toString().trim()));
		element.appendChild(elementes_febrero_alto);

		Element elementes_marzo_alto = document.createElement(NegocioClienteConstantesFunciones.ESMARZOALTO);
		elementes_marzo_alto.appendChild(document.createTextNode(negociocliente.getes_marzo_alto().toString().trim()));
		element.appendChild(elementes_marzo_alto);

		Element elementes_abril_alto = document.createElement(NegocioClienteConstantesFunciones.ESABRILALTO);
		elementes_abril_alto.appendChild(document.createTextNode(negociocliente.getes_abril_alto().toString().trim()));
		element.appendChild(elementes_abril_alto);

		Element elementes_mayo_alto = document.createElement(NegocioClienteConstantesFunciones.ESMAYOALTO);
		elementes_mayo_alto.appendChild(document.createTextNode(negociocliente.getes_mayo_alto().toString().trim()));
		element.appendChild(elementes_mayo_alto);

		Element elementes_junio_alto = document.createElement(NegocioClienteConstantesFunciones.ESJUNIOALTO);
		elementes_junio_alto.appendChild(document.createTextNode(negociocliente.getes_junio_alto().toString().trim()));
		element.appendChild(elementes_junio_alto);

		Element elementes_julio_alto = document.createElement(NegocioClienteConstantesFunciones.ESJULIOALTO);
		elementes_julio_alto.appendChild(document.createTextNode(negociocliente.getes_julio_alto().toString().trim()));
		element.appendChild(elementes_julio_alto);

		Element elementes_agosto_alto = document.createElement(NegocioClienteConstantesFunciones.ESAGOSTOALTO);
		elementes_agosto_alto.appendChild(document.createTextNode(negociocliente.getes_agosto_alto().toString().trim()));
		element.appendChild(elementes_agosto_alto);

		Element elementes_septiembre_alto = document.createElement(NegocioClienteConstantesFunciones.ESSEPTIEMBREALTO);
		elementes_septiembre_alto.appendChild(document.createTextNode(negociocliente.getes_septiembre_alto().toString().trim()));
		element.appendChild(elementes_septiembre_alto);

		Element elementes_octubre_alto = document.createElement(NegocioClienteConstantesFunciones.ESOCTUBREALTO);
		elementes_octubre_alto.appendChild(document.createTextNode(negociocliente.getes_octubre_alto().toString().trim()));
		element.appendChild(elementes_octubre_alto);

		Element elementes_noviembre_alto = document.createElement(NegocioClienteConstantesFunciones.ESNOVIEMBREALTO);
		elementes_noviembre_alto.appendChild(document.createTextNode(negociocliente.getes_noviembre_alto().toString().trim()));
		element.appendChild(elementes_noviembre_alto);

		Element elementes_diciembre_alto = document.createElement(NegocioClienteConstantesFunciones.ESDICIEMBREALTO);
		elementes_diciembre_alto.appendChild(document.createTextNode(negociocliente.getes_diciembre_alto().toString().trim()));
		element.appendChild(elementes_diciembre_alto);

		Element elementes_enero_bajo = document.createElement(NegocioClienteConstantesFunciones.ESENEROBAJO);
		elementes_enero_bajo.appendChild(document.createTextNode(negociocliente.getes_enero_bajo().toString().trim()));
		element.appendChild(elementes_enero_bajo);

		Element elementes_febrero_bajo = document.createElement(NegocioClienteConstantesFunciones.ESFEBREROBAJO);
		elementes_febrero_bajo.appendChild(document.createTextNode(negociocliente.getes_febrero_bajo().toString().trim()));
		element.appendChild(elementes_febrero_bajo);

		Element elementes_marzo_bajo = document.createElement(NegocioClienteConstantesFunciones.ESMARZOBAJO);
		elementes_marzo_bajo.appendChild(document.createTextNode(negociocliente.getes_marzo_bajo().toString().trim()));
		element.appendChild(elementes_marzo_bajo);

		Element elementes_abril_bajo = document.createElement(NegocioClienteConstantesFunciones.ESABRILBAJO);
		elementes_abril_bajo.appendChild(document.createTextNode(negociocliente.getes_abril_bajo().toString().trim()));
		element.appendChild(elementes_abril_bajo);

		Element elementes_mayo_bajo = document.createElement(NegocioClienteConstantesFunciones.ESMAYOBAJO);
		elementes_mayo_bajo.appendChild(document.createTextNode(negociocliente.getes_mayo_bajo().toString().trim()));
		element.appendChild(elementes_mayo_bajo);

		Element elementes_junio_bajo = document.createElement(NegocioClienteConstantesFunciones.ESJUNIOBAJO);
		elementes_junio_bajo.appendChild(document.createTextNode(negociocliente.getes_junio_bajo().toString().trim()));
		element.appendChild(elementes_junio_bajo);

		Element elementes_julio_bajo = document.createElement(NegocioClienteConstantesFunciones.ESJULIOBAJO);
		elementes_julio_bajo.appendChild(document.createTextNode(negociocliente.getes_julio_bajo().toString().trim()));
		element.appendChild(elementes_julio_bajo);

		Element elementes_agosto_bajo = document.createElement(NegocioClienteConstantesFunciones.ESAGOSTOBAJO);
		elementes_agosto_bajo.appendChild(document.createTextNode(negociocliente.getes_agosto_bajo().toString().trim()));
		element.appendChild(elementes_agosto_bajo);

		Element elementes_septiembre_bajo = document.createElement(NegocioClienteConstantesFunciones.ESSEPTIEMBREBAJO);
		elementes_septiembre_bajo.appendChild(document.createTextNode(negociocliente.getes_septiembre_bajo().toString().trim()));
		element.appendChild(elementes_septiembre_bajo);

		Element elementes_octubre_bajo = document.createElement(NegocioClienteConstantesFunciones.ESOCTUBREBAJO);
		elementes_octubre_bajo.appendChild(document.createTextNode(negociocliente.getes_octubre_bajo().toString().trim()));
		element.appendChild(elementes_octubre_bajo);

		Element elementes_noviembre_bajo = document.createElement(NegocioClienteConstantesFunciones.ESNOVIEMBREBAJO);
		elementes_noviembre_bajo.appendChild(document.createTextNode(negociocliente.getes_noviembre_bajo().toString().trim()));
		element.appendChild(elementes_noviembre_bajo);

		Element elementes_diciembre_bajo = document.createElement(NegocioClienteConstantesFunciones.ESDICIEMBREBAJO);
		elementes_diciembre_bajo.appendChild(document.createTextNode(negociocliente.getes_diciembre_bajo().toString().trim()));
		element.appendChild(elementes_diciembre_bajo);

		Element elementdescripcion = document.createElement(NegocioClienteConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(negociocliente.getdescripcion().trim()));
		element.appendChild(elementdescripcion);
	}
	
	public void generarReporteGroupGenericoNegocioClientesSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<NegocioCliente> negocioclientesSeleccionados=new ArrayList<NegocioCliente>();
		
		negocioclientesSeleccionados=this.getNegocioClientesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoNegocioCliente(negocioclientesSeleccionados);
		
		this.generarReporteNegocioClientes("Todos",negocioclientesSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoNegocioCliente(ArrayList<NegocioCliente> negocioclientesSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(NegocioCliente negocioclienteAux:negocioclientesSeleccionados) {
				negocioclienteAux.setsDetalleGeneralEntityReporte(negocioclienteAux.toString());
			
				if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NOMBREQUIENSEFACTURA)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getnombre_quien_se_factura());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_FAX)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getfax());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_RUC)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NOMBRELOCAL)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getnombre_local());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMAIL)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.gete_mail());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESLOCALPROPIO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_local_propio()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROANIOS)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getnumero_anios().toString());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROMESES)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getnumero_meses().toString());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_IDTIPOUBICACIONNEGOCIO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.gettipoubicacionnegocio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSFIJOS)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getempleados_fijos().toString());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOTEMPORALES)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getempleado_temporales().toString());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_EMPLEADOSTOTAL)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getempleados_total().toString());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_PLAZODIAS)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getplazo_dias().toString());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_NUMEROCLIENTES)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getnumero_clientes().toString());
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESENEROALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_enero_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESFEBREROALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_febrero_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMARZOALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_marzo_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESABRILALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_abril_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMAYOALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_mayo_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJUNIOALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_junio_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJULIOALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_julio_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_agosto_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_septiembre_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_octubre_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_noviembre_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREALTO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_diciembre_alto()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESENEROBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_enero_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESFEBREROBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_febrero_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMARZOBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_marzo_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESABRILBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_abril_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESMAYOBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_mayo_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJUNIOBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_junio_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESJULIOBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_julio_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESAGOSTOBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_agosto_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESSEPTIEMBREBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_septiembre_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESOCTUBREBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_octubre_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESNOVIEMBREBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_noviembre_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_ESDICIEMBREBAJO)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(negocioclienteAux.getes_diciembre_bajo()));
				}
				 else if(sTipoSeleccionar.equals(NegocioClienteConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					negocioclienteAux.setsDescripcionGeneralEntityReporte1(negocioclienteAux.getdescripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,NegocioClienteConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesNegocioCliente(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoNegocioCliente=true;
				this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=true;
				this.isVisibilidadCeldaGuardarCambiosNegocioCliente=true;
			}
			
			this.isVisibilidadCeldaModificarNegocioCliente=false;
			this.isVisibilidadCeldaActualizarNegocioCliente=false;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
			this.isVisibilidadCeldaCancelarNegocioCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarNegocioCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoNegocioCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=false;
			this.isVisibilidadCeldaModificarNegocioCliente=false;
			this.isVisibilidadCeldaActualizarNegocioCliente=true;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
			this.isVisibilidadCeldaCancelarNegocioCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarNegocioCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoNegocioCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=false;
			this.isVisibilidadCeldaModificarNegocioCliente=false;
			this.isVisibilidadCeldaActualizarNegocioCliente=true;
			this.isVisibilidadCeldaEliminarNegocioCliente=true;
			this.isVisibilidadCeldaCancelarNegocioCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarNegocioCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoNegocioCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=false;
			this.isVisibilidadCeldaModificarNegocioCliente=false;
			this.isVisibilidadCeldaActualizarNegocioCliente=true;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
			this.isVisibilidadCeldaCancelarNegocioCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoNegocioCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=true;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=true;
			this.isVisibilidadCeldaModificarNegocioCliente=false;
			this.isVisibilidadCeldaActualizarNegocioCliente=false;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
			this.isVisibilidadCeldaCancelarNegocioCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarNegocioCliente=true;
				} else {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoNegocioCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=false;
			this.isVisibilidadCeldaActualizarNegocioCliente=false;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
			this.isVisibilidadCeldaCancelarNegocioCliente=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoNegocioCliente=false;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=false;
			this.isVisibilidadCeldaModificarNegocioCliente=true;
			this.isVisibilidadCeldaActualizarNegocioCliente=false;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
			this.isVisibilidadCeldaCancelarNegocioCliente=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				} else {
					this.isVisibilidadCeldaGuardarNegocioCliente=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(NegocioClienteJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoNegocioCliente=true;
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=true;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=true;
		} else {
			this.actualizarEstadoPanelsNegocioCliente(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarNegocioCliente=false;
			//this.isVisibilidadCeldaVerFormNegocioCliente=false;
			this.isVisibilidadCeldaDuplicarNegocioCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!negocioclienteSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
		} else {
			this.isVisibilidadCeldaNuevoNegocioCliente=false;
			this.isVisibilidadCeldaGuardarCambiosNegocioCliente=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(negocioclienteSessionBean.getEsGuardarRelacionado()) {
			if(!negocioclienteSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;												
			}
			
			this.jButtonCerrarNegocioCliente.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesNegocioCliente=false;
		}
		
		if(!this.permiteMantenimiento(this.negociocliente)) {
			this.isVisibilidadCeldaActualizarNegocioCliente=false;
			this.isVisibilidadCeldaEliminarNegocioCliente=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesNegocioCliente() {
	}
	
	public void actualizarEstadoPanelsNegocioCliente(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionNegocioCliente!=null) {
				this.jScrollPanelDatosEdicionNegocioCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosNegocioCliente!=null) {
				this.jScrollPanelDatosNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionNegocioCliente!=null) {
				this.jPanelPaginacionNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionNegocioCliente!=null) {
				this.jScrollPanelDatosEdicionNegocioCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosNegocioCliente!=null) {
				this.jScrollPanelDatosNegocioCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionNegocioCliente!=null) {
				this.jPanelPaginacionNegocioCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionNegocioCliente!=null) {
				this.jScrollPanelDatosEdicionNegocioCliente.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosNegocioCliente!=null) {
				this.jScrollPanelDatosNegocioCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionNegocioCliente!=null) {
				this.jPanelPaginacionNegocioCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionNegocioCliente!=null) {
				this.jScrollPanelDatosEdicionNegocioCliente.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosNegocioCliente!=null) {
				this.jScrollPanelDatosNegocioCliente.setVisible(false);
			}
			
			if(this.jPanelPaginacionNegocioCliente!=null) {
				this.jPanelPaginacionNegocioCliente.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionNegocioCliente!=null) {
				this.jScrollPanelDatosEdicionNegocioCliente.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosNegocioCliente!=null) {
				this.jScrollPanelDatosNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionNegocioCliente!=null) {
				this.jPanelPaginacionNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionNegocioCliente!=null) {
				this.jScrollPanelDatosEdicionNegocioCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosNegocioCliente!=null) {
				this.jScrollPanelDatosNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionNegocioCliente!=null) {
				this.jPanelPaginacionNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionNegocioCliente!=null) {
				this.jScrollPanelDatosEdicionNegocioCliente.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosNegocioCliente!=null) {
				this.jScrollPanelDatosNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelPaginacionNegocioCliente!=null) {
				this.jPanelPaginacionNegocioCliente.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
					this.jTabbedPaneBusquedasNegocioCliente.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.negocioclienteSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasNegocioCliente!=null) {
				this.jTabbedPaneBusquedasNegocioCliente.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesNegocioCliente!=null) {
				this.jPanelParametrosReportesNegocioCliente.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasNegocioCliente.remove(jPanelFK_IdClienteNegocioCliente);}

			this.isVisibilidadFK_IdTipoUbicacionNegocio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoUbicacionNegocio) {this.jTabbedPaneBusquedasNegocioCliente.remove(jPanelFK_IdTipoUbicacionNegocioNegocioCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasNegocioCliente.remove(jPanelFK_IdClienteNegocioCliente);}

			this.isVisibilidadFK_IdTipoUbicacionNegocio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoUbicacionNegocio) {this.jTabbedPaneBusquedasNegocioCliente.remove(jPanelFK_IdTipoUbicacionNegocioNegocioCliente);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoUbicacionNegocio(Boolean isParaTipoUbicacionNegocio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoUbicacionNegocioNegation=!isParaTipoUbicacionNegocio;

			this.isVisibilidadFK_IdCliente=isParaTipoUbicacionNegocioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasNegocioCliente.remove(jPanelFK_IdClienteNegocioCliente);}

			this.isVisibilidadFK_IdTipoUbicacionNegocio=isParaTipoUbicacionNegocio;
			if(!this.isVisibilidadFK_IdTipoUbicacionNegocio) {this.jTabbedPaneBusquedasNegocioCliente.remove(jPanelFK_IdTipoUbicacionNegocioNegocioCliente);}
		}
		
	}
	
	
	
	

	public String registrarSesionNegocioClienteParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(negocioclienteSessionBean==null) {
				negocioclienteSessionBean=new NegocioClienteSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(negocioclienteSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.negocioclienteFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(NegocioClienteConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionNegocioCliente(true);
			//clienteSessionBean.setlidNegocioClienteActual(this.idNegocioClienteActual);

			negocioclienteSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyNegocioCliente(true);
			negocioclienteSessionBean.setlIdNegocioClienteActualForeignKey(this.idNegocioClienteActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//NegocioClienteSessionBean negocioclienteSessionBean=new NegocioClienteSessionBean();
		
		if(this.negocioclienteSessionBean==null) {
			this.negocioclienteSessionBean=new NegocioClienteSessionBean();
		}
		
		this.negocioclienteSessionBean.setsUltimaBusquedaNegocioCliente(this.getsAccionBusqueda());
		this.negocioclienteSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.negocioclienteSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			negocioclienteSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			negocioclienteSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoUbicacionNegocio")) {
			negocioclienteSessionBean.setid_tipo_ubicacion_negocio(this.getid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//NegocioClienteSessionBean negocioclienteSessionBean=new NegocioClienteSessionBean();
		
		if(this.negocioclienteSessionBean==null) {
			this.negocioclienteSessionBean=new NegocioClienteSessionBean();
		}
		
		if(this.negocioclienteSessionBean.getsUltimaBusquedaNegocioCliente()!=null&&!this.negocioclienteSessionBean.getsUltimaBusquedaNegocioCliente().equals("")) {
			this.setsAccionBusqueda(negocioclienteSessionBean.getsUltimaBusquedaNegocioCliente());
			this.setiNumeroPaginacion(negocioclienteSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(negocioclienteSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(negocioclienteSessionBean.getid_cliente());
				negocioclienteSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(negocioclienteSessionBean.getid_empresa());
				negocioclienteSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoUbicacionNegocio")) {
				this.setid_tipo_ubicacion_negocioFK_IdTipoUbicacionNegocio(negocioclienteSessionBean.getid_tipo_ubicacion_negocio());
				negocioclienteSessionBean.setid_tipo_ubicacion_negocio(-1L);
			}
		}
		
		this.negocioclienteSessionBean.setsUltimaBusquedaNegocioCliente("");
		this.negocioclienteSessionBean.setiNumeroPaginacion(NegocioClienteConstantesFunciones.INUMEROPAGINACION);
		this.negocioclienteSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaNegocioCliente(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioNegocioCliente() {
		this.updateBorderResaltarBusquedasFormularioNegocioCliente();
		this.updateVisibilidadBusquedasFormularioNegocioCliente();
		this.updateHabilitarBusquedasFormularioNegocioCliente();
	}
	
	public void updateBorderResaltarBusquedasFormularioNegocioCliente() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasNegocioCliente.getComponents().length>0) {
	

		if(this.negocioclienteConstantesFunciones.resaltarFK_IdClienteNegocioCliente!=null) {
			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdClienteNegocioCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);
				jPanel.setBorder(this.negocioclienteConstantesFunciones.resaltarFK_IdClienteNegocioCliente);
			}
		}

		if(this.negocioclienteConstantesFunciones.resaltarFK_IdTipoUbicacionNegocioNegocioCliente!=null) {
			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdTipoUbicacionNegocioNegocioCliente);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);
				jPanel.setBorder(this.negocioclienteConstantesFunciones.resaltarFK_IdTipoUbicacionNegocioNegocioCliente);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioNegocioCliente() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasNegocioCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdClienteNegocioCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.negocioclienteConstantesFunciones.mostrarFK_IdClienteNegocioCliente);
			if(!this.negocioclienteConstantesFunciones.mostrarFK_IdClienteNegocioCliente && index>-1) {
				this.jTabbedPaneBusquedasNegocioCliente.remove(index);
			}

			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdTipoUbicacionNegocioNegocioCliente);
			jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.negocioclienteConstantesFunciones.mostrarFK_IdTipoUbicacionNegocioNegocioCliente);
			if(!this.negocioclienteConstantesFunciones.mostrarFK_IdTipoUbicacionNegocioNegocioCliente && index>-1) {
				this.jTabbedPaneBusquedasNegocioCliente.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioNegocioCliente() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasNegocioCliente.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdClienteNegocioCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.negocioclienteConstantesFunciones.activarFK_IdClienteNegocioCliente);
				this.jTabbedPaneBusquedasNegocioCliente.setEnabledAt(index,this.negocioclienteConstantesFunciones.activarFK_IdClienteNegocioCliente);
			}

			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdTipoUbicacionNegocioNegocioCliente);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.negocioclienteConstantesFunciones.activarFK_IdTipoUbicacionNegocioNegocioCliente);
				this.jTabbedPaneBusquedasNegocioCliente.setEnabledAt(index,this.negocioclienteConstantesFunciones.activarFK_IdTipoUbicacionNegocioNegocioCliente);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaNegocioCliente(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdClienteNegocioCliente);

			this.jTabbedPaneBusquedasNegocioCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);

			this.negocioclienteConstantesFunciones.setResaltarFK_IdClienteNegocioCliente(resaltar);

			jPanel.setBorder(this.negocioclienteConstantesFunciones.resaltarFK_IdClienteNegocioCliente);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoUbicacionNegocio")) {
			index= this.jTabbedPaneBusquedasNegocioCliente.indexOfComponent(this.jPanelFK_IdTipoUbicacionNegocioNegocioCliente);

			this.jTabbedPaneBusquedasNegocioCliente.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasNegocioCliente.getComponent(index);

			this.negocioclienteConstantesFunciones.setResaltarFK_IdTipoUbicacionNegocioNegocioCliente(resaltar);

			jPanel.setBorder(this.negocioclienteConstantesFunciones.resaltarFK_IdTipoUbicacionNegocioNegocioCliente);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarNegocioCliente.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioNegocioCliente() throws Exception {

		if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioNegocioCliente();
		this.updateVisibilidadResaltarControlesFormularioNegocioCliente();
		this.updateHabilitarResaltarControlesFormularioNegocioCliente();
		
	}
	
	public void updateBorderResaltarControlesFormularioNegocioCliente() throws Exception {
		if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.negocioclienteConstantesFunciones.resaltaridNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltaridNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarid_empresaNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarid_empresaNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarid_clienteNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarid_clienteNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarnombre_quien_se_facturaNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarnombre_quien_se_facturaNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarfaxNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarfaxNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarrucNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarrucNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltartelefonoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltartelefonoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarnombre_localNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarnombre_localNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltare_mailNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltare_mailNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltardireccionNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltardireccionNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_local_propioNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_local_propioNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarnumero_aniosNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarnumero_aniosNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarnumero_mesesNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarnumero_mesesNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarid_tipo_ubicacion_negocioNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarid_tipo_ubicacion_negocioNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarempleados_fijosNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarempleados_fijosNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarempleado_temporalesNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarempleado_temporalesNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarempleados_totalNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarempleados_totalNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_contadoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_contadoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_creditoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarporcentaje_ventas_creditoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarplazo_diasNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarplazo_diasNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarnumero_clientesNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarnumero_clientesNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarmonto_maximo_ventas_mensualNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarmonto_maximo_ventas_mensualNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltarmonto_minimo_ventas_mensualNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltarmonto_minimo_ventas_mensualNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_enero_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_enero_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_febrero_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_febrero_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_marzo_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_marzo_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_abril_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_abril_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_mayo_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_mayo_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_junio_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_junio_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_julio_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_julio_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_agosto_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_agosto_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_septiembre_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_septiembre_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_octubre_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_octubre_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_noviembre_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_noviembre_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_diciembre_altoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_diciembre_altoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_enero_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_enero_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_febrero_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_febrero_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_marzo_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_marzo_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_abril_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_abril_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_mayo_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_mayo_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_junio_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_junio_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_julio_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_julio_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_agosto_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_agosto_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_septiembre_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_septiembre_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_octubre_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_octubre_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_noviembre_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_noviembre_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltares_diciembre_bajoNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setBorderPainted(true);this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltares_diciembre_bajoNegocioCliente);}
		if(this.negocioclienteConstantesFunciones.resaltardescripcionNegocioCliente!=null && this.jInternalFrameDetalleFormNegocioCliente!=null) {this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.setBorder(this.negocioclienteConstantesFunciones.resaltardescripcionNegocioCliente);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioNegocioCliente() throws Exception {		
		if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
	
		//this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostraridNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelidNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostraridNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarid_empresaNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelid_empresaNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarid_empresaNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarid_clienteNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelid_clienteNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarid_clienteNegocioCliente);
			this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarid_clienteNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnombre_quien_se_facturaNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelnombre_quien_se_facturaNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnombre_quien_se_facturaNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarfaxNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelfaxNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarfaxNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarrucNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelrucNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarrucNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrartelefonoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneltelefonoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrartelefonoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnombre_localNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelnombre_localNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnombre_localNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrare_mailNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanele_mailNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrare_mailNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrardireccionNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneldireccionNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrardireccionNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_local_propioNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_local_propioNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_local_propioNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnumero_aniosNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelnumero_aniosNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnumero_aniosNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnumero_mesesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelnumero_mesesNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnumero_mesesNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarid_tipo_ubicacion_negocioNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelid_tipo_ubicacion_negocioNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarid_tipo_ubicacion_negocioNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarempleados_fijosNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelempleados_fijosNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarempleados_fijosNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarempleado_temporalesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelempleado_temporalesNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarempleado_temporalesNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarempleados_totalNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelempleados_totalNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarempleados_totalNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarporcentaje_ventas_contadoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelporcentaje_ventas_contadoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarporcentaje_ventas_contadoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarporcentaje_ventas_creditoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelporcentaje_ventas_creditoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarporcentaje_ventas_creditoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarplazo_diasNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelplazo_diasNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarplazo_diasNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnumero_clientesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelnumero_clientesNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarnumero_clientesNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarmonto_maximo_ventas_mensualNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelmonto_maximo_ventas_mensualNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarmonto_maximo_ventas_mensualNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarmonto_minimo_ventas_mensualNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPanelmonto_minimo_ventas_mensualNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrarmonto_minimo_ventas_mensualNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_enero_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_enero_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_enero_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_febrero_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_febrero_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_febrero_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_marzo_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_marzo_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_marzo_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_abril_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_abril_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_abril_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_mayo_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_mayo_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_mayo_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_junio_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_junio_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_junio_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_julio_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_julio_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_julio_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_agosto_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_agosto_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_agosto_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_septiembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_septiembre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_septiembre_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_octubre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_octubre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_octubre_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_noviembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_noviembre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_noviembre_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_diciembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_diciembre_altoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_diciembre_altoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_enero_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_enero_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_enero_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_febrero_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_febrero_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_febrero_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_marzo_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_marzo_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_marzo_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_abril_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_abril_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_abril_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_mayo_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_mayo_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_mayo_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_junio_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_junio_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_junio_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_julio_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_julio_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_julio_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_agosto_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_agosto_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_agosto_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_septiembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_septiembre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_septiembre_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_octubre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_octubre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_octubre_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_noviembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_noviembre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_noviembre_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_diciembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneles_diciembre_bajoNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrares_diciembre_bajoNegocioCliente);
		//this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrardescripcionNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jPaneldescripcionNegocioCliente.setVisible(this.negocioclienteConstantesFunciones.mostrardescripcionNegocioCliente);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioNegocioCliente() throws Exception {
		if(this.jInternalFrameDetalleFormNegocioCliente==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormNegocioCliente!=null) {
	
		this.jInternalFrameDetalleFormNegocioCliente.jLabelidNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activaridNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_empresaNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarid_empresaNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_clienteNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarid_clienteNegocioCliente);
			this.jInternalFrameDetalleFormNegocioCliente.jButtonid_clienteNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarid_clienteNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_quien_se_facturaNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarnombre_quien_se_facturaNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldfaxNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarfaxNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldrucNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarrucNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldtelefonoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activartelefonoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreanombre_localNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarnombre_localNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFielde_mailNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activare_mailNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreadireccionNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activardireccionNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_local_propioNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_local_propioNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_aniosNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarnumero_aniosNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_mesesNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarnumero_mesesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jComboBoxid_tipo_ubicacion_negocioNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarid_tipo_ubicacion_negocioNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_fijosNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarempleados_fijosNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleado_temporalesNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarempleado_temporalesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldempleados_totalNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarempleados_totalNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_contadoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarporcentaje_ventas_contadoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldporcentaje_ventas_creditoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarporcentaje_ventas_creditoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldplazo_diasNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarplazo_diasNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldnumero_clientesNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarnumero_clientesNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_maximo_ventas_mensualNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarmonto_maximo_ventas_mensualNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextFieldmonto_minimo_ventas_mensualNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activarmonto_minimo_ventas_mensualNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_enero_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_febrero_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_marzo_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_abril_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_mayo_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_junio_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_julio_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_agosto_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_septiembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_octubre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_noviembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_altoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_diciembre_altoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_enero_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_enero_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_febrero_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_febrero_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_marzo_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_marzo_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_abril_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_abril_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_mayo_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_mayo_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_junio_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_junio_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_julio_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_julio_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_agosto_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_agosto_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_septiembre_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_septiembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_octubre_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_octubre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_noviembre_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_noviembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jCheckBoxes_diciembre_bajoNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activares_diciembre_bajoNegocioCliente);
		this.jInternalFrameDetalleFormNegocioCliente.jTextAreadescripcionNegocioCliente.setEnabled(this.negocioclienteConstantesFunciones.activardescripcionNegocioCliente);
		}
	}
	
		
}