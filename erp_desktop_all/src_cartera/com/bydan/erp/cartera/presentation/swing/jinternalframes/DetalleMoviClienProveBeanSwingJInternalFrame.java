/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.cartera.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.cartera.util.DetalleMoviClienProveConstantesFunciones;
import com.bydan.erp.cartera.util.DetalleMoviClienProveParameterReturnGeneral;
//import com.bydan.erp.cartera.util.DetalleMoviClienProveParameterGeneral;
//import com.bydan.erp.cartera.presentation.report.source.DetalleMoviClienProveBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.cartera.resources.reportes.AuxiliarReportes;


import com.bydan.erp.cartera.util.*;
import com.bydan.erp.cartera.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.cartera.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleMoviClienProveBeanSwingJInternalFrame extends DetalleMoviClienProveJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleMoviClienProveBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleMoviClienProve> detallemoviclienproveValidator = new ClassValidator<DetalleMoviClienProve>(DetalleMoviClienProve.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleMoviClienProve detallemoviclienprove;	
	public DetalleMoviClienProve detallemoviclienproveAux;
	public DetalleMoviClienProve detallemoviclienproveAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleMoviClienProve detallemoviclienproveTotales;
	public Long idDetalleMoviClienProveActual;
	public Long iIdNuevoDetalleMoviClienProve=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboFactura="";

	public List<Factura> facturasForeignKey;

	public List<Factura> getfacturasForeignKey() {
		return facturasForeignKey;
	}

	public void setfacturasForeignKey(List<Factura> facturasForeignKey) {
		this.facturasForeignKey = facturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Factura facturaForeignKey;

	public Factura getfacturaForeignKey() {
		return facturaForeignKey;
	}

	public void setfacturaForeignKey(Factura facturaForeignKey) {
		this.facturaForeignKey = facturaForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboSucursalMovimiento="";

	public List<Sucursal> sucursalmovimientosForeignKey;

	public List<Sucursal> getsucursalmovimientosForeignKey() {
		return sucursalmovimientosForeignKey;
	}

	public void setsucursalmovimientosForeignKey(List<Sucursal> sucursalmovimientosForeignKey) {
		this.sucursalmovimientosForeignKey = sucursalmovimientosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalmovimientoForeignKey;

	public Sucursal getsucursalmovimientoForeignKey() {
		return sucursalmovimientoForeignKey;
	}

	public void setsucursalmovimientoForeignKey(Sucursal sucursalmovimientoForeignKey) {
		this.sucursalmovimientoForeignKey = sucursalmovimientoForeignKey;
	}

	public String sFinalQueryComboTipoTransaccionModulo="";

	public List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey;

	public List<TipoTransaccionModulo> gettipotransaccionmodulosForeignKey() {
		return tipotransaccionmodulosForeignKey;
	}

	public void settipotransaccionmodulosForeignKey(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey) {
		this.tipotransaccionmodulosForeignKey = tipotransaccionmodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTransaccionModulo tipotransaccionmoduloForeignKey;

	public TipoTransaccionModulo gettipotransaccionmoduloForeignKey() {
		return tipotransaccionmoduloForeignKey;
	}

	public void settipotransaccionmoduloForeignKey(TipoTransaccionModulo tipotransaccionmoduloForeignKey) {
		this.tipotransaccionmoduloForeignKey = tipotransaccionmoduloForeignKey;
	}

	public String sFinalQueryComboEstadoDetalleCliente="";

	public List<EstadoDetalleCliente> estadodetalleclientesForeignKey;

	public List<EstadoDetalleCliente> getestadodetalleclientesForeignKey() {
		return estadodetalleclientesForeignKey;
	}

	public void setestadodetalleclientesForeignKey(List<EstadoDetalleCliente> estadodetalleclientesForeignKey) {
		this.estadodetalleclientesForeignKey = estadodetalleclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoDetalleCliente estadodetalleclienteForeignKey;

	public EstadoDetalleCliente getestadodetalleclienteForeignKey() {
		return estadodetalleclienteForeignKey;
	}

	public void setestadodetalleclienteForeignKey(EstadoDetalleCliente estadodetalleclienteForeignKey) {
		this.estadodetalleclienteForeignKey = estadodetalleclienteForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idFacturaActual=0L;

	public Long getidFacturaActual() {
		return idFacturaActual;
	}

	public void setidFacturaActual(Long idFacturaActual) {
		this.idFacturaActual= idFacturaActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleMoviClienProve;
	public Boolean isPermisoNuevoDetalleMoviClienProve;
	public Boolean isPermisoActualizarDetalleMoviClienProve;
	public Boolean isPermisoActualizarOriginalDetalleMoviClienProve;
	public Boolean isPermisoEliminarDetalleMoviClienProve;
	public Boolean isPermisoGuardarCambiosDetalleMoviClienProve;
	public Boolean isPermisoConsultaDetalleMoviClienProve;
	public Boolean isPermisoBusquedaDetalleMoviClienProve;
	public Boolean isPermisoReporteDetalleMoviClienProve;
	public Boolean isPermisoPaginacionMedioDetalleMoviClienProve;
	public Boolean isPermisoPaginacionAltoDetalleMoviClienProve;
	public Boolean isPermisoPaginacionTodoDetalleMoviClienProve;
	public Boolean isPermisoCopiarDetalleMoviClienProve;
	public Boolean isPermisoVerFormDetalleMoviClienProve;
	public Boolean isPermisoDuplicarDetalleMoviClienProve;
	public Boolean isPermisoOrdenDetalleMoviClienProve;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleMoviClienProveParameterReturnGeneral detallemoviclienproveReturnGeneral;
	public DetalleMoviClienProveParameterReturnGeneral detallemoviclienproveParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleMoviClienProve=false;
	public Boolean esParaAccionDesdeFormularioDetalleMoviClienProve=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleMoviClienProveSessionBeanAdditional detallemoviclienproveSessionBeanAdditional=null;
	
	public DetalleMoviClienProveSessionBeanAdditional getDetalleMoviClienProveSessionBeanAdditional() {
		return this.detallemoviclienproveSessionBeanAdditional;
	}
	
	public void setDetalleMoviClienProveSessionBeanAdditional(DetalleMoviClienProveSessionBeanAdditional detallemoviclienproveSessionBeanAdditional) {
		try {
			this.detallemoviclienproveSessionBeanAdditional=detallemoviclienproveSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleMoviClienProveBeanSwingJInternalFrameAdditional detallemoviclienproveBeanSwingJInternalFrameAdditional=null;
	//public class DetalleMoviClienProveBeanSwingJInternalFrame
	
	public DetalleMoviClienProveBeanSwingJInternalFrameAdditional getDetalleMoviClienProveBeanSwingJInternalFrameAdditional() {
		return this.detallemoviclienproveBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleMoviClienProveBeanSwingJInternalFrameAdditional(DetalleMoviClienProveBeanSwingJInternalFrameAdditional detallemoviclienproveBeanSwingJInternalFrameAdditional) {
		try {
			this.detallemoviclienproveBeanSwingJInternalFrameAdditional=detallemoviclienproveBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleMoviClienProveLogic detallemoviclienproveLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleMoviClienProve detallemoviclienproveBean;
	public DetalleMoviClienProveConstantesFunciones detallemoviclienproveConstantesFunciones;
	//public DetalleMoviClienProveParameterReturnGeneral detallemoviclienproveReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public ModuloLogic moduloLogic;
	public AsientoContableLogic asientocontableLogic;
	public ClienteLogic clienteLogic;
	public FacturaLogic facturaLogic;
	public TransaccionLogic transaccionLogic;
	public MonedaLogic monedaLogic;
	public SucursalLogic sucursalmovimientoLogic;
	public TipoTransaccionModuloLogic tipotransaccionmoduloLogic;
	public EstadoDetalleClienteLogic estadodetalleclienteLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleMoviClienProve> detallemoviclienproves;	
	//public List<DetalleMoviClienProve> detallemoviclienprovesEliminados;
	//public List<DetalleMoviClienProve> detallemoviclienprovesAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleMoviClienProve=true;
	public Boolean isVisibilidadCeldaCopiarDetalleMoviClienProve=true;
	public Boolean isVisibilidadCeldaVerFormDetalleMoviClienProve=true;
	public Boolean isVisibilidadCeldaOrdenDetalleMoviClienProve=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
	public Boolean isVisibilidadCeldaModificarDetalleMoviClienProve=false;
	public Boolean isVisibilidadCeldaActualizarDetalleMoviClienProve=false;
	public Boolean isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
	public Boolean isVisibilidadCeldaCancelarDetalleMoviClienProve=false;
	public Boolean isVisibilidadCeldaGuardarDetalleMoviClienProve=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdDetalleMoviClienProve=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoDetalleCliente=false;
	public Boolean isVisibilidadFK_IdFactura=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoTransaccionModulo=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	
	public Long getiIdNuevoDetalleMoviClienProve() {
		return this.iIdNuevoDetalleMoviClienProve;
	}

	public void setiIdNuevoDetalleMoviClienProve(Long iIdNuevoDetalleMoviClienProve) {
		this.iIdNuevoDetalleMoviClienProve = iIdNuevoDetalleMoviClienProve;
	}
	
	public Long getidDetalleMoviClienProveActual() {
		return this.idDetalleMoviClienProveActual;
	}

	public void setidDetalleMoviClienProveActual(Long idDetalleMoviClienProveActual) {
		this.idDetalleMoviClienProveActual = idDetalleMoviClienProveActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleMoviClienProve getdetallemoviclienprove() {
		return this.detallemoviclienprove;
	}

	public void setdetallemoviclienprove(DetalleMoviClienProve detallemoviclienprove) {
		this.detallemoviclienprove = detallemoviclienprove;
	}
	
	public DetalleMoviClienProve getdetallemoviclienproveAux() {
		return this.detallemoviclienproveAux;
	}

	public void setdetallemoviclienproveAux(DetalleMoviClienProve detallemoviclienproveAux) {
		this.detallemoviclienproveAux = detallemoviclienproveAux;
	}				
	
	public DetalleMoviClienProve getdetallemoviclienproveAnterior() {
		return this.detallemoviclienproveAnterior;
	}

	public void setdetallemoviclienproveAnterior(DetalleMoviClienProve detallemoviclienproveAnterior) {
		this.detallemoviclienproveAnterior = detallemoviclienproveAnterior;
	}	
	
	public DetalleMoviClienProve getdetallemoviclienproveTotales() {
		return this.detallemoviclienproveTotales;
	}

	public void setdetallemoviclienproveTotales(DetalleMoviClienProve detallemoviclienproveTotales) {
		this.detallemoviclienproveTotales = detallemoviclienproveTotales;
	}	
	
	public DetalleMoviClienProve getdetallemoviclienproveBean() {
		return this.detallemoviclienproveBean;
	}

	public void setdetallemoviclienproveBean(DetalleMoviClienProve detallemoviclienproveBean) {
		this.detallemoviclienproveBean = detallemoviclienproveBean;
	}	
	
	public DetalleMoviClienProveParameterReturnGeneral getdetallemoviclienproveReturnGeneral() {
		return this.detallemoviclienproveReturnGeneral;
	}

	public void setdetallemoviclienproveReturnGeneral(DetalleMoviClienProveParameterReturnGeneral detallemoviclienproveReturnGeneral) {
		this.detallemoviclienproveReturnGeneral = detallemoviclienproveReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_asiento_contableFK_IdAsientoContable=-1L;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_sucursal_movimientoFK_IdDetalleMoviClienProve=-1L;

	public Long getid_sucursal_movimientoFK_IdDetalleMoviClienProve() {
		return this.id_sucursal_movimientoFK_IdDetalleMoviClienProve;
	}

	public void setid_sucursal_movimientoFK_IdDetalleMoviClienProve(Long id_sucursal_movimientoFK_IdDetalleMoviClienProve) {
		this.id_sucursal_movimientoFK_IdDetalleMoviClienProve = id_sucursal_movimientoFK_IdDetalleMoviClienProve;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_detalle_clienteFK_IdEstadoDetalleCliente=-1L;

	public Long getid_estado_detalle_clienteFK_IdEstadoDetalleCliente() {
		return this.id_estado_detalle_clienteFK_IdEstadoDetalleCliente;
	}

	public void setid_estado_detalle_clienteFK_IdEstadoDetalleCliente(Long id_estado_detalle_clienteFK_IdEstadoDetalleCliente) {
		this.id_estado_detalle_clienteFK_IdEstadoDetalleCliente = id_estado_detalle_clienteFK_IdEstadoDetalleCliente;
	}

	public Long id_facturaFK_IdFactura=null;

	public Long getid_facturaFK_IdFactura() {
		return this.id_facturaFK_IdFactura;
	}

	public void setid_facturaFK_IdFactura(Long id_facturaFK_IdFactura) {
		this.id_facturaFK_IdFactura = id_facturaFK_IdFactura;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=null;

	public Long getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo() {
		return this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public void setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo) {
		this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo = id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleMoviClienProveLogic getDetalleMoviClienProveLogic()	{		
		return detallemoviclienproveLogic;
	}

	public void setDetalleMoviClienProveLogic(DetalleMoviClienProveLogic detallemoviclienproveLogic) {
		this.detallemoviclienproveLogic = detallemoviclienproveLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleMoviClienProve() {
		return isEsNuevoDetalleMoviClienProve;
	}

	public void setIsEsNuevoDetalleMoviClienProve(Boolean isEsNuevoDetalleMoviClienProve) {
		this.isEsNuevoDetalleMoviClienProve = isEsNuevoDetalleMoviClienProve;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleMoviClienProve() {
		return esParaAccionDesdeFormularioDetalleMoviClienProve;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleMoviClienProve(Boolean esParaAccionDesdeFormularioDetalleMoviClienProve) {
		this.esParaAccionDesdeFormularioDetalleMoviClienProve = esParaAccionDesdeFormularioDetalleMoviClienProve;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.facturasForeignKey=new ArrayList<Factura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Factura facturaNulo = new Factura();

			FacturaLogic facturaLogic=new FacturaLogic();

			//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//facturaLogic.getFacturaDataAccess().setIsForForeingKeyData(true);

					facturaLogic.getTodosFacturasWithConnection(sFinalQuery,new Pagination());

					this.facturasForeignKey=facturaLogic.getFacturas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.facturasForeignKey.add(0, facturaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidFacturaActual());
					this.facturasForeignKey.add(facturaLogic.getFactura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalMovimientosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalmovimientosForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionSucursalMovimiento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalmovimientoLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalmovimientosForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursalMovimiento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidSucursalMovimientoActual());
					this.sucursalmovimientosForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTransaccionModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTransaccionModuloLogic tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();

			//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

					tipotransaccionmoduloLogic.getTodosTipoTransaccionModulosWithConnection(sFinalQuery,new Pagination());

					this.tipotransaccionmodulosForeignKey=tipotransaccionmoduloLogic.getTipoTransaccionModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTransaccionModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotransaccionmoduloLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidTipoTransaccionModuloActual());
					this.tipotransaccionmodulosForeignKey.add(tipotransaccionmoduloLogic.getTipoTransaccionModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoDetalleClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadodetalleclientesForeignKey=new ArrayList<EstadoDetalleCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoDetalleClienteLogic estadodetalleclienteLogic=new EstadoDetalleClienteLogic();

			//estadodetalleclienteLogic.getEstadoDetalleClienteDataAccess().setIsForForeingKeyData(true);

			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetalleCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadodetalleclienteLogic.getEstadoDetalleClienteDataAccess().setIsForForeingKeyData(true);

					estadodetalleclienteLogic.getTodosEstadoDetalleClientesWithConnection(sFinalQuery,new Pagination());

					this.estadodetalleclientesForeignKey=estadodetalleclienteLogic.getEstadoDetalleClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoDetalleCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadodetalleclienteLogic.getEntityWithConnection(detallemoviclienproveSessionBean.getlidEstadoDetalleClienteActual());
					this.estadodetalleclientesForeignKey.add(estadodetalleclienteLogic.getEstadoDetalleCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleMoviClienProve.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleMoviClienProveGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleMoviClienProveGenerico!=null && jComboBoxid_empresaDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleMoviClienProve.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleMoviClienProveGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleMoviClienProveGenerico!=null && jComboBoxid_sucursalDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetalleMoviClienProve.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetalleMoviClienProveGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetalleMoviClienProveGenerico!=null && jComboBoxid_ejercicioDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetalleMoviClienProve.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetalleMoviClienProveGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetalleMoviClienProveGenerico!=null && jComboBoxid_periodoDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetalleMoviClienProve.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetalleMoviClienProveGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetalleMoviClienProveGenerico!=null && jComboBoxid_anioDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_anioDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetalleMoviClienProve.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetalleMoviClienProveGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetalleMoviClienProveGenerico!=null && jComboBoxid_mesDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_mesDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloDetalleMoviClienProve.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloDetalleMoviClienProveGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloDetalleMoviClienProveGenerico!=null && jComboBoxid_moduloDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_moduloDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableDetalleMoviClienProve.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableDetalleMoviClienProveGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableDetalleMoviClienProveGenerico!=null && jComboBoxid_asiento_contableDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteDetalleMoviClienProve.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve!=null) {
						jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve!=null) {
							//jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteDetalleMoviClienProveGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteDetalleMoviClienProveGenerico!=null && jComboBoxid_clienteDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_clienteDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFacturaForeignKey(Long idFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(facturaTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setFactura(facturaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setSelectedItem(facturaTemp);
					}
				} else {
					//jComboBoxid_facturaDetalleMoviClienProve.setSelectedItem(facturaTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(facturaTemp!=null && jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve!=null) {
						jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.setSelectedItem(facturaTemp);
					} else {
						if(jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve!=null) {
							//jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.setSelectedItem(facturaTemp);
							if(jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.getItemCount()>0) {
								jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFacturaForeignKeyDescripcion(Long idFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}


			sDescripcion=FacturaConstantesFunciones.getFacturaDescripcion(facturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFacturaForeignKeyGenerico(Long idFacturaSeleccionado,JComboBox jComboBoxid_facturaDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Factura  facturaTemp=null;

			for(Factura facturaAux:facturasForeignKey) {
				if(facturaAux.getId()!=null && facturaAux.getId().equals(idFacturaSeleccionado)) {
					facturaTemp=facturaAux;
					break;
				}
			}

			if(facturaTemp!=null) {
				jComboBoxid_facturaDetalleMoviClienProveGenerico.setSelectedItem(facturaTemp);
			} else {
				if(jComboBoxid_facturaDetalleMoviClienProveGenerico!=null && jComboBoxid_facturaDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_facturaDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionDetalleMoviClienProve.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve!=null) {
						jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionDetalleMoviClienProveGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionDetalleMoviClienProveGenerico!=null && jComboBoxid_transaccionDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_transaccionDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaDetalleMoviClienProve.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaDetalleMoviClienProveGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaDetalleMoviClienProveGenerico!=null && jComboBoxid_monedaDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_monedaDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalMovimientoForeignKey(Long idSucursalMovimientoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalmovimientoTemp=null;

			for(Sucursal sucursalmovimientoAux:sucursalmovimientosForeignKey) {
				if(sucursalmovimientoAux.getId()!=null && sucursalmovimientoAux.getId().equals(idSucursalMovimientoSeleccionado)) {
					sucursalmovimientoTemp=sucursalmovimientoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalmovimientoTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setSucursalMovimiento(sucursalmovimientoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setSelectedItem(sucursalmovimientoTemp);
					}
				} else {
					//jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setSelectedItem(sucursalmovimientoTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdDetalleMoviClienProve") || sFormularioTipoBusqueda.equals("Todos")){
					if(sucursalmovimientoTemp!=null && jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve!=null) {
						jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.setSelectedItem(sucursalmovimientoTemp);
					} else {
						if(jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve!=null) {
							//jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.setSelectedItem(sucursalmovimientoTemp);
							if(jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.getItemCount()>0) {
								jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalMovimientoForeignKeyDescripcion(Long idSucursalMovimientoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalmovimientoTemp=null;

			for(Sucursal sucursalmovimientoAux:sucursalmovimientosForeignKey) {
				if(sucursalmovimientoAux.getId()!=null && sucursalmovimientoAux.getId().equals(idSucursalMovimientoSeleccionado)) {
					sucursalmovimientoTemp=sucursalmovimientoAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalmovimientoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalMovimientoForeignKeyGenerico(Long idSucursalMovimientoSeleccionado,JComboBox jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalmovimientoTemp=null;

			for(Sucursal sucursalmovimientoAux:sucursalmovimientosForeignKey) {
				if(sucursalmovimientoAux.getId()!=null && sucursalmovimientoAux.getId().equals(idSucursalMovimientoSeleccionado)) {
					sucursalmovimientoTemp=sucursalmovimientoAux;
					break;
				}
			}

			if(sucursalmovimientoTemp!=null) {
				jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico.setSelectedItem(sucursalmovimientoTemp);
			} else {
				if(jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico!=null && jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTransaccionModuloForeignKey(Long idTipoTransaccionModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotransaccionmoduloTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setTipoTransaccionModulo(tipotransaccionmoduloTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setSelectedItem(tipotransaccionmoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setSelectedItem(tipotransaccionmoduloTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotransaccionmoduloTemp!=null && jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve!=null) {
						jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.setSelectedItem(tipotransaccionmoduloTemp);
					} else {
						if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve!=null) {
							//jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.setSelectedItem(tipotransaccionmoduloTemp);
							if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.getItemCount()>0) {
								jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTransaccionModuloForeignKeyDescripcion(Long idTipoTransaccionModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}


			sDescripcion=TipoTransaccionModuloConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTransaccionModuloForeignKeyGenerico(Long idTipoTransaccionModuloSeleccionado,JComboBox jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(tipotransaccionmoduloTemp!=null) {
				jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico.setSelectedItem(tipotransaccionmoduloTemp);
			} else {
				if(jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico!=null && jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoDetalleClienteForeignKey(Long idEstadoDetalleClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoDetalleCliente  estadodetalleclienteTemp=null;

			for(EstadoDetalleCliente estadodetalleclienteAux:estadodetalleclientesForeignKey) {
				if(estadodetalleclienteAux.getId()!=null && estadodetalleclienteAux.getId().equals(idEstadoDetalleClienteSeleccionado)) {
					estadodetalleclienteTemp=estadodetalleclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadodetalleclienteTemp!=null) {

					if(this.detallemoviclienprove!=null) {
						this.detallemoviclienprove.setEstadoDetalleCliente(estadodetalleclienteTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setSelectedItem(estadodetalleclienteTemp);
					}
				} else {
					//jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setSelectedItem(estadodetalleclienteTemp);
					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoDetalleCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadodetalleclienteTemp!=null && jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve!=null) {
						jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.setSelectedItem(estadodetalleclienteTemp);
					} else {
						if(jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve!=null) {
							//jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.setSelectedItem(estadodetalleclienteTemp);
							if(jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.getItemCount()>0) {
								jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoDetalleClienteForeignKeyDescripcion(Long idEstadoDetalleClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoDetalleCliente  estadodetalleclienteTemp=null;

			for(EstadoDetalleCliente estadodetalleclienteAux:estadodetalleclientesForeignKey) {
				if(estadodetalleclienteAux.getId()!=null && estadodetalleclienteAux.getId().equals(idEstadoDetalleClienteSeleccionado)) {
					estadodetalleclienteTemp=estadodetalleclienteAux;
					break;
				}
			}


			sDescripcion=EstadoDetalleClienteConstantesFunciones.getEstadoDetalleClienteDescripcion(estadodetalleclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoDetalleClienteForeignKeyGenerico(Long idEstadoDetalleClienteSeleccionado,JComboBox jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			EstadoDetalleCliente  estadodetalleclienteTemp=null;

			for(EstadoDetalleCliente estadodetalleclienteAux:estadodetalleclientesForeignKey) {
				if(estadodetalleclienteAux.getId()!=null && estadodetalleclienteAux.getId().equals(idEstadoDetalleClienteSeleccionado)) {
					estadodetalleclienteTemp=estadodetalleclienteAux;
					break;
				}
			}

			if(estadodetalleclienteTemp!=null) {
				jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico.setSelectedItem(estadodetalleclienteTemp);
			} else {
				if(jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico!=null && jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico.getItemCount()>0) {
					jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_empresaDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleMoviClienProveGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detallemoviclienprove.setid_empresa(empresaAux.getId());
				detallemoviclienprove.setempresa_descripcion(DetalleMoviClienProveConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detallemoviclienprove.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_sucursalDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleMoviClienProveGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detallemoviclienprove.setid_sucursal(sucursalAux.getId());
				detallemoviclienprove.setsucursal_descripcion(DetalleMoviClienProveConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detallemoviclienprove.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_ejercicioDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetalleMoviClienProveGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detallemoviclienprove.setid_ejercicio(ejercicioAux.getId());
				detallemoviclienprove.setejercicio_descripcion(DetalleMoviClienProveConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detallemoviclienprove.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_periodoDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetalleMoviClienProveGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detallemoviclienprove.setid_periodo(periodoAux.getId());
				detallemoviclienprove.setperiodo_descripcion(DetalleMoviClienProveConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detallemoviclienprove.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_anioDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetalleMoviClienProveGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detallemoviclienprove.setid_anio(anioAux.getId());
				detallemoviclienprove.setanio_descripcion(DetalleMoviClienProveConstantesFunciones.getAnioDescripcion(anioAux));
				detallemoviclienprove.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_mesDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetalleMoviClienProveGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detallemoviclienprove.setid_mes(mesAux.getId());
				detallemoviclienprove.setmes_descripcion(DetalleMoviClienProveConstantesFunciones.getMesDescripcion(mesAux));
				detallemoviclienprove.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_moduloDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloDetalleMoviClienProveGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				detallemoviclienprove.setid_modulo(moduloAux.getId());
				detallemoviclienprove.setmodulo_descripcion(DetalleMoviClienProveConstantesFunciones.getModuloDescripcion(moduloAux));
				detallemoviclienprove.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_asiento_contableDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableDetalleMoviClienProveGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null && asientocontableAux.getId()!=null) {
				detallemoviclienprove.setid_asiento_contable(asientocontableAux.getId());
				detallemoviclienprove.setasientocontable_descripcion(DetalleMoviClienProveConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				detallemoviclienprove.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_clienteDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteDetalleMoviClienProveGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				detallemoviclienprove.setid_cliente(clienteAux.getId());
				detallemoviclienprove.setcliente_descripcion(DetalleMoviClienProveConstantesFunciones.getClienteDescripcion(clienteAux));
				detallemoviclienprove.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFacturaForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_facturaDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Factura  facturaAux=new Factura();

			if(jComboBoxid_facturaDetalleMoviClienProveGenerico==null) {
				facturaAux=(Factura)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.getSelectedItem();
			} else {
				facturaAux=(Factura)jComboBoxid_facturaDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(facturaAux!=null) {
				detallemoviclienprove.setid_factura(facturaAux.getId());
				detallemoviclienprove.setfactura_descripcion(DetalleMoviClienProveConstantesFunciones.getFacturaDescripcion(facturaAux));
				detallemoviclienprove.setFactura(facturaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_transaccionDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionDetalleMoviClienProveGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				detallemoviclienprove.setid_transaccion(transaccionAux.getId());
				detallemoviclienprove.settransaccion_descripcion(DetalleMoviClienProveConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				detallemoviclienprove.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_monedaDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaDetalleMoviClienProveGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				detallemoviclienprove.setid_moneda(monedaAux.getId());
				detallemoviclienprove.setmoneda_descripcion(DetalleMoviClienProveConstantesFunciones.getMonedaDescripcion(monedaAux));
				detallemoviclienprove.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalMovimientoForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursal_movimientoDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detallemoviclienprove.setid_sucursal_movimiento(sucursalAux.getId());
				detallemoviclienprove.setsucursalmovimiento_descripcion(DetalleMoviClienProveConstantesFunciones.getSucursalMovimientoDescripcion(sucursalAux));
				detallemoviclienprove.setSucursalMovimiento(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTransaccionModuloForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloAux=new TipoTransaccionModulo();

			if(jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico==null) {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.getSelectedItem();
			} else {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(tipotransaccionmoduloAux!=null) {
				detallemoviclienprove.setid_tipo_transaccion_modulo(tipotransaccionmoduloAux.getId());
				detallemoviclienprove.settipotransaccionmodulo_descripcion(DetalleMoviClienProveConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloAux));
				detallemoviclienprove.setTipoTransaccionModulo(tipotransaccionmoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoDetalleClienteForeignKey(DetalleMoviClienProve detallemoviclienprove,JComboBox jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico)throws Exception
	{
		try
		{
			EstadoDetalleCliente  estadodetalleclienteAux=new EstadoDetalleCliente();

			if(jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico==null) {
				estadodetalleclienteAux=(EstadoDetalleCliente)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.getSelectedItem();
			} else {
				estadodetalleclienteAux=(EstadoDetalleCliente)jComboBoxid_estado_detalle_clienteDetalleMoviClienProveGenerico.getSelectedItem();
			}

			if(estadodetalleclienteAux!=null && estadodetalleclienteAux.getId()!=null) {
				detallemoviclienprove.setid_estado_detalle_cliente(estadodetalleclienteAux.getId());
				detallemoviclienprove.setestadodetallecliente_descripcion(DetalleMoviClienProveConstantesFunciones.getEstadoDetalleClienteDescripcion(estadodetalleclienteAux));
				detallemoviclienprove.setEstadoDetalleCliente(estadodetalleclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.addItem(asientocontable);
							}
						}

						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.addItem(cliente);
							}
						}

						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFactura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.addItem(factura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.removeAllItems();

							for(Factura factura:this.facturasForeignKey) {
								this.jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.addItem(factura);
							}
						}

						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.addItem(transaccion);
							}
						}

						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalMovimientosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.removeAllItems();

							for(Sucursal sucursalmovimiento:this.sucursalmovimientosForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.addItem(sucursalmovimiento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdDetalleMoviClienProve") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.removeAllItems();

							for(Sucursal sucursalmovimiento:this.sucursalmovimientosForeignKey) {
								this.jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.addItem(sucursalmovimiento);
							}
						}

						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTransaccionModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTransaccionModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.addItem(tipotransaccionmodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.addItem(tipotransaccionmodulo);
							}
						}

						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoDetalleClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoDetalleCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.removeAllItems();

							for(EstadoDetalleCliente estadodetallecliente:this.estadodetalleclientesForeignKey) {
								this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.addItem(estadodetallecliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { 
					}

					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoDetalleCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.removeAllItems();

							for(EstadoDetalleCliente estadodetallecliente:this.estadodetalleclientesForeignKey) {
								this.jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.addItem(estadodetallecliente);
							}
						}

						if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFacturaForeignKey(Factura factura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setSelectedItem(factura);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.setSelectedItem(factura);
						} else {
							this.jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalMovimientoForeignKey(Sucursal sucursalmovimiento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setSelectedItem(sucursalmovimiento);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.setSelectedItem(sucursalmovimiento);
						} else {
							this.jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTransaccionModuloForeignKey(TipoTransaccionModulo tipotransaccionmodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setSelectedItem(tipotransaccionmodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.setSelectedItem(tipotransaccionmodulo);
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoDetalleClienteForeignKey(EstadoDetalleCliente estadodetallecliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setSelectedItem(estadodetallecliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.setSelectedItem(estadodetallecliente);
						} else {
							this.jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleMoviClienProve() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleMoviClienProveConstantesFunciones.refrescarForeignKeysDescripcionesDetalleMoviClienProve(this.detallemoviclienproveLogic.getDetalleMoviClienProves());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleMoviClienProveConstantesFunciones.refrescarForeignKeysDescripcionesDetalleMoviClienProve(this.detallemoviclienproves);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(AsientoContable.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Factura.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(TipoTransaccionModulo.class));
		classes.add(new Classe(EstadoDetalleCliente.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detallemoviclienproveLogic.setDetalleMoviClienProves(this.detallemoviclienproves);
			detallemoviclienproveLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleMoviClienProveParameterReturnGeneral getDetalleMoviClienProveParameterGeneral() {
		return this.detallemoviclienproveParameterGeneral;
	}
	
	public void setDetalleMoviClienProveParameterGeneral(DetalleMoviClienProveParameterReturnGeneral detallemoviclienproveParameterGeneral) {
		this.detallemoviclienproveParameterGeneral = detallemoviclienproveParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleMoviClienProve() {
		return isPermisoTodoDetalleMoviClienProve;
	}

	public void setIsPermisoTodoDetalleMoviClienProve(Boolean isPermisoTodoDetalleMoviClienProve) {
		this.isPermisoTodoDetalleMoviClienProve = isPermisoTodoDetalleMoviClienProve;
	}

	public Boolean getIsPermisoNuevoDetalleMoviClienProve() {
		return isPermisoNuevoDetalleMoviClienProve;
	}

	public void setIsPermisoNuevoDetalleMoviClienProve(Boolean isPermisoNuevoDetalleMoviClienProve) {
		this.isPermisoNuevoDetalleMoviClienProve = isPermisoNuevoDetalleMoviClienProve;
	}

	public Boolean getIsPermisoActualizarDetalleMoviClienProve() {
		return isPermisoActualizarDetalleMoviClienProve;
	}

	public void setIsPermisoActualizarDetalleMoviClienProve(Boolean isPermisoActualizarDetalleMoviClienProve) {
		this.isPermisoActualizarDetalleMoviClienProve = isPermisoActualizarDetalleMoviClienProve;
	}

	public Boolean getIsPermisoEliminarDetalleMoviClienProve() {
		return isPermisoEliminarDetalleMoviClienProve;
	}

	public void setIsPermisoEliminarDetalleMoviClienProve(Boolean isPermisoEliminarDetalleMoviClienProve) {
		this.isPermisoEliminarDetalleMoviClienProve = isPermisoEliminarDetalleMoviClienProve;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleMoviClienProve() {
		return isPermisoGuardarCambiosDetalleMoviClienProve;
	}

	public void setIsPermisoGuardarCambiosDetalleMoviClienProve(Boolean isPermisoGuardarCambiosDetalleMoviClienProve) {
		this.isPermisoGuardarCambiosDetalleMoviClienProve = isPermisoGuardarCambiosDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoConsultaDetalleMoviClienProve() {
		return isPermisoConsultaDetalleMoviClienProve;
	}

	public void setIsPermisoConsultaDetalleMoviClienProve(Boolean isPermisoConsultaDetalleMoviClienProve) {
		this.isPermisoConsultaDetalleMoviClienProve = isPermisoConsultaDetalleMoviClienProve;
	}

	public Boolean getIsPermisoBusquedaDetalleMoviClienProve() {
		return isPermisoBusquedaDetalleMoviClienProve;
	}

	public void setIsPermisoBusquedaDetalleMoviClienProve(Boolean isPermisoBusquedaDetalleMoviClienProve) {
		this.isPermisoBusquedaDetalleMoviClienProve = isPermisoBusquedaDetalleMoviClienProve;
	}

	public Boolean getIsPermisoReporteDetalleMoviClienProve() {
		return isPermisoReporteDetalleMoviClienProve;
	}

	public void setIsPermisoReporteDetalleMoviClienProve(Boolean isPermisoReporteDetalleMoviClienProve) {
		this.isPermisoReporteDetalleMoviClienProve = isPermisoReporteDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleMoviClienProve() {
		return isPermisoPaginacionMedioDetalleMoviClienProve;
	}

	public void setIsPermisoPaginacionMedioDetalleMoviClienProve(Boolean isPermisoPaginacionMedioDetalleMoviClienProve) {
		this.isPermisoPaginacionMedioDetalleMoviClienProve = isPermisoPaginacionMedioDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleMoviClienProve() {
		return isPermisoPaginacionTodoDetalleMoviClienProve;
	}

	public void setIsPermisoPaginacionTodoDetalleMoviClienProve(Boolean isPermisoPaginacionTodoDetalleMoviClienProve) {
		this.isPermisoPaginacionTodoDetalleMoviClienProve = isPermisoPaginacionTodoDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleMoviClienProve() {
		return isPermisoPaginacionAltoDetalleMoviClienProve;
	}

	public void setIsPermisoPaginacionAltoDetalleMoviClienProve(Boolean isPermisoPaginacionAltoDetalleMoviClienProve) {
		this.isPermisoPaginacionAltoDetalleMoviClienProve = isPermisoPaginacionAltoDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoCopiarDetalleMoviClienProve() {
		return isPermisoCopiarDetalleMoviClienProve;
	}

	public void setIsPermisoCopiarDetalleMoviClienProve(Boolean isPermisoCopiarDetalleMoviClienProve) {
		this.isPermisoCopiarDetalleMoviClienProve = isPermisoCopiarDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoVerFormDetalleMoviClienProve() {
		return isPermisoVerFormDetalleMoviClienProve;
	}

	public void setIsPermisoVerFormDetalleMoviClienProve(Boolean isPermisoVerFormDetalleMoviClienProve) {
		this.isPermisoVerFormDetalleMoviClienProve = isPermisoVerFormDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoDuplicarDetalleMoviClienProve() {
		return isPermisoDuplicarDetalleMoviClienProve;
	}

	public void setIsPermisoDuplicarDetalleMoviClienProve(Boolean isPermisoDuplicarDetalleMoviClienProve) {
		this.isPermisoDuplicarDetalleMoviClienProve = isPermisoDuplicarDetalleMoviClienProve;
	}
	
	public Boolean getIsPermisoOrdenDetalleMoviClienProve() {
		return isPermisoOrdenDetalleMoviClienProve;
	}

	public void setIsPermisoOrdenDetalleMoviClienProve(Boolean isPermisoOrdenDetalleMoviClienProve) {
		this.isPermisoOrdenDetalleMoviClienProve = isPermisoOrdenDetalleMoviClienProve;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleMoviClienProve() {
		return isVisibilidadCeldaNuevoDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaNuevoDetalleMoviClienProve(Boolean isVisibilidadCeldaNuevoDetalleMoviClienProve) {
		this.isVisibilidadCeldaNuevoDetalleMoviClienProve = isVisibilidadCeldaNuevoDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleMoviClienProve() {
		return isVisibilidadCeldaDuplicarDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleMoviClienProve(Boolean isVisibilidadCeldaDuplicarDetalleMoviClienProve) {
		this.isVisibilidadCeldaDuplicarDetalleMoviClienProve = isVisibilidadCeldaDuplicarDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleMoviClienProve() {
		return isVisibilidadCeldaCopiarDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaCopiarDetalleMoviClienProve(Boolean isVisibilidadCeldaCopiarDetalleMoviClienProve) {
		this.isVisibilidadCeldaCopiarDetalleMoviClienProve = isVisibilidadCeldaCopiarDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleMoviClienProve() {
		return isVisibilidadCeldaVerFormDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaVerFormDetalleMoviClienProve(Boolean isVisibilidadCeldaVerFormDetalleMoviClienProve) {
		this.isVisibilidadCeldaVerFormDetalleMoviClienProve = isVisibilidadCeldaVerFormDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleMoviClienProve() {
		return isVisibilidadCeldaOrdenDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaOrdenDetalleMoviClienProve(Boolean isVisibilidadCeldaOrdenDetalleMoviClienProve) {
		this.isVisibilidadCeldaOrdenDetalleMoviClienProve = isVisibilidadCeldaOrdenDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve() {
		return isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve(Boolean isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve = isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleMoviClienProve() {
		return isVisibilidadCeldaModificarDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaModificarDetalleMoviClienProve(Boolean isVisibilidadCeldaModificarDetalleMoviClienProve) {
		this.isVisibilidadCeldaModificarDetalleMoviClienProve = isVisibilidadCeldaModificarDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleMoviClienProve() {
		return isVisibilidadCeldaActualizarDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaActualizarDetalleMoviClienProve(Boolean isVisibilidadCeldaActualizarDetalleMoviClienProve) {
		this.isVisibilidadCeldaActualizarDetalleMoviClienProve = isVisibilidadCeldaActualizarDetalleMoviClienProve;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleMoviClienProve() {
		return isVisibilidadCeldaEliminarDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaEliminarDetalleMoviClienProve(Boolean isVisibilidadCeldaEliminarDetalleMoviClienProve) {
		this.isVisibilidadCeldaEliminarDetalleMoviClienProve = isVisibilidadCeldaEliminarDetalleMoviClienProve;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleMoviClienProve() {
		return isVisibilidadCeldaCancelarDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaCancelarDetalleMoviClienProve(Boolean isVisibilidadCeldaCancelarDetalleMoviClienProve) {
		this.isVisibilidadCeldaCancelarDetalleMoviClienProve = isVisibilidadCeldaCancelarDetalleMoviClienProve;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleMoviClienProve() {
		return isVisibilidadCeldaGuardarDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaGuardarDetalleMoviClienProve(Boolean isVisibilidadCeldaGuardarDetalleMoviClienProve) {
		this.isVisibilidadCeldaGuardarDetalleMoviClienProve = isVisibilidadCeldaGuardarDetalleMoviClienProve;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleMoviClienProve() {
		return isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleMoviClienProve(Boolean isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve) {
		this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve = isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve;
	}
		
	public DetalleMoviClienProveSessionBean getdetallemoviclienproveSessionBean() {
		return this.detallemoviclienproveSessionBean;
	}
	
	public void setdetallemoviclienproveSessionBean(DetalleMoviClienProveSessionBean detallemoviclienproveSessionBean) {
		this.detallemoviclienproveSessionBean=detallemoviclienproveSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdDetalleMoviClienProve() {
		return this.isVisibilidadFK_IdDetalleMoviClienProve;
	}

	public void setisVisibilidadFK_IdDetalleMoviClienProve(Boolean isVisibilidadFK_IdDetalleMoviClienProve) {
		this.isVisibilidadFK_IdDetalleMoviClienProve=isVisibilidadFK_IdDetalleMoviClienProve;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoDetalleCliente() {
		return this.isVisibilidadFK_IdEstadoDetalleCliente;
	}

	public void setisVisibilidadFK_IdEstadoDetalleCliente(Boolean isVisibilidadFK_IdEstadoDetalleCliente) {
		this.isVisibilidadFK_IdEstadoDetalleCliente=isVisibilidadFK_IdEstadoDetalleCliente;
	}

	public Boolean getisVisibilidadFK_IdFactura() {
		return this.isVisibilidadFK_IdFactura;
	}

	public void setisVisibilidadFK_IdFactura(Boolean isVisibilidadFK_IdFactura) {
		this.isVisibilidadFK_IdFactura=isVisibilidadFK_IdFactura;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoTransaccionModulo() {
		return this.isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public void setisVisibilidadFK_IdTipoTransaccionModulo(Boolean isVisibilidadFK_IdTipoTransaccionModulo) {
		this.isVisibilidadFK_IdTipoTransaccionModulo=isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarSucursalForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarEjercicioForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarPeriodoForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarAnioForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarMesForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarModuloForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarAsientoContableForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarClienteForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarFacturaForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarTransaccionForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarMonedaForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarSucursalMovimientoForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(detallemoviclienprove,null);
				this.setActualParaGuardarEstadoDetalleClienteForeignKey(detallemoviclienprove,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		/*
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		*/
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			/*
			//this.cargarLicenciaCliente(this.datosCliente);
			*/
	}
	
	public void bugActualizarReferenciaActual(DetalleMoviClienProve detallemoviclienprove,DetalleMoviClienProve detallemoviclienproveAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleMoviClienProve(detallemoviclienprove);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detallemoviclienproveAux.setId(detallemoviclienprove.getId());
		detallemoviclienproveAux.setVersionRow(detallemoviclienprove.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleMoviClienProve();
		
			int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detallemoviclienproveValidator.getInvalidValues(this.detallemoviclienprove);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detallemoviclienproveLogic.setDatosCliente(datosCliente);
			detallemoviclienproveLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detallemoviclienproveAux=new  DetalleMoviClienProve();
				
				detallemoviclienproveAux.setIsNew(true);
				detallemoviclienproveAux.setIsChanged(true);
				
				detallemoviclienproveAux.setDetalleMoviClienProveOriginal(this.detallemoviclienprove);
				
				detallemoviclienproveAux.setId(this.detallemoviclienprove.getId());	
				detallemoviclienproveAux.setVersionRow(this.detallemoviclienprove.getVersionRow());	
				detallemoviclienproveAux.setid_empresa(this.detallemoviclienprove.getid_empresa());	
				detallemoviclienproveAux.setid_sucursal(this.detallemoviclienprove.getid_sucursal());	
				detallemoviclienproveAux.setid_ejercicio(this.detallemoviclienprove.getid_ejercicio());	
				detallemoviclienproveAux.setid_periodo(this.detallemoviclienprove.getid_periodo());	
				detallemoviclienproveAux.setid_anio(this.detallemoviclienprove.getid_anio());	
				detallemoviclienproveAux.setid_mes(this.detallemoviclienprove.getid_mes());	
				detallemoviclienproveAux.setid_modulo(this.detallemoviclienprove.getid_modulo());	
				detallemoviclienproveAux.setid_asiento_contable(this.detallemoviclienprove.getid_asiento_contable());	
				detallemoviclienproveAux.setfecha_vence(this.detallemoviclienprove.getfecha_vence());	
				detallemoviclienproveAux.setid_cliente(this.detallemoviclienprove.getid_cliente());	
				
				if(this.detallemoviclienprove.getid_factura()!=null && this.detallemoviclienprove.getid_factura()>0L) {
					detallemoviclienproveAux.setid_factura(this.detallemoviclienprove.getid_factura());
				} else {
					detallemoviclienproveAux.setid_factura(null);
				}	
				detallemoviclienproveAux.setnumero_factura(this.detallemoviclienprove.getnumero_factura());	
				detallemoviclienproveAux.setid_transaccion(this.detallemoviclienprove.getid_transaccion());	
				detallemoviclienproveAux.setdebito_mone_local(this.detallemoviclienprove.getdebito_mone_local());	
				detallemoviclienproveAux.setcredito_mone_local(this.detallemoviclienprove.getcredito_mone_local());	
				detallemoviclienproveAux.setdebito_mone_extra(this.detallemoviclienprove.getdebito_mone_extra());	
				detallemoviclienproveAux.setcredito_mone_extra(this.detallemoviclienprove.getcredito_mone_extra());	
				detallemoviclienproveAux.setid_moneda(this.detallemoviclienprove.getid_moneda());	
				detallemoviclienproveAux.setcotizacion(this.detallemoviclienprove.getcotizacion());	
				detallemoviclienproveAux.setdescripcion(this.detallemoviclienprove.getdescripcion());	
				detallemoviclienproveAux.setid_sucursal_movimiento(this.detallemoviclienprove.getid_sucursal_movimiento());	
				detallemoviclienproveAux.setid_tipo_transaccion_modulo(this.detallemoviclienprove.getid_tipo_transaccion_modulo());	
				detallemoviclienproveAux.setid_estado_detalle_cliente(this.detallemoviclienprove.getid_estado_detalle_cliente());	
				detallemoviclienproveAux.setfecha_emision(this.detallemoviclienprove.getfecha_emision());	
				detallemoviclienproveAux.setmonto_mone_local(this.detallemoviclienprove.getmonto_mone_local());	
				detallemoviclienproveAux.setmonto_mone_extra(this.detallemoviclienprove.getmonto_mone_extra());	
				detallemoviclienproveAux.setnumero_comprobante(this.detallemoviclienprove.getnumero_comprobante());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detallemoviclienproveAux,detallemoviclienproveLogic.getDetalleMoviClienProves());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallemoviclienproveAux,detallemoviclienproves);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.saveDetalleMoviClienProves();//WithConnection
						//detallemoviclienproveLogic.getSetVersionRowDetalleMoviClienProves();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallemoviclienprove,detallemoviclienproveAux);
					
					this.refrescarForeignKeysDescripcionesDetalleMoviClienProve();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallemoviclienproveLogic.saveDetalleMoviClienProveRelaciones(detallemoviclienproveAux);//WithConnection
								//detallemoviclienproveLogic.getSetVersionRowDetalleMoviClienProves();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallemoviclienprove,detallemoviclienproveAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallemoviclienproveAux,detallemoviclienproveLogic.getDetalleMoviClienProves());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallemoviclienproveAux,detallemoviclienproves);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallemoviclienprove,detallemoviclienproveAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detallemoviclienproveAux=new  DetalleMoviClienProve();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado() 
					|| (this.detallemoviclienproveSessionBean.getEsGuardarRelacionado() && this.detallemoviclienprove.getId()>=0)) {
						
					detallemoviclienproveAux.setIsNew(false);
				}
				
				detallemoviclienproveAux.setIsDeleted(false);
			
				detallemoviclienproveAux.setId(this.detallemoviclienprove.getId());	
				detallemoviclienproveAux.setVersionRow(this.detallemoviclienprove.getVersionRow());	
				detallemoviclienproveAux.setid_empresa(this.detallemoviclienprove.getid_empresa());	
				detallemoviclienproveAux.setid_sucursal(this.detallemoviclienprove.getid_sucursal());	
				detallemoviclienproveAux.setid_ejercicio(this.detallemoviclienprove.getid_ejercicio());	
				detallemoviclienproveAux.setid_periodo(this.detallemoviclienprove.getid_periodo());	
				detallemoviclienproveAux.setid_anio(this.detallemoviclienprove.getid_anio());	
				detallemoviclienproveAux.setid_mes(this.detallemoviclienprove.getid_mes());	
				detallemoviclienproveAux.setid_modulo(this.detallemoviclienprove.getid_modulo());	
				detallemoviclienproveAux.setid_asiento_contable(this.detallemoviclienprove.getid_asiento_contable());	
				detallemoviclienproveAux.setfecha_vence(this.detallemoviclienprove.getfecha_vence());	
				detallemoviclienproveAux.setid_cliente(this.detallemoviclienprove.getid_cliente());	
				
				if(this.detallemoviclienprove.getid_factura()!=null && this.detallemoviclienprove.getid_factura()>0L) {
					detallemoviclienproveAux.setid_factura(this.detallemoviclienprove.getid_factura());
				} else {
					detallemoviclienproveAux.setid_factura(null);
				}	
				detallemoviclienproveAux.setnumero_factura(this.detallemoviclienprove.getnumero_factura());	
				detallemoviclienproveAux.setid_transaccion(this.detallemoviclienprove.getid_transaccion());	
				detallemoviclienproveAux.setdebito_mone_local(this.detallemoviclienprove.getdebito_mone_local());	
				detallemoviclienproveAux.setcredito_mone_local(this.detallemoviclienprove.getcredito_mone_local());	
				detallemoviclienproveAux.setdebito_mone_extra(this.detallemoviclienprove.getdebito_mone_extra());	
				detallemoviclienproveAux.setcredito_mone_extra(this.detallemoviclienprove.getcredito_mone_extra());	
				detallemoviclienproveAux.setid_moneda(this.detallemoviclienprove.getid_moneda());	
				detallemoviclienproveAux.setcotizacion(this.detallemoviclienprove.getcotizacion());	
				detallemoviclienproveAux.setdescripcion(this.detallemoviclienprove.getdescripcion());	
				detallemoviclienproveAux.setid_sucursal_movimiento(this.detallemoviclienprove.getid_sucursal_movimiento());	
				detallemoviclienproveAux.setid_tipo_transaccion_modulo(this.detallemoviclienprove.getid_tipo_transaccion_modulo());	
				detallemoviclienproveAux.setid_estado_detalle_cliente(this.detallemoviclienprove.getid_estado_detalle_cliente());	
				detallemoviclienproveAux.setfecha_emision(this.detallemoviclienprove.getfecha_emision());	
				detallemoviclienproveAux.setmonto_mone_local(this.detallemoviclienprove.getmonto_mone_local());	
				detallemoviclienproveAux.setmonto_mone_extra(this.detallemoviclienprove.getmonto_mone_extra());	
				detallemoviclienproveAux.setnumero_comprobante(this.detallemoviclienprove.getnumero_comprobante());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallemoviclienproveAux,detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallemoviclienproveAux,detallemoviclienproves);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.saveDetalleMoviClienProves();//WithConnection
						//detallemoviclienproveLogic.getSetVersionRowDetalleMoviClienProves();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallemoviclienprove,detallemoviclienproveAux);
					
					this.refrescarForeignKeysDescripcionesDetalleMoviClienProve();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallemoviclienproveLogic.saveDetalleMoviClienProveRelaciones(detallemoviclienproveAux);//WithConnection
								//detallemoviclienproveLogic.getSetVersionRowDetalleMoviClienProves();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallemoviclienprove,detallemoviclienproveAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallemoviclienproveAux,detallemoviclienproveLogic.getDetalleMoviClienProves());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallemoviclienproveAux,detallemoviclienproves);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallemoviclienprove,detallemoviclienproveAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detallemoviclienproveAux=new  DetalleMoviClienProve();
				
				detallemoviclienproveAux.setIsNew(false);
				detallemoviclienproveAux.setIsChanged(false);
				
				detallemoviclienproveAux.setIsDeleted(true);
				
				detallemoviclienproveAux.setId(this.detallemoviclienprove.getId());	
				detallemoviclienproveAux.setVersionRow(this.detallemoviclienprove.getVersionRow());	
				detallemoviclienproveAux.setid_empresa(this.detallemoviclienprove.getid_empresa());	
				detallemoviclienproveAux.setid_sucursal(this.detallemoviclienprove.getid_sucursal());	
				detallemoviclienproveAux.setid_ejercicio(this.detallemoviclienprove.getid_ejercicio());	
				detallemoviclienproveAux.setid_periodo(this.detallemoviclienprove.getid_periodo());	
				detallemoviclienproveAux.setid_anio(this.detallemoviclienprove.getid_anio());	
				detallemoviclienproveAux.setid_mes(this.detallemoviclienprove.getid_mes());	
				detallemoviclienproveAux.setid_modulo(this.detallemoviclienprove.getid_modulo());	
				detallemoviclienproveAux.setid_asiento_contable(this.detallemoviclienprove.getid_asiento_contable());	
				detallemoviclienproveAux.setfecha_vence(this.detallemoviclienprove.getfecha_vence());	
				detallemoviclienproveAux.setid_cliente(this.detallemoviclienprove.getid_cliente());	
				
				if(this.detallemoviclienprove.getid_factura()!=null && this.detallemoviclienprove.getid_factura()>0L) {
					detallemoviclienproveAux.setid_factura(this.detallemoviclienprove.getid_factura());
				} else {
					detallemoviclienproveAux.setid_factura(null);
				}	
				detallemoviclienproveAux.setnumero_factura(this.detallemoviclienprove.getnumero_factura());	
				detallemoviclienproveAux.setid_transaccion(this.detallemoviclienprove.getid_transaccion());	
				detallemoviclienproveAux.setdebito_mone_local(this.detallemoviclienprove.getdebito_mone_local());	
				detallemoviclienproveAux.setcredito_mone_local(this.detallemoviclienprove.getcredito_mone_local());	
				detallemoviclienproveAux.setdebito_mone_extra(this.detallemoviclienprove.getdebito_mone_extra());	
				detallemoviclienproveAux.setcredito_mone_extra(this.detallemoviclienprove.getcredito_mone_extra());	
				detallemoviclienproveAux.setid_moneda(this.detallemoviclienprove.getid_moneda());	
				detallemoviclienproveAux.setcotizacion(this.detallemoviclienprove.getcotizacion());	
				detallemoviclienproveAux.setdescripcion(this.detallemoviclienprove.getdescripcion());	
				detallemoviclienproveAux.setid_sucursal_movimiento(this.detallemoviclienprove.getid_sucursal_movimiento());	
				detallemoviclienproveAux.setid_tipo_transaccion_modulo(this.detallemoviclienprove.getid_tipo_transaccion_modulo());	
				detallemoviclienproveAux.setid_estado_detalle_cliente(this.detallemoviclienprove.getid_estado_detalle_cliente());	
				detallemoviclienproveAux.setfecha_emision(this.detallemoviclienprove.getfecha_emision());	
				detallemoviclienproveAux.setmonto_mone_local(this.detallemoviclienprove.getmonto_mone_local());	
				detallemoviclienproveAux.setmonto_mone_extra(this.detallemoviclienprove.getmonto_mone_extra());	
				detallemoviclienproveAux.setnumero_comprobante(this.detallemoviclienprove.getnumero_comprobante());	
				
				if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detallemoviclienproveAux.getId()>=0) {	
						this.detallemoviclienprovesEliminados.add(detallemoviclienproveAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detallemoviclienproveAux,detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallemoviclienproveAux,detallemoviclienproves);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.saveDetalleMoviClienProves();//WithConnection
						//detallemoviclienproveLogic.getSetVersionRowDetalleMoviClienProves();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallemoviclienproveLogic.saveDetalleMoviClienProveRelaciones(detallemoviclienproveAux);//WithConnection
								//detallemoviclienproveLogic.getSetVersionRowDetalleMoviClienProves();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detallemoviclienproveAux,detallemoviclienproveLogic.getDetalleMoviClienProves());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detallemoviclienproveAux,detallemoviclienproves);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(this.detallemoviclienprovesEliminados);
					
					detallemoviclienproveLogic.saveDetalleMoviClienProves();//WithConnection
					//detallemoviclienproveLogic.getSetVersionRowDetalleMoviClienProves();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleMoviClienProve();
				
				this.detallemoviclienprovesEliminados= new ArrayList<DetalleMoviClienProve>();		
			}
			
			if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Cliente GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detallemoviclienprove=detallemoviclienproveAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleMoviClienProve();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleMoviClienProve detallemoviclienproveLocal) throws Exception {
		
		if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleMoviClienProve detallemoviclienproveLocal) throws Exception {	
		if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detallemoviclienproveLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detallemoviclienproveLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detallemoviclienproveLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detallemoviclienproveLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detallemoviclienproveLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detallemoviclienproveLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				detallemoviclienproveLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				detallemoviclienproveLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				detallemoviclienproveLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FacturaDetalleFormJInternalFrame.class)) {
				FacturaBeanSwingJInternalFrame facturaBeanSwingJInternalFrameLocal=(FacturaBeanSwingJInternalFrame) ((FacturaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				facturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFactura(facturaBeanSwingJInternalFrameLocal.getfactura(),true);
				facturaBeanSwingJInternalFrameLocal.actualizarLista(facturaBeanSwingJInternalFrameLocal.factura,this.facturasForeignKey);

				facturaBeanSwingJInternalFrameLocal.actualizarRelaciones(facturaBeanSwingJInternalFrameLocal.factura);

				detallemoviclienproveLocal.setFactura(facturaBeanSwingJInternalFrameLocal.factura);

				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey("Formulario");
				this.setActualFacturaForeignKey(facturaBeanSwingJInternalFrameLocal.factura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				detallemoviclienproveLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				detallemoviclienproveLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalmovimientoBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalmovimientoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalmovimientoBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalmovimientoBeanSwingJInternalFrameLocal.actualizarLista(sucursalmovimientoBeanSwingJInternalFrameLocal.sucursal,this.sucursalmovimientosForeignKey);

				sucursalmovimientoBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalmovimientoBeanSwingJInternalFrameLocal.sucursal);

				detallemoviclienproveLocal.setSucursalMovimiento(sucursalmovimientoBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursalMovimiento();
				this.cargarCombosFrameSucursalMovimientosForeignKey("Formulario");
				this.setActualSucursalMovimientoForeignKey(sucursalmovimientoBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTransaccionModuloDetalleFormJInternalFrame.class)) {
				TipoTransaccionModuloBeanSwingJInternalFrame tipotransaccionmoduloBeanSwingJInternalFrameLocal=(TipoTransaccionModuloBeanSwingJInternalFrame) ((TipoTransaccionModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.gettipotransaccionmodulo(),true);
				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarLista(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo,this.tipotransaccionmodulosForeignKey);

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				detallemoviclienproveLocal.setTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey("Formulario");
				this.setActualTipoTransaccionModuloForeignKey(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoDetalleClienteDetalleFormJInternalFrame.class)) {
				EstadoDetalleClienteBeanSwingJInternalFrame estadodetalleclienteBeanSwingJInternalFrameLocal=(EstadoDetalleClienteBeanSwingJInternalFrame) ((EstadoDetalleClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadodetalleclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoDetalleCliente(estadodetalleclienteBeanSwingJInternalFrameLocal.getestadodetallecliente(),true);
				estadodetalleclienteBeanSwingJInternalFrameLocal.actualizarLista(estadodetalleclienteBeanSwingJInternalFrameLocal.estadodetallecliente,this.estadodetalleclientesForeignKey);

				estadodetalleclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(estadodetalleclienteBeanSwingJInternalFrameLocal.estadodetallecliente);

				detallemoviclienproveLocal.setEstadoDetalleCliente(estadodetalleclienteBeanSwingJInternalFrameLocal.estadodetallecliente);

				this.addItemDefectoCombosForeignKeyEstadoDetalleCliente();
				this.cargarCombosFrameEstadoDetalleClientesForeignKey("Formulario");
				this.setActualEstadoDetalleClienteForeignKey(estadodetalleclienteBeanSwingJInternalFrameLocal.estadodetallecliente.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleMoviClienProveActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detallemoviclienproveValidator.getInvalidValues(this.detallemoviclienprove);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleMoviClienProve detallemoviclienprove,List<DetalleMoviClienProve> detallemoviclienproves) throws Exception {
		try	{		
			DetalleMoviClienProveConstantesFunciones.actualizarLista(detallemoviclienprove,detallemoviclienproves,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleMoviClienProve detallemoviclienprove,List<DetalleMoviClienProve> detallemoviclienproves) throws Exception {
		try	{			
			DetalleMoviClienProveConstantesFunciones.actualizarSelectedLista(detallemoviclienprove,detallemoviclienproves);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleMoviClienProve> detallemoviclienprovesLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detallemoviclienprovesLocal=this.detallemoviclienproveLogic.getDetalleMoviClienProves();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detallemoviclienprovesLocal=this.detallemoviclienproves;
			}
			//ARCHITECTURE
		
			for(DetalleMoviClienProve detallemoviclienproveLocal:detallemoviclienprovesLocal) {
				if(this.permiteMantenimiento(detallemoviclienproveLocal) && detallemoviclienproveLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleMoviClienProveConstantesFunciones.getDetalleMoviClienProveLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_empresaDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_sucursalDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_ejercicioDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_periodoDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_anioDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_mesDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_moduloDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_asiento_contableDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.FECHAVENCE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelfecha_venceDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_clienteDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_facturaDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.NUMEROFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelnumero_facturaDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_transaccionDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.DEBITOMONELOCAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldebito_mone_localDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.CREDITOMONELOCAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcredito_mone_localDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.DEBITOMONEEXTRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldebito_mone_extraDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.CREDITOMONEEXTRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcredito_mone_extraDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_monedaDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.COTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcotizacionDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldescripcionDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDSUCURSALMOVIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_sucursal_movimientoDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDTIPOTRANSACCIONMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_tipo_transaccion_moduloDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.IDESTADODETALLECLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_estado_detalle_clienteDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelfecha_emisionDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.MONTOMONELOCAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelmonto_mone_localDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.MONTOMONEEXTRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelmonto_mone_extraDetalleMoviClienProve,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleMoviClienProveConstantesFunciones.NUMEROCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelnumero_comprobanteDetalleMoviClienProve,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_empresaDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_sucursalDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_ejercicioDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_periodoDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_anioDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_mesDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_moduloDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_asiento_contableDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelfecha_venceDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_clienteDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_facturaDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelnumero_facturaDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_transaccionDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldebito_mone_localDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcredito_mone_localDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldebito_mone_extraDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcredito_mone_extraDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_monedaDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcotizacionDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldescripcionDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_sucursal_movimientoDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_tipo_transaccion_moduloDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelid_estado_detalle_clienteDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelfecha_emisionDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelmonto_mone_localDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelmonto_mone_extraDetalleMoviClienProve,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelnumero_comprobanteDetalleMoviClienProve,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleMoviClienProve--;	
		
		
		this.detallemoviclienproveAux=new DetalleMoviClienProve();
		
		this.detallemoviclienproveAux.setId(this.iIdNuevoDetalleMoviClienProve);
		this.detallemoviclienproveAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallemoviclienproveLogic.getDetalleMoviClienProves().add(this.detallemoviclienproveAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detallemoviclienproves.add(this.detallemoviclienproveAux);
		}
		//ARCHITECTURE
		
		this.detallemoviclienprove=this.detallemoviclienproveAux;
		
		if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleMoviClienProve(this.detallemoviclienprove);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleMoviClienProve(this.detallemoviclienprove);
		}
				
		//this.setDefaultControlesDetalleMoviClienProve();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleMoviClienProve();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleMoviClienProve();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleMoviClienProve();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleMoviClienProve(this.detallemoviclienproveBean,this.detallemoviclienprove,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
			classes=DetalleMoviClienProveConstantesFunciones.getClassesRelationshipsOfDetalleMoviClienProve(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detallemoviclienproveReturnGeneral=detallemoviclienproveLogic.procesarEventosDetalleMoviClienProvesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallemoviclienproveLogic.getDetalleMoviClienProves(),this.detallemoviclienprove,this.detallemoviclienproveParameterGeneral,this.isEsNuevoDetalleMoviClienProve,classes);//this.detallemoviclienproveLogic.getDetalleMoviClienProve()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral,this.detallemoviclienproveBean,false);
		
		if(this.detallemoviclienproveReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve());
		}
		
		if(this.detallemoviclienproveReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve(),classes);//this.detallemoviclienproveBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleMoviClienProve();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleMoviClienProve();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.RecargarFormDetalleMoviClienProve(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleMoviClienProve(false);
						
			if(detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleMoviClienProve();
			}
			
			this.actualizarVisualTableDatosDetalleMoviClienProve();
			
			this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(this.getIndiceNuevoDetalleMoviClienProve(), this.getIndiceNuevoDetalleMoviClienProve());
			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
						
			this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleMoviClienProve(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarfecha_venceDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_facturaDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarnumero_facturaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activardebito_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarcredito_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activardebito_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarcredito_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarcotizacionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activardescripcionDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_emisionDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarfecha_emisionDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_localDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarmonto_mone_localDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_extraDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarmonto_mone_extraDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_comprobanteDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarnumero_comprobanteDetalleMoviClienProve);	
		//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_empresaDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_sucursalDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_ejercicioDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_periodoDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_anioDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_mesDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_moduloDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_asiento_contableDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_clienteDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_facturaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_transaccionDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_monedaDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_sucursal_movimientoDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_tipo_transaccion_moduloDetalleMoviClienProve);//
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setEnabled(isHabilitar && this.detallemoviclienproveConstantesFunciones.activarid_estado_detalle_clienteDetalleMoviClienProve);
	};
	
	public void setDefaultControlesDetalleMoviClienProve() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleMoviClienProve(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detallemoviclienproveSessionBean.setConGuardarRelaciones(true);			
			this.detallemoviclienproveSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.setVisible(true);
			
					
		} else {
			//this.detallemoviclienproveSessionBean.setConGuardarRelaciones(false);			
			this.detallemoviclienproveSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetalleMoviClienProve() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
				if(detallemoviclienproveAux.getId().equals(this.iIdNuevoDetalleMoviClienProve)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproves) {
				if(detallemoviclienproveAux.getId().equals(this.iIdNuevoDetalleMoviClienProve)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
				if(detallemoviclienproveAux.getId().equals(detallemoviclienprove.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproves) {
				if(detallemoviclienproveAux.getId().equals(detallemoviclienprove.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienproveOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
				if(detallemoviclienproveAux.getDetalleMoviClienProveOriginal().getId().equals(detallemoviclienproveOriginal.getId())) {
					existe=true;
					detallemoviclienproveOriginal.setId(detallemoviclienproveAux.getId());
					detallemoviclienproveOriginal.setVersionRow(detallemoviclienproveAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproves) {
				if(detallemoviclienproveAux.getDetalleMoviClienProveOriginal().getId().equals(detallemoviclienproveOriginal.getId())) {
					existe=true;
					detallemoviclienproveOriginal.setId(detallemoviclienproveAux.getId());
					detallemoviclienproveOriginal.setVersionRow(detallemoviclienproveAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleMoviClienProve(Boolean esParaCancelar) throws Exception {
		detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
		detallemoviclienproveAux=new DetalleMoviClienProve();
		
		if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
					if(detallemoviclienproveAux.getId()<0) {
						detallemoviclienprovesAux.add(detallemoviclienproveAux);
					}		
				}
				this.iIdNuevoDetalleMoviClienProve=0L;
				this.detallemoviclienproveLogic.getDetalleMoviClienProves().removeAll(detallemoviclienprovesAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproves) {
					if(detallemoviclienproveAux.getId()<0) {
						detallemoviclienprovesAux.add(detallemoviclienproveAux);
					}		
				}
				this.iIdNuevoDetalleMoviClienProve=0L;
				this.detallemoviclienproves.removeAll(detallemoviclienprovesAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleMoviClienProve 
					&& this.detallemoviclienproveLogic.getDetalleMoviClienProves().size()>0
					) {
					detallemoviclienproveAux=this.detallemoviclienproveLogic.getDetalleMoviClienProves().get(this.detallemoviclienproveLogic.getDetalleMoviClienProves().size() - 1);
				
					if(detallemoviclienproveAux.getId()<0) {
						this.detallemoviclienproveLogic.getDetalleMoviClienProves().remove(detallemoviclienproveAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleMoviClienProve && this.detallemoviclienproves.size()>0) {
					detallemoviclienproveAux=this.detallemoviclienproves.get(this.detallemoviclienproves.size() - 1);
				
					if(detallemoviclienproveAux.getId()<0) {
						this.detallemoviclienproves.remove(detallemoviclienproveAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleMoviClienProve(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detallemoviclienprove.getId()<0) {
				this.detallemoviclienproveLogic.getDetalleMoviClienProves().remove(this.detallemoviclienprove);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detallemoviclienprove.getId()<0) {
				this.detallemoviclienproves.remove(this.detallemoviclienprove);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleMoviClienProve(List<DetalleMoviClienProve> detallemoviclienprovesAux) throws Exception {
		DetalleMoviClienProveConstantesFunciones.setEstadosInicialesDetalleMoviClienProve(detallemoviclienprovesAux);
	}
	
	public void setEstadosInicialesDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienproveAux) throws Exception {
		DetalleMoviClienProveConstantesFunciones.setEstadosInicialesDetalleMoviClienProve(detallemoviclienproveAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleMoviClienProveActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleMoviClienProveActual()) {
				if(!this.isEsNuevoDetalleMoviClienProve) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleMoviClienProve=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleMoviClienProveActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Cliente ?", "MANTENIMIENTO DE Detalle Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleMoviClienProve detallemoviclienprove) throws Exception {
		DetalleMoviClienProveConstantesFunciones.seleccionarAsignar(this.detallemoviclienprove,detallemoviclienprove);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleMoviClienProve=this.isPermisoActualizarOriginalDetalleMoviClienProve;
			
			
			this.seleccionarAsignar(detallemoviclienprove);
			
			

			idAsientoContableActual=detallemoviclienprove.getid_asiento_contable();
			this.seleccionarAsientoContableActual();

			idClienteActual=detallemoviclienprove.getid_cliente();
			this.seleccionarClienteActual();

			idFacturaActual=detallemoviclienprove.getid_factura();
			this.seleccionarFacturaActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleMoviClienProveConstantesFunciones.quitarEspaciosDetalleMoviClienProve(this.detallemoviclienprove,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detallemoviclienproveSessionBean.setsFuncionBusquedaRapida(this.detallemoviclienproveSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarFacturaActual() throws Exception {
		try	{
			Factura facturaAux=new Factura();

			if(this.idFacturaActual != null && this.idFacturaActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturaLogic.getEntityWithConnection(this.idFacturaActual);
					facturaAux= facturaLogic.getFactura();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				facturasForeignKey=new ArrayList<Factura>();
				facturasForeignKey.add(facturaAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleMoviClienProve) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleMoviClienProve(esParaCancelar);				
				this.cancelarNuevoDetalleMoviClienProve(esParaCancelar);								
			}
			
			this.detallemoviclienprove=new DetalleMoviClienProve();
			
			this.inicializarDetalleMoviClienProve();
			
			this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleMoviClienProve() throws Exception {
		try {
			DetalleMoviClienProveConstantesFunciones.inicializarDetalleMoviClienProve(this.detallemoviclienprove);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detallemoviclienproveLogic.getDetalleMoviClienProves().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleMoviClienProves(String sAccionBusqueda,List<DetalleMoviClienProve> detallemoviclienprovesParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleMoviClienProve"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleMoviClienProveMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleMoviClienProveMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleMoviClienProve"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Clientes");		
		parameters.put("busquedapor", DetalleMoviClienProveConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleMoviClienProve=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleMoviClienProveConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleMoviClienProveConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleMoviClienProve=new JRBeanArrayDataSource(DetalleMoviClienProveJInternalFrame.TraerDetalleMoviClienProveBeans(detallemoviclienprovesParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleMoviClienProve);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleMoviClienProveConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleMoviClienProveConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleMoviClienProveBean.TraerDetalleMoviClienProveBeans(detallemoviclienprovesParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleMoviClienProves(sAccionBusqueda,sTipoArchivoReporte,detallemoviclienprovesParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleMoviClienProves(sAccionBusqueda,sTipoArchivoReporte,detallemoviclienprovesParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					/*
					this.jButtonGenerarExcelReporteDinamicoDetalleMoviClienProveActionPerformed(null);
					//this.generarExcelReporteDetalleMoviClienProves(sAccionBusqueda,sTipoArchivoReporte,detallemoviclienprovesParaReportes);
					*/
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleMoviClienProves(sAccionBusqueda,sTipoArchivoReporte,detallemoviclienprovesParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleMoviClienProves(sAccionBusqueda,sTipoArchivoReporte,detallemoviclienprovesParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleMoviClienProves(sAccionBusqueda,sTipoArchivoReporte,detallemoviclienprovesParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleMoviClienProves(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleMoviClienProve> detallemoviclienprovesParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallemoviclienprove";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleMoviClienProves");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleMoviClienProve("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleMoviClienProve detallemoviclienprove : detallemoviclienprovesParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleMoviClienProveConstantesFunciones.generarExcelReporteDataDetalleMoviClienProve("NORMAL",row,workbook,detallemoviclienprove,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleMoviClienProve(String sTipo,Row row,Workbook workbook) {
		
		DetalleMoviClienProveConstantesFunciones.generarExcelReporteHeaderDetalleMoviClienProve(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleMoviClienProves(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleMoviClienProve> detallemoviclienprovesParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallemoviclienprove_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleMoviClienProves");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleMoviClienProve detallemoviclienprove : detallemoviclienprovesParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleMoviClienProveConstantesFunciones.getDetalleMoviClienProveDescripcion(detallemoviclienprove));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getasientocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getfecha_vence());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getnumero_factura());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getdebito_mone_local());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getcredito_mone_local());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getdebito_mone_extra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getcredito_mone_extra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getcotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getsucursalmovimiento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.gettipotransaccionmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getestadodetallecliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getmonto_mone_local());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getmonto_mone_extra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallemoviclienprove.getnumero_comprobante());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleMoviClienProves(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleMoviClienProve> detallemoviclienprovesParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleMoviClienProve> detallemoviclienprovesRespaldo=null;
		
		classes=DetalleMoviClienProveConstantesFunciones.getClassesRelationshipsOfDetalleMoviClienProve(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detallemoviclienproveLogic.setDatosCliente(this.datosCliente);
		this.detallemoviclienproveLogic.setDatosDeep(this.datosDeep);
		this.detallemoviclienproveLogic.setIsConDeep(true);
		
		detallemoviclienprovesRespaldo=this.detallemoviclienproveLogic.getDetalleMoviClienProves();
		
		this.detallemoviclienproveLogic.setDetalleMoviClienProves(detallemoviclienprovesParaReportes);	
		this.detallemoviclienproveLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detallemoviclienprovesParaReportes=this.detallemoviclienproveLogic.getDetalleMoviClienProves();
		this.detallemoviclienproveLogic.setDetalleMoviClienProves(detallemoviclienprovesRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallemoviclienprove_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleMoviClienProves");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleMoviClienProve("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleMoviClienProve detallemoviclienprove : detallemoviclienprovesParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleMoviClienProve("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleMoviClienProveConstantesFunciones.generarExcelReporteDataDetalleMoviClienProve("NORMAL",row,workbook,detallemoviclienprove,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleMoviClienProveConstantesFunciones.getDetalleMoviClienProveDescripcion(detallemoviclienprove));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public void startProcessDetalleMoviClienProve() throws Exception {		
		this.startProcessDetalleMoviClienProve(true);
	}
	
	public void startProcessDetalleMoviClienProve(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleMoviClienProve ,this.jPanelParametrosReportesDetalleMoviClienProve, this.jScrollPanelDatosDetalleMoviClienProve,this.jPanelPaginacionDetalleMoviClienProve, this.jScrollPanelDatosEdicionDetalleMoviClienProve, this.jPanelAccionesDetalleMoviClienProve,this.jPanelAccionesFormularioDetalleMoviClienProve,this.jmenuBarDetalleMoviClienProve,this.jmenuBarDetalleDetalleMoviClienProve,this.jTtoolBarDetalleMoviClienProve,this.jTtoolBarDetalleDetalleMoviClienProve);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleMoviClienProve=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesDetalleMoviClienProve=this.jPanelParametrosReportesDetalleMoviClienProve;
		//final JScrollPane jScrollPanelDatosDetalleMoviClienProve=this.jScrollPanelDatosDetalleMoviClienProve;
		final JTable jTableDatosDetalleMoviClienProve=this.jTableDatosDetalleMoviClienProve;		
		final JPanel jPanelPaginacionDetalleMoviClienProve=this.jPanelPaginacionDetalleMoviClienProve;
		//final JScrollPane jScrollPanelDatosEdicionDetalleMoviClienProve=this.jScrollPanelDatosEdicionDetalleMoviClienProve;
		final JPanel jPanelAccionesDetalleMoviClienProve=this.jPanelAccionesDetalleMoviClienProve;
		
		JPanel jPanelCamposAuxiliarDetalleMoviClienProve=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleMoviClienProve=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			jPanelCamposAuxiliarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelCamposDetalleMoviClienProve;
			jPanelAccionesFormularioAuxiliarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelAccionesFormularioDetalleMoviClienProve;
		}
		
		final JPanel jPanelCamposDetalleMoviClienProve=jPanelCamposAuxiliarDetalleMoviClienProve;
		final JPanel jPanelAccionesFormularioDetalleMoviClienProve=jPanelAccionesFormularioAuxiliarDetalleMoviClienProve;
		
		
		final JMenuBar jmenuBarDetalleMoviClienProve=new JMenuBar();
		final JMenuBar jmenuBarDetalleDetalleMoviClienProve=new JMenuBar();
		final JToolBar jTtoolBarDetalleMoviClienProve=new JToolBar();
		final JToolBar jTtoolBarDetalleDetalleMoviClienProve=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleMoviClienProve;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleMoviClienProve;
			processRunnable.jTableDatos=jTableDatosDetalleMoviClienProve;
			processRunnable.jPanelCampos=jPanelCamposDetalleMoviClienProve;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleMoviClienProve;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleMoviClienProve;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleMoviClienProve;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleMoviClienProve;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleMoviClienProve;
			processRunnable.jTtoolBar=jTtoolBarDetalleMoviClienProve;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleMoviClienProve;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleMoviClienProve ,jPanelParametrosReportesDetalleMoviClienProve,jTableDatosDetalleMoviClienProve, /*jScrollPanelDatosDetalleMoviClienProve,*/jPanelCamposDetalleMoviClienProve,jPanelPaginacionDetalleMoviClienProve, /*jScrollPanelDatosEdicionDetalleMoviClienProve,*/ jPanelAccionesDetalleMoviClienProve,jPanelAccionesFormularioDetalleMoviClienProve,jmenuBarDetalleMoviClienProve,jmenuBarDetalleDetalleMoviClienProve,jTtoolBarDetalleMoviClienProve,jTtoolBarDetalleDetalleMoviClienProve);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleMoviClienProve ,jPanelParametrosReportesDetalleMoviClienProve, jScrollPanelDatosDetalleMoviClienProve,jPanelPaginacionDetalleMoviClienProve, jScrollPanelDatosEdicionDetalleMoviClienProve, jPanelAccionesDetalleMoviClienProve,jPanelAccionesFormularioDetalleMoviClienProve,jmenuBarDetalleMoviClienProve,jmenuBarDetalleDetalleMoviClienProve,jTtoolBarDetalleMoviClienProve,jTtoolBarDetalleDetalleMoviClienProve);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleMoviClienProve() {// throws Exception 
		this.finishProcessDetalleMoviClienProve(true);
	}
	
	public void finishProcessDetalleMoviClienProve(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleMoviClienProve ,this.jPanelParametrosReportesDetalleMoviClienProve, this.jScrollPanelDatosDetalleMoviClienProve,this.jPanelPaginacionDetalleMoviClienProve, this.jScrollPanelDatosEdicionDetalleMoviClienProve, this.jPanelAccionesDetalleMoviClienProve,this.jPanelAccionesFormularioDetalleMoviClienProve,this.jmenuBarDetalleMoviClienProve,this.jmenuBarDetalleDetalleMoviClienProve,this.jTtoolBarDetalleMoviClienProve,this.jTtoolBarDetalleDetalleMoviClienProve);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleMoviClienProve=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesDetalleMoviClienProve=this.jPanelParametrosReportesDetalleMoviClienProve;
		//final JScrollPane jScrollPanelDatosDetalleMoviClienProve=this.jScrollPanelDatosDetalleMoviClienProve;
		final JTable jTableDatosDetalleMoviClienProve=this.jTableDatosDetalleMoviClienProve;		
		final JPanel jPanelPaginacionDetalleMoviClienProve=this.jPanelPaginacionDetalleMoviClienProve;
		//final JScrollPane jScrollPanelDatosEdicionDetalleMoviClienProve=this.jScrollPanelDatosEdicionDetalleMoviClienProve;
		final JPanel jPanelAccionesDetalleMoviClienProve=this.jPanelAccionesDetalleMoviClienProve;
		
		JPanel jPanelCamposAuxiliarDetalleMoviClienProve=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleMoviClienProve=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			jPanelCamposAuxiliarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelCamposDetalleMoviClienProve;
			jPanelAccionesFormularioAuxiliarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelAccionesFormularioDetalleMoviClienProve;
		}
		
		final JPanel jPanelCamposDetalleMoviClienProve=jPanelCamposAuxiliarDetalleMoviClienProve;
		final JPanel jPanelAccionesFormularioDetalleMoviClienProve=jPanelAccionesFormularioAuxiliarDetalleMoviClienProve;
		
		
		final JMenuBar jmenuBarDetalleMoviClienProve=new JMenuBar();
		final JMenuBar jmenuBarDetalleDetalleMoviClienProve=new JMenuBar();
		final JToolBar jTtoolBarDetalleMoviClienProve=new JToolBar();
		final JToolBar jTtoolBarDetalleDetalleMoviClienProve=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleMoviClienProve;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleMoviClienProve;
			processRunnable.jTableDatos=jTableDatosDetalleMoviClienProve;
			processRunnable.jPanelCampos=jPanelCamposDetalleMoviClienProve;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleMoviClienProve;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleMoviClienProve;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleMoviClienProve;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleMoviClienProve;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleMoviClienProve;
			processRunnable.jTtoolBar=jTtoolBarDetalleMoviClienProve;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleMoviClienProve;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleMoviClienProve ,jPanelParametrosReportesDetalleMoviClienProve, jTableDatosDetalleMoviClienProve,/*jScrollPanelDatosDetalleMoviClienProve,*/jPanelCamposDetalleMoviClienProve,jPanelPaginacionDetalleMoviClienProve, /*jScrollPanelDatosEdicionDetalleMoviClienProve,*/ jPanelAccionesDetalleMoviClienProve,jPanelAccionesFormularioDetalleMoviClienProve,jmenuBarDetalleMoviClienProve,jmenuBarDetalleDetalleMoviClienProve,jTtoolBarDetalleMoviClienProve,jTtoolBarDetalleDetalleMoviClienProve));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleMoviClienProve(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleMoviClienProve(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleMoviClienProve(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleMoviClienProve(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleMoviClienProve,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleMoviClienProve,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleMoviClienProve(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleMoviClienProve,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleMoviClienProve,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detallemoviclienproveConstantesFunciones.getsFinalQueryDetalleMoviClienProve();
		String  finalQueryPaginacionTodos=this.detallemoviclienproveConstantesFunciones.getsFinalQueryDetalleMoviClienProve();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleMoviClienProveConstantesFunciones.getArrayColumnasGlobalesNoDetalleMoviClienProve(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleMoviClienProveConstantesFunciones.getArrayColumnasGlobalesDetalleMoviClienProve(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			//SE CAMBIA FUNCIONALIDAD DE MODULO POR ALGUNO PRIORITARIO
			Modulo moduloActualAux=new Modulo();
			
			moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleMoviClienProveConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		/*
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		*/
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detallemoviclienprovesEliminados= new ArrayList<DetalleMoviClienProve>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleMoviClienProve();
		
				///*DetalleMoviClienProveSessionBean*/this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			
			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleMoviClienProveConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleMoviClienProveConstantesFunciones.getClassesForeignKeysOfDetalleMoviClienProve(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detallemoviclienprove."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detallemoviclienprovesAux= new ArrayList<DetalleMoviClienProve>();
			
				
			detallemoviclienproveLogic.setDatosCliente(this.datosCliente);
			detallemoviclienproveLogic.setDatosDeep(this.datosDeep);
			detallemoviclienproveLogic.setIsConDeep(true);
			
			
			detallemoviclienproveLogic.getDetalleMoviClienProveDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detallemoviclienproveLogic.getTodosDetalleMoviClienProves(finalQueryGlobal,pagination);
					
					//detallemoviclienproveLogic.getTodosDetalleMoviClienProvesWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detallemoviclienproveLogic.getDetalleMoviClienProves()==null|| detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallemoviclienprovesAux= new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux= new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallemoviclienproveLogic.getTodosDetalleMoviClienProves(finalQueryGlobal+"",this.pagination);												
							
							//detallemoviclienproveLogic.getTodosDetalleMoviClienProvesWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienproveLogic.getDetalleMoviClienProves() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());					
							detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleMoviClienProve=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleMoviClienProve=this.idActual;
				
				} else if(this.idDetalleMoviClienProveActual!=null && this.idDetalleMoviClienProveActual!=0L) {
					idDetalleMoviClienProve=idDetalleMoviClienProveActual;
				}
				
					
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndicePorId(idDetalleMoviClienProve);
				
				this.detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detallemoviclienproveLogic.getEntity(idDetalleMoviClienProve);
					
					//detallemoviclienproveLogic.getEntityWithConnection(idDetalleMoviClienProve);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
					detallemoviclienproveLogic.getDetalleMoviClienProves().add(detallemoviclienproveLogic.getDetalleMoviClienProve());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
					this.detallemoviclienproves.add(detallemoviclienprove);
				}
				
				if(detallemoviclienproveLogic.getDetalleMoviClienProve()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdAsientoContable",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdAsientoContable",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdCliente",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdCliente",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdDetalleMoviClienProve")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdDetalleMoviClienProve(id_sucursal_movimientoFK_IdDetalleMoviClienProve);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdDetalleMoviClienProve(finalQueryGlobal,pagination,id_sucursal_movimientoFK_IdDetalleMoviClienProve);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdDetalleMoviClienProve(id_sucursal_movimientoFK_IdDetalleMoviClienProve);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdDetalleMoviClienProve(id_sucursal_movimientoFK_IdDetalleMoviClienProve);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdDetalleMoviClienProve(finalQueryGlobal,pagination,id_sucursal_movimientoFK_IdDetalleMoviClienProve);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdDetalleMoviClienProve(id_sucursal_movimientoFK_IdDetalleMoviClienProve);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdDetalleMoviClienProve(id_sucursal_movimientoFK_IdDetalleMoviClienProve);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdDetalleMoviClienProve",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdDetalleMoviClienProve",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdEjercicio",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdEjercicio",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdEmpresa",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdEmpresa",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoDetalleCliente")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleCliente(id_estado_detalle_clienteFK_IdEstadoDetalleCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdEstadoDetalleCliente(finalQueryGlobal,pagination,id_estado_detalle_clienteFK_IdEstadoDetalleCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleCliente(id_estado_detalle_clienteFK_IdEstadoDetalleCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleCliente(id_estado_detalle_clienteFK_IdEstadoDetalleCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdEstadoDetalleCliente(finalQueryGlobal,pagination,id_estado_detalle_clienteFK_IdEstadoDetalleCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleCliente(id_estado_detalle_clienteFK_IdEstadoDetalleCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdEstadoDetalleCliente(id_estado_detalle_clienteFK_IdEstadoDetalleCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdEstadoDetalleCliente",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdEstadoDetalleCliente",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFactura")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdFactura(finalQueryGlobal,pagination,id_facturaFK_IdFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdFactura(id_facturaFK_IdFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdFactura",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdFactura",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdModulo",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdModulo",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdMoneda",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdMoneda",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdPeriodo",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdPeriodo",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdSucursal",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdSucursal",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTransaccionModulo")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdTipoTransaccionModulo",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdTipoTransaccionModulo",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves()==null||detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallemoviclienproves==null|| detallemoviclienproves.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
						detallemoviclienprovesAux.addAll(detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienprovesAux=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienprovesAux.addAll(detallemoviclienproves);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallemoviclienproveLogic.getDetalleMoviClienProvesFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleMoviClienProveConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleMoviClienProves("FK_IdTransaccion",detallemoviclienproveLogic.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleMoviClienProves("FK_IdTransaccion",detallemoviclienproves);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveLogic.setDetalleMoviClienProves(new ArrayList<DetalleMoviClienProve>());
						detallemoviclienproveLogic.getDetalleMoviClienProves().addAll(detallemoviclienprovesAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproves=new ArrayList<DetalleMoviClienProve>();
							detallemoviclienproves.addAll(detallemoviclienprovesAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleMoviClienProve();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleMoviClienProve();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallemoviclienproveLogic.getDetalleMoviClienProves().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallemoviclienproves.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallemoviclienproveLogic.getDetalleMoviClienProves().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallemoviclienproves.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleMoviClienProve detallemoviclienprove) {
		Boolean permite=true;
		
		if(this.detallemoviclienprove.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	/*
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleMoviClienProveConstantesFunciones.getOrderByListaDetalleMoviClienProve();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleMoviClienProveConstantesFunciones.getOrderByListaDetalleMoviClienProve();
		}		
	}
	*/
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienproveLogic.getDetalleMoviClienProves()) {
				if(detallemoviclienprove.getsType().equals(Constantes2.S_TOTALES)) {
					detallemoviclienproveTotales=detallemoviclienprove;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleMoviClienProve detallemoviclienprove:this.detallemoviclienproves) {
				if(detallemoviclienprove.getsType().equals(Constantes2.S_TOTALES)) {
					detallemoviclienproveTotales=detallemoviclienprove;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detallemoviclienproveAux=new DetalleMoviClienProve();
			this.detallemoviclienproveAux.setsType(Constantes2.S_TOTALES);
			this.detallemoviclienproveAux.setIsNew(false);
			this.detallemoviclienproveAux.setIsChanged(false);
			this.detallemoviclienproveAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleMoviClienProveConstantesFunciones.TotalizarValoresFilaDetalleMoviClienProve(this.detallemoviclienproveLogic.getDetalleMoviClienProves(),this.detallemoviclienproveAux);
				
				this.detallemoviclienproveLogic.getDetalleMoviClienProves().add(this.detallemoviclienproveAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleMoviClienProveConstantesFunciones.TotalizarValoresFilaDetalleMoviClienProve(this.detallemoviclienproves,this.detallemoviclienproveAux);
				
				this.detallemoviclienproves.add(this.detallemoviclienproveAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detallemoviclienproveTotales=new DetalleMoviClienProve();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallemoviclienproveLogic.getDetalleMoviClienProves().remove(detallemoviclienproveTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallemoviclienproves.remove(detallemoviclienproveTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detallemoviclienproveTotales=new DetalleMoviClienProve();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienproveLogic.getDetalleMoviClienProves()) {
				if(detallemoviclienprove.getsType().equals(Constantes2.S_TOTALES)) {
					detallemoviclienproveTotales=detallemoviclienprove;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleMoviClienProveConstantesFunciones.TotalizarValoresFilaDetalleMoviClienProve(this.detallemoviclienproveLogic.getDetalleMoviClienProves(),detallemoviclienproveTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleMoviClienProve detallemoviclienprove:this.detallemoviclienproves) {
				if(detallemoviclienprove.getsType().equals(Constantes2.S_TOTALES)) {
					detallemoviclienproveTotales=detallemoviclienprove;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleMoviClienProveConstantesFunciones.TotalizarValoresFilaDetalleMoviClienProve(this.detallemoviclienproves,detallemoviclienproveTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleMoviClienProve() {
		this.isPermisoTodoDetalleMoviClienProve=false;
		this.isPermisoNuevoDetalleMoviClienProve=false;
		this.isPermisoActualizarDetalleMoviClienProve=false;
		this.isPermisoActualizarOriginalDetalleMoviClienProve=false;
		this.isPermisoEliminarDetalleMoviClienProve=false;
		this.isPermisoGuardarCambiosDetalleMoviClienProve=false;
		this.isPermisoConsultaDetalleMoviClienProve=false;
		this.isPermisoBusquedaDetalleMoviClienProve=false;
		this.isPermisoReporteDetalleMoviClienProve=false;		
		this.isPermisoOrdenDetalleMoviClienProve=false;		
		this.isPermisoPaginacionMedioDetalleMoviClienProve=false;		
		this.isPermisoPaginacionAltoDetalleMoviClienProve=false;
		this.isPermisoPaginacionTodoDetalleMoviClienProve=false;
		this.isPermisoCopiarDetalleMoviClienProve=false;		
		this.isPermisoVerFormDetalleMoviClienProve=false;		
		this.isPermisoDuplicarDetalleMoviClienProve=false;		
		this.isPermisoOrdenDetalleMoviClienProve=false;		
	}
	
	public void setPermisosUsuarioDetalleMoviClienProve(Boolean isPermiso) {
		this.isPermisoTodoDetalleMoviClienProve=isPermiso;
		this.isPermisoNuevoDetalleMoviClienProve=isPermiso;
		this.isPermisoActualizarDetalleMoviClienProve=isPermiso;
		this.isPermisoActualizarOriginalDetalleMoviClienProve=isPermiso;
		this.isPermisoEliminarDetalleMoviClienProve=isPermiso;
		this.isPermisoGuardarCambiosDetalleMoviClienProve=isPermiso;
		this.isPermisoConsultaDetalleMoviClienProve=isPermiso;
		this.isPermisoBusquedaDetalleMoviClienProve=isPermiso;
		this.isPermisoReporteDetalleMoviClienProve=isPermiso;
		this.isPermisoOrdenDetalleMoviClienProve=isPermiso;		
		this.isPermisoPaginacionMedioDetalleMoviClienProve=isPermiso;		
		this.isPermisoPaginacionAltoDetalleMoviClienProve=isPermiso;		
		this.isPermisoPaginacionTodoDetalleMoviClienProve=isPermiso;		
		this.isPermisoCopiarDetalleMoviClienProve=isPermiso;		
		this.isPermisoVerFormDetalleMoviClienProve=isPermiso;		
		this.isPermisoDuplicarDetalleMoviClienProve=isPermiso;
		this.isPermisoOrdenDetalleMoviClienProve=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleMoviClienProve(Boolean isPermiso) {
		//this.isPermisoTodoDetalleMoviClienProve=isPermiso;
		this.isPermisoNuevoDetalleMoviClienProve=isPermiso;
		this.isPermisoActualizarDetalleMoviClienProve=isPermiso;
		this.isPermisoActualizarOriginalDetalleMoviClienProve=isPermiso;
		this.isPermisoEliminarDetalleMoviClienProve=isPermiso;
		this.isPermisoGuardarCambiosDetalleMoviClienProve=isPermiso;
		//this.isPermisoConsultaDetalleMoviClienProve=isPermiso;
		//this.isPermisoBusquedaDetalleMoviClienProve=isPermiso;
		//this.isPermisoReporteDetalleMoviClienProve=isPermiso;
		//this.isPermisoOrdenDetalleMoviClienProve=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleMoviClienProve=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleMoviClienProve=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleMoviClienProve=isPermiso;		
		//this.isPermisoCopiarDetalleMoviClienProve=isPermiso;		
		//this.isPermisoDuplicarDetalleMoviClienProve=isPermiso;
		//this.isPermisoOrdenDetalleMoviClienProve=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleMoviClienProveClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetalleMoviClienProveJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleMoviClienProveClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleMoviClienProveClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleMoviClienProveClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleMoviClienProveClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetalleMoviClienProve() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleMoviClienProveJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleMoviClienProveConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleMoviClienProve=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleMoviClienProve=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleMoviClienProve=this.isPermisoActualizarDetalleMoviClienProve;
			this.isPermisoEliminarDetalleMoviClienProve=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleMoviClienProve=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleMoviClienProve=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleMoviClienProve=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleMoviClienProve=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleMoviClienProve=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleMoviClienProve=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleMoviClienProve=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleMoviClienProve=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleMoviClienProve=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleMoviClienProve=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleMoviClienProve=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleMoviClienProve=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleMoviClienProve=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleMoviClienProve.setToolTipText(this.jTableDatosDetalleMoviClienProve.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleMoviClienProve(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleMoviClienProve(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleMoviClienProveJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleMoviClienProveJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleMoviClienProve() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleMoviClienProveListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.facturasForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.sucursalmovimientosForeignKey=new ArrayList();
				this.tipotransaccionmodulosForeignKey=new ArrayList();
				this.estadodetalleclientesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleMoviClienProveListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleMoviClienProveJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleMoviClienProveListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoDetalleClienteListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FacturaConstantesFunciones.SFINALQUERY;

				this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalMovimientoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalmovimientosForeignKey==null||this.sucursalmovimientosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalMovimientosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoDetalleClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadodetalleclientesForeignKey==null||this.estadodetalleclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoDetalleClienteConstantesFunciones.getArrayColumnasGlobalesEstadoDetalleCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoDetalleClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoDetalleClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoDetalleClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleMoviClienProveListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleMoviClienProveParameterReturnGeneral detallemoviclienproveReturnGeneral=new DetalleMoviClienProveParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_empresaDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_empresaDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_sucursalDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_sucursalDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_ejercicioDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_ejercicioDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_periodoDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_periodoDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_anioDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_anioDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_mesDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_mesDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_moduloDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_moduloDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_asiento_contableDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_asiento_contableDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_clienteDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_clienteDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalFactura="";

				if(((this.facturasForeignKey==null||this.facturasForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_facturaDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_facturaDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FacturaConstantesFunciones.getArrayColumnasGlobalesFactura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaConstantesFunciones.TABLENAME);

						finalQueryGlobalFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalFactura, "");
						finalQueryGlobalFactura+=FacturaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFactura=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidFacturaActual();
					}
				} else {
					finalQueryGlobalFactura="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_transaccionDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_transaccionDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_monedaDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_monedaDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalSucursalMovimiento="";

				if(((this.sucursalmovimientosForeignKey==null||this.sucursalmovimientosForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_sucursal_movimientoDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_sucursal_movimientoDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionSucursalMovimiento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursalMovimiento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursalMovimiento=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursalMovimiento, "");
						finalQueryGlobalSucursalMovimiento+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalMovimientosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursalMovimiento=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidSucursalMovimientoActual();
					}
				} else {
					finalQueryGlobalSucursalMovimiento="NONE";
				}


				String finalQueryGlobalTipoTransaccionModulo="";

				if(((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_tipo_transaccion_moduloDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_tipo_transaccion_moduloDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTransaccionModulo, "");
						finalQueryGlobalTipoTransaccionModulo+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTransaccionModulo=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidTipoTransaccionModuloActual();
					}
				} else {
					finalQueryGlobalTipoTransaccionModulo="NONE";
				}


				String finalQueryGlobalEstadoDetalleCliente="";

				if(((this.estadodetalleclientesForeignKey==null||this.estadodetalleclientesForeignKey.size()<=0) && this.detallemoviclienproveConstantesFunciones.cargarid_estado_detalle_clienteDetalleMoviClienProve)
					 || (this.esRecargarFks && this.detallemoviclienproveConstantesFunciones.cargarid_estado_detalle_clienteDetalleMoviClienProve)) {

					if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetalleCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoDetalleClienteConstantesFunciones.getArrayColumnasGlobalesEstadoDetalleCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoDetalleCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoDetalleClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoDetalleCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoDetalleCliente, "");
						finalQueryGlobalEstadoDetalleCliente+=EstadoDetalleClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoDetalleClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoDetalleCliente=" WHERE " + ConstantesSql.ID + "="+detallemoviclienproveSessionBean.getlidEstadoDetalleClienteActual();
					}
				} else {
					finalQueryGlobalEstadoDetalleCliente="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detallemoviclienproveReturnGeneral=detallemoviclienproveLogic.cargarCombosLoteForeignKeyDetalleMoviClienProve(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalModulo,finalQueryGlobalAsientoContable,finalQueryGlobalCliente,finalQueryGlobalFactura,finalQueryGlobalTransaccion,finalQueryGlobalMoneda,finalQueryGlobalSucursalMovimiento,finalQueryGlobalTipoTransaccionModulo,finalQueryGlobalEstadoDetalleCliente);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detallemoviclienproveReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detallemoviclienproveReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detallemoviclienproveReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detallemoviclienproveReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detallemoviclienproveReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detallemoviclienproveReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=detallemoviclienproveReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=detallemoviclienproveReturnGeneral.getasientocontablesForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=detallemoviclienproveReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalFactura.equals("NONE")) {
				this.facturasForeignKey=detallemoviclienproveReturnGeneral.getfacturasForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=detallemoviclienproveReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=detallemoviclienproveReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalSucursalMovimiento.equals("NONE")) {
				this.sucursalmovimientosForeignKey=detallemoviclienproveReturnGeneral.getsucursalmovimientosForeignKey();
			}

			if(!finalQueryGlobalTipoTransaccionModulo.equals("NONE")) {
				this.tipotransaccionmodulosForeignKey=detallemoviclienproveReturnGeneral.gettipotransaccionmodulosForeignKey();
			}

			if(!finalQueryGlobalEstadoDetalleCliente.equals("NONE")) {
				this.estadodetalleclientesForeignKey=detallemoviclienproveReturnGeneral.getestadodetalleclientesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleMoviClienProve()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyAsientoContable();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyFactura();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeySucursalMovimiento();
			this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
			this.addItemDefectoCombosForeignKeyEstadoDetalleCliente();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detallemoviclienproveSessionBean==null) {
				this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFactura()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionFactura()) {
				Factura factura=new Factura();
				FacturaConstantesFunciones.setFacturaDescripcion(factura,Constantes.SMENSAJE_ESCOJA_OPCION);
				factura.setId(null);

				if(!FacturaConstantesFunciones.ExisteEnLista(this.facturasForeignKey,factura,true)) {

					this.facturasForeignKey.add(0,factura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursalMovimiento()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionSucursalMovimiento()) {
				Sucursal sucursalmovimiento=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursalmovimiento,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursalmovimiento.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalmovimientosForeignKey,sucursalmovimiento,true)) {

					this.sucursalmovimientosForeignKey.add(0,sucursalmovimiento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTransaccionModulo()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				TipoTransaccionModulo tipotransaccionmodulo=new TipoTransaccionModulo();
				TipoTransaccionModuloConstantesFunciones.setTipoTransaccionModuloDescripcion(tipotransaccionmodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotransaccionmodulo.setId(null);

				if(!TipoTransaccionModuloConstantesFunciones.ExisteEnLista(this.tipotransaccionmodulosForeignKey,tipotransaccionmodulo,true)) {

					this.tipotransaccionmodulosForeignKey.add(0,tipotransaccionmodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoDetalleCliente()throws Exception {
		try {

			if(!this.detallemoviclienproveSessionBean.getisBusquedaDesdeForeignKeySesionEstadoDetalleCliente()) {
				EstadoDetalleCliente estadodetallecliente=new EstadoDetalleCliente();
				EstadoDetalleClienteConstantesFunciones.setEstadoDetalleClienteDescripcion(estadodetallecliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadodetallecliente.setId(null);

				if(!EstadoDetalleClienteConstantesFunciones.ExisteEnLista(this.estadodetalleclientesForeignKey,estadodetallecliente,true)) {

					this.estadodetalleclientesForeignKey.add(0,estadodetallecliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleMoviClienProve()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleMoviClienProve(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyDetalleMoviClienProve()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualModuloForeignKey(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR,false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.detallemoviclienprove.setfecha_vence(this.parametroGeneralUsuario.getfecha_sistema());
				this.detallemoviclienprove.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleMoviClienProve();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove)throws Exception {	
		try {
			
			this.setActualAsientoContableForeignKey(detallemoviclienprove.getid_asiento_contable(),false,"Formulario");
			this.setActualClienteForeignKey(detallemoviclienprove.getid_cliente(),false,"Formulario");
			this.setActualFacturaForeignKey(detallemoviclienprove.getid_factura(),false,"Formulario");
			this.setActualTransaccionForeignKey(detallemoviclienprove.getid_transaccion(),false,"Formulario");
			this.setActualSucursalMovimientoForeignKey(detallemoviclienprove.getid_sucursal_movimiento(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(detallemoviclienprove.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualEstadoDetalleClienteForeignKey(detallemoviclienprove.getid_estado_detalle_cliente(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detallemoviclienprove.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableDetalleMoviClienProve")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(detallemoviclienprove.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				if(detallemoviclienprove.getCliente()!=null && !sTipoEvento.equals("id_clienteDetalleMoviClienProve")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(detallemoviclienprove.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(detallemoviclienprove.getFactura()!=null && !sTipoEvento.equals("id_facturaDetalleMoviClienProve")) { //sTipoEvento Evita Bucle Infinito

					this.facturasForeignKey=new ArrayList<Factura>();
					this.facturasForeignKey.add(detallemoviclienprove.getFactura());

					this.addItemDefectoCombosForeignKeyFactura();
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleMoviClienProve()throws Exception {	
		try {
			
			this.setActualAsientoContableForeignKey(this.detallemoviclienproveConstantesFunciones.getid_asiento_contable(),false,"Formulario");
			this.setActualClienteForeignKey(this.detallemoviclienproveConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualFacturaForeignKey(this.detallemoviclienproveConstantesFunciones.getid_factura(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.detallemoviclienproveConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualSucursalMovimientoForeignKey(this.detallemoviclienproveConstantesFunciones.getid_sucursal_movimiento(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(this.detallemoviclienproveConstantesFunciones.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualEstadoDetalleClienteForeignKey(this.detallemoviclienproveConstantesFunciones.getid_estado_detalle_cliente(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleMoviClienProve()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleMoviClienProve()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleMoviClienProve()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleMoviClienProve()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleMoviClienProve()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameFacturasForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameSucursalMovimientosForeignKey("Todos");
			this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
			this.cargarCombosFrameEstadoDetalleClientesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleMoviClienProve(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalMovimientosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoDetalleClientesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleMoviClienProve()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	






























	
	

	public DetalleMoviClienProveBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleMoviClienProveBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleMoviClienProveBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean(); 
		this.detallemoviclienproveConstantesFunciones=new DetalleMoviClienProveConstantesFunciones(); 
		this.detallemoviclienproveBean=new DetalleMoviClienProve();//(this.detallemoviclienproveConstantesFunciones); 		
		this.detallemoviclienproveReturnGeneral=new DetalleMoviClienProveParameterReturnGeneral(); 
		
		this.detallemoviclienproveSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detallemoviclienproveSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleMoviClienProveBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleMoviClienProveBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleMoviClienProveBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleMoviClienProve(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detallemoviclienproveConstantesFunciones=new DetalleMoviClienProveConstantesFunciones(); 
			this.detallemoviclienproveBean=new DetalleMoviClienProve();//this.detallemoviclienproveConstantesFunciones); 			
			this.detallemoviclienproveReturnGeneral=new DetalleMoviClienProveParameterReturnGeneral(); 
		
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Cliente Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detallemoviclienprove=new DetalleMoviClienProve();
			this.detallemoviclienproves = new ArrayList<DetalleMoviClienProve>();
			this.detallemoviclienprovesAux = new ArrayList<DetalleMoviClienProve>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic=new DetalleMoviClienProveLogic();
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			//this.detallemoviclienproveSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detallemoviclienproveSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleMoviClienProve);
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleMoviClienProve);	
					}
					
					if(this.jInternalFrameImportacionDetalleMoviClienProve!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleMoviClienProve);							
					}
					*/
				}
				
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameOrderByDetalleMoviClienProve!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleMoviClienProve);					
					}
					*/
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleMoviClienProve);
				this.jInternalFrameDetalleFormDetalleMoviClienProve.setVisible(false);
				this.jInternalFrameDetalleFormDetalleMoviClienProve.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				/*
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleMoviClienProve);
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleMoviClienProve!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleMoviClienProve);
					this.jInternalFrameImportacionDetalleMoviClienProve.setVisible(false);
					this.jInternalFrameImportacionDetalleMoviClienProve.setSelected(false);
				}
				
				*/
			}
			
			
			if(!this.conCargarMinimo) {
				/*
				if(this.jInternalFrameOrderByDetalleMoviClienProve!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleMoviClienProve);
					this.jInternalFrameOrderByDetalleMoviClienProve.setVisible(false);
					this.jInternalFrameOrderByDetalleMoviClienProve.setSelected(false);				
				}
				*/
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleMoviClienProveActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleMoviClienProveConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detallemoviclienproveReturnGeneral=new DetalleMoviClienProveParameterReturnGeneral();
			
			this.detallemoviclienproveParameterGeneral=new DetalleMoviClienProveParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detallemoviclienproveLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			/*
			if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			*/
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleMoviClienProveJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleMoviClienProveConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),this.detallemoviclienproveSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleMoviClienProveConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),this.detallemoviclienproveSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
			this.isVisibilidadCeldaDuplicarDetalleMoviClienProve=true;
			this.isVisibilidadCeldaCopiarDetalleMoviClienProve=true;
			this.isVisibilidadCeldaVerFormDetalleMoviClienProve=true;
			this.isVisibilidadCeldaOrdenDetalleMoviClienProve=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdDetalleMoviClienProve=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoDetalleCliente=true;
			this.isVisibilidadFK_IdFactura=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoTransaccionModulo=true;
			this.isVisibilidadFK_IdTransaccion=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleMoviClienProve();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleMoviClienProve(false);
			
			this.setPermisosUsuarioDetalleMoviClienProve();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado() 
				|| (this.detallemoviclienproveSessionBean.getEsGuardarRelacionado() && this.detallemoviclienproveSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleMoviClienProveClasesRelacionadas();
			}
			
			if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleMoviClienProveClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleMoviClienProve();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleMoviClienProve();
			}
			
			if(!this.isPermisoBusquedaDetalleMoviClienProve) {
				//BYDAN_BUSQUEDAS
				/*
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(false);				
				*/
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleMoviClienProve,this.isPermisoPaginacionMedioDetalleMoviClienProve,this.isPermisoPaginacionTodoDetalleMoviClienProve);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleMoviClienProveConstantesFunciones.getTiposSeleccionarDetalleMoviClienProve());
				
				this.tiposColumnasSelect=DetalleMoviClienProveConstantesFunciones.getTiposSeleccionarDetalleMoviClienProve(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleMoviClienProve();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleMoviClienProve(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleMoviClienProve(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleMoviClienProve() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			/*
			this.arrOrderBy= new  ArrayList<OrderBy>();
			*/
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			/*
			this.traerValoresTablaOrderBy();			
			*/
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.moduloLogic=new ModuloLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			this.clienteLogic=new ClienteLogic();
			this.facturaLogic=new FacturaLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.monedaLogic=new MonedaLogic();
			this.sucursalmovimientoLogic=new SucursalLogic();
			this.tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();
			this.estadodetalleclienteLogic=new EstadoDetalleClienteLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detallemoviclienproveImplementable= (DetalleMoviClienProveImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleMoviClienProveConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detallemoviclienproveImplementableHome= (DetalleMoviClienProveImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleMoviClienProveConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detallemoviclienproves= new ArrayList<DetalleMoviClienProve>();
			this.detallemoviclienprovesEliminados= new ArrayList<DetalleMoviClienProve>();
						
			this.isEsNuevoDetalleMoviClienProve=false;
			this.esParaAccionDesdeFormularioDetalleMoviClienProve=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idAsientoContableActual=0L;
			this.idClienteActual=0L;
			this.idFacturaActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.facturasForeignKey=new ArrayList<Factura>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.sucursalmovimientosForeignKey=new ArrayList<Sucursal>() ;
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>() ;
			this.estadodetalleclientesForeignKey=new ArrayList<EstadoDetalleCliente>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleMoviClienProve(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleMoviClienProve();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleMoviClienProveConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleMoviClienProve(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleMoviClienProve();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleMoviClienProve();
			}
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleMoviClienProve.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(0);
				}	
				
				*/
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleMoviClienProve(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleMoviClienProve: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleMoviClienProve() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleMoviClienProve")) {
				iIndex=this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleMoviClienProve();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetalleMoviClienProve(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleMoviClienProve(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleMoviClienProve(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleMoviClienProveListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleMoviClienProve();
		
		this.cargarCombosFrameForeignKeyDetalleMoviClienProve();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleMoviClienProve();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleMoviClienProve();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFactura();
				this.cargarCombosFrameFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFactura(this.facturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalMovimiento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySucursalMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySucursalMovimiento();
				this.cargarCombosFrameSucursalMovimientosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSucursalMovimiento(this.sucursalmovimientosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTransaccionModulo(this.tipotransaccionmodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoDetalleCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoDetalleClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoDetalleCliente();
				this.cargarCombosFrameEstadoDetalleClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoDetalleCliente(this.estadodetalleclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleMoviClienProveActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			
			if(jTableDatosDetalleMoviClienProve.getRowCount()>=1) {
				jTableDatosDetalleMoviClienProve.removeRowSelectionInterval(0, jTableDatosDetalleMoviClienProve.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleMoviClienProve=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleMoviClienProve(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleMoviClienProve(true);			
			//this.detallemoviclienprove=new DetalleMoviClienProve();
			//this.detallemoviclienprove.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleMoviClienProve(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve() ;
			
			if(DetalleMoviClienProveJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleMoviClienProve(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detallemoviclienprove);	
			this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);				
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleMoviClienProve: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleMoviClienProveActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleMoviClienProve.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleMoviClienProve.getSelectedRows().length;			
			}
			
			detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleMoviClienProve--;			
				//DetalleMoviClienProve detallemoviclienproveAux= new DetalleMoviClienProve();			
				//detallemoviclienproveAux.setId(this.iIdNuevoDetalleMoviClienProve);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleMoviClienProve detallemoviclienproveOrigen=new DetalleMoviClienProve();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleMoviClienProve detallemoviclienproveOrigen : detallemoviclienprovesSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detallemoviclienproveOrigen =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallemoviclienproveOrigen =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleMoviClienProve();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detallemoviclienprove.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleMoviClienProve(detallemoviclienproveOrigen,this.detallemoviclienprove,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallemoviclienproveLogic.getDetalleMoviClienProves().add(this.detallemoviclienproveAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallemoviclienproves.add(this.detallemoviclienproveAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
				
				this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(this.getIndiceNuevoDetalleMoviClienProve(), this.getIndiceNuevoDetalleMoviClienProve());
				
				int iLastRow =  this.jTableDatosDetalleMoviClienProve.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleMoviClienProve.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleMoviClienProve.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();									
		
			DetalleMoviClienProve detallemoviclienproveOrigen=new DetalleMoviClienProve();
			DetalleMoviClienProve detallemoviclienproveDestino=new DetalleMoviClienProve();
				
			detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleMoviClienProve.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detallemoviclienprovesSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleMoviClienProve.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveOrigen =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallemoviclienproveOrigen =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallemoviclienproveDestino =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallemoviclienproveDestino =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detallemoviclienproveOrigen =detallemoviclienprovesSeleccionados.get(0);
				detallemoviclienproveDestino =detallemoviclienprovesSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleMoviClienProve(detallemoviclienproveOrigen,detallemoviclienproveDestino,true,false);
				
				detallemoviclienproveDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallemoviclienproveDestino,detallemoviclienproveLogic.getDetalleMoviClienProves());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallemoviclienproveDestino,detallemoviclienproves);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
				
				//this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(this.getIndiceNuevoDetalleMoviClienProve(), this.getIndiceNuevoDetalleMoviClienProve());
				
				int iLastRow =  this.jTableDatosDetalleMoviClienProve.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleMoviClienProve.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleMoviClienProve.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleMoviClienProve.isVisible();
			
			//BYDAN_BUSQUEDAS
			/*
			this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(!isVisible);			
			*/
			
			this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(!isVisible);
			this.jPanelPaginacionDetalleMoviClienProve.setVisible(!isVisible);
			this.jPanelAccionesDetalleMoviClienProve.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleMoviClienProve();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameReporteDinamicoDetalleMoviClienProve();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameImportacionDetalleMoviClienProve();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			
			this.abrirInicializarFrameOrderByDetalleMoviClienProve();
			
			this.abrirFrameOrderByDetalleMoviClienProve();
			*/
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameOrderByDetalleMoviClienProve();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleMoviClienProve(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleMoviClienProve);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleMoviClienProve.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleMoviClienProve.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleMoviClienProve.setSize(this.jInternalFrameDetalleFormDetalleMoviClienProve.iWidthFormulario,this.jInternalFrameDetalleFormDetalleMoviClienProve.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleMoviClienProve.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleMoviClienProve.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleMoviClienProve.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jContentPaneDetalleDetalleMoviClienProve.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleMoviClienProve.jContentPaneDetalleDetalleMoviClienProve.getWidth(),DetalleMoviClienProveConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleMoviClienProve.jContentPaneDetalleDetalleMoviClienProve.getWidth(),DetalleMoviClienProveConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleMoviClienProve.jContentPaneDetalleDetalleMoviClienProve.getWidth(),DetalleMoviClienProveConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleMoviClienProve.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleMoviClienProve.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirInicializarFrameOrderByDetalleMoviClienProve() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleMoviClienProve==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleMoviClienProve=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleMoviClienProve,false,this);
				} else {
					this.jInternalFrameOrderByDetalleMoviClienProve=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleMoviClienProve,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleMoviClienProve);
				this.jInternalFrameOrderByDetalleMoviClienProve.setVisible(false);
				this.jInternalFrameOrderByDetalleMoviClienProve.setSelected(false);
				
				this.jInternalFrameOrderByDetalleMoviClienProve.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleMoviClienProve"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleMoviClienProve();
			}
		} catch (final Exception e) {
			
		}
	}
	*/
	
	/*
	public void abrirInicializarFrameImportacionDetalleMoviClienProve() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleMoviClienProve==null) {
				
				this.jInternalFrameImportacionDetalleMoviClienProve=new ImportacionJInternalFrame(DetalleMoviClienProveConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleMoviClienProve);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleMoviClienProve);
				this.jInternalFrameImportacionDetalleMoviClienProve.setVisible(false);
				this.jInternalFrameImportacionDetalleMoviClienProve.setSelected(false);


				this.jInternalFrameImportacionDetalleMoviClienProve.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleMoviClienProve"));
				this.jInternalFrameImportacionDetalleMoviClienProve.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleMoviClienProve"));
				this.jInternalFrameImportacionDetalleMoviClienProve.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleMoviClienProve"));


			}
		} catch (final Exception e) {
			
		}
	}		
	*/
	
	/*
	public void abrirInicializarFrameReporteDinamicoDetalleMoviClienProve() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve==null) {
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve=new ReporteDinamicoJInternalFrame(DetalleMoviClienProveConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleMoviClienProve);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleMoviClienProve);
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleMoviClienProve"));
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleMoviClienProve"));
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleMoviClienProve"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleMoviClienProve();
			}

		} catch (final Exception e) {
			
		}
	}	
	*/
	
	
		
					
	public void cerrarFrameDetalleDetalleMoviClienProve() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleMoviClienProve);
			
	       	this.jInternalFrameDetalleFormDetalleMoviClienProve.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleMoviClienProve.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleMoviClienProve.dispose();
			//this.jInternalFrameDetalleFormDetalleMoviClienProve=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirFrameReporteDinamicoDetalleMoviClienProve() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void abrirFrameImportacionDetalleMoviClienProve() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleMoviClienProve.setVisible(true);
	        this.jInternalFrameImportacionDetalleMoviClienProve.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }		
	}	
	*/
	
	
	
	/*
	public void abrirFrameOrderByDetalleMoviClienProve() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleMoviClienProve.setVisible(true);
	        this.jInternalFrameOrderByDetalleMoviClienProve.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameOrderByDetalleMoviClienProve() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleMoviClienProve.setVisible(false);
	        this.jInternalFrameOrderByDetalleMoviClienProve.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameReporteDinamicoDetalleMoviClienProve() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameImportacionDetalleMoviClienProve() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleMoviClienProve.setVisible(false);
	        this.jInternalFrameImportacionDetalleMoviClienProve.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	
	
	public void jButtonModificarDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleMoviClienProve(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleMoviClienProve(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleMoviClienProve(true);
			//this.isEsNuevoDetalleMoviClienProve=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleMoviClienProve(false) ;
			
			if(detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetalleMoviClienProveJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleMoviClienProve(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleMoviClienProveActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleMoviClienProve(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleMoviClienProve(true);
			//this.isEsNuevoDetalleMoviClienProve=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detallemoviclienprove.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleMoviClienProve(false) ;
			
			if(DetalleMoviClienProveJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleMoviClienProve(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("AsientoContable")) {
				if(!this.detallemoviclienproveConstantesFunciones.cargarid_asiento_contableDetalleMoviClienProve) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.detallemoviclienproveConstantesFunciones.cargarid_clienteDetalleMoviClienProve) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Factura")) {
				if(!this.detallemoviclienproveConstantesFunciones.cargarid_facturaDetalleMoviClienProve) {
					this.cargarCombosFacturasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
					this.cargarCombosFrameFacturasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_factura (id);

				this.recargarComboTablaFactura(this.facturasForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFactura(List<Factura> facturasForeignKey)throws Exception{
		TableColumn tableColumnFactura=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA));
		TableCellEditor tableCellEditorFactura =tableColumnFactura.getCellEditor();

		FacturaTableCell facturaTableCellFk=(FacturaTableCell)tableCellEditorFactura;

		if(facturaTableCellFk!=null) {
			facturaTableCellFk.setfacturasForeignKey(facturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//facturaTableCellFk.setRowActual(intSelectedRow);
			//facturaTableCellFk.setfacturasForeignKeyActual(facturasForeignKey);
		//}


		if(facturaTableCellFk!=null) {
			facturaTableCellFk.RecargarFacturasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaSucursalMovimiento(List<Sucursal> sucursalmovimientosForeignKey)throws Exception{
		TableColumn tableColumnSucursalMovimiento=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO));
		TableCellEditor tableCellEditorSucursalMovimiento =tableColumnSucursalMovimiento.getCellEditor();

		SucursalTableCell sucursalTableCellFk=(SucursalTableCell)tableCellEditorSucursalMovimiento;

		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.setsucursalsForeignKey(sucursalmovimientosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//sucursalTableCellFk.setRowActual(intSelectedRow);
			//sucursalTableCellFk.setsucursalsForeignKeyActual(sucursalmovimientosForeignKey);
		//}


		if(sucursalTableCellFk!=null) {
			sucursalTableCellFk.RecargarSucursalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTransaccionModulo(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoTransaccionModulo=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO));
		TableCellEditor tableCellEditorTipoTransaccionModulo =tableColumnTipoTransaccionModulo.getCellEditor();

		TipoTransaccionModuloTableCell tipotransaccionmoduloTableCellFk=(TipoTransaccionModuloTableCell)tableCellEditorTipoTransaccionModulo;

		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKey(tipotransaccionmodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotransaccionmoduloTableCellFk.setRowActual(intSelectedRow);
			//tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKeyActual(tipotransaccionmodulosForeignKey);
		//}


		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.RecargarTipoTransaccionModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoDetalleCliente(List<EstadoDetalleCliente> estadodetalleclientesForeignKey)throws Exception{
		TableColumn tableColumnEstadoDetalleCliente=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE));
		TableCellEditor tableCellEditorEstadoDetalleCliente =tableColumnEstadoDetalleCliente.getCellEditor();

		EstadoDetalleClienteTableCell estadodetalleclienteTableCellFk=(EstadoDetalleClienteTableCell)tableCellEditorEstadoDetalleCliente;

		if(estadodetalleclienteTableCellFk!=null) {
			estadodetalleclienteTableCellFk.setestadodetalleclientesForeignKey(estadodetalleclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadodetalleclienteTableCellFk.setRowActual(intSelectedRow);
			//estadodetalleclienteTableCellFk.setestadodetalleclientesForeignKeyActual(estadodetalleclientesForeignKey);
		//}


		if(estadodetalleclienteTableCellFk!=null) {
			estadodetalleclienteTableCellFk.RecargarEstadoDetalleClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_factura (Long id) throws Exception {
		this.setActualFacturaForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleMoviClienProve(false);
			
			//if(!this.isEsNuevoDetalleMoviClienProve) {								
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				
			}
			
			if(this.permiteMantenimiento(this.detallemoviclienprove)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleMoviClienProve=true;
					this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
					this.isEsNuevoDetalleMoviClienProve=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleMoviClienProve=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleMoviClienProve=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleMoviClienProve(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve(false);
				
				this.habilitarDeshabilitarControlesDetalleMoviClienProve(false);
			
												
				
				if(DetalleMoviClienProveJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleMoviClienProve();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleMoviClienProveActionPerformed(evt,detallemoviclienproveSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleMoviClienProve(this.detallemoviclienprove,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detallemoviclienproveSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detallemoviclienprove.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				this.detallemoviclienprove.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				this.detallemoviclienprove.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detallemoviclienprove)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleMoviClienProveModel) this.jTableDatosDetalleMoviClienProve.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleMoviClienProve=true;
				this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
				this.isEsNuevoDetalleMoviClienProve=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleMoviClienProve(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve(false);
				
				this.habilitarDeshabilitarControlesDetalleMoviClienProve(false);
				
				
				
				if(DetalleMoviClienProveJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleMoviClienProve();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleMoviClienProve.getRowCount()>=1) {
				jTableDatosDetalleMoviClienProve.removeRowSelectionInterval(0, jTableDatosDetalleMoviClienProve.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleMoviClienProve(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleMoviClienProve(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve(false) ;
			
			this.isEsNuevoDetalleMoviClienProve=false;
			
			if(DetalleMoviClienProveJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleMoviClienProve();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleMoviClienProve(false);
				
				//SI ES MANUAL
				if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleMoviClienProve();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleMoviClienProve--;			
			//DetalleMoviClienProve detallemoviclienproveAux= new DetalleMoviClienProve();			
			//detallemoviclienproveAux.setId(this.iIdNuevoDetalleMoviClienProve);
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleMoviClienProve();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
			
			this.detallemoviclienprove.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detallemoviclienproveLogic.getDetalleMoviClienProves().add(this.detallemoviclienproveAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detallemoviclienproves.add(this.detallemoviclienproveAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
			
			this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(this.getIndiceNuevoDetalleMoviClienProve(), this.getIndiceNuevoDetalleMoviClienProve());
			
			int iLastRow =  this.jTableDatosDetalleMoviClienProve.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleMoviClienProve.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleMoviClienProve.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleMoviClienProve(false);
			
			//SI ES MANUAL
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleMoviClienProve();
			}
			
			//this.abrirFrameTreeDetalleMoviClienProve();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	/*
	public void jButtonGenerarImportacionDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle ClienteS ?", "MANTENIMIENTO DE Detalle Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleMoviClienProve.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleMoviClienProve();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detallemoviclienproveReturnGeneral=detallemoviclienproveLogic.procesarImportacionDetalleMoviClienProvesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detallemoviclienproveParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleMoviClienProveReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	*/
	
	/*
	public void jButtonAbrirImportacionDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleMoviClienProve.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleMoviClienProve.setFileImportacion(this.jInternalFrameImportacionDetalleMoviClienProve.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleMoviClienProve.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleMoviClienProve.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleMoviClienProve.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleMoviClienProve.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	*/
	
	public void jButtonGenerarReporteDinamicoDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		

		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		/*
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		*/
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleMoviClienProveBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleMoviClienProveBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			/*
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			*/
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienprovesSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	/*
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaVence_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaVence_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaVence_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaVence_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Factura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Factura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Factura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Factura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bitoMoneLocal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bitoMoneLocal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bitoMoneLocal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bitoMoneLocal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_editoMoneLocal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_editoMoneLocal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_editoMoneLocal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_editoMoneLocal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bitoMoneExtra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bitoMoneExtra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bitoMoneExtra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bitoMoneExtra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_editoMoneExtra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_editoMoneExtra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_editoMoneExtra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_editoMoneExtra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SucursalMovimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SucursalMovimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SucursalMovimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SucursalMovimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTransaccionModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTransaccionModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTransaccionModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTransaccionModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoDetalleCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoDetalleCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoDetalleCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoDetalleCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoMoneLocal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoMoneLocal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoMoneLocal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoMoneLocal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoMoneExtra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoMoneExtra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoMoneExtra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoMoneExtra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	*/
	
	/*
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE:
					sNombreCampoCategoria="fecha_vence";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoria="id_factura";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA:
					sNombreCampoCategoria="numero_factura";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL:
					sNombreCampoCategoria="debito_mone_local";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL:
					sNombreCampoCategoria="credito_mone_local";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					sNombreCampoCategoria="debito_mone_extra";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					sNombreCampoCategoria="credito_mone_extra";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoria="cotizacion";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO:
					sNombreCampoCategoria="id_sucursal_movimiento";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoria="id_tipo_transaccion_modulo";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE:
					sNombreCampoCategoria="id_estado_detalle_cliente";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL:
					sNombreCampoCategoria="monto_mone_local";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA:
					sNombreCampoCategoria="monto_mone_extra";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoria="numero_comprobante";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE:
					sNombreCampoCategoriaValor="fecha_vence";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA:
					sNombreCampoCategoriaValor="id_factura";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA:
					sNombreCampoCategoriaValor="numero_factura";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL:
					sNombreCampoCategoriaValor="debito_mone_local";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL:
					sNombreCampoCategoriaValor="credito_mone_local";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					sNombreCampoCategoriaValor="debito_mone_extra";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					sNombreCampoCategoriaValor="credito_mone_extra";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoriaValor="cotizacion";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO:
					sNombreCampoCategoriaValor="id_sucursal_movimiento";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoriaValor="id_tipo_transaccion_modulo";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE:
					sNombreCampoCategoriaValor="id_estado_detalle_cliente";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL:
					sNombreCampoCategoriaValor="monto_mone_local";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA:
					sNombreCampoCategoriaValor="monto_mone_extra";
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoriaValor="numero_comprobante";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento C.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Vence",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_vence");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente/Prove",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_factura");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_factura");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Debito Local",sNombreCampoCategoria,sNombreCampoCategoriaValor,"debito_mone_local");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Credito Local",sNombreCampoCategoria,sNombreCampoCategoriaValor,"credito_mone_local");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Debito Extra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"debito_mone_extra");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Credito Extra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"credito_mone_extra");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cotizacion");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal Movimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal_movimiento");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Transaccion Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_transaccion_modulo");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Detalle Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_detalle_cliente");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Mone Local",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_mone_local");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Mone Extra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_mone_extra");
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_comprobante");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	*/
	
	//@SuppressWarnings("deprecation")
	/*
	public void jButtonGenerarExcelReporteDinamicoDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallemoviclienprove";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleMoviClienProves");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getfecha_vence());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getnumero_factura());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getdebito_mone_local());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getcredito_mone_local());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getdebito_mone_extra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getcredito_mone_extra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getcotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getsucursalmovimiento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.gettipotransaccionmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getestadodetallecliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getmonto_mone_local());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getmonto_mone_extra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
					iRow++;

					for(DetalleMoviClienProve detallemoviclienprove:detallemoviclienprovesSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallemoviclienprove.getnumero_comprobante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleMoviClienProve(row);				
			//	iRow++;
			//}				
			
			//for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienprovesSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleMoviClienProve(detallemoviclienproveAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	*/
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleMoviClienProve(false);
			
			//SI ES MANUAL
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleMoviClienProve();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleMoviClienProve(false);
			
			//SI ES MANUAL
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleMoviClienProve();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleMoviClienProveActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleMoviClienProve(false);
			
			//SI ES MANUAL
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleMoviClienProve();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleMoviClienProve() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleMoviClienProve.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleMoviClienProve.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleMoviClienProve.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleMoviClienProve.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleMoviClienProve.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleMoviClienProve.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleMoviClienProve.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleMoviClienProve(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleMoviClienProve(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleMoviClienProve(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleMoviClienProve(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleMoviClienProve(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleMoviClienProve(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleMoviClienProve(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleMoviClienProve(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleMoviClienProve() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleMoviClienProve();
		
		this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
			/*
			this.inicializarActualizarBindingBusquedasManualDetalleMoviClienProve();			
			*/
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleMoviClienProve() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleMoviClienProve(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleMoviClienProve(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleMoviClienProve.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleMoviClienProve.isSelected();
				
				/*
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleMoviClienProve.isSelected();															
				*/
				
				if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleMoviClienProve.jCheckBoxPostAccionNuevoDetalleMoviClienProve.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleMoviClienProve.jCheckBoxPostAccionSinCerrarDetalleMoviClienProve.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleMoviClienProve.jCheckBoxPostAccionSinMensajeDetalleMoviClienProve.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleMoviClienProve.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleMoviClienProve.setSelected(this.isSeleccionados);
				
				/*
				this.jCheckBoxConGraficoReporteDetalleMoviClienProve.setSelected(this.conGraficoReporte);				
				*/
				
				if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jCheckBoxPostAccionNuevoDetalleMoviClienProve.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jCheckBoxPostAccionSinCerrarDetalleMoviClienProve.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jCheckBoxPostAccionSinMensajeDetalleMoviClienProve.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			/*
			if(this.jComboBoxTiposPaginacionDetalleMoviClienProve.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleMoviClienProve.getSelectedItem()).getsCodigo();			
			}
			*/
			
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.getSelectedItem()).getsCodigo();
			}
			
			
			/*
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleMoviClienProve.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleMoviClienProve.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleMoviClienProve.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleMoviClienProve.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleMoviClienProve.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleMoviClienProve.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleMoviClienProve.getText();						
			
			*/
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleMoviClienProve(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleMoviClienProve(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleMoviClienProve() throws Exception {
		try	{
			if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleMoviClienProve();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleMoviClienProve() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleMoviClienProve() throws Exception {
		try	{
			/*
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleMoviClienProve.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleMoviClienProve.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleMoviClienProve.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleMoviClienProve.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleMoviClienProve.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleMoviClienProve.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleMoviClienProve.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleMoviClienProve.addItem(reporte);
			}
			
			
			if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleMoviClienProve.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleMoviClienProve.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleMoviClienProve.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleMoviClienProve.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleMoviClienProve.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleMoviClienProve.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			*/
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			/*
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleMoviClienProve.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleMoviClienProve.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleMoviClienProve.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleMoviClienProve();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			*/
		} catch(Exception e) {
			throw e;
		}
	}		
	
	/*
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleMoviClienProve() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleMoviClienProveConstantesFunciones.getTiposSeleccionarDetalleMoviClienProve(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleMoviClienProveConstantesFunciones.getTiposSeleccionarDetalleMoviClienProve(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleMoviClienProveConstantesFunciones.getTiposSeleccionarDetalleMoviClienProve(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	*/
	
	/*
	public void inicializarActualizarBindingBusquedasManualDetalleMoviClienProve()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableDetalleMoviClienProve.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteDetalleMoviClienProve.getSelectedItem()).getId();}
		if(this.jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.getSelectedItem()!=null){this.id_sucursal_movimientoFK_IdDetalleMoviClienProve=((Sucursal)this.jComboBoxid_sucursal_movimientoFK_IdDetalleMoviClienProveDetalleMoviClienProve.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.getSelectedItem()!=null){this.id_estado_detalle_clienteFK_IdEstadoDetalleCliente=((EstadoDetalleCliente)this.jComboBoxid_estado_detalle_clienteFK_IdEstadoDetalleClienteDetalleMoviClienProve.getSelectedItem()).getId();}
		if(this.jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.getSelectedItem()!=null){this.id_facturaFK_IdFactura=((Factura)this.jComboBoxid_facturaFK_IdFacturaDetalleMoviClienProve.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.getSelectedItem()!=null){this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=((TipoTransaccionModulo)this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloDetalleMoviClienProve.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionDetalleMoviClienProve.getSelectedItem()).getId();}
		
	}
	*/
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleMoviClienProve(Boolean esInicializar) throws Exception {				
		if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
			/*
			this.inicializarActualizarBindingBusquedasManualDetalleMoviClienProve();			
			*/
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleMoviClienProve() throws Exception {
		this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
	}
	
	/*
	public void inicializarActualizarBindingTablaOrderByDetalleMoviClienProve() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleMoviClienProveOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProveOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	*/
	
	
	public void inicializarActualizarBindingTablaDetalleMoviClienProve(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detallemoviclienproveLogic.getDetalleMoviClienProves().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detallemoviclienproves.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleMoviClienProve.setModel(new DetalleMoviClienProveModel(this.detallemoviclienproveLogic.getDetalleMoviClienProves(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleMoviClienProve.setModel(new DetalleMoviClienProveModel(this.detallemoviclienproves,this));
			}
			//ARCHITECTURE
			
							
			/*
			
			if(this.jInternalFrameOrderByDetalleMoviClienProve!=null && this.jInternalFrameOrderByDetalleMoviClienProve.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleMoviClienProve();
			}
			*/
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleMoviClienProveConstantesFunciones.SCLASSWEBTITULO,detallemoviclienproveConstantesFunciones.resaltarSeleccionarDetalleMoviClienProve,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleMoviClienProveConstantesFunciones.SCLASSWEBTITULO,detallemoviclienproveConstantesFunciones.resaltarSeleccionarDetalleMoviClienProve,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_ID));

		if(this.detallemoviclienproveConstantesFunciones.mostraridDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallemoviclienproveConstantesFunciones.resaltaridDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activaridDetalleMoviClienProve,iSizeTabla,this,true,"idDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltaridDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activaridDetalleMoviClienProve,this,true,"idDetalleMoviClienProve","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_empresaDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_empresaDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_empresaDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_empresaDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_empresaDetalleMoviClienProve,false,"id_empresaDetalleMoviClienProve","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_sucursalDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_sucursalDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_sucursalDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_sucursalDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_sucursalDetalleMoviClienProve,false,"id_sucursalDetalleMoviClienProve","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_ejercicioDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_ejercicioDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_ejercicioDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_ejercicioDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_ejercicioDetalleMoviClienProve,false,"id_ejercicioDetalleMoviClienProve","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_periodoDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_periodoDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_periodoDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_periodoDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_periodoDetalleMoviClienProve,false,"id_periodoDetalleMoviClienProve","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_anioDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_anioDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_anioDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_anioDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_anioDetalleMoviClienProve,true,"id_anioDetalleMoviClienProve","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDMES));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_mesDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_mesDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_mesDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_mesDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_mesDetalleMoviClienProve,true,"id_mesDetalleMoviClienProve","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_moduloDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_moduloDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_moduloDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_moduloDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_moduloDetalleMoviClienProve,false,"id_moduloDetalleMoviClienProve","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_asiento_contableDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AsientoContableTableCell(this.asientocontablesForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_asiento_contableDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_asiento_contableDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new AsientoContableTableCell(this.asientocontablesForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_asiento_contableDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_asiento_contableDetalleMoviClienProve,true,"id_asiento_contableDetalleMoviClienProve","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE));

		if(this.detallemoviclienproveConstantesFunciones.mostrarfecha_venceDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detallemoviclienproveConstantesFunciones.resaltarfecha_venceDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarfecha_venceDetalleMoviClienProve,iSizeTabla,this,true,"fecha_venceDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltarfecha_venceDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarfecha_venceDetalleMoviClienProve,this,true,"fecha_venceDetalleMoviClienProve","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_clienteDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_clienteDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_clienteDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_clienteDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_clienteDetalleMoviClienProve,true,"id_clienteDetalleMoviClienProve","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_facturaDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FacturaTableCell(this.facturasForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_facturaDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_facturaDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new FacturaTableCell(this.facturasForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_facturaDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_facturaDetalleMoviClienProve,true,"id_facturaDetalleMoviClienProve","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_transaccionDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_transaccionDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_transaccionDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_transaccionDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_transaccionDetalleMoviClienProve,true,"id_transaccionDetalleMoviClienProve","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL));

		if(this.detallemoviclienproveConstantesFunciones.mostrardebito_mone_localDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_localDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activardebito_mone_localDetalleMoviClienProve,iSizeTabla,this,true,"debito_mone_localDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_localDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activardebito_mone_localDetalleMoviClienProve,this,true,"debito_mone_localDetalleMoviClienProve","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL));

		if(this.detallemoviclienproveConstantesFunciones.mostrarcredito_mone_localDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_localDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarcredito_mone_localDetalleMoviClienProve,iSizeTabla,this,true,"credito_mone_localDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_localDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarcredito_mone_localDetalleMoviClienProve,this,true,"credito_mone_localDetalleMoviClienProve","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA));

		if(this.detallemoviclienproveConstantesFunciones.mostrardebito_mone_extraDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_extraDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activardebito_mone_extraDetalleMoviClienProve,iSizeTabla,this,true,"debito_mone_extraDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_extraDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activardebito_mone_extraDetalleMoviClienProve,this,true,"debito_mone_extraDetalleMoviClienProve","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA));

		if(this.detallemoviclienproveConstantesFunciones.mostrarcredito_mone_extraDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_extraDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarcredito_mone_extraDetalleMoviClienProve,iSizeTabla,this,true,"credito_mone_extraDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_extraDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarcredito_mone_extraDetalleMoviClienProve,this,true,"credito_mone_extraDetalleMoviClienProve","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA));

		if(this.detallemoviclienproveConstantesFunciones.mostrarid_monedaDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_monedaDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_monedaDetalleMoviClienProve,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.detallemoviclienproveConstantesFunciones.resaltarid_monedaDetalleMoviClienProve,this,this.detallemoviclienproveConstantesFunciones.activarid_monedaDetalleMoviClienProve,false,"id_monedaDetalleMoviClienProve","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION));

		if(this.detallemoviclienproveConstantesFunciones.mostrarcotizacionDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallemoviclienproveConstantesFunciones.resaltarcotizacionDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarcotizacionDetalleMoviClienProve,iSizeTabla,this,true,"cotizacionDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltarcotizacionDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activarcotizacionDetalleMoviClienProve,this,true,"cotizacionDetalleMoviClienProve","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detallemoviclienproveConstantesFunciones.mostrardescripcionDetalleMoviClienProve && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detallemoviclienproveConstantesFunciones.resaltardescripcionDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activardescripcionDetalleMoviClienProve,iSizeTabla,this,true,"descripcionDetalleMoviClienProve","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallemoviclienproveConstantesFunciones.resaltardescripcionDetalleMoviClienProve,this.detallemoviclienproveConstantesFunciones.activardescripcionDetalleMoviClienProve,this,true,"descripcionDetalleMoviClienProve","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300);
			//tableColumn.addPropertyChangeListener(new DetalleMoviClienProvePropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleMoviClienProve.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleMoviClienProve.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleMoviClienProve.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleMoviClienProve.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleMoviClienProve.moveColumn(this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleMoviClienProve.moveColumn(this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleMoviClienProve.moveColumn(this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleMoviClienProve.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleMoviClienProve.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleMoviClienProve,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleMoviClienProve.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleMoviClienProve.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleMoviClienProve.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detallemoviclienproveLogic.getDetalleMoviClienProves().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detallemoviclienproves.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleMoviClienProve.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleMoviClienProve.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleMoviClienProve();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleMoviClienProve=false;
					
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
				if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleMoviClienProve.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detallemoviclienprove.getsType().equals("DUPLICADO")
				   || this.detallemoviclienprove.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleMoviClienProve=true;
				
				} else {
					this.isEsNuevoDetalleMoviClienProve=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
					if(this.detallemoviclienprove.getId()>=0 && !this.detallemoviclienprove.getIsNew()) {						
						this.isEsNuevoDetalleMoviClienProve=false;
						
					} else {
						this.isEsNuevoDetalleMoviClienProve=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleMoviClienProve(esRelaciones);						
				
				this.seleccionarDetalleMoviClienProve(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detallemoviclienprove.getId()<0) {
					this.isEsNuevoDetalleMoviClienProve=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleMoviClienProve(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleMoviClienProve(evt,rowIndex);
				}	
				
				if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleMoviClienProve: " + this.dDif); 
					}
				}								
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleMoviClienProve(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detallemoviclienprove)) {
					if(this.detallemoviclienprove.getId()>0) {
						this.detallemoviclienprove.setIsDeleted(true);
						
						this.detallemoviclienprovesEliminados.add(this.detallemoviclienprove);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallemoviclienproveLogic.getDetalleMoviClienProves().remove(this.detallemoviclienprove);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallemoviclienproves.remove(this.detallemoviclienprove);				
					}
					
					
					((DetalleMoviClienProveModel) this.jTableDatosDetalleMoviClienProve.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleMoviClienProve(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleMoviClienProve) {
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleMoviClienProve.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleMoviClienProve.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleMoviClienProve(this.detallemoviclienprove);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_empresaDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_empresaDetalleMoviClienProve) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detallemoviclienprove.getid_empresa());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detallemoviclienprove.getEmpresa()!=null) {
							this.empresasForeignKey.add(detallemoviclienprove.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detallemoviclienprove.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_sucursalDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_sucursalDetalleMoviClienProve) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detallemoviclienprove.getid_sucursal());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detallemoviclienprove.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detallemoviclienprove.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detallemoviclienprove.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_ejercicioDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_ejercicioDetalleMoviClienProve) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detallemoviclienprove.getid_ejercicio());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detallemoviclienprove.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detallemoviclienprove.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detallemoviclienprove.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_periodoDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_periodoDetalleMoviClienProve) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detallemoviclienprove.getid_periodo());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detallemoviclienprove.getPeriodo()!=null) {
							this.periodosForeignKey.add(detallemoviclienprove.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detallemoviclienprove.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_anioDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_anioDetalleMoviClienProve) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detallemoviclienprove.getid_anio());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detallemoviclienprove.getAnio()!=null) {
							this.aniosForeignKey.add(detallemoviclienprove.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detallemoviclienprove.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_mesDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_mesDetalleMoviClienProve) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detallemoviclienprove.getid_mes());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detallemoviclienprove.getMes()!=null) {
							this.messForeignKey.add(detallemoviclienprove.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detallemoviclienprove.getid_mes(),false,"Formulario");

					//Modulo
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_moduloDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_moduloDetalleMoviClienProve) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.detallemoviclienprove.getid_modulo());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(detallemoviclienprove.getModulo()!=null) {
							this.modulosForeignKey.add(detallemoviclienprove.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.detallemoviclienprove.getid_modulo(),false,"Formulario");

					//AsientoContable
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_asiento_contableDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_asiento_contableDetalleMoviClienProve) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.detallemoviclienprove.getid_asiento_contable());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(detallemoviclienprove.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(detallemoviclienprove.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.detallemoviclienprove.getid_asiento_contable(),false,"Formulario");

					//Cliente
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_clienteDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_clienteDetalleMoviClienProve) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.detallemoviclienprove.getid_cliente());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(detallemoviclienprove.getCliente()!=null) {
							this.clientesForeignKey.add(detallemoviclienprove.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.detallemoviclienprove.getid_cliente(),false,"Formulario");

					//Factura
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_facturaDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_facturaDetalleMoviClienProve) {
						//this.cargarCombosFacturasForeignKeyLista(" where id="+this.detallemoviclienprove.getid_factura());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.facturasForeignKey=new ArrayList<Factura>();

						if(detallemoviclienprove.getFactura()!=null) {
							this.facturasForeignKey.add(detallemoviclienprove.getFactura());
						}

						this.addItemDefectoCombosForeignKeyFactura();
						this.cargarCombosFrameFacturasForeignKey("Todos");
					}
					this.setActualFacturaForeignKey(this.detallemoviclienprove.getid_factura(),false,"Formulario");

					//Transaccion
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_transaccionDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_transaccionDetalleMoviClienProve) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.detallemoviclienprove.getid_transaccion());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(detallemoviclienprove.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(detallemoviclienprove.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.detallemoviclienprove.getid_transaccion(),false,"Formulario");

					//Moneda
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_monedaDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_monedaDetalleMoviClienProve) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.detallemoviclienprove.getid_moneda());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(detallemoviclienprove.getMoneda()!=null) {
							this.monedasForeignKey.add(detallemoviclienprove.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.detallemoviclienprove.getid_moneda(),false,"Formulario");

					//SucursalMovimiento
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_sucursal_movimientoDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_sucursal_movimientoDetalleMoviClienProve) {
						//this.cargarCombosSucursalMovimientosForeignKeyLista(" where id="+this.detallemoviclienprove.getid_sucursal_movimiento());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.sucursalmovimientosForeignKey=new ArrayList<Sucursal>();

						if(detallemoviclienprove.getSucursalMovimiento()!=null) {
							this.sucursalmovimientosForeignKey.add(detallemoviclienprove.getSucursalMovimiento());
						}

						this.addItemDefectoCombosForeignKeySucursalMovimiento();
						this.cargarCombosFrameSucursalMovimientosForeignKey("Todos");
					}
					this.setActualSucursalMovimientoForeignKey(this.detallemoviclienprove.getid_sucursal_movimiento(),false,"Formulario");

					//TipoTransaccionModulo
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_tipo_transaccion_moduloDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_tipo_transaccion_moduloDetalleMoviClienProve) {
						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(" where id="+this.detallemoviclienprove.getid_tipo_transaccion_modulo());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

						if(detallemoviclienprove.getTipoTransaccionModulo()!=null) {
							this.tipotransaccionmodulosForeignKey.add(detallemoviclienprove.getTipoTransaccionModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
						this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
					}
					this.setActualTipoTransaccionModuloForeignKey(this.detallemoviclienprove.getid_tipo_transaccion_modulo(),false,"Formulario");

					//EstadoDetalleCliente
					if(!this.detallemoviclienproveConstantesFunciones.cargarid_estado_detalle_clienteDetalleMoviClienProve || this.detallemoviclienproveConstantesFunciones.event_dependid_estado_detalle_clienteDetalleMoviClienProve) {
						//this.cargarCombosEstadoDetalleClientesForeignKeyLista(" where id="+this.detallemoviclienprove.getid_estado_detalle_cliente());
									//this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
						this.estadodetalleclientesForeignKey=new ArrayList<EstadoDetalleCliente>();

						if(detallemoviclienprove.getEstadoDetalleCliente()!=null) {
							this.estadodetalleclientesForeignKey.add(detallemoviclienprove.getEstadoDetalleCliente());
						}

						this.addItemDefectoCombosForeignKeyEstadoDetalleCliente();
						this.cargarCombosFrameEstadoDetalleClientesForeignKey("Todos");
					}
					this.setActualEstadoDetalleClienteForeignKey(this.detallemoviclienprove.getid_estado_detalle_cliente(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleMoviClienProve("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleMoviClienProve(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleMoviClienProve(detallemoviclienprove,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleMoviClienProve(detallemoviclienprove);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleMoviClienProve(detallemoviclienprove,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleMoviClienProve(detallemoviclienprove);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.setText(detallemoviclienprove.getId().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.setDate(detallemoviclienprove.getfecha_vence());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.setText(detallemoviclienprove.getdebito_mone_local().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.setText(detallemoviclienprove.getcredito_mone_local().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.setText(detallemoviclienprove.getdebito_mone_extra().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.setText(detallemoviclienprove.getcredito_mone_extra().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.setText(detallemoviclienprove.getcotizacion().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.setText(detallemoviclienprove.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleMoviClienProve detallemoviclienproveLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detallemoviclienproveLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleMoviClienProve detallemoviclienproveLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detallemoviclienproveLocal=this.detallemoviclienprove;
			} else {
				detallemoviclienproveLocal=this.detallemoviclienproveAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detallemoviclienproveLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleMoviClienProve(detallemoviclienproveLocal,true);
					
					if(detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detallemoviclienproveLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detallemoviclienproveLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(detallemoviclienprove,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(detallemoviclienprove);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(detallemoviclienprove,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.getText()==null || this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.getText()=="" || this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.setText("0");
			}

			if(conColumnasBase) {detallemoviclienprove.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelIdDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallemoviclienprove.setfecha_vence(this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelfecha_venceDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallemoviclienprove.setdebito_mone_local(Double.parseDouble(this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldebito_mone_localDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallemoviclienprove.setcredito_mone_local(Double.parseDouble(this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcredito_mone_localDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallemoviclienprove.setdebito_mone_extra(Double.parseDouble(this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldebito_mone_extraDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallemoviclienprove.setcredito_mone_extra(Double.parseDouble(this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcredito_mone_extraDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallemoviclienprove.setcotizacion(Double.parseDouble(this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelcotizacionDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallemoviclienprove.setdescripcion(this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabeldescripcionDetalleMoviClienProve,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienproveBean,DetalleMoviClienProve detallemoviclienprove,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienproveOrigen,DetalleMoviClienProve detallemoviclienprove,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallemoviclienproveOrigen.getId()!=null && !detallemoviclienproveOrigen.getId().equals(0L))) {detallemoviclienprove.setId(detallemoviclienproveOrigen.getId());}}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getfecha_vence()!=null && !detallemoviclienproveOrigen.getfecha_vence().equals(new Date()))) {detallemoviclienprove.setfecha_vence(detallemoviclienproveOrigen.getfecha_vence());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getnumero_factura()!=null && !detallemoviclienproveOrigen.getnumero_factura().equals(""))) {detallemoviclienprove.setnumero_factura(detallemoviclienproveOrigen.getnumero_factura());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getdebito_mone_local()!=null && !detallemoviclienproveOrigen.getdebito_mone_local().equals(0.0))) {detallemoviclienprove.setdebito_mone_local(detallemoviclienproveOrigen.getdebito_mone_local());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getcredito_mone_local()!=null && !detallemoviclienproveOrigen.getcredito_mone_local().equals(0.0))) {detallemoviclienprove.setcredito_mone_local(detallemoviclienproveOrigen.getcredito_mone_local());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getdebito_mone_extra()!=null && !detallemoviclienproveOrigen.getdebito_mone_extra().equals(0.0))) {detallemoviclienprove.setdebito_mone_extra(detallemoviclienproveOrigen.getdebito_mone_extra());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getcredito_mone_extra()!=null && !detallemoviclienproveOrigen.getcredito_mone_extra().equals(0.0))) {detallemoviclienprove.setcredito_mone_extra(detallemoviclienproveOrigen.getcredito_mone_extra());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getcotizacion()!=null && !detallemoviclienproveOrigen.getcotizacion().equals(0.0))) {detallemoviclienprove.setcotizacion(detallemoviclienproveOrigen.getcotizacion());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getdescripcion()!=null && !detallemoviclienproveOrigen.getdescripcion().equals(""))) {detallemoviclienprove.setdescripcion(detallemoviclienproveOrigen.getdescripcion());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getfecha_emision()!=null && !detallemoviclienproveOrigen.getfecha_emision().equals(new Date()))) {detallemoviclienprove.setfecha_emision(detallemoviclienproveOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getmonto_mone_local()!=null && !detallemoviclienproveOrigen.getmonto_mone_local().equals(0.0))) {detallemoviclienprove.setmonto_mone_local(detallemoviclienproveOrigen.getmonto_mone_local());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getmonto_mone_extra()!=null && !detallemoviclienproveOrigen.getmonto_mone_extra().equals(0.0))) {detallemoviclienprove.setmonto_mone_extra(detallemoviclienproveOrigen.getmonto_mone_extra());}
			if(conDefault || (!conDefault && detallemoviclienproveOrigen.getnumero_comprobante()!=null && !detallemoviclienproveOrigen.getnumero_comprobante().equals(""))) {detallemoviclienprove.setnumero_comprobante(detallemoviclienproveOrigen.getnumero_comprobante());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.setText(detallemoviclienprove.getId().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.setDate(detallemoviclienprove.getfecha_vence());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.setText(detallemoviclienprove.getdebito_mone_local().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.setText(detallemoviclienprove.getcredito_mone_local().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.setText(detallemoviclienprove.getdebito_mone_extra().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.setText(detallemoviclienprove.getcredito_mone_extra().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.setText(detallemoviclienprove.getcotizacion().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.setText(detallemoviclienprove.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleMoviClienProve(DetalleMoviClienProveBean detallemoviclienproveBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.setText(detallemoviclienproveBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.setDate(detallemoviclienproveBean.getfecha_vence());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.setText(detallemoviclienproveBean.getdebito_mone_local().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.setText(detallemoviclienproveBean.getcredito_mone_local().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.setText(detallemoviclienproveBean.getdebito_mone_extra().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.setText(detallemoviclienproveBean.getcredito_mone_extra().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.setText(detallemoviclienproveBean.getcotizacion().toString());
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.setText(detallemoviclienproveBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleMoviClienProve(DetalleMoviClienProveParameterReturnGeneral detallemoviclienproveReturnGeneral,DetalleMoviClienProveBean detallemoviclienproveBean,Boolean conDefault) throws Exception { 
		try {
			DetalleMoviClienProve detallemoviclienproveLocal=new DetalleMoviClienProve();
			
			detallemoviclienproveLocal=detallemoviclienproveReturnGeneral.getDetalleMoviClienProve();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallemoviclienproveLocal.getId()!=null && !detallemoviclienproveLocal.getId().equals(0L))) {detallemoviclienproveBean.setId(detallemoviclienproveLocal.getId());}}
			if(conDefault || (!conDefault && detallemoviclienproveLocal.getfecha_vence()!=null && !detallemoviclienproveLocal.getfecha_vence().equals(new Date()))) {detallemoviclienproveBean.setfecha_vence(detallemoviclienproveLocal.getfecha_vence());}
			if(conDefault || (!conDefault && detallemoviclienproveLocal.getdebito_mone_local()!=null && !detallemoviclienproveLocal.getdebito_mone_local().equals(0.0))) {detallemoviclienproveBean.setdebito_mone_local(detallemoviclienproveLocal.getdebito_mone_local());}
			if(conDefault || (!conDefault && detallemoviclienproveLocal.getcredito_mone_local()!=null && !detallemoviclienproveLocal.getcredito_mone_local().equals(0.0))) {detallemoviclienproveBean.setcredito_mone_local(detallemoviclienproveLocal.getcredito_mone_local());}
			if(conDefault || (!conDefault && detallemoviclienproveLocal.getdebito_mone_extra()!=null && !detallemoviclienproveLocal.getdebito_mone_extra().equals(0.0))) {detallemoviclienproveBean.setdebito_mone_extra(detallemoviclienproveLocal.getdebito_mone_extra());}
			if(conDefault || (!conDefault && detallemoviclienproveLocal.getcredito_mone_extra()!=null && !detallemoviclienproveLocal.getcredito_mone_extra().equals(0.0))) {detallemoviclienproveBean.setcredito_mone_extra(detallemoviclienproveLocal.getcredito_mone_extra());}
			if(conDefault || (!conDefault && detallemoviclienproveLocal.getcotizacion()!=null && !detallemoviclienproveLocal.getcotizacion().equals(0.0))) {detallemoviclienproveBean.setcotizacion(detallemoviclienproveLocal.getcotizacion());}
			if(conDefault || (!conDefault && detallemoviclienproveLocal.getdescripcion()!=null && !detallemoviclienproveLocal.getdescripcion().equals(""))) {detallemoviclienproveBean.setdescripcion(detallemoviclienproveLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleMoviClienProveGenerico(Long idDetalleMoviClienProveSeleccionado,JComboBox jComboBoxDetalleMoviClienProve,List<DetalleMoviClienProve> detallemoviclienprovesLocal)throws Exception {
		try {
			DetalleMoviClienProve  detallemoviclienproveTemp=null;

			for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienprovesLocal) {
				if(detallemoviclienproveAux.getId()!=null && detallemoviclienproveAux.getId().equals(idDetalleMoviClienProveSeleccionado)) {
					detallemoviclienproveTemp=detallemoviclienproveAux;
					break;
				}
			}

			jComboBoxDetalleMoviClienProve.setSelectedItem(detallemoviclienproveTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleMoviClienProveGenerico(JComboBox jComboBoxDetalleMoviClienProve,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleMoviClienProve.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleMoviClienProve.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleMoviClienProve.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleMoviClienProve.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleMoviClienProve.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleMoviClienProve.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleMoviClienProve.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleMoviClienProve.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleMoviClienProve.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleMoviClienProve.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallemoviclienprove=(DetalleMoviClienProve) detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallemoviclienprove =(DetalleMoviClienProve) detallemoviclienproves.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getmes_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getasientocontable_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Factura")) {
			//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getfactura_descripcion();
			} else {
				//sDescripcion=this.getActualFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getfactura_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("SucursalMovimiento")) {
			//sDescripcion=this.getActualSucursalMovimientoForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getsucursalmovimiento_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalMovimientoForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getsucursalmovimiento_descripcion();
			}
		}

		if(sTipo.equals("TipoTransaccionModulo")) {
			//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.gettipotransaccionmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.gettipotransaccionmodulo_descripcion();
			}
		}

		if(sTipo.equals("EstadoDetalleCliente")) {
			//sDescripcion=this.getActualEstadoDetalleClienteForeignKeyDescripcion((Long)value);
			if(!detallemoviclienprove.getIsNew() && !detallemoviclienprove.getIsChanged() && !detallemoviclienprove.getIsDeleted()) {
				sDescripcion=detallemoviclienprove.getestadodetallecliente_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoDetalleClienteForeignKeyDescripcion((Long)value);
				sDescripcion=detallemoviclienprove.getestadodetallecliente_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleMoviClienProve detallemoviclienproveRow=new DetalleMoviClienProve();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallemoviclienproveRow=(DetalleMoviClienProve) detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallemoviclienproveRow=(DetalleMoviClienProve) detallemoviclienproves.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleMoviClienProve(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve));			
			this.jButtonDuplicarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaDuplicarDetalleMoviClienProve && this.isPermisoDuplicarDetalleMoviClienProve));			
			this.jButtonCopiarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaCopiarDetalleMoviClienProve && this.isPermisoCopiarDetalleMoviClienProve));
			this.jButtonVerFormDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaVerFormDetalleMoviClienProve && this.isPermisoVerFormDetalleMoviClienProve));
			/*
			this.jButtonAbrirOrderByDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaOrdenDetalleMoviClienProve && this.isPermisoOrdenDetalleMoviClienProve));			
			*/
			this.jButtonNuevoRelacionesDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve));			
			this.jButtonNuevoGuardarCambiosDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaModificarDetalleMoviClienProve && this.isPermisoActualizarDetalleMoviClienProve));	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaActualizarDetalleMoviClienProve && this.isPermisoActualizarDetalleMoviClienProve));	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaEliminarDetalleMoviClienProve && this.isPermisoEliminarDetalleMoviClienProve));
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarDetalleMoviClienProve.setVisible(this.isVisibilidadCeldaCancelarDetalleMoviClienProve);							
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaGuardarDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));							
			
			//TOOLBAR
			/*
			this.jButtonNuevoToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve));						
			this.jButtonDuplicarToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaDuplicarDetalleMoviClienProve && this.isPermisoDuplicarDetalleMoviClienProve));						
			this.jButtonCopiarToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaCopiarDetalleMoviClienProve && this.isPermisoCopiarDetalleMoviClienProve));			
			this.jButtonVerFormToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaVerFormDetalleMoviClienProve && this.isPermisoVerFormDetalleMoviClienProve));			
			this.jButtonAbrirOrderByToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaOrdenDetalleMoviClienProve && this.isPermisoOrdenDetalleMoviClienProve));
			this.jButtonNuevoRelacionesToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));			
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaModificarDetalleMoviClienProve && this.isPermisoActualizarDetalleMoviClienProve));	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaActualizarDetalleMoviClienProve  && this.isPermisoActualizarDetalleMoviClienProve));	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaEliminarDetalleMoviClienProve && this.isPermisoEliminarDetalleMoviClienProve));
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarToolBarDetalleMoviClienProve.setVisible(this.isVisibilidadCeldaCancelarDetalleMoviClienProve);				
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaGuardarDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));									
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.jMenuItemNuevoDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve));			
			this.jMenuItemDuplicarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaDuplicarDetalleMoviClienProve && this.isPermisoDuplicarDetalleMoviClienProve));			
			this.jMenuItemCopiarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaCopiarDetalleMoviClienProve && this.isPermisoCopiarDetalleMoviClienProve));			
			this.jMenuItemVerFormDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaVerFormDetalleMoviClienProve && this.isPermisoVerFormDetalleMoviClienProve));			
			this.jMenuItemAbrirOrderByDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaOrdenDetalleMoviClienProve && this.isPermisoOrdenDetalleMoviClienProve));			
			//this.jMenuItemMostrarOcultarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaOrdenDetalleMoviClienProve && this.isPermisoOrdenDetalleMoviClienProve));
			this.jMenuItemDetalleAbrirOrderByDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaOrdenDetalleMoviClienProve && this.isPermisoOrdenDetalleMoviClienProve));			
			//this.jMenuItemDetalleMostrarOcultarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaOrdenDetalleMoviClienProve && this.isPermisoOrdenDetalleMoviClienProve));			
			this.jMenuItemNuevoRelacionesDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve));			
			this.jMenuItemNuevoGuardarCambiosDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaNuevoDetalleMoviClienProve && this.isPermisoNuevoDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));									
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemModificarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaModificarDetalleMoviClienProve && this.isPermisoActualizarDetalleMoviClienProve));	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemActualizarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaActualizarDetalleMoviClienProve && this.isPermisoActualizarDetalleMoviClienProve));	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemEliminarDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaEliminarDetalleMoviClienProve && this.isPermisoEliminarDetalleMoviClienProve));
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemCancelarDetalleMoviClienProve.setVisible(this.isVisibilidadCeldaCancelarDetalleMoviClienProve);				
			}
			
			this.jMenuItemGuardarCambiosDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaGuardarDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));						
			this.jMenuItemGuardarCambiosTablaDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));						
			*/
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=this.jButtonNuevoDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleMoviClienProve=this.jButtonDuplicarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaCopiarDetalleMoviClienProve=this.jButtonCopiarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaVerFormDetalleMoviClienProve=this.jButtonVerFormDetalleMoviClienProve.isVisible();
			/*
			this.isVisibilidadCeldaOrdenDetalleMoviClienProve=this.jButtonAbrirOrderByDetalleMoviClienProve.isVisible();			
			*/
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=this.jButtonNuevoRelacionesDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=this.jButtonModificarDetalleMoviClienProve.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaGuardarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=this.jButtonGuardarCambiosTablaDetalleMoviClienProve.isVisible();
			
			//TOOLBAR
			/*
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=this.jButtonNuevoToolBarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=this.jButtonNuevoRelacionesToolBarDetalleMoviClienProve.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarToolBarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarToolBarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarToolBarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarToolBarDetalleMoviClienProve.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleMoviClienProve=this.jButtonGuardarCambiosToolBarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=this.jButtonGuardarCambiosTablaToolBarDetalleMoviClienProve.isVisible();						
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=this.jMenuItemNuevoDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=this.jMenuItemNuevoRelacionesDetalleMoviClienProve.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemModificarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemActualizarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemEliminarDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemCancelarDetalleMoviClienProve.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleMoviClienProve=this.jMenuItemGuardarCambiosDetalleMoviClienProve.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=this.jMenuItemGuardarCambiosTablaDetalleMoviClienProve.isVisible();						
			*/
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleMoviClienProve(Boolean esInicializar) {
		if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
				//if(this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleMoviClienProve();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleMoviClienProve(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleMoviClienProve() {
		this.jButtonNuevoDetalleMoviClienProve.setVisible(this.isPermisoNuevoDetalleMoviClienProve);			
		this.jButtonDuplicarDetalleMoviClienProve.setVisible(this.isPermisoDuplicarDetalleMoviClienProve);			
		this.jButtonCopiarDetalleMoviClienProve.setVisible(this.isPermisoCopiarDetalleMoviClienProve);			
		this.jButtonVerFormDetalleMoviClienProve.setVisible(this.isPermisoVerFormDetalleMoviClienProve);			
		/*
		this.jButtonAbrirOrderByDetalleMoviClienProve.setVisible(this.isPermisoOrdenDetalleMoviClienProve);					
		*/
		this.jButtonNuevoRelacionesDetalleMoviClienProve.setVisible(this.isPermisoNuevoDetalleMoviClienProve);			
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarDetalleMoviClienProve.setVisible(this.isPermisoActualizarDetalleMoviClienProve);	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarDetalleMoviClienProve.setVisible(this.isPermisoActualizarDetalleMoviClienProve);	
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarDetalleMoviClienProve.setVisible(this.isPermisoEliminarDetalleMoviClienProve);
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarDetalleMoviClienProve.setVisible(this.isVisibilidadCeldaCancelarDetalleMoviClienProve);						
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.setVisible(this.isPermisoGuardarCambiosDetalleMoviClienProve);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleMoviClienProve.setVisible(this.isPermisoActualizarDetalleMoviClienProve);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleMoviClienProve() {
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarDetalleMoviClienProve.setVisible(this.isPermisoActualizarDetalleMoviClienProve);	
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarDetalleMoviClienProve.setVisible(this.isPermisoActualizarDetalleMoviClienProve);	
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarDetalleMoviClienProve.setVisible(this.isPermisoEliminarDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarDetalleMoviClienProve.setVisible(this.isVisibilidadCeldaCancelarDetalleMoviClienProve);							
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.setVisible((this.isVisibilidadCeldaGuardarDetalleMoviClienProve && this.isPermisoGuardarCambiosDetalleMoviClienProve));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleMoviClienProve() {
		if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleMoviClienProve();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleMoviClienProve() {
	}
	
	public void jTableDatosDetalleMoviClienProveListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleMoviClienProve(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detallemoviclienprove.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detallemoviclienprove.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detallemoviclienprove.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detallemoviclienprove.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detallemoviclienprove.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detallemoviclienprove.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detallemoviclienprove.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.detallemoviclienprove.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableDetalleMoviClienProveActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleMoviClienProve=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosDetalleMoviClienProve.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.detallemoviclienprove.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_venceDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getfecha_vence()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_vence = '"+Funciones2.getStringPostgresDate(this.detallemoviclienprove.getfecha_vence())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteDetalleMoviClienProveActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleMoviClienProve=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosDetalleMoviClienProve.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.detallemoviclienprove.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_facturaDetalleMoviClienProveActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.facturaBeanSwingJInternalFrame.sTipoBusqueda="Factura";

			if(!this.sFinalQueryGeneral_factura.equals("")) {
				this.facturaBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_factura);
				this.facturaBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.facturaBeanSwingJInternalFrame.procesarBusqueda(this.facturaBeanSwingJInternalFrame.sAccionBusqueda);
				this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingFactura(false);
			}

			if(!this.sFinalQueryComboFactura.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleMoviClienProve=null;
			TitledBorder titledBorderfactura=null;

			if(!this.jScrollPanelDatosDetalleMoviClienProve.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Factura");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_facturaDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisofactura=true;

			idTienePermisofactura=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(FacturaConstantesFunciones.CLASSNAME);

			if(idTienePermisofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.facturaBeanSwingJInternalFrame=new FacturaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.facturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.facturaBeanSwingJInternalFrame.getFacturaLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_factura()!=null) {
					this.facturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.facturaBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_factura());
					this.facturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.facturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFactura();
				}

				JInternalFrameBase jinternalFrame =this.facturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBorderfactura=(TitledBorder)this.facturaBeanSwingJInternalFrame.jScrollPanelDatosFactura.getBorder();

				titledBorderfactura.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Factura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_facturaDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_factura = "+this.detallemoviclienprove.getid_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_facturaDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getnumero_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_factura like '%"+this.detallemoviclienprove.getnumero_factura()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.detallemoviclienprove.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondebito_mone_localDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getdebito_mone_local()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where debito_mone_local = "+this.detallemoviclienprove.getdebito_mone_local().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncredito_mone_localDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getcredito_mone_local()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where credito_mone_local = "+this.detallemoviclienprove.getcredito_mone_local().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondebito_mone_extraDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getdebito_mone_extra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where debito_mone_extra = "+this.detallemoviclienprove.getdebito_mone_extra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncredito_mone_extraDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getcredito_mone_extra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where credito_mone_extra = "+this.detallemoviclienprove.getcredito_mone_extra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.detallemoviclienprove.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncotizacionDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getcotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cotizacion = "+this.detallemoviclienprove.getcotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detallemoviclienprove.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursal_movimientoDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursalmovimiento=true;

			idTienePermisosucursalmovimiento=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursalmovimiento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.sucursalmovimientoBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalmovimientoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalmovimientoBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_sucursal_movimiento()!=null) {
					this.sucursalmovimientoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalmovimientoBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_sucursal_movimiento());
					this.sucursalmovimientoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalmovimientoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalmovimientoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalmovimientoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordersucursalmovimiento=(TitledBorder)this.sucursalmovimientoBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursalmovimiento.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursal_movimientoDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_sucursal_movimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal_movimiento = "+this.detallemoviclienprove.getid_sucursal_movimiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_transaccion_moduloDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotransaccionmodulo=true;

			idTienePermisotipotransaccionmodulo=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(TipoTransaccionModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotransaccionmodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.tipotransaccionmoduloBeanSwingJInternalFrame=new TipoTransaccionModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotransaccionmoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotransaccionmoduloBeanSwingJInternalFrame.getTipoTransaccionModuloLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_tipo_transaccion_modulo()!=null) {
					this.tipotransaccionmoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_tipo_transaccion_modulo());
					this.tipotransaccionmoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTransaccionModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipotransaccionmoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBordertipotransaccionmodulo=(TitledBorder)this.tipotransaccionmoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoTransaccionModulo.getBorder();

				titledBordertipotransaccionmodulo.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Tipo Transaccion Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_transaccion_moduloDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_tipo_transaccion_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_transaccion_modulo = "+this.detallemoviclienprove.getid_tipo_transaccion_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_detalle_clienteDetalleMoviClienProveUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadodetallecliente=true;

			idTienePermisoestadodetallecliente=this.tienePermisosUsuarioEnPaginaWebDetalleMoviClienProve(EstadoDetalleClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadodetallecliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleMoviClienProve.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleMoviClienProve.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);

				this.estadodetalleclienteBeanSwingJInternalFrame=new EstadoDetalleClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadodetalleclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadodetalleclienteBeanSwingJInternalFrame.getEstadoDetalleClienteLogic().setConnexion(this.detallemoviclienproveLogic.getConnexion());

				if(this.detallemoviclienprove.getid_estado_detalle_cliente()!=null) {
					this.estadodetalleclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadodetalleclienteBeanSwingJInternalFrame.setIdActual(this.detallemoviclienprove.getid_estado_detalle_cliente());
					this.estadodetalleclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadodetalleclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadodetalleclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoDetalleCliente();
				}

				JInternalFrameBase jinternalFrame =this.estadodetalleclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleMoviClienProve=(TitledBorder)this.jScrollPanelDatosDetalleMoviClienProve.getBorder();
				TitledBorder titledBorderestadodetallecliente=(TitledBorder)this.estadodetalleclienteBeanSwingJInternalFrame.jScrollPanelDatosEstadoDetalleCliente.getBorder();

				titledBorderestadodetallecliente.setTitle(titledBorderDetalleMoviClienProve.getTitle() + " -> Estado Detalle Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallemoviclienproveLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_detalle_clienteDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getid_estado_detalle_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_detalle_cliente = "+this.detallemoviclienprove.getid_estado_detalle_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.detallemoviclienprove.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_mone_localDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getmonto_mone_local()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_mone_local = "+this.detallemoviclienprove.getmonto_mone_local().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_mone_extraDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getmonto_mone_extra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_mone_extra = "+this.detallemoviclienprove.getmonto_mone_extra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_comprobanteDetalleMoviClienProveBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.getdetallemoviclienprove(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallemoviclienprove==null) {
						this.detallemoviclienprove = new DetalleMoviClienProve();
					}

					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);
				}

				if(this.detallemoviclienprove.getnumero_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_comprobante like '%"+this.detallemoviclienprove.getnumero_comprobante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleMoviClienProve(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void closingInternalFrameDetalleMoviClienProve() {
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.dispose();
			this.jInternalFrameDetalleFormDetalleMoviClienProve=null;
		}
		
		/*
		if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
			this.jInternalFrameReporteDinamicoDetalleMoviClienProve.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleMoviClienProve.dispose();
			this.jInternalFrameReporteDinamicoDetalleMoviClienProve=null;
		}
		
		if(this.jInternalFrameImportacionDetalleMoviClienProve!=null) {
			this.jInternalFrameImportacionDetalleMoviClienProve.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleMoviClienProve.dispose();
			this.jInternalFrameImportacionDetalleMoviClienProve=null;
		}		
		*/
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleMoviClienProve();
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleMoviClienProve")) {
				jButtonDuplicarDetalleMoviClienProveActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleMoviClienProve")) {
				jButtonCopiarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleMoviClienProve")) {
				jButtonVerFormDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleMoviClienProve")) {
				jButtonDuplicarDetalleMoviClienProveActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleMoviClienProve")) {
				jButtonDuplicarDetalleMoviClienProveActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleMoviClienProve")) {
				jButtonModificarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleMoviClienProve")) {
				jButtonModificarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleMoviClienProve")) {
				jButtonModificarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleMoviClienProve")) {
				jButtonActualizarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleMoviClienProve")) {
				jButtonActualizarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleMoviClienProve")) {
				jButtonActualizarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleMoviClienProve")) {
				jButtonEliminarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleMoviClienProve")) {
				jButtonEliminarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleMoviClienProve")) {
				jButtonEliminarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleMoviClienProve")) {
				jButtonCancelarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleMoviClienProve")) {
				jButtonCancelarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleMoviClienProve")) {
				jButtonCancelarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleMoviClienProve")) {
				jButtonCerrarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleMoviClienProve")) {
				jButtonCerrarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleMoviClienProve")) {
				jButtonCerrarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleMoviClienProve")) {
				jButtonMostrarOcultarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleMoviClienProve")) {
				jButtonCancelarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleMoviClienProve")) {
				jButtonCopiarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleMoviClienProve")) {
				jButtonVerFormDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleMoviClienProve")) {
				jButtonCopiarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleMoviClienProve")) {
				jButtonVerFormDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleMoviClienProve")) {
				jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleMoviClienProve")) {
				jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleMoviClienProve")) {
				jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleMoviClienProve")) {
				jButtonAnterioresDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleMoviClienProve")) {
				jButtonAnterioresDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleMoviClienProve")) {
				jButtonAnterioresDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleMoviClienProve")) {
				jButtonSiguientesDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleMoviClienProve")) {
				jButtonSiguientesDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleMoviClienProve")) {
				jButtonSiguientesDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleMoviClienProve") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleMoviClienProve")) {
				jButtonAbrirOrderByDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleMoviClienProve") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleMoviClienProve")) {
				jButtonMostrarOcultarDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleMoviClienProve")) {
				jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleMoviClienProve")) {
				jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleMoviClienProve")) {
				jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleMoviClienProve")) {
				jButtonCerrarReporteDinamicoDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleMoviClienProve")) {
				jButtonGenerarReporteDinamicoDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleMoviClienProve")) {
				/*
				jButtonGenerarExcelReporteDinamicoDetalleMoviClienProveActionPerformed(evt);
				*/
			} else if(sTipo.equals("CerrarImportacionDetalleMoviClienProve")) {
				jButtonCerrarImportacionDetalleMoviClienProveActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleMoviClienProve")) {
				/*
				jButtonGenerarImportacionDetalleMoviClienProveActionPerformed(evt);
				*/
			} else if(sTipo.equals("AbrirImportacionDetalleMoviClienProve")) {
				/*
				jButtonAbrirImportacionDetalleMoviClienProveActionPerformed(evt);
				*/
			} else if(sTipo.equals("TiposAccionesDetalleMoviClienProve")) {
				jComboBoxTiposAccionesDetalleMoviClienProveActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleMoviClienProve")) {
				jComboBoxTiposRelacionesDetalleMoviClienProveActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleMoviClienProve")) {
				jComboBoxTiposAccionesDetalleMoviClienProveActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleMoviClienProve")) {
				/*
				jComboBoxTiposSeleccionarDetalleMoviClienProveActionListener(evt);
				*/
			} else if(sTipo.equals("ValorCampoGeneralDetalleMoviClienProve")) {
				jTextFieldValorCampoGeneralDetalleMoviClienProveActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByDetalleMoviClienProve")) {
				jButtonAbrirOrderByDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleMoviClienProve")) {
				jButtonAbrirOrderByDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleMoviClienProve")) {
				jButtonCerrarOrderByDetalleMoviClienProveActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleMoviClienProveBusqueda")) {
				this.jButtonidDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleMoviClienProveUpdate")) {
				this.jButtonid_empresaDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleMoviClienProveBusqueda")) {
				this.jButtonid_empresaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleMoviClienProveUpdate")) {
				this.jButtonid_sucursalDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleMoviClienProveBusqueda")) {
				this.jButtonid_sucursalDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleMoviClienProveUpdate")) {
				this.jButtonid_ejercicioDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleMoviClienProveBusqueda")) {
				this.jButtonid_ejercicioDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleMoviClienProveUpdate")) {
				this.jButtonid_periodoDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleMoviClienProveBusqueda")) {
				this.jButtonid_periodoDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleMoviClienProveUpdate")) {
				this.jButtonid_anioDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleMoviClienProveBusqueda")) {
				this.jButtonid_anioDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleMoviClienProveUpdate")) {
				this.jButtonid_mesDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleMoviClienProveBusqueda")) {
				this.jButtonid_mesDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloDetalleMoviClienProveUpdate")) {
				this.jButtonid_moduloDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloDetalleMoviClienProveBusqueda")) {
				this.jButtonid_moduloDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleMoviClienProve")) {
				this.jButtonid_asiento_contableDetalleMoviClienProveActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleMoviClienProveUpdate")) {
				this.jButtonid_asiento_contableDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleMoviClienProveBusqueda")) {
				this.jButtonid_asiento_contableDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_venceDetalleMoviClienProveBusqueda")) {
				this.jButtonfecha_venceDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteDetalleMoviClienProve")) {
				this.jButtonid_clienteDetalleMoviClienProveActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteDetalleMoviClienProveUpdate")) {
				this.jButtonid_clienteDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteDetalleMoviClienProveBusqueda")) {
				this.jButtonid_clienteDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaDetalleMoviClienProve")) {
				this.jButtonid_facturaDetalleMoviClienProveActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaDetalleMoviClienProveUpdate")) {
				this.jButtonid_facturaDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaDetalleMoviClienProveBusqueda")) {
				this.jButtonid_facturaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_facturaDetalleMoviClienProveBusqueda")) {
				this.jButtonnumero_facturaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionDetalleMoviClienProveUpdate")) {
				this.jButtonid_transaccionDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionDetalleMoviClienProveBusqueda")) {
				this.jButtonid_transaccionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_localDetalleMoviClienProveBusqueda")) {
				this.jButtondebito_mone_localDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_localDetalleMoviClienProveBusqueda")) {
				this.jButtoncredito_mone_localDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_extraDetalleMoviClienProveBusqueda")) {
				this.jButtondebito_mone_extraDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_extraDetalleMoviClienProveBusqueda")) {
				this.jButtoncredito_mone_extraDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaDetalleMoviClienProveUpdate")) {
				this.jButtonid_monedaDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaDetalleMoviClienProveBusqueda")) {
				this.jButtonid_monedaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionDetalleMoviClienProveBusqueda")) {
				this.jButtoncotizacionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleMoviClienProveBusqueda")) {
				this.jButtondescripcionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursal_movimientoDetalleMoviClienProveUpdate")) {
				this.jButtonid_sucursal_movimientoDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursal_movimientoDetalleMoviClienProveBusqueda")) {
				this.jButtonid_sucursal_movimientoDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleMoviClienProveUpdate")) {
				this.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleMoviClienProveBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_detalle_clienteDetalleMoviClienProveUpdate")) {
				this.jButtonid_estado_detalle_clienteDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_detalle_clienteDetalleMoviClienProveBusqueda")) {
				this.jButtonid_estado_detalle_clienteDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetalleMoviClienProveBusqueda")) {
				this.jButtonfecha_emisionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_mone_localDetalleMoviClienProveBusqueda")) {
				this.jButtonmonto_mone_localDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_mone_extraDetalleMoviClienProveBusqueda")) {
				this.jButtonmonto_mone_extraDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteDetalleMoviClienProveBusqueda")) {
				this.jButtonnumero_comprobanteDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableDetalleMoviClienProve")) {
				this.jButtonid_asiento_contableDetalleMoviClienProveActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteDetalleMoviClienProve")) {
				this.jButtonid_clienteDetalleMoviClienProveActionPerformed(evt);
			}
			else if(sTipo.equals("id_facturaDetalleMoviClienProve")) {
				this.jButtonid_facturaDetalleMoviClienProveActionPerformed(evt);
			}
			
			
			;
			
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleMoviClienProve();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleMoviClienProve detallemoviclienproveLocal=null;
			
			if(!this.getEsControlTabla()) {
				detallemoviclienproveLocal=this.detallemoviclienprove;
			} else {
				detallemoviclienproveLocal=this.detallemoviclienproveAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
							
				
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleMoviClienProveActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
								
						
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
								
				
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
							
				
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
								
				
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleMoviClienProveActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleMoviClienProve")) {
					jCheckBoxSeleccionarTodosDetalleMoviClienProveItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleMoviClienProve")) {
					jCheckBoxSeleccionadosDetalleMoviClienProveItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleMoviClienProve")) {
					
				}
				
				


				
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
												
				
				


				
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleMoviClienProveActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallemoviclienprove);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallemoviclienprove);
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleMoviClienProve.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleMoviClienProve.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleMoviClienProveActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallemoviclienproveAnterior =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleMoviClienProve")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleMoviClienProveListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleMoviClienProve.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detallemoviclienprove =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detallemoviclienprove);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleMoviClienProve")) {
				
				}
				
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleMoviClienProve")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleMoviClienProve.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleMoviClienProve")) {
			
			}
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleMoviClienProve();
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleMoviClienProve")) {
				jButtonDuplicarDetalleMoviClienProveActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleMoviClienProve")) {
				jButtonCopiarDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleMoviClienProve")) {
				jButtonVerFormDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleMoviClienProve")) {
				jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleMoviClienProve")) {
				jButtonModificarDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleMoviClienProve")) {
				jButtonActualizarDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleMoviClienProve")) {
				jButtonEliminarDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleMoviClienProve")) {
				jButtonCancelarDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleMoviClienProve")) {
				jButtonCerrarDetalleMoviClienProveActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleMoviClienProve")) {
				jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleMoviClienProve")) {
				jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleMoviClienProve")) {
				jButtonAbrirOrderByDetalleMoviClienProveActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleMoviClienProve")) {
				jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleMoviClienProve")) {
				jButtonAnterioresDetalleMoviClienProveActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleMoviClienProve")) {
				jButtonSiguientesDetalleMoviClienProveActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleMoviClienProveBusqueda")) {
				this.jButtonidDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleMoviClienProveUpdate")) {
				this.jButtonid_empresaDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleMoviClienProveBusqueda")) {
				this.jButtonid_empresaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleMoviClienProveUpdate")) {
				this.jButtonid_sucursalDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleMoviClienProveBusqueda")) {
				this.jButtonid_sucursalDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleMoviClienProveUpdate")) {
				this.jButtonid_ejercicioDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleMoviClienProveBusqueda")) {
				this.jButtonid_ejercicioDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleMoviClienProveUpdate")) {
				this.jButtonid_periodoDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleMoviClienProveBusqueda")) {
				this.jButtonid_periodoDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetalleMoviClienProveUpdate")) {
				this.jButtonid_anioDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetalleMoviClienProveBusqueda")) {
				this.jButtonid_anioDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetalleMoviClienProveUpdate")) {
				this.jButtonid_mesDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetalleMoviClienProveBusqueda")) {
				this.jButtonid_mesDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloDetalleMoviClienProveUpdate")) {
				this.jButtonid_moduloDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloDetalleMoviClienProveBusqueda")) {
				this.jButtonid_moduloDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleMoviClienProve")) {
				this.jButtonid_asiento_contableDetalleMoviClienProveActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleMoviClienProveUpdate")) {
				this.jButtonid_asiento_contableDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableDetalleMoviClienProveBusqueda")) {
				this.jButtonid_asiento_contableDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_venceDetalleMoviClienProveBusqueda")) {
				this.jButtonfecha_venceDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteDetalleMoviClienProve")) {
				this.jButtonid_clienteDetalleMoviClienProveActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteDetalleMoviClienProveUpdate")) {
				this.jButtonid_clienteDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteDetalleMoviClienProveBusqueda")) {
				this.jButtonid_clienteDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_facturaDetalleMoviClienProve")) {
				this.jButtonid_facturaDetalleMoviClienProveActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_facturaDetalleMoviClienProveUpdate")) {
				this.jButtonid_facturaDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_facturaDetalleMoviClienProveBusqueda")) {
				this.jButtonid_facturaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_facturaDetalleMoviClienProveBusqueda")) {
				this.jButtonnumero_facturaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionDetalleMoviClienProveUpdate")) {
				this.jButtonid_transaccionDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionDetalleMoviClienProveBusqueda")) {
				this.jButtonid_transaccionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_localDetalleMoviClienProveBusqueda")) {
				this.jButtondebito_mone_localDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_localDetalleMoviClienProveBusqueda")) {
				this.jButtoncredito_mone_localDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("debito_mone_extraDetalleMoviClienProveBusqueda")) {
				this.jButtondebito_mone_extraDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("credito_mone_extraDetalleMoviClienProveBusqueda")) {
				this.jButtoncredito_mone_extraDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaDetalleMoviClienProveUpdate")) {
				this.jButtonid_monedaDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaDetalleMoviClienProveBusqueda")) {
				this.jButtonid_monedaDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionDetalleMoviClienProveBusqueda")) {
				this.jButtoncotizacionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleMoviClienProveBusqueda")) {
				this.jButtondescripcionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursal_movimientoDetalleMoviClienProveUpdate")) {
				this.jButtonid_sucursal_movimientoDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursal_movimientoDetalleMoviClienProveBusqueda")) {
				this.jButtonid_sucursal_movimientoDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleMoviClienProveUpdate")) {
				this.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloDetalleMoviClienProveBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_detalle_clienteDetalleMoviClienProveUpdate")) {
				this.jButtonid_estado_detalle_clienteDetalleMoviClienProveUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_detalle_clienteDetalleMoviClienProveBusqueda")) {
				this.jButtonid_estado_detalle_clienteDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetalleMoviClienProveBusqueda")) {
				this.jButtonfecha_emisionDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_mone_localDetalleMoviClienProveBusqueda")) {
				this.jButtonmonto_mone_localDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_mone_extraDetalleMoviClienProveBusqueda")) {
				this.jButtonmonto_mone_extraDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteDetalleMoviClienProveBusqueda")) {
				this.jButtonnumero_comprobanteDetalleMoviClienProveBusquedaActionPerformed(evt);
			}
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleMoviClienProve();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleMoviClienProve")) {
				closingInternalFrameDetalleMoviClienProve();
				
			} else if(sTipo.equals("jButtonCancelarDetalleMoviClienProve")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleMoviClienProve = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleMoviClienProveBeanSwingJInternalFrame jInternalFrameParent=(DetalleMoviClienProveBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleMoviClienProve.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleMoviClienProveActionPerformed(null);
			}
			
			DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallemoviclienprove,new Object(),this.detallemoviclienproveParameterGeneral,this.detallemoviclienproveReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleMoviClienProve(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleMoviClienProve(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleMoviClienProve(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detallemoviclienprove)) {
			if(!esControlTabla) {
				if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);			
				}
				
				if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallemoviclienproveReturnGeneral=detallemoviclienproveLogic.procesarEventosDetalleMoviClienProvesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallemoviclienproveLogic.getDetalleMoviClienProves(),this.detallemoviclienprove,this.detallemoviclienproveParameterGeneral,this.isEsNuevoDetalleMoviClienProve,classes);//this.detallemoviclienproveLogic.getDetalleMoviClienProve()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral,this.detallemoviclienproveBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleMoviClienProve(classes,this.detallemoviclienproveReturnGeneral,this.detallemoviclienproveBean,false);
					}
						
					if(this.detallemoviclienproveReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve());	
					}
						
					if(this.detallemoviclienproveReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve(),classes);//this.detallemoviclienproveBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleMoviClienProve(this.detallemoviclienprove,classes);//this.detallemoviclienproveBean);									
				}
			
				if(DetalleMoviClienProveJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleMoviClienProve(this.detallemoviclienprove,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleMoviClienProve(this.detallemoviclienprove);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detallemoviclienproveAnterior!=null) {
						this.detallemoviclienprove=this.detallemoviclienproveAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallemoviclienproveReturnGeneral=detallemoviclienproveLogic.procesarEventosDetalleMoviClienProvesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallemoviclienproveLogic.getDetalleMoviClienProves(),this.detallemoviclienprove,this.detallemoviclienproveParameterGeneral,this.isEsNuevoDetalleMoviClienProve,classes);//this.detallemoviclienproveLogic.getDetalleMoviClienProve()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallemoviclienproveSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallemoviclienproveSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve(),detallemoviclienproveLogic.getDetalleMoviClienProves());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve(),this.detallemoviclienproves);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleMoviClienProve.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleMoviClienProve.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleMoviClienProve();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleMoviClienProve() throws Exception {
		
		DetalleMoviClienProveModel detallemoviclienproveModel=(DetalleMoviClienProveModel)this.jTableDatosDetalleMoviClienProve.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallemoviclienproveModel.detallemoviclienproves=this.detallemoviclienproveLogic.getDetalleMoviClienProves();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detallemoviclienproveModel.detallemoviclienproves=this.detallemoviclienproves;
		}
		
		
		((DetalleMoviClienProveModel) this.jTableDatosDetalleMoviClienProve.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleMoviClienProve() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetallemoviclienproveAnterior(),this.detallemoviclienproveLogic.getDetalleMoviClienProves());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetallemoviclienproveAnterior(),this.detallemoviclienproves);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleMoviClienProve();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallemoviclienprove,new Object(),generalEntityParameterGeneral,this.detallemoviclienproveReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleMoviClienProveConstantesFunciones.getClassesRelationshipsOfDetalleMoviClienProve(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleMoviClienProveConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleMoviClienProve(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleMoviClienProve(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleMoviClienProveBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallemoviclienprove,new Object(),generalEntityParameterGeneral,this.detallemoviclienproveReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleMoviClienProve(DetalleMoviClienProveBean detallemoviclienproveBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleMoviClienProve(ArrayList<Classe> classes,DetalleMoviClienProveReturnGeneral detallemoviclienproveReturnGeneral,DetalleMoviClienProveBean detallemoviclienproveBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detallemoviclienprove)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve = new DetalleMoviClienProveDetalleFormJInternalFrame(jDesktopPane,this.detallemoviclienproveSessionBean.getConGuardarRelaciones(),this.detallemoviclienproveSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.setVisible(false);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.detallemoviclienproveLogic=this.detallemoviclienproveLogic;
		
		this.cargarCombosFrameForeignKeyDetalleMoviClienProve("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleMoviClienProve();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleMoviClienProve();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleMoviClienProve("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleMoviClienProve();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleMoviClienProve"));
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"ModificarDetalleMoviClienProve"));

		/*
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarToolBarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleMoviClienProve"));
					
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemModificarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleMoviClienProve"));		
		
		*/
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"ActualizarDetalleMoviClienProve"));
		
		/*
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarToolBarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleMoviClienProve"));
						
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemActualizarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleMoviClienProve"));		
		
		*/
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"EliminarDetalleMoviClienProve"));
		
		/*
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleMoviClienProve"));
								
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemEliminarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleMoviClienProve"));		
		
		*/
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CancelarDetalleMoviClienProve"));
		
		/*
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleMoviClienProve"));
					
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemCancelarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleMoviClienProve"));		
		
		*/
		
		
		/*
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemDetalleCerrarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleMoviClienProve"));		
		*/
		
		/*
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleMoviClienProve"));
		*/
		
		/*
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleMoviClienProve"));
		*/
		
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleMoviClienProve"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonidDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_empresaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_empresaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursalDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursalDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_ejercicioDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_ejercicioDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_periodoDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_periodoDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_anioDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_anioDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_mesDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_mesDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_moduloDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_moduloDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_moduloDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloDetalleMoviClienProveBusqueda"));
		//jButtonid_asiento_contableDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonfecha_venceDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"fecha_venceDetalleMoviClienProveBusqueda"));
		//jButtonid_clienteDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProveBusqueda"));
		//jButtonid_facturaDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonnumero_facturaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_transaccionDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_transaccionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondebito_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncredito_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondebito_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_extraDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncredito_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_extraDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_monedaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_monedaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_monedaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncotizacionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondescripcionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursal_movimientoDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_movimientoDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursal_movimientoDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_movimientoDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_estado_detalle_clienteDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_clienteDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_estado_detalle_clienteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_clienteDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonfecha_emisionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonmonto_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"monto_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonmonto_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"monto_mone_extraDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonnumero_comprobanteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleMoviClienProveBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleMoviClienProve"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleMoviClienProve"));
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleMoviClienProve"));
		}
		
		this.jTableDatosDetalleMoviClienProve.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleMoviClienProve"));
		
		this.jTableDatosDetalleMoviClienProve.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleMoviClienProve"));
		
		this.jButtonNuevoDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"NuevoDetalleMoviClienProve"));
		
		this.jButtonDuplicarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"DuplicarDetalleMoviClienProve"));
		
		this.jButtonCopiarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"CopiarDetalleMoviClienProve"));
		
		this.jButtonVerFormDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"VerFormDetalleMoviClienProve"));
		
		/*
		this.jButtonNuevoToolBarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleMoviClienProve"));
			
		this.jButtonDuplicarToolBarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleMoviClienProve"));
			
		this.jMenuItemNuevoDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleMoviClienProve"));
			
		this.jMenuItemDuplicarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleMoviClienProve"));		
		*/
		
		this.jButtonNuevoRelacionesDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleMoviClienProve"));
		
		/*
		this.jButtonNuevoRelacionesToolBarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleMoviClienProve"));
			
		this.jMenuItemNuevoRelacionesDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleMoviClienProve"));		
		*/
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"ModificarDetalleMoviClienProve"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonModificarToolBarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleMoviClienProve"));
			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemModificarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleMoviClienProve"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"ActualizarDetalleMoviClienProve"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonActualizarToolBarDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleMoviClienProve"));
				
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemActualizarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleMoviClienProve"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"EliminarDetalleMoviClienProve"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonEliminarToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleMoviClienProve"));
						
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemEliminarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleMoviClienProve"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CancelarDetalleMoviClienProve"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonCancelarToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleMoviClienProve"));
			
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemCancelarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleMoviClienProve"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleMoviClienProve"));		
		*/
		
		this.jButtonCerrarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CerrarDetalleMoviClienProve"));
		
		/*
		this.jButtonCerrarToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleMoviClienProve"));
			
		this.jMenuItemCerrarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleMoviClienProve"));
			
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jMenuItemDetalleCerrarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleMoviClienProve"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleMoviClienProve"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleMoviClienProve"));
		}
		
		this.jButtonCopiarToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleMoviClienProve"));
			
		this.jButtonVerFormToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleMoviClienProve"));
		
		this.jMenuItemGuardarCambiosDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleMoviClienProve"));
			
		this.jMenuItemCopiarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleMoviClienProve"));		
		
		this.jMenuItemVerFormDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleMoviClienProve"));		
		*/
		
		this.jButtonGuardarCambiosTablaDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleMoviClienProve"));
		
		/*
		this.jButtonGuardarCambiosTablaToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleMoviClienProve"));
			
		this.jMenuItemGuardarCambiosTablaDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleMoviClienProve"));		
		*/
		
		/*
		this.jButtonRecargarInformacionDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleMoviClienProve"));
					
		this.jButtonRecargarInformacionToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleMoviClienProve"));
		
		this.jMenuItemRecargarInformacionDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleMoviClienProve"));		
		*/
		
		
		this.jButtonAnterioresDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"AnterioresDetalleMoviClienProve"));
		
		/*
		this.jButtonAnterioresToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleMoviClienProve"));
		
		this.jMenuItemAnterioresDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleMoviClienProve"));		
		*/
		
		this.jButtonSiguientesDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"SiguientesDetalleMoviClienProve"));
		
		/*
		this.jButtonSiguientesToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleMoviClienProve"));
			
		this.jMenuItemSiguientesDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleMoviClienProve"));
			
		this.jMenuItemAbrirOrderByDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleMoviClienProve"));
			
		this.jMenuItemMostrarOcultarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleMoviClienProve"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleMoviClienProve"));
			
		this.jMenuItemDetalleMostarOcultarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleMoviClienProve"));		
		*/
		
		this.jButtonNuevoGuardarCambiosDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleMoviClienProve"));
		
		/*
		this.jButtonNuevoGuardarCambiosToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleMoviClienProve"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleMoviClienProve"));		
		*/
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleMoviClienProve.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleMoviClienProve"));

		this.jCheckBoxSeleccionadosDetalleMoviClienProve.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleMoviClienProve"));
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleMoviClienProve"));
		}
		
		/*
		this.jComboBoxTiposRelacionesDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleMoviClienProve"));
			
		this.jComboBoxTiposAccionesDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleMoviClienProve"));
					
		this.jComboBoxTiposSeleccionarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleMoviClienProve"));
			
		this.jTextFieldValorCampoGeneralDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleMoviClienProve"));		
		*/
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonidDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_empresaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_empresaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursalDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursalDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_ejercicioDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_ejercicioDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_periodoDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_periodoDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_anioDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_anioDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_mesDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_mesDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_moduloDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_moduloDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_moduloDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloDetalleMoviClienProveBusqueda"));
		//jButtonid_asiento_contableDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonfecha_venceDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"fecha_venceDetalleMoviClienProveBusqueda"));
		//jButtonid_clienteDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProveBusqueda"));
		//jButtonid_facturaDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonnumero_facturaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_transaccionDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_transaccionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondebito_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncredito_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondebito_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_extraDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncredito_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_extraDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_monedaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_monedaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_monedaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncotizacionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondescripcionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursal_movimientoDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_movimientoDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursal_movimientoDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_movimientoDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_estado_detalle_clienteDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_clienteDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_estado_detalle_clienteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_clienteDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonfecha_emisionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonmonto_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"monto_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonmonto_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"monto_mone_extraDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonnumero_comprobanteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleMoviClienProveBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		/*
		
			this.jButtonFK_IdAsientoContableDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableDetalleMoviClienProve"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProve"));

			this.jButtonFK_IdClienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdClienteDetalleMoviClienProve"));

			this.jButtonBuscarFK_IdClienteid_clienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProve"));

			this.jButtonFK_IdDetalleMoviClienProveDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdDetalleMoviClienProveDetalleMoviClienProve"));

			this.jButtonFK_IdEstadoDetalleClienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdEstadoDetalleClienteDetalleMoviClienProve"));

			this.jButtonFK_IdFacturaDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdFacturaDetalleMoviClienProve"));

			this.jButtonBuscarFK_IdFacturaid_facturaDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProve"));

			this.jButtonFK_IdTipoTransaccionModuloDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloDetalleMoviClienProve"));

			this.jButtonFK_IdTransaccionDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionDetalleMoviClienProve"));
		
		*/
		
			//REPORTE DINAMICO
			/*
			if(this.jInternalFrameReporteDinamicoDetalleMoviClienProve!=null) {
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleMoviClienProve"));
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleMoviClienProve"));
				this.jInternalFrameReporteDinamicoDetalleMoviClienProve.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleMoviClienProve"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleMoviClienProve"));				
			//this.jButtonGenerarReporteDinamicoDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleMoviClienProve"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleMoviClienProve"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleMoviClienProve!=null) {
				this.jInternalFrameImportacionDetalleMoviClienProve.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleMoviClienProve"));
				this.jInternalFrameImportacionDetalleMoviClienProve.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleMoviClienProve"));
				this.jInternalFrameImportacionDetalleMoviClienProve.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleMoviClienProve"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleMoviClienProve"));
			
			this.jButtonAbrirOrderByToolBarDetalleMoviClienProve.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleMoviClienProve"));			
			
			if(this.jInternalFrameOrderByDetalleMoviClienProve!=null) {
				this.jInternalFrameOrderByDetalleMoviClienProve.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleMoviClienProve"));				
			}
			*/
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jTabbedPaneRelacionesDetalleMoviClienProve.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleMoviClienProve"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleMoviClienProve();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleMoviClienProve = (JInternalFrameBase)event.getSource();
	            	
	            DetalleMoviClienProveBeanSwingJInternalFrame jInternalFrameParent=(DetalleMoviClienProveBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleMoviClienProve.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleMoviClienProveActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleMoviClienProve.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleMoviClienProveListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleMoviClienProve.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleMoviClienProve.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleMoviClienProve";
		inputMap = this.jButtonNuevoDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleMoviClienProve";
		inputMap = this.jButtonNuevoRelacionesDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleMoviClienProveActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleMoviClienProve";
		inputMap = this.jButtonModificarDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleMoviClienProveActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleMoviClienProve";
		inputMap = this.jButtonActualizarDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleMoviClienProveActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleMoviClienProve";
		inputMap = this.jButtonEliminarDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleMoviClienProveActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleMoviClienProve";
		inputMap = this.jButtonCancelarDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleMoviClienProveActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleMoviClienProve";
		inputMap = this.jButtonCerrarDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleMoviClienProveActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleMoviClienProve";
		inputMap = this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonGuardarCambiosDetalleMoviClienProve.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleMoviClienProveActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleMoviClienProve.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleMoviClienProveItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleMoviClienProve.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleMoviClienProveActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleMoviClienProve.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleMoviClienProveActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleMoviClienProve.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleMoviClienProveActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonidDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_empresaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_empresaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursalDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursalDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_ejercicioDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_ejercicioDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_periodoDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_periodoDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_anioDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_anioDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_mesDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_mesDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_moduloDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_moduloDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_moduloDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloDetalleMoviClienProveBusqueda"));
		//jButtonid_asiento_contableDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonfecha_venceDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"fecha_venceDetalleMoviClienProveBusqueda"));
		//jButtonid_clienteDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProveBusqueda"));
		//jButtonid_facturaDetalleMoviClienProve.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_facturaDetalleMoviClienProveActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProve"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonnumero_facturaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"numero_facturaDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_transaccionDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_transaccionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondebito_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncredito_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondebito_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"debito_mone_extraDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncredito_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"credito_mone_extraDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_monedaDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_monedaDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_monedaDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtoncotizacionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtondescripcionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursal_movimientoDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_sucursal_movimientoDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_sucursal_movimientoDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursal_movimientoDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_tipo_transaccion_moduloDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloDetalleMoviClienProveBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_estado_detalle_clienteDetalleMoviClienProveUpdate.addActionListener(new ButtonActionListener(this,"id_estado_detalle_clienteDetalleMoviClienProveUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_estado_detalle_clienteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_detalle_clienteDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonfecha_emisionDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonmonto_mone_localDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"monto_mone_localDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonmonto_mone_extraDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"monto_mone_extraDetalleMoviClienProveBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonnumero_comprobanteDetalleMoviClienProveBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleMoviClienProveBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableDetalleMoviClienProve"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_asiento_contableDetalleMoviClienProve"));

		this.jButtonFK_IdClienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdClienteDetalleMoviClienProve"));

		this.jButtonBuscarFK_IdClienteid_clienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_clienteDetalleMoviClienProve"));

		this.jButtonFK_IdDetalleMoviClienProveDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdDetalleMoviClienProveDetalleMoviClienProve"));

		this.jButtonFK_IdEstadoDetalleClienteDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdEstadoDetalleClienteDetalleMoviClienProve"));

		this.jButtonFK_IdFacturaDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdFacturaDetalleMoviClienProve"));

		this.jButtonBuscarFK_IdFacturaid_facturaDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"id_facturaDetalleMoviClienProve"));

		this.jButtonFK_IdTipoTransaccionModuloDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloDetalleMoviClienProve"));

		this.jButtonFK_IdTransaccionDetalleMoviClienProve.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionDetalleMoviClienProve"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleMoviClienProve.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleMoviClienProveActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	/*
	public void jComboBoxTiposSeleccionarDetalleMoviClienProveActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleMoviClienProve.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}	
	*/
	
	
	public void seleccionarTodosDetalleMoviClienProve(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
					detallemoviclienproveAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienproves) {
					detallemoviclienproveAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleMoviClienProveItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
						detallemoviclienproveAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienproves) {
						detallemoviclienproveAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienproves) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleMoviClienProve.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleMoviClienProve.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleMoviClienProveItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleMoviClienProve.getSelectedRows();
			
			DetalleMoviClienProve detallemoviclienproveLocal=new DetalleMoviClienProve();
			
			//this.seleccionarTodosDetalleMoviClienProve(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallemoviclienproveLocal =(DetalleMoviClienProve) this.detallemoviclienproveLogic.getDetalleMoviClienProves().toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detallemoviclienproveLocal =(DetalleMoviClienProve) this.detallemoviclienproves.toArray()[this.jTableDatosDetalleMoviClienProve.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detallemoviclienproveLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
						detallemoviclienproveAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienproves) {
						detallemoviclienproveAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleMoviClienProve.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleMoviClienProve.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleMoviClienProve,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleMoviClienProveItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleMoviClienProveParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleMoviClienProveActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleMoviClienProve.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproveLogic.getDetalleMoviClienProves()) {
				
						if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE)) {
							existe=true;
							detallemoviclienproveAux.setfecha_vence(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA)) {
							existe=true;
							detallemoviclienproveAux.setnumero_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL)) {
							existe=true;
							detallemoviclienproveAux.setdebito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL)) {
							existe=true;
							detallemoviclienproveAux.setcredito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA)) {
							existe=true;
							detallemoviclienproveAux.setdebito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA)) {
							existe=true;
							detallemoviclienproveAux.setcredito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							detallemoviclienproveAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detallemoviclienproveAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detallemoviclienproveAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL)) {
							existe=true;
							detallemoviclienproveAux.setmonto_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA)) {
							existe=true;
							detallemoviclienproveAux.setmonto_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							detallemoviclienproveAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienproves) {
					
						if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE)) {
							existe=true;
							detallemoviclienproveAux.setfecha_vence(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA)) {
							existe=true;
							detallemoviclienproveAux.setnumero_factura(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL)) {
							existe=true;
							detallemoviclienproveAux.setdebito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL)) {
							existe=true;
							detallemoviclienproveAux.setcredito_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA)) {
							existe=true;
							detallemoviclienproveAux.setdebito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA)) {
							existe=true;
							detallemoviclienproveAux.setcredito_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							detallemoviclienproveAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detallemoviclienproveAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detallemoviclienproveAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL)) {
							existe=true;
							detallemoviclienproveAux.setmonto_mone_local(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA)) {
							existe=true;
							detallemoviclienproveAux.setmonto_mone_extra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							detallemoviclienproveAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleMoviClienProveActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleMoviClienProve=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				/*
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleMoviClienProve.getSelectedItem();
				*/
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleMoviClienProve) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleMoviClienProve(conSplash);
				
					this.generarReporteDetalleMoviClienProvesSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleMoviClienProvesSeleccionados();
				//this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleMoviClienProvesSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleMoviClienProvesSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleMoviClienProve();
				
				this.exportarDetalleMoviClienProvesSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleMoviClienProves();
				//this.importarDetalleMoviClienProves();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleMoviClienProve();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleMoviClienProvesSeleccionados();
				//this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleMoviClienProve();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleMoviClienProve)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleMoviClienProve(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleMoviClienProveBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleMoviClienProve) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleMoviClienProve(conSplash);
					
						//this.actualizarParametrosGeneralDetalleMoviClienProve();
						
						this.generarReporteProcesoAccionDetalleMoviClienProvesSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							/*
							this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
							*/
						} else {
							this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleMoviClienProveBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle ClienteS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Cliente", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleMoviClienProve();
				
						this.actualizarParametrosGeneralDetalleMoviClienProve();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detallemoviclienproveReturnGeneral=detallemoviclienproveLogic.procesarAccionDetalleMoviClienProvesWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detallemoviclienproveLogic.getDetalleMoviClienProves(),this.detallemoviclienproveParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleMoviClienProveReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleMoviClienProve();
					
					DetalleMoviClienProveBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleMoviClienProveReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesDetalleMoviClienProve.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxTiposAccionesFormularioDetalleMoviClienProve.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleMoviClienProve(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleMoviClienProveActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleMoviClienProve();
			
			if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
			DetalleMoviClienProve detallemoviclienprove=new DetalleMoviClienProve();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleMoviClienProve(false,false);
			
			Reporte reporte=new Reporte();
			
			/*
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleMoviClienProve.getSelectedItem();
			*/
			
			
			
			detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
			//this.sTipoAccion;
			
			if(detallemoviclienprovesSeleccionados.size()==1) {
				for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienprovesSeleccionados) {
					detallemoviclienprove=detallemoviclienproveAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleMoviClienProve();
			
      		//this.finishProcessDetalleMoviClienProve(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleMoviClienProveReturnGeneral() throws Exception {
		if(this.detallemoviclienproveReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detallemoviclienproveReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detallemoviclienproveReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detallemoviclienproveReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detallemoviclienproveReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detallemoviclienproveReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleMoviClienProve(false);
		}
		
		if(this.detallemoviclienproveReturnGeneral.getConRetornoLista() || this.detallemoviclienproveReturnGeneral.getConRetornoObjeto()) {
			if(this.detallemoviclienproveReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallemoviclienproveLogic.setDetalleMoviClienProves(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProves());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detallemoviclienproveReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallemoviclienproveLogic.setDetalleMoviClienProve(this.detallemoviclienproveReturnGeneral.getDetalleMoviClienProve());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleMoviClienProve(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleMoviClienProve() throws Exception {
		
		
	}
	
	public ArrayList<DetalleMoviClienProve> getDetalleMoviClienProvesSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleMoviClienProve) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienproveLogic.getDetalleMoviClienProves()) {
					if(detallemoviclienproveAux.getIsSelected()) {
						detallemoviclienprovesSeleccionados.add(detallemoviclienproveAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleMoviClienProve detallemoviclienproveAux:this.detallemoviclienproves) {
					if(detallemoviclienproveAux.getIsSelected()) {
						detallemoviclienprovesSeleccionados.add(detallemoviclienproveAux);				
					}
				}
			}
			
			if(detallemoviclienprovesSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detallemoviclienprovesSeleccionados.addAll(this.detallemoviclienproveLogic.getDetalleMoviClienProves());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detallemoviclienprovesSeleccionados.addAll(this.detallemoviclienproves);				
					}
				}
			}
		} else {
			detallemoviclienprovesSeleccionados.add(this.detallemoviclienprove);
		}
		
		return detallemoviclienprovesSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleMoviClienProvesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleMoviClienProvesSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleMoviClienProvesSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleMoviClienProvesSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleMoviClienProvesSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleMoviClienProvesSeleccionados() throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienprovesSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleMoviClienProvesSeleccionados() throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienprovesSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleMoviClienProvesSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienprovesSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleMoviClienProvesSeleccionados() throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
		
		/*
		this.abrirInicializarFrameReporteDinamicoDetalleMoviClienProve();
		*/
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirFrameReporteDinamicoDetalleMoviClienProve();
		*/
		
		//this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienprovesSeleccionados ,detallemoviclienproveImplementable,detallemoviclienproveImplementableHome);
	}
	
	public void mostrarImportacionDetalleMoviClienProves() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirInicializarFrameImportacionDetalleMoviClienProve();
		
		this.abrirFrameImportacionDetalleMoviClienProve();		
		*/
			
		//this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienprovesSeleccionados ,detallemoviclienproveImplementable,detallemoviclienproveImplementableHome);
	}
	
	public void importarDetalleMoviClienProves() throws Exception {		
	
	}
	
	public void exportarDetalleMoviClienProvesSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleMoviClienProvesSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleMoviClienProvesSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleMoviClienProvesSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Cliente",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleMoviClienProvesSeleccionados() throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallemoviclienprove."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleMoviClienProve(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienprovesSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleMoviClienProve(detallemoviclienproveAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detallemoviclienproveAux.setsDetalleGeneralEntityReporte(detallemoviclienproveAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleMoviClienProve(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detallemoviclienprove.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getasientocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getfecha_vence().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getnumero_factura();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getdebito_mone_local().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getcredito_mone_local().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getdebito_mone_extra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getcredito_mone_extra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getcotizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getsucursalmovimiento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.gettipotransaccionmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getestadodetallecliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getmonto_mone_local().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getmonto_mone_extra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallemoviclienprove.getnumero_comprobante();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleMoviClienProvesSeleccionados() throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallemoviclienprove.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleMoviClienProves");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleMoviClienProve(row);				
				iRow++;
			}				
			
			for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienprovesSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleMoviClienProve(detallemoviclienproveAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleMoviClienProvesSeleccionados() throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();		
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallemoviclienprove.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detallemoviclienproves");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detallemoviclienprove");
			//elementRoot.appendChild(element);
		
			for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienprovesSeleccionados) {
				element = document.createElement("detallemoviclienprove");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleMoviClienProve(detallemoviclienproveAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Cliente",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleMoviClienProve(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONELOCAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONELOCAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DEBITOMONEEXTRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_CREDITOMONEEXTRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_COTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONELOCAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_MONTOMONEEXTRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getasientocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getfecha_vence());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getnumero_factura());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getdebito_mone_local());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getcredito_mone_local());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getdebito_mone_extra());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getcredito_mone_extra());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getcotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getsucursalmovimiento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.gettipotransaccionmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getestadodetallecliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getmonto_mone_local());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getmonto_mone_extra());
		cell = row.createCell(iColumn++);cell.setCellValue(detallemoviclienprove.getnumero_comprobante());				
	}
	
	public void setFilaDatosExportarXmlDetalleMoviClienProve(DetalleMoviClienProve detallemoviclienprove,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleMoviClienProveConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detallemoviclienprove.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleMoviClienProveConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detallemoviclienprove.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementmodulo_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementasientocontable_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);

		Element elementfecha_vence = document.createElement(DetalleMoviClienProveConstantesFunciones.FECHAVENCE);
		elementfecha_vence.appendChild(document.createTextNode(detallemoviclienprove.getfecha_vence().toString().trim()));
		element.appendChild(elementfecha_vence);

		Element elementcliente_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementfactura_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDFACTURA);
		elementfactura_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getfactura_descripcion()));
		element.appendChild(elementfactura_descripcion);

		Element elementnumero_factura = document.createElement(DetalleMoviClienProveConstantesFunciones.NUMEROFACTURA);
		elementnumero_factura.appendChild(document.createTextNode(detallemoviclienprove.getnumero_factura().trim()));
		element.appendChild(elementnumero_factura);

		Element elementtransaccion_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(detallemoviclienprove.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementdebito_mone_local = document.createElement(DetalleMoviClienProveConstantesFunciones.DEBITOMONELOCAL);
		elementdebito_mone_local.appendChild(document.createTextNode(detallemoviclienprove.getdebito_mone_local().toString().trim()));
		element.appendChild(elementdebito_mone_local);

		Element elementcredito_mone_local = document.createElement(DetalleMoviClienProveConstantesFunciones.CREDITOMONELOCAL);
		elementcredito_mone_local.appendChild(document.createTextNode(detallemoviclienprove.getcredito_mone_local().toString().trim()));
		element.appendChild(elementcredito_mone_local);

		Element elementdebito_mone_extra = document.createElement(DetalleMoviClienProveConstantesFunciones.DEBITOMONEEXTRA);
		elementdebito_mone_extra.appendChild(document.createTextNode(detallemoviclienprove.getdebito_mone_extra().toString().trim()));
		element.appendChild(elementdebito_mone_extra);

		Element elementcredito_mone_extra = document.createElement(DetalleMoviClienProveConstantesFunciones.CREDITOMONEEXTRA);
		elementcredito_mone_extra.appendChild(document.createTextNode(detallemoviclienprove.getcredito_mone_extra().toString().trim()));
		element.appendChild(elementcredito_mone_extra);

		Element elementmoneda_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementcotizacion = document.createElement(DetalleMoviClienProveConstantesFunciones.COTIZACION);
		elementcotizacion.appendChild(document.createTextNode(detallemoviclienprove.getcotizacion().toString().trim()));
		element.appendChild(elementcotizacion);

		Element elementdescripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detallemoviclienprove.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementsucursalmovimiento_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDSUCURSALMOVIMIENTO);
		elementsucursalmovimiento_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getsucursalmovimiento_descripcion()));
		element.appendChild(elementsucursalmovimiento_descripcion);

		Element elementtipotransaccionmodulo_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDTIPOTRANSACCIONMODULO);
		elementtipotransaccionmodulo_descripcion.appendChild(document.createTextNode(detallemoviclienprove.gettipotransaccionmodulo_descripcion()));
		element.appendChild(elementtipotransaccionmodulo_descripcion);

		Element elementestadodetallecliente_descripcion = document.createElement(DetalleMoviClienProveConstantesFunciones.IDESTADODETALLECLIENTE);
		elementestadodetallecliente_descripcion.appendChild(document.createTextNode(detallemoviclienprove.getestadodetallecliente_descripcion()));
		element.appendChild(elementestadodetallecliente_descripcion);

		Element elementfecha_emision = document.createElement(DetalleMoviClienProveConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(detallemoviclienprove.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementmonto_mone_local = document.createElement(DetalleMoviClienProveConstantesFunciones.MONTOMONELOCAL);
		elementmonto_mone_local.appendChild(document.createTextNode(detallemoviclienprove.getmonto_mone_local().toString().trim()));
		element.appendChild(elementmonto_mone_local);

		Element elementmonto_mone_extra = document.createElement(DetalleMoviClienProveConstantesFunciones.MONTOMONEEXTRA);
		elementmonto_mone_extra.appendChild(document.createTextNode(detallemoviclienprove.getmonto_mone_extra().toString().trim()));
		element.appendChild(elementmonto_mone_extra);

		Element elementnumero_comprobante = document.createElement(DetalleMoviClienProveConstantesFunciones.NUMEROCOMPROBANTE);
		elementnumero_comprobante.appendChild(document.createTextNode(detallemoviclienprove.getnumero_comprobante().trim()));
		element.appendChild(elementnumero_comprobante);
	}
	
	public void generarReporteGroupGenericoDetalleMoviClienProvesSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados=new ArrayList<DetalleMoviClienProve>();
		
		detallemoviclienprovesSeleccionados=this.getDetalleMoviClienProvesSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleMoviClienProve(detallemoviclienprovesSeleccionados);
		
		this.generarReporteDetalleMoviClienProves("Todos",detallemoviclienprovesSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleMoviClienProve(ArrayList<DetalleMoviClienProve> detallemoviclienprovesSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleMoviClienProve detallemoviclienproveAux:detallemoviclienprovesSeleccionados) {
				detallemoviclienproveAux.setsDetalleGeneralEntityReporte(detallemoviclienproveAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getasientocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAVENCE)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detallemoviclienproveAux.getfecha_vence()));
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDFACTURA)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROFACTURA)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getnumero_factura());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDSUCURSALMOVIMIENTO)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getsucursalmovimiento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.gettipotransaccionmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_IDESTADODETALLECLIENTE)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getestadodetallecliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detallemoviclienproveAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(DetalleMoviClienProveConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
					existe=true;
					detallemoviclienproveAux.setsDescripcionGeneralEntityReporte1(detallemoviclienproveAux.getnumero_comprobante());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleMoviClienProveConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleMoviClienProve(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleMoviClienProve=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=true;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=true;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=true;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=true;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=true;
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;
			this.isVisibilidadCeldaModificarDetalleMoviClienProve=true;
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaCancelarDetalleMoviClienProve=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleMoviClienProve=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleMoviClienProveJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=true;
		} else {
			this.actualizarEstadoPanelsDetalleMoviClienProve(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleMoviClienProve=false;
			//this.isVisibilidadCeldaVerFormDetalleMoviClienProve=false;
			this.isVisibilidadCeldaDuplicarDetalleMoviClienProve=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detallemoviclienproveSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleMoviClienProve=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleMoviClienProve=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
			if(!detallemoviclienproveSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;												
			}
			
			this.jButtonCerrarDetalleMoviClienProve.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleMoviClienProve=false;
		}
		
		if(!this.permiteMantenimiento(this.detallemoviclienprove)) {
			this.isVisibilidadCeldaActualizarDetalleMoviClienProve=false;
			this.isVisibilidadCeldaEliminarDetalleMoviClienProve=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleMoviClienProve() {
	}
	
	public void actualizarEstadoPanelsDetalleMoviClienProve(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosEdicionDetalleMoviClienProve.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleMoviClienProve!=null) {
				this.jPanelPaginacionDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosEdicionDetalleMoviClienProve.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(false);			
			}
			*/
			
			
			if(this.jScrollPanelDatosDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosDetalleMoviClienProve.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleMoviClienProve!=null) {
				this.jPanelPaginacionDetalleMoviClienProve.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosEdicionDetalleMoviClienProve.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosDetalleMoviClienProve.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleMoviClienProve!=null) {
				this.jPanelPaginacionDetalleMoviClienProve.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosEdicionDetalleMoviClienProve.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosDetalleMoviClienProve.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleMoviClienProve!=null) {
				this.jPanelPaginacionDetalleMoviClienProve.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosEdicionDetalleMoviClienProve.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleMoviClienProve!=null) {
				this.jPanelPaginacionDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosEdicionDetalleMoviClienProve.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleMoviClienProve!=null) {
				this.jPanelPaginacionDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosEdicionDetalleMoviClienProve.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosDetalleMoviClienProve!=null) {
				this.jScrollPanelDatosDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleMoviClienProve!=null) {
				this.jPanelPaginacionDetalleMoviClienProve.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
					this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(false);				
				}
				*/
			}
			
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detallemoviclienproveSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasDetalleMoviClienProve!=null) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setVisible(true);			
			}
			*/
			if(this.jPanelParametrosReportesDetalleMoviClienProve!=null) {
				this.jPanelParametrosReportesDetalleMoviClienProve.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdAsientoContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdAsientoContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdAsientoContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaMesNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaFactura(Boolean isParaFactura){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaFacturaNegation=!isParaFactura;

			this.isVisibilidadFK_IdAsientoContable=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaFactura;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadFK_IdAsientoContable=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdAsientoContable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaSucursalMovimiento(Boolean isParaSucursalMovimiento){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalMovimientoNegation=!isParaSucursalMovimiento;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalMovimientoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaSucursalMovimientoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaSucursalMovimiento;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaSucursalMovimientoNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaSucursalMovimientoNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalMovimientoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoTransaccionModulo(Boolean isParaTipoTransaccionModulo){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTransaccionModuloNegation=!isParaTipoTransaccionModulo;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoTransaccionModulo;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaEstadoDetalleCliente(Boolean isParaEstadoDetalleCliente){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoDetalleClienteNegation=!isParaEstadoDetalleCliente;

			this.isVisibilidadFK_IdAsientoContable=isParaEstadoDetalleClienteNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdAsientoContableDetalleMoviClienProve);}

			this.isVisibilidadFK_IdCliente=isParaEstadoDetalleClienteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdDetalleMoviClienProve=isParaEstadoDetalleClienteNegation;
			if(!this.isVisibilidadFK_IdDetalleMoviClienProve) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);}

			this.isVisibilidadFK_IdEstadoDetalleCliente=isParaEstadoDetalleCliente;
			if(!this.isVisibilidadFK_IdEstadoDetalleCliente) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);}

			this.isVisibilidadFK_IdFactura=isParaEstadoDetalleClienteNegation;
			if(!this.isVisibilidadFK_IdFactura) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdFacturaDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEstadoDetalleClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);}

			this.isVisibilidadFK_IdTransaccion=isParaEstadoDetalleClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(jPanelFK_IdTransaccionDetalleMoviClienProve);}
		}
		*/
	}
	
	
	
	

	public String registrarSesionDetalleMoviClienProveParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(detallemoviclienproveSessionBean==null) {
				detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(detallemoviclienproveSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.detallemoviclienproveFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(DetalleMoviClienProveConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionDetalleMoviClienProve(true);
			//asientocontableSessionBean.setlidDetalleMoviClienProveActual(this.idDetalleMoviClienProveActual);

			detallemoviclienproveSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleMoviClienProve(true);
			detallemoviclienproveSessionBean.setlIdDetalleMoviClienProveActualForeignKey(this.idDetalleMoviClienProveActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetalleMoviClienProveParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(detallemoviclienproveSessionBean==null) {
				detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(detallemoviclienproveSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.detallemoviclienproveFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(DetalleMoviClienProveConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionDetalleMoviClienProve(true);
			//clienteSessionBean.setlidDetalleMoviClienProveActual(this.idDetalleMoviClienProveActual);

			detallemoviclienproveSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleMoviClienProve(true);
			detallemoviclienproveSessionBean.setlIdDetalleMoviClienProveActualForeignKey(this.idDetalleMoviClienProveActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetalleMoviClienProveParaBusquedaFacturas() throws Exception {
		Boolean isPaginaPopupFactura=false;

		try {

			if(detallemoviclienproveSessionBean==null) {
				detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
			}

			if(facturaSessionBean==null) {
				facturaSessionBean=new FacturaSessionBean();
			}

			facturaSessionBean.setsPathNavegacionActual(detallemoviclienproveSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FacturaConstantesFunciones.SCLASSWEBTITULO);
			facturaSessionBean.setisPermiteRecargarInformacion(false);
			facturaSessionBean.setisPaginaPopup(true);
			isPaginaPopupFactura=facturaSessionBean.getisPaginaPopup();
			facturaSessionBean.setisPaginaPopup(false);
			facturaSessionBean.setEstaModoBusqueda(true);
			facturaSessionBean.setsFuncionBusquedaRapida("window.opener.detallemoviclienproveFuncionGeneral.setCombosCodigoDesdeBusquedaid_factura(TO_REPLACE);");
			facturaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFactura(true);
			facturaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFactura(DetalleMoviClienProveConstantesFunciones.SNOMBREOPCION);
			//facturaSessionBean.setisBusquedaDesdeForeignKeySesionDetalleMoviClienProve(true);
			//facturaSessionBean.setlidDetalleMoviClienProveActual(this.idDetalleMoviClienProveActual);

			detallemoviclienproveSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleMoviClienProve(true);
			detallemoviclienproveSessionBean.setlIdDetalleMoviClienProveActualForeignKey(this.idDetalleMoviClienProveActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleMoviClienProveSessionBean detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
		
		if(this.detallemoviclienproveSessionBean==null) {
			this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
		}
		
		this.detallemoviclienproveSessionBean.setsUltimaBusquedaDetalleMoviClienProve(this.getsAccionBusqueda());
		this.detallemoviclienproveSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detallemoviclienproveSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			detallemoviclienproveSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			detallemoviclienproveSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdDetalleMoviClienProve")) {
			detallemoviclienproveSessionBean.setid_sucursal_movimiento(this.getid_sucursal_movimientoFK_IdDetalleMoviClienProve());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detallemoviclienproveSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detallemoviclienproveSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoDetalleCliente")) {
			detallemoviclienproveSessionBean.setid_estado_detalle_cliente(this.getid_estado_detalle_clienteFK_IdEstadoDetalleCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
			detallemoviclienproveSessionBean.setid_factura(this.getid_facturaFK_IdFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			detallemoviclienproveSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			detallemoviclienproveSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detallemoviclienproveSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detallemoviclienproveSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
			detallemoviclienproveSessionBean.setid_tipo_transaccion_modulo(this.getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			detallemoviclienproveSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleMoviClienProveSessionBean detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
		
		if(this.detallemoviclienproveSessionBean==null) {
			this.detallemoviclienproveSessionBean=new DetalleMoviClienProveSessionBean();
		}
		
		if(this.detallemoviclienproveSessionBean.getsUltimaBusquedaDetalleMoviClienProve()!=null&&!this.detallemoviclienproveSessionBean.getsUltimaBusquedaDetalleMoviClienProve().equals("")) {
			this.setsAccionBusqueda(detallemoviclienproveSessionBean.getsUltimaBusquedaDetalleMoviClienProve());
			this.setiNumeroPaginacion(detallemoviclienproveSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detallemoviclienproveSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(detallemoviclienproveSessionBean.getid_asiento_contable());
				detallemoviclienproveSessionBean.setid_asiento_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(detallemoviclienproveSessionBean.getid_cliente());
				detallemoviclienproveSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdDetalleMoviClienProve")) {
				this.setid_sucursal_movimientoFK_IdDetalleMoviClienProve(detallemoviclienproveSessionBean.getid_sucursal_movimiento());
				detallemoviclienproveSessionBean.setid_sucursal_movimiento(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detallemoviclienproveSessionBean.getid_ejercicio());
				detallemoviclienproveSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detallemoviclienproveSessionBean.getid_empresa());
				detallemoviclienproveSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoDetalleCliente")) {
				this.setid_estado_detalle_clienteFK_IdEstadoDetalleCliente(detallemoviclienproveSessionBean.getid_estado_detalle_cliente());
				detallemoviclienproveSessionBean.setid_estado_detalle_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFactura")) {
				this.setid_facturaFK_IdFactura(detallemoviclienproveSessionBean.getid_factura());
				detallemoviclienproveSessionBean.setid_factura(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(detallemoviclienproveSessionBean.getid_modulo());
				detallemoviclienproveSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(detallemoviclienproveSessionBean.getid_moneda());
				detallemoviclienproveSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detallemoviclienproveSessionBean.getid_periodo());
				detallemoviclienproveSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detallemoviclienproveSessionBean.getid_sucursal());
				detallemoviclienproveSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
				this.setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(detallemoviclienproveSessionBean.getid_tipo_transaccion_modulo());
				detallemoviclienproveSessionBean.setid_tipo_transaccion_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(detallemoviclienproveSessionBean.getid_transaccion());
				detallemoviclienproveSessionBean.setid_transaccion(-1L);
			}
		}
		
		this.detallemoviclienproveSessionBean.setsUltimaBusquedaDetalleMoviClienProve("");
		this.detallemoviclienproveSessionBean.setiNumeroPaginacion(DetalleMoviClienProveConstantesFunciones.INUMEROPAGINACION);
		this.detallemoviclienproveSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleMoviClienProve(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleMoviClienProve() {
		this.updateBorderResaltarBusquedasFormularioDetalleMoviClienProve();
		this.updateVisibilidadBusquedasFormularioDetalleMoviClienProve();
		this.updateHabilitarBusquedasFormularioDetalleMoviClienProve();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleMoviClienProve() {					
	//BYDAN_BUSQUEDAS
	/*	
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponents().length>0) {
	

		if(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdAsientoContableDetalleMoviClienProve!=null) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleMoviClienProve);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdAsientoContableDetalleMoviClienProve);
			}
		}

		if(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdClienteDetalleMoviClienProve!=null) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdClienteDetalleMoviClienProve);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdClienteDetalleMoviClienProve);
			}
		}

		if(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdDetalleMoviClienProveDetalleMoviClienProve!=null) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdDetalleMoviClienProveDetalleMoviClienProve);
			}
		}

		if(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdEstadoDetalleClienteDetalleMoviClienProve!=null) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdEstadoDetalleClienteDetalleMoviClienProve);
			}
		}

		if(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdFacturaDetalleMoviClienProve!=null) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdFacturaDetalleMoviClienProve);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdFacturaDetalleMoviClienProve);
			}
		}

		if(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdTipoTransaccionModuloDetalleMoviClienProve!=null) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdTipoTransaccionModuloDetalleMoviClienProve);
			}
		}

		if(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdTransaccionDetalleMoviClienProve!=null) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTransaccionDetalleMoviClienProve);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdTransaccionDetalleMoviClienProve);
			}
		}
	}	
	*/
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleMoviClienProve() {
	//BYDAN_BUSQUEDAS
	/*
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleMoviClienProve);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarFK_IdAsientoContableDetalleMoviClienProve);
			if(!this.detallemoviclienproveConstantesFunciones.mostrarFK_IdAsientoContableDetalleMoviClienProve && index>-1) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdClienteDetalleMoviClienProve);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarFK_IdClienteDetalleMoviClienProve);
			if(!this.detallemoviclienproveConstantesFunciones.mostrarFK_IdClienteDetalleMoviClienProve && index>-1) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarFK_IdDetalleMoviClienProveDetalleMoviClienProve);
			if(!this.detallemoviclienproveConstantesFunciones.mostrarFK_IdDetalleMoviClienProveDetalleMoviClienProve && index>-1) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarFK_IdEstadoDetalleClienteDetalleMoviClienProve);
			if(!this.detallemoviclienproveConstantesFunciones.mostrarFK_IdEstadoDetalleClienteDetalleMoviClienProve && index>-1) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdFacturaDetalleMoviClienProve);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarFK_IdFacturaDetalleMoviClienProve);
			if(!this.detallemoviclienproveConstantesFunciones.mostrarFK_IdFacturaDetalleMoviClienProve && index>-1) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarFK_IdTipoTransaccionModuloDetalleMoviClienProve);
			if(!this.detallemoviclienproveConstantesFunciones.mostrarFK_IdTipoTransaccionModuloDetalleMoviClienProve && index>-1) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTransaccionDetalleMoviClienProve);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarFK_IdTransaccionDetalleMoviClienProve);
			if(!this.detallemoviclienproveConstantesFunciones.mostrarFK_IdTransaccionDetalleMoviClienProve && index>-1) {
				this.jTabbedPaneBusquedasDetalleMoviClienProve.remove(index);
			}
	}	
	*/
	}
	
	public void updateHabilitarBusquedasFormularioDetalleMoviClienProve() {
	/*
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleMoviClienProve);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallemoviclienproveConstantesFunciones.activarFK_IdAsientoContableDetalleMoviClienProve);
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setEnabledAt(index,this.detallemoviclienproveConstantesFunciones.activarFK_IdAsientoContableDetalleMoviClienProve);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdClienteDetalleMoviClienProve);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallemoviclienproveConstantesFunciones.activarFK_IdClienteDetalleMoviClienProve);
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setEnabledAt(index,this.detallemoviclienproveConstantesFunciones.activarFK_IdClienteDetalleMoviClienProve);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallemoviclienproveConstantesFunciones.activarFK_IdDetalleMoviClienProveDetalleMoviClienProve);
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setEnabledAt(index,this.detallemoviclienproveConstantesFunciones.activarFK_IdDetalleMoviClienProveDetalleMoviClienProve);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallemoviclienproveConstantesFunciones.activarFK_IdEstadoDetalleClienteDetalleMoviClienProve);
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setEnabledAt(index,this.detallemoviclienproveConstantesFunciones.activarFK_IdEstadoDetalleClienteDetalleMoviClienProve);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdFacturaDetalleMoviClienProve);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallemoviclienproveConstantesFunciones.activarFK_IdFacturaDetalleMoviClienProve);
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setEnabledAt(index,this.detallemoviclienproveConstantesFunciones.activarFK_IdFacturaDetalleMoviClienProve);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallemoviclienproveConstantesFunciones.activarFK_IdTipoTransaccionModuloDetalleMoviClienProve);
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setEnabledAt(index,this.detallemoviclienproveConstantesFunciones.activarFK_IdTipoTransaccionModuloDetalleMoviClienProve);
			}

			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTransaccionDetalleMoviClienProve);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallemoviclienproveConstantesFunciones.activarFK_IdTransaccionDetalleMoviClienProve);
				this.jTabbedPaneBusquedasDetalleMoviClienProve.setEnabledAt(index,this.detallemoviclienproveConstantesFunciones.activarFK_IdTransaccionDetalleMoviClienProve);
			}
		}	
	*/
	}
	
	
	public void resaltarPanelBusquedaDetalleMoviClienProve(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		/*
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdAsientoContableDetalleMoviClienProve);

			this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);

			this.detallemoviclienproveConstantesFunciones.setResaltarFK_IdAsientoContableDetalleMoviClienProve(resaltar);

			jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdAsientoContableDetalleMoviClienProve);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdClienteDetalleMoviClienProve);

			this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);

			this.detallemoviclienproveConstantesFunciones.setResaltarFK_IdClienteDetalleMoviClienProve(resaltar);

			jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdClienteDetalleMoviClienProve);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdDetalleMoviClienProve")) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdDetalleMoviClienProveDetalleMoviClienProve);

			this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);

			this.detallemoviclienproveConstantesFunciones.setResaltarFK_IdDetalleMoviClienProveDetalleMoviClienProve(resaltar);

			jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdDetalleMoviClienProveDetalleMoviClienProve);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoDetalleCliente")) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdEstadoDetalleClienteDetalleMoviClienProve);

			this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);

			this.detallemoviclienproveConstantesFunciones.setResaltarFK_IdEstadoDetalleClienteDetalleMoviClienProve(resaltar);

			jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdEstadoDetalleClienteDetalleMoviClienProve);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFactura")) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdFacturaDetalleMoviClienProve);

			this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);

			this.detallemoviclienproveConstantesFunciones.setResaltarFK_IdFacturaDetalleMoviClienProve(resaltar);

			jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdFacturaDetalleMoviClienProve);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTransaccionModulo")) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloDetalleMoviClienProve);

			this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);

			this.detallemoviclienproveConstantesFunciones.setResaltarFK_IdTipoTransaccionModuloDetalleMoviClienProve(resaltar);

			jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdTipoTransaccionModuloDetalleMoviClienProve);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasDetalleMoviClienProve.indexOfComponent(this.jPanelFK_IdTransaccionDetalleMoviClienProve);

			this.jTabbedPaneBusquedasDetalleMoviClienProve.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleMoviClienProve.getComponent(index);

			this.detallemoviclienproveConstantesFunciones.setResaltarFK_IdTransaccionDetalleMoviClienProve(resaltar);

			jPanel.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarFK_IdTransaccionDetalleMoviClienProve);
			existe=true;
		}
		*/

		if(existe) {
			/*
			this.jTtoolBarDetalleMoviClienProve.setBorder(resaltar);
			*/
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleMoviClienProve() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleMoviClienProve();
		this.updateVisibilidadResaltarControlesFormularioDetalleMoviClienProve();
		this.updateHabilitarResaltarControlesFormularioDetalleMoviClienProve();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleMoviClienProve() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detallemoviclienproveConstantesFunciones.resaltaridDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltaridDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_empresaDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_empresaDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_sucursalDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_sucursalDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_ejercicioDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_ejercicioDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_periodoDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_periodoDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_anioDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_anioDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_mesDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_mesDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_moduloDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_moduloDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_asiento_contableDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_asiento_contableDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarfecha_venceDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarfecha_venceDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_clienteDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_clienteDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_facturaDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_facturaDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarnumero_facturaDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_facturaDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarnumero_facturaDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_transaccionDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_transaccionDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_localDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_localDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_localDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_localDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_extraDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltardebito_mone_extraDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_extraDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarcredito_mone_extraDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_monedaDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_monedaDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarcotizacionDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarcotizacionDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltardescripcionDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltardescripcionDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_sucursal_movimientoDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_sucursal_movimientoDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_tipo_transaccion_moduloDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_tipo_transaccion_moduloDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarid_estado_detalle_clienteDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarid_estado_detalle_clienteDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarfecha_emisionDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_emisionDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarfecha_emisionDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarmonto_mone_localDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_localDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarmonto_mone_localDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarmonto_mone_extraDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_extraDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarmonto_mone_extraDetalleMoviClienProve);}
		if(this.detallemoviclienproveConstantesFunciones.resaltarnumero_comprobanteDetalleMoviClienProve!=null && this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_comprobanteDetalleMoviClienProve.setBorder(this.detallemoviclienproveConstantesFunciones.resaltarnumero_comprobanteDetalleMoviClienProve);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleMoviClienProve() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
	
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostraridDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelidDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostraridDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_empresaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_empresaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_empresaDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_sucursalDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_sucursalDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_sucursalDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_ejercicioDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_ejercicioDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_ejercicioDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_periodoDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_periodoDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_periodoDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_anioDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_anioDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_anioDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_mesDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_mesDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_mesDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_moduloDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_moduloDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_moduloDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_asiento_contableDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_asiento_contableDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_asiento_contableDetalleMoviClienProve);
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_asiento_contableDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarfecha_venceDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelfecha_venceDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarfecha_venceDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_clienteDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_clienteDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_clienteDetalleMoviClienProve);
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_clienteDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_facturaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_facturaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_facturaDetalleMoviClienProve);
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_facturaDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_facturaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarnumero_facturaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelnumero_facturaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarnumero_facturaDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_transaccionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_transaccionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_transaccionDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrardebito_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPaneldebito_mone_localDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrardebito_mone_localDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarcredito_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelcredito_mone_localDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarcredito_mone_localDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrardebito_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPaneldebito_mone_extraDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrardebito_mone_extraDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarcredito_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelcredito_mone_extraDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarcredito_mone_extraDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_monedaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_monedaDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_monedaDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarcotizacionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelcotizacionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarcotizacionDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrardescripcionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPaneldescripcionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrardescripcionDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_sucursal_movimientoDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_sucursal_movimientoDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_sucursal_movimientoDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_tipo_transaccion_moduloDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_tipo_transaccion_moduloDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_tipo_transaccion_moduloDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_estado_detalle_clienteDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelid_estado_detalle_clienteDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarid_estado_detalle_clienteDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_emisionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarfecha_emisionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelfecha_emisionDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarfecha_emisionDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_localDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarmonto_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelmonto_mone_localDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarmonto_mone_localDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_extraDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarmonto_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelmonto_mone_extraDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarmonto_mone_extraDetalleMoviClienProve);
		//this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_comprobanteDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarnumero_comprobanteDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jPanelnumero_comprobanteDetalleMoviClienProve.setVisible(this.detallemoviclienproveConstantesFunciones.mostrarnumero_comprobanteDetalleMoviClienProve);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleMoviClienProve() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleMoviClienProve!=null) {
	
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jLabelidDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activaridDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_empresaDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_empresaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursalDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_sucursalDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_ejercicioDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_ejercicioDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_periodoDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_periodoDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_anioDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_anioDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_mesDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_mesDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_moduloDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_moduloDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_asiento_contableDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_asiento_contableDetalleMoviClienProve);
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_asiento_contableDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_asiento_contableDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_venceDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarfecha_venceDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_clienteDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_clienteDetalleMoviClienProve);
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_clienteDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_clienteDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_facturaDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_facturaDetalleMoviClienProve);
			this.jInternalFrameDetalleFormDetalleMoviClienProve.jButtonid_facturaDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_facturaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_facturaDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarnumero_facturaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_transaccionDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_transaccionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_localDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activardebito_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_localDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarcredito_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFielddebito_mone_extraDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activardebito_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcredito_mone_extraDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarcredito_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_monedaDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_monedaDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldcotizacionDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarcotizacionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextAreadescripcionDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activardescripcionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_sucursal_movimientoDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_sucursal_movimientoDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_tipo_transaccion_moduloDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_tipo_transaccion_moduloDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jComboBoxid_estado_detalle_clienteDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarid_estado_detalle_clienteDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jDateChooserfecha_emisionDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarfecha_emisionDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_localDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarmonto_mone_localDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldmonto_mone_extraDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarmonto_mone_extraDetalleMoviClienProve);
		this.jInternalFrameDetalleFormDetalleMoviClienProve.jTextFieldnumero_comprobanteDetalleMoviClienProve.setEnabled(this.detallemoviclienproveConstantesFunciones.activarnumero_comprobanteDetalleMoviClienProve);
		}
	}
	
		
}