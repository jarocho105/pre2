/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.importaciones.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.importaciones.util.DetallePedidoCompraImporConstantesFunciones;
import com.bydan.erp.importaciones.util.DetallePedidoCompraImporParameterReturnGeneral;
//import com.bydan.erp.importaciones.util.DetallePedidoCompraImporParameterGeneral;
//import com.bydan.erp.importaciones.presentation.report.source.DetallePedidoCompraImporBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.importaciones.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.importaciones.resources.reportes.AuxiliarReportes;


import com.bydan.erp.importaciones.util.*;
import com.bydan.erp.importaciones.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.importaciones.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.importaciones.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetallePedidoCompraImporBeanSwingJInternalFrame extends DetallePedidoCompraImporJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetallePedidoCompraImporBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetallePedidoCompraImpor> detallepedidocompraimporValidator = new ClassValidator<DetallePedidoCompraImpor>(DetallePedidoCompraImpor.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetallePedidoCompraImpor detallepedidocompraimpor;	
	public DetallePedidoCompraImpor detallepedidocompraimporAux;
	public DetallePedidoCompraImpor detallepedidocompraimporAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetallePedidoCompraImpor detallepedidocompraimporTotales;
	public Long idDetallePedidoCompraImporActual;
	public Long iIdNuevoDetallePedidoCompraImpor=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboPedidoCompraImpor="";

	public List<PedidoCompraImpor> pedidocompraimporsForeignKey;

	public List<PedidoCompraImpor> getpedidocompraimporsForeignKey() {
		return pedidocompraimporsForeignKey;
	}

	public void setpedidocompraimporsForeignKey(List<PedidoCompraImpor> pedidocompraimporsForeignKey) {
		this.pedidocompraimporsForeignKey = pedidocompraimporsForeignKey;
	}

	//OBJETO FK ACTUAL
	public PedidoCompraImpor pedidocompraimporForeignKey;

	public PedidoCompraImpor getpedidocompraimporForeignKey() {
		return pedidocompraimporForeignKey;
	}

	public void setpedidocompraimporForeignKey(PedidoCompraImpor pedidocompraimporForeignKey) {
		this.pedidocompraimporForeignKey = pedidocompraimporForeignKey;
	}

	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboArancel="";

	public List<Arancel> arancelsForeignKey;

	public List<Arancel> getarancelsForeignKey() {
		return arancelsForeignKey;
	}

	public void setarancelsForeignKey(List<Arancel> arancelsForeignKey) {
		this.arancelsForeignKey = arancelsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Arancel arancelForeignKey;

	public Arancel getarancelForeignKey() {
		return arancelForeignKey;
	}

	public void setarancelForeignKey(Arancel arancelForeignKey) {
		this.arancelForeignKey = arancelForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetallePedidoCompraImpor;
	public Boolean isPermisoNuevoDetallePedidoCompraImpor;
	public Boolean isPermisoActualizarDetallePedidoCompraImpor;
	public Boolean isPermisoActualizarOriginalDetallePedidoCompraImpor;
	public Boolean isPermisoEliminarDetallePedidoCompraImpor;
	public Boolean isPermisoGuardarCambiosDetallePedidoCompraImpor;
	public Boolean isPermisoConsultaDetallePedidoCompraImpor;
	public Boolean isPermisoBusquedaDetallePedidoCompraImpor;
	public Boolean isPermisoReporteDetallePedidoCompraImpor;
	public Boolean isPermisoPaginacionMedioDetallePedidoCompraImpor;
	public Boolean isPermisoPaginacionAltoDetallePedidoCompraImpor;
	public Boolean isPermisoPaginacionTodoDetallePedidoCompraImpor;
	public Boolean isPermisoCopiarDetallePedidoCompraImpor;
	public Boolean isPermisoVerFormDetallePedidoCompraImpor;
	public Boolean isPermisoDuplicarDetallePedidoCompraImpor;
	public Boolean isPermisoOrdenDetallePedidoCompraImpor;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetallePedidoCompraImporParameterReturnGeneral detallepedidocompraimporReturnGeneral;
	public DetallePedidoCompraImporParameterReturnGeneral detallepedidocompraimporParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetallePedidoCompraImpor=false;
	public Boolean esParaAccionDesdeFormularioDetallePedidoCompraImpor=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetallePedidoCompraImporSessionBeanAdditional detallepedidocompraimporSessionBeanAdditional=null;
	
	public DetallePedidoCompraImporSessionBeanAdditional getDetallePedidoCompraImporSessionBeanAdditional() {
		return this.detallepedidocompraimporSessionBeanAdditional;
	}
	
	public void setDetallePedidoCompraImporSessionBeanAdditional(DetallePedidoCompraImporSessionBeanAdditional detallepedidocompraimporSessionBeanAdditional) {
		try {
			this.detallepedidocompraimporSessionBeanAdditional=detallepedidocompraimporSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetallePedidoCompraImporBeanSwingJInternalFrameAdditional detallepedidocompraimporBeanSwingJInternalFrameAdditional=null;
	//public class DetallePedidoCompraImporBeanSwingJInternalFrame
	
	public DetallePedidoCompraImporBeanSwingJInternalFrameAdditional getDetallePedidoCompraImporBeanSwingJInternalFrameAdditional() {
		return this.detallepedidocompraimporBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetallePedidoCompraImporBeanSwingJInternalFrameAdditional(DetallePedidoCompraImporBeanSwingJInternalFrameAdditional detallepedidocompraimporBeanSwingJInternalFrameAdditional) {
		try {
			this.detallepedidocompraimporBeanSwingJInternalFrameAdditional=detallepedidocompraimporBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetallePedidoCompraImporLogic detallepedidocompraimporLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetallePedidoCompraImpor detallepedidocompraimporBean;
	public DetallePedidoCompraImporConstantesFunciones detallepedidocompraimporConstantesFunciones;
	//public DetallePedidoCompraImporParameterReturnGeneral detallepedidocompraimporReturnGeneral;
	
	//FK
	
	public PedidoCompraImporLogic pedidocompraimporLogic;
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public ArancelLogic arancelLogic;
	public CentroCostoLogic centrocostoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	
	//PARAMETROS
	
	
	//public List<DetallePedidoCompraImpor> detallepedidocompraimpors;	
	//public List<DetallePedidoCompraImpor> detallepedidocompraimporsEliminados;
	//public List<DetallePedidoCompraImpor> detallepedidocompraimporsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaDuplicarDetallePedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaCopiarDetallePedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaVerFormDetallePedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaOrdenDetallePedidoCompraImpor=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaModificarDetallePedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaActualizarDetallePedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaCancelarDetallePedidoCompraImpor=false;
	public Boolean isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdArancel=false;
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPedidoCompraImpor=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetallePedidoCompraImpor() {
		return this.iIdNuevoDetallePedidoCompraImpor;
	}

	public void setiIdNuevoDetallePedidoCompraImpor(Long iIdNuevoDetallePedidoCompraImpor) {
		this.iIdNuevoDetallePedidoCompraImpor = iIdNuevoDetallePedidoCompraImpor;
	}
	
	public Long getidDetallePedidoCompraImporActual() {
		return this.idDetallePedidoCompraImporActual;
	}

	public void setidDetallePedidoCompraImporActual(Long idDetallePedidoCompraImporActual) {
		this.idDetallePedidoCompraImporActual = idDetallePedidoCompraImporActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetallePedidoCompraImpor getdetallepedidocompraimpor() {
		return this.detallepedidocompraimpor;
	}

	public void setdetallepedidocompraimpor(DetallePedidoCompraImpor detallepedidocompraimpor) {
		this.detallepedidocompraimpor = detallepedidocompraimpor;
	}
	
	public DetallePedidoCompraImpor getdetallepedidocompraimporAux() {
		return this.detallepedidocompraimporAux;
	}

	public void setdetallepedidocompraimporAux(DetallePedidoCompraImpor detallepedidocompraimporAux) {
		this.detallepedidocompraimporAux = detallepedidocompraimporAux;
	}				
	
	public DetallePedidoCompraImpor getdetallepedidocompraimporAnterior() {
		return this.detallepedidocompraimporAnterior;
	}

	public void setdetallepedidocompraimporAnterior(DetallePedidoCompraImpor detallepedidocompraimporAnterior) {
		this.detallepedidocompraimporAnterior = detallepedidocompraimporAnterior;
	}	
	
	public DetallePedidoCompraImpor getdetallepedidocompraimporTotales() {
		return this.detallepedidocompraimporTotales;
	}

	public void setdetallepedidocompraimporTotales(DetallePedidoCompraImpor detallepedidocompraimporTotales) {
		this.detallepedidocompraimporTotales = detallepedidocompraimporTotales;
	}	
	
	public DetallePedidoCompraImpor getdetallepedidocompraimporBean() {
		return this.detallepedidocompraimporBean;
	}

	public void setdetallepedidocompraimporBean(DetallePedidoCompraImpor detallepedidocompraimporBean) {
		this.detallepedidocompraimporBean = detallepedidocompraimporBean;
	}	
	
	public DetallePedidoCompraImporParameterReturnGeneral getdetallepedidocompraimporReturnGeneral() {
		return this.detallepedidocompraimporReturnGeneral;
	}

	public void setdetallepedidocompraimporReturnGeneral(DetallePedidoCompraImporParameterReturnGeneral detallepedidocompraimporReturnGeneral) {
		this.detallepedidocompraimporReturnGeneral = detallepedidocompraimporReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_arancelFK_IdArancel=-1L;

	public Long getid_arancelFK_IdArancel() {
		return this.id_arancelFK_IdArancel;
	}

	public void setid_arancelFK_IdArancel(Long id_arancelFK_IdArancel) {
		this.id_arancelFK_IdArancel = id_arancelFK_IdArancel;
	}

	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_pedido_compra_imporFK_IdPedidoCompraImpor=-1L;

	public Long getid_pedido_compra_imporFK_IdPedidoCompraImpor() {
		return this.id_pedido_compra_imporFK_IdPedidoCompraImpor;
	}

	public void setid_pedido_compra_imporFK_IdPedidoCompraImpor(Long id_pedido_compra_imporFK_IdPedidoCompraImpor) {
		this.id_pedido_compra_imporFK_IdPedidoCompraImpor = id_pedido_compra_imporFK_IdPedidoCompraImpor;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetallePedidoCompraImporLogic getDetallePedidoCompraImporLogic()	{		
		return detallepedidocompraimporLogic;
	}

	public void setDetallePedidoCompraImporLogic(DetallePedidoCompraImporLogic detallepedidocompraimporLogic) {
		this.detallepedidocompraimporLogic = detallepedidocompraimporLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetallePedidoCompraImpor() {
		return isEsNuevoDetallePedidoCompraImpor;
	}

	public void setIsEsNuevoDetallePedidoCompraImpor(Boolean isEsNuevoDetallePedidoCompraImpor) {
		this.isEsNuevoDetallePedidoCompraImpor = isEsNuevoDetallePedidoCompraImpor;
	}

	public Boolean getEsParaAccionDesdeFormularioDetallePedidoCompraImpor() {
		return esParaAccionDesdeFormularioDetallePedidoCompraImpor;
	}
	
	public void setEsParaAccionDesdeFormularioDetallePedidoCompraImpor(Boolean esParaAccionDesdeFormularioDetallePedidoCompraImpor) {
		this.esParaAccionDesdeFormularioDetallePedidoCompraImpor = esParaAccionDesdeFormularioDetallePedidoCompraImpor;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosPedidoCompraImporsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.pedidocompraimporsForeignKey=new ArrayList<PedidoCompraImpor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PedidoCompraImporLogic pedidocompraimporLogic=new PedidoCompraImporLogic();

			pedidocompraimporLogic.getPedidoCompraImporDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPedidoCompraImpor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getPedidoCompraImporDataAccess().setIsForForeingKeyData(true);

					pedidocompraimporLogic.getTodosPedidoCompraImporsWithConnection(sFinalQuery,new Pagination());

					this.pedidocompraimporsForeignKey=pedidocompraimporLogic.getPedidoCompraImpors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPedidoCompraImpor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidocompraimporLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidPedidoCompraImporActual());
					this.pedidocompraimporsForeignKey.add(pedidocompraimporLogic.getPedidoCompraImpor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosArancelsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.arancelsForeignKey=new ArrayList<Arancel>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ArancelLogic arancelLogic=new ArancelLogic();

			//arancelLogic.getArancelDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionArancel()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//arancelLogic.getArancelDataAccess().setIsForForeingKeyData(true);

					arancelLogic.getTodosArancelsWithConnection(sFinalQuery,new Pagination());

					this.arancelsForeignKey=arancelLogic.getArancels();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaArancel(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					arancelLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidArancelActual());
					this.arancelsForeignKey.add(arancelLogic.getArancel());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detallepedidocompraimporSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualPedidoCompraImporForeignKey(Long idPedidoCompraImporSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			PedidoCompraImpor  pedidocompraimporTemp=null;

			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsForeignKey) {
				if(pedidocompraimporAux.getId()!=null && pedidocompraimporAux.getId().equals(idPedidoCompraImporSeleccionado)) {
					pedidocompraimporTemp=pedidocompraimporAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(pedidocompraimporTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setPedidoCompraImpor(pedidocompraimporTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setSelectedItem(pedidocompraimporTemp);
					}
				} else {
					//jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setSelectedItem(pedidocompraimporTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPedidoCompraImpor") || sFormularioTipoBusqueda.equals("Todos")){
					if(pedidocompraimporTemp!=null && jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor!=null) {
						jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.setSelectedItem(pedidocompraimporTemp);
					} else {
						if(jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor!=null) {
							//jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.setSelectedItem(pedidocompraimporTemp);
							if(jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPedidoCompraImporForeignKeyDescripcion(Long idPedidoCompraImporSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			PedidoCompraImpor  pedidocompraimporTemp=null;

			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsForeignKey) {
				if(pedidocompraimporAux.getId()!=null && pedidocompraimporAux.getId().equals(idPedidoCompraImporSeleccionado)) {
					pedidocompraimporTemp=pedidocompraimporAux;
					break;
				}
			}


			sDescripcion=PedidoCompraImporConstantesFunciones.getPedidoCompraImporDescripcion(pedidocompraimporTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPedidoCompraImporForeignKeyGenerico(Long idPedidoCompraImporSeleccionado,JComboBox jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			PedidoCompraImpor  pedidocompraimporTemp=null;

			for(PedidoCompraImpor pedidocompraimporAux:pedidocompraimporsForeignKey) {
				if(pedidocompraimporAux.getId()!=null && pedidocompraimporAux.getId().equals(idPedidoCompraImporSeleccionado)) {
					pedidocompraimporTemp=pedidocompraimporAux;
					break;
				}
			}

			if(pedidocompraimporTemp!=null) {
				jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico.setSelectedItem(pedidocompraimporTemp);
			} else {
				if(jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico!=null && jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetallePedidoCompraImpor.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetallePedidoCompraImporGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetallePedidoCompraImporGenerico!=null && jComboBoxid_empresaDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetallePedidoCompraImpor.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetallePedidoCompraImporGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetallePedidoCompraImporGenerico!=null && jComboBoxid_sucursalDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetallePedidoCompraImpor.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetallePedidoCompraImporGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetallePedidoCompraImporGenerico!=null && jComboBoxid_bodegaDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetallePedidoCompraImpor.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor!=null) {
						jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor!=null) {
							//jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetallePedidoCompraImporGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetallePedidoCompraImporGenerico!=null && jComboBoxid_productoDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_productoDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetallePedidoCompraImpor.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor!=null) {
						jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetallePedidoCompraImporGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetallePedidoCompraImporGenerico!=null && jComboBoxid_unidadDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetallePedidoCompraImpor.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetallePedidoCompraImporGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetallePedidoCompraImporGenerico!=null && jComboBoxid_ejercicioDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetallePedidoCompraImpor.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetallePedidoCompraImporGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetallePedidoCompraImporGenerico!=null && jComboBoxid_periodoDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualArancelForeignKey(Long idArancelSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Arancel  arancelTemp=null;

			for(Arancel arancelAux:arancelsForeignKey) {
				if(arancelAux.getId()!=null && arancelAux.getId().equals(idArancelSeleccionado)) {
					arancelTemp=arancelAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(arancelTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setArancel(arancelTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setSelectedItem(arancelTemp);
					}
				} else {
					//jComboBoxid_arancelDetallePedidoCompraImpor.setSelectedItem(arancelTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdArancel") || sFormularioTipoBusqueda.equals("Todos")){
					if(arancelTemp!=null && jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor!=null) {
						jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.setSelectedItem(arancelTemp);
					} else {
						if(jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor!=null) {
							//jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.setSelectedItem(arancelTemp);
							if(jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualArancelForeignKeyDescripcion(Long idArancelSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Arancel  arancelTemp=null;

			for(Arancel arancelAux:arancelsForeignKey) {
				if(arancelAux.getId()!=null && arancelAux.getId().equals(idArancelSeleccionado)) {
					arancelTemp=arancelAux;
					break;
				}
			}


			sDescripcion=ArancelConstantesFunciones.getArancelDescripcion(arancelTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualArancelForeignKeyGenerico(Long idArancelSeleccionado,JComboBox jComboBoxid_arancelDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Arancel  arancelTemp=null;

			for(Arancel arancelAux:arancelsForeignKey) {
				if(arancelAux.getId()!=null && arancelAux.getId().equals(idArancelSeleccionado)) {
					arancelTemp=arancelAux;
					break;
				}
			}

			if(arancelTemp!=null) {
				jComboBoxid_arancelDetallePedidoCompraImporGenerico.setSelectedItem(arancelTemp);
			} else {
				if(jComboBoxid_arancelDetallePedidoCompraImporGenerico!=null && jComboBoxid_arancelDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_arancelDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoDetallePedidoCompraImpor.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoDetallePedidoCompraImporGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoDetallePedidoCompraImporGenerico!=null && jComboBoxid_centro_costoDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetallePedidoCompraImpor.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetallePedidoCompraImporGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetallePedidoCompraImporGenerico!=null && jComboBoxid_anioDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_anioDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detallepedidocompraimpor!=null) {
						this.detallepedidocompraimpor.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetallePedidoCompraImpor.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetallePedidoCompraImporGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetallePedidoCompraImporGenerico!=null && jComboBoxid_mesDetallePedidoCompraImporGenerico.getItemCount()>0) {
					jComboBoxid_mesDetallePedidoCompraImporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPedidoCompraImporForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			PedidoCompraImpor  pedidocompraimporAux=new PedidoCompraImpor();

			if(jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico==null) {
				pedidocompraimporAux=(PedidoCompraImpor)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.getSelectedItem();
			} else {
				pedidocompraimporAux=(PedidoCompraImpor)jComboBoxid_pedido_compra_imporDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(pedidocompraimporAux!=null && pedidocompraimporAux.getId()!=null) {
				detallepedidocompraimpor.setid_pedido_compra_impor(pedidocompraimporAux.getId());
				detallepedidocompraimpor.setpedidocompraimpor_descripcion(DetallePedidoCompraImporConstantesFunciones.getPedidoCompraImporDescripcion(pedidocompraimporAux));
				detallepedidocompraimpor.setPedidoCompraImpor(pedidocompraimporAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_empresaDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetallePedidoCompraImporGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detallepedidocompraimpor.setid_empresa(empresaAux.getId());
				detallepedidocompraimpor.setempresa_descripcion(DetallePedidoCompraImporConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detallepedidocompraimpor.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_sucursalDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetallePedidoCompraImporGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detallepedidocompraimpor.setid_sucursal(sucursalAux.getId());
				detallepedidocompraimpor.setsucursal_descripcion(DetallePedidoCompraImporConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detallepedidocompraimpor.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_bodegaDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetallePedidoCompraImporGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detallepedidocompraimpor.setid_bodega(bodegaAux.getId());
				detallepedidocompraimpor.setbodega_descripcion(DetallePedidoCompraImporConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detallepedidocompraimpor.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_productoDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetallePedidoCompraImporGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detallepedidocompraimpor.setid_producto(productoAux.getId());
				detallepedidocompraimpor.setproducto_descripcion(DetallePedidoCompraImporConstantesFunciones.getProductoDescripcion(productoAux));
				detallepedidocompraimpor.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_unidadDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetallePedidoCompraImporGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detallepedidocompraimpor.setid_unidad(unidadAux.getId());
				detallepedidocompraimpor.setunidad_descripcion(DetallePedidoCompraImporConstantesFunciones.getUnidadDescripcion(unidadAux));
				detallepedidocompraimpor.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_ejercicioDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetallePedidoCompraImporGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detallepedidocompraimpor.setid_ejercicio(ejercicioAux.getId());
				detallepedidocompraimpor.setejercicio_descripcion(DetallePedidoCompraImporConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detallepedidocompraimpor.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_periodoDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetallePedidoCompraImporGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detallepedidocompraimpor.setid_periodo(periodoAux.getId());
				detallepedidocompraimpor.setperiodo_descripcion(DetallePedidoCompraImporConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detallepedidocompraimpor.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarArancelForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_arancelDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Arancel  arancelAux=new Arancel();

			if(jComboBoxid_arancelDetallePedidoCompraImporGenerico==null) {
				arancelAux=(Arancel)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.getSelectedItem();
			} else {
				arancelAux=(Arancel)jComboBoxid_arancelDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(arancelAux!=null && arancelAux.getId()!=null) {
				detallepedidocompraimpor.setid_arancel(arancelAux.getId());
				detallepedidocompraimpor.setarancel_descripcion(DetallePedidoCompraImporConstantesFunciones.getArancelDescripcion(arancelAux));
				detallepedidocompraimpor.setArancel(arancelAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_centro_costoDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoDetallePedidoCompraImporGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				detallepedidocompraimpor.setid_centro_costo(centrocostoAux.getId());
				detallepedidocompraimpor.setcentrocosto_descripcion(DetallePedidoCompraImporConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				detallepedidocompraimpor.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_anioDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetallePedidoCompraImporGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detallepedidocompraimpor.setid_anio(anioAux.getId());
				detallepedidocompraimpor.setanio_descripcion(DetallePedidoCompraImporConstantesFunciones.getAnioDescripcion(anioAux));
				detallepedidocompraimpor.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetallePedidoCompraImpor detallepedidocompraimpor,JComboBox jComboBoxid_mesDetallePedidoCompraImporGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetallePedidoCompraImporGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetallePedidoCompraImporGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detallepedidocompraimpor.setid_mes(mesAux.getId());
				detallepedidocompraimpor.setmes_descripcion(DetallePedidoCompraImporConstantesFunciones.getMesDescripcion(mesAux));
				detallepedidocompraimpor.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePedidoCompraImporsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPedidoCompraImpor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.removeAllItems();

							for(PedidoCompraImpor pedidocompraimpor:this.pedidocompraimporsForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.addItem(pedidocompraimpor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPedidoCompraImpor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.removeAllItems();

							for(PedidoCompraImpor pedidocompraimpor:this.pedidocompraimporsForeignKey) {
								this.jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.addItem(pedidocompraimpor);
							}
						}

						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.addItem(bodega);
							}
						}

						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.addItem(producto);
							}
						}

						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.addItem(unidad);
							}
						}

						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameArancelsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingArancel=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.removeAllItems();

							for(Arancel arancel:this.arancelsForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.addItem(arancel);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdArancel") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.removeAllItems();

							for(Arancel arancel:this.arancelsForeignKey) {
								this.jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.addItem(arancel);
							}
						}

						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.addItem(centrocosto);
							}
						}

						if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { 
					}

					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFramePedidoCompraImporForeignKey(PedidoCompraImpor pedidocompraimpor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setSelectedItem(pedidocompraimpor);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.setSelectedItem(pedidocompraimpor);
						} else {
							this.jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameArancelForeignKey(Arancel arancel,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setSelectedItem(arancel);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.setSelectedItem(arancel);
						} else {
							this.jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetallePedidoCompraImpor() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetallePedidoCompraImporConstantesFunciones.refrescarForeignKeysDescripcionesDetallePedidoCompraImpor(this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetallePedidoCompraImporConstantesFunciones.refrescarForeignKeysDescripcionesDetallePedidoCompraImpor(this.detallepedidocompraimpors);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(PedidoCompraImpor.class));
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Arancel.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detallepedidocompraimporLogic.setDetallePedidoCompraImpors(this.detallepedidocompraimpors);
			detallepedidocompraimporLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetallePedidoCompraImporParameterReturnGeneral getDetallePedidoCompraImporParameterGeneral() {
		return this.detallepedidocompraimporParameterGeneral;
	}
	
	public void setDetallePedidoCompraImporParameterGeneral(DetallePedidoCompraImporParameterReturnGeneral detallepedidocompraimporParameterGeneral) {
		this.detallepedidocompraimporParameterGeneral = detallepedidocompraimporParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetallePedidoCompraImpor() {
		return isPermisoTodoDetallePedidoCompraImpor;
	}

	public void setIsPermisoTodoDetallePedidoCompraImpor(Boolean isPermisoTodoDetallePedidoCompraImpor) {
		this.isPermisoTodoDetallePedidoCompraImpor = isPermisoTodoDetallePedidoCompraImpor;
	}

	public Boolean getIsPermisoNuevoDetallePedidoCompraImpor() {
		return isPermisoNuevoDetallePedidoCompraImpor;
	}

	public void setIsPermisoNuevoDetallePedidoCompraImpor(Boolean isPermisoNuevoDetallePedidoCompraImpor) {
		this.isPermisoNuevoDetallePedidoCompraImpor = isPermisoNuevoDetallePedidoCompraImpor;
	}

	public Boolean getIsPermisoActualizarDetallePedidoCompraImpor() {
		return isPermisoActualizarDetallePedidoCompraImpor;
	}

	public void setIsPermisoActualizarDetallePedidoCompraImpor(Boolean isPermisoActualizarDetallePedidoCompraImpor) {
		this.isPermisoActualizarDetallePedidoCompraImpor = isPermisoActualizarDetallePedidoCompraImpor;
	}

	public Boolean getIsPermisoEliminarDetallePedidoCompraImpor() {
		return isPermisoEliminarDetallePedidoCompraImpor;
	}

	public void setIsPermisoEliminarDetallePedidoCompraImpor(Boolean isPermisoEliminarDetallePedidoCompraImpor) {
		this.isPermisoEliminarDetallePedidoCompraImpor = isPermisoEliminarDetallePedidoCompraImpor;
	}

	public Boolean getIsPermisoGuardarCambiosDetallePedidoCompraImpor() {
		return isPermisoGuardarCambiosDetallePedidoCompraImpor;
	}

	public void setIsPermisoGuardarCambiosDetallePedidoCompraImpor(Boolean isPermisoGuardarCambiosDetallePedidoCompraImpor) {
		this.isPermisoGuardarCambiosDetallePedidoCompraImpor = isPermisoGuardarCambiosDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoConsultaDetallePedidoCompraImpor() {
		return isPermisoConsultaDetallePedidoCompraImpor;
	}

	public void setIsPermisoConsultaDetallePedidoCompraImpor(Boolean isPermisoConsultaDetallePedidoCompraImpor) {
		this.isPermisoConsultaDetallePedidoCompraImpor = isPermisoConsultaDetallePedidoCompraImpor;
	}

	public Boolean getIsPermisoBusquedaDetallePedidoCompraImpor() {
		return isPermisoBusquedaDetallePedidoCompraImpor;
	}

	public void setIsPermisoBusquedaDetallePedidoCompraImpor(Boolean isPermisoBusquedaDetallePedidoCompraImpor) {
		this.isPermisoBusquedaDetallePedidoCompraImpor = isPermisoBusquedaDetallePedidoCompraImpor;
	}

	public Boolean getIsPermisoReporteDetallePedidoCompraImpor() {
		return isPermisoReporteDetallePedidoCompraImpor;
	}

	public void setIsPermisoReporteDetallePedidoCompraImpor(Boolean isPermisoReporteDetallePedidoCompraImpor) {
		this.isPermisoReporteDetallePedidoCompraImpor = isPermisoReporteDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetallePedidoCompraImpor() {
		return isPermisoPaginacionMedioDetallePedidoCompraImpor;
	}

	public void setIsPermisoPaginacionMedioDetallePedidoCompraImpor(Boolean isPermisoPaginacionMedioDetallePedidoCompraImpor) {
		this.isPermisoPaginacionMedioDetallePedidoCompraImpor = isPermisoPaginacionMedioDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetallePedidoCompraImpor() {
		return isPermisoPaginacionTodoDetallePedidoCompraImpor;
	}

	public void setIsPermisoPaginacionTodoDetallePedidoCompraImpor(Boolean isPermisoPaginacionTodoDetallePedidoCompraImpor) {
		this.isPermisoPaginacionTodoDetallePedidoCompraImpor = isPermisoPaginacionTodoDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetallePedidoCompraImpor() {
		return isPermisoPaginacionAltoDetallePedidoCompraImpor;
	}

	public void setIsPermisoPaginacionAltoDetallePedidoCompraImpor(Boolean isPermisoPaginacionAltoDetallePedidoCompraImpor) {
		this.isPermisoPaginacionAltoDetallePedidoCompraImpor = isPermisoPaginacionAltoDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoCopiarDetallePedidoCompraImpor() {
		return isPermisoCopiarDetallePedidoCompraImpor;
	}

	public void setIsPermisoCopiarDetallePedidoCompraImpor(Boolean isPermisoCopiarDetallePedidoCompraImpor) {
		this.isPermisoCopiarDetallePedidoCompraImpor = isPermisoCopiarDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoVerFormDetallePedidoCompraImpor() {
		return isPermisoVerFormDetallePedidoCompraImpor;
	}

	public void setIsPermisoVerFormDetallePedidoCompraImpor(Boolean isPermisoVerFormDetallePedidoCompraImpor) {
		this.isPermisoVerFormDetallePedidoCompraImpor = isPermisoVerFormDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoDuplicarDetallePedidoCompraImpor() {
		return isPermisoDuplicarDetallePedidoCompraImpor;
	}

	public void setIsPermisoDuplicarDetallePedidoCompraImpor(Boolean isPermisoDuplicarDetallePedidoCompraImpor) {
		this.isPermisoDuplicarDetallePedidoCompraImpor = isPermisoDuplicarDetallePedidoCompraImpor;
	}
	
	public Boolean getIsPermisoOrdenDetallePedidoCompraImpor() {
		return isPermisoOrdenDetallePedidoCompraImpor;
	}

	public void setIsPermisoOrdenDetallePedidoCompraImpor(Boolean isPermisoOrdenDetallePedidoCompraImpor) {
		this.isPermisoOrdenDetallePedidoCompraImpor = isPermisoOrdenDetallePedidoCompraImpor;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetallePedidoCompraImpor() {
		return isVisibilidadCeldaNuevoDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaNuevoDetallePedidoCompraImpor(Boolean isVisibilidadCeldaNuevoDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor = isVisibilidadCeldaNuevoDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetallePedidoCompraImpor() {
		return isVisibilidadCeldaDuplicarDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaDuplicarDetallePedidoCompraImpor(Boolean isVisibilidadCeldaDuplicarDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaDuplicarDetallePedidoCompraImpor = isVisibilidadCeldaDuplicarDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetallePedidoCompraImpor() {
		return isVisibilidadCeldaCopiarDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaCopiarDetallePedidoCompraImpor(Boolean isVisibilidadCeldaCopiarDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaCopiarDetallePedidoCompraImpor = isVisibilidadCeldaCopiarDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetallePedidoCompraImpor() {
		return isVisibilidadCeldaVerFormDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaVerFormDetallePedidoCompraImpor(Boolean isVisibilidadCeldaVerFormDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaVerFormDetallePedidoCompraImpor = isVisibilidadCeldaVerFormDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetallePedidoCompraImpor() {
		return isVisibilidadCeldaOrdenDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaOrdenDetallePedidoCompraImpor(Boolean isVisibilidadCeldaOrdenDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor = isVisibilidadCeldaOrdenDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor() {
		return isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor(Boolean isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor = isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetallePedidoCompraImpor() {
		return isVisibilidadCeldaModificarDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaModificarDetallePedidoCompraImpor(Boolean isVisibilidadCeldaModificarDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaModificarDetallePedidoCompraImpor = isVisibilidadCeldaModificarDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetallePedidoCompraImpor() {
		return isVisibilidadCeldaActualizarDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaActualizarDetallePedidoCompraImpor(Boolean isVisibilidadCeldaActualizarDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor = isVisibilidadCeldaActualizarDetallePedidoCompraImpor;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetallePedidoCompraImpor() {
		return isVisibilidadCeldaEliminarDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaEliminarDetallePedidoCompraImpor(Boolean isVisibilidadCeldaEliminarDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor = isVisibilidadCeldaEliminarDetallePedidoCompraImpor;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetallePedidoCompraImpor() {
		return isVisibilidadCeldaCancelarDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaCancelarDetallePedidoCompraImpor(Boolean isVisibilidadCeldaCancelarDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor = isVisibilidadCeldaCancelarDetallePedidoCompraImpor;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetallePedidoCompraImpor() {
		return isVisibilidadCeldaGuardarDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaGuardarDetallePedidoCompraImpor(Boolean isVisibilidadCeldaGuardarDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor = isVisibilidadCeldaGuardarDetallePedidoCompraImpor;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor() {
		return isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor(Boolean isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor) {
		this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor = isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor;
	}
		
	public DetallePedidoCompraImporSessionBean getdetallepedidocompraimporSessionBean() {
		return this.detallepedidocompraimporSessionBean;
	}
	
	public void setdetallepedidocompraimporSessionBean(DetallePedidoCompraImporSessionBean detallepedidocompraimporSessionBean) {
		this.detallepedidocompraimporSessionBean=detallepedidocompraimporSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdArancel() {
		return this.isVisibilidadFK_IdArancel;
	}

	public void setisVisibilidadFK_IdArancel(Boolean isVisibilidadFK_IdArancel) {
		this.isVisibilidadFK_IdArancel=isVisibilidadFK_IdArancel;
	}

	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPedidoCompraImpor() {
		return this.isVisibilidadFK_IdPedidoCompraImpor;
	}

	public void setisVisibilidadFK_IdPedidoCompraImpor(Boolean isVisibilidadFK_IdPedidoCompraImpor) {
		this.isVisibilidadFK_IdPedidoCompraImpor=isVisibilidadFK_IdPedidoCompraImpor;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor)throws Exception {
		try {
			
				this.setActualParaGuardarPedidoCompraImporForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarEmpresaForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarSucursalForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarBodegaForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarProductoForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarUnidadForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarEjercicioForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarPeriodoForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarArancelForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarCentroCostoForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarAnioForeignKey(detallepedidocompraimpor,null);
				this.setActualParaGuardarMesForeignKey(detallepedidocompraimpor,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetallePedidoCompraImpor detallepedidocompraimpor,DetallePedidoCompraImpor detallepedidocompraimporAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetallePedidoCompraImpor(detallepedidocompraimpor);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detallepedidocompraimporAux.setId(detallepedidocompraimpor.getId());
		detallepedidocompraimporAux.setVersionRow(detallepedidocompraimpor.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetallePedidoCompraImpor();
		
			int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detallepedidocompraimporValidator.getInvalidValues(this.detallepedidocompraimpor);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detallepedidocompraimporLogic.setDatosCliente(datosCliente);
			detallepedidocompraimporLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detallepedidocompraimporAux=new  DetallePedidoCompraImpor();
				
				detallepedidocompraimporAux.setIsNew(true);
				detallepedidocompraimporAux.setIsChanged(true);
				
				detallepedidocompraimporAux.setDetallePedidoCompraImporOriginal(this.detallepedidocompraimpor);
				
				detallepedidocompraimporAux.setId(this.detallepedidocompraimpor.getId());	
				detallepedidocompraimporAux.setVersionRow(this.detallepedidocompraimpor.getVersionRow());	
				detallepedidocompraimporAux.setid_pedido_compra_impor(this.detallepedidocompraimpor.getid_pedido_compra_impor());	
				detallepedidocompraimporAux.setid_empresa(this.detallepedidocompraimpor.getid_empresa());	
				detallepedidocompraimporAux.setid_sucursal(this.detallepedidocompraimpor.getid_sucursal());	
				detallepedidocompraimporAux.setid_bodega(this.detallepedidocompraimpor.getid_bodega());	
				detallepedidocompraimporAux.setid_producto(this.detallepedidocompraimpor.getid_producto());	
				detallepedidocompraimporAux.setid_unidad(this.detallepedidocompraimpor.getid_unidad());	
				detallepedidocompraimporAux.setid_ejercicio(this.detallepedidocompraimpor.getid_ejercicio());	
				detallepedidocompraimporAux.setid_periodo(this.detallepedidocompraimpor.getid_periodo());	
				detallepedidocompraimporAux.setid_arancel(this.detallepedidocompraimpor.getid_arancel());	
				detallepedidocompraimporAux.setcantidad_pedido(this.detallepedidocompraimpor.getcantidad_pedido());	
				detallepedidocompraimporAux.setcantidad_entra(this.detallepedidocompraimpor.getcantidad_entra());	
				detallepedidocompraimporAux.setcantidad_pendiente(this.detallepedidocompraimpor.getcantidad_pendiente());	
				detallepedidocompraimporAux.setporcentaje(this.detallepedidocompraimpor.getporcentaje());	
				detallepedidocompraimporAux.setpeso(this.detallepedidocompraimpor.getpeso());	
				detallepedidocompraimporAux.setprecio(this.detallepedidocompraimpor.getprecio());	
				detallepedidocompraimporAux.setlote(this.detallepedidocompraimpor.getlote());	
				detallepedidocompraimporAux.setporcentaje_arancel(this.detallepedidocompraimpor.getporcentaje_arancel());	
				detallepedidocompraimporAux.setcantidad_unidad_auxiliar(this.detallepedidocompraimpor.getcantidad_unidad_auxiliar());	
				detallepedidocompraimporAux.setprecio_unidad_auxiliar(this.detallepedidocompraimpor.getprecio_unidad_auxiliar());	
				detallepedidocompraimporAux.setfob(this.detallepedidocompraimpor.getfob());	
				detallepedidocompraimporAux.setfob_exw(this.detallepedidocompraimpor.getfob_exw());	
				detallepedidocompraimporAux.settotal(this.detallepedidocompraimpor.gettotal());	
				detallepedidocompraimporAux.setdescripcion(this.detallepedidocompraimpor.getdescripcion());	
				detallepedidocompraimporAux.setid_centro_costo(this.detallepedidocompraimpor.getid_centro_costo());	
				detallepedidocompraimporAux.setid_anio(this.detallepedidocompraimpor.getid_anio());	
				detallepedidocompraimporAux.setid_mes(this.detallepedidocompraimpor.getid_mes());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detallepedidocompraimporAux,detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallepedidocompraimporAux,detallepedidocompraimpors);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.saveDetallePedidoCompraImpors();//WithConnection
						//detallepedidocompraimporLogic.getSetVersionRowDetallePedidoCompraImpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallepedidocompraimpor,detallepedidocompraimporAux);
					
					this.refrescarForeignKeysDescripcionesDetallePedidoCompraImpor();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallepedidocompraimporLogic.saveDetallePedidoCompraImporRelaciones(detallepedidocompraimporAux);//WithConnection
								//detallepedidocompraimporLogic.getSetVersionRowDetallePedidoCompraImpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallepedidocompraimpor,detallepedidocompraimporAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallepedidocompraimporAux,detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallepedidocompraimporAux,detallepedidocompraimpors);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallepedidocompraimpor,detallepedidocompraimporAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detallepedidocompraimporAux=new  DetallePedidoCompraImpor();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado() 
					|| (this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado() && this.detallepedidocompraimpor.getId()>=0)) {
						
					detallepedidocompraimporAux.setIsNew(false);
				}
				
				detallepedidocompraimporAux.setIsDeleted(false);
			
				detallepedidocompraimporAux.setId(this.detallepedidocompraimpor.getId());	
				detallepedidocompraimporAux.setVersionRow(this.detallepedidocompraimpor.getVersionRow());	
				detallepedidocompraimporAux.setid_pedido_compra_impor(this.detallepedidocompraimpor.getid_pedido_compra_impor());	
				detallepedidocompraimporAux.setid_empresa(this.detallepedidocompraimpor.getid_empresa());	
				detallepedidocompraimporAux.setid_sucursal(this.detallepedidocompraimpor.getid_sucursal());	
				detallepedidocompraimporAux.setid_bodega(this.detallepedidocompraimpor.getid_bodega());	
				detallepedidocompraimporAux.setid_producto(this.detallepedidocompraimpor.getid_producto());	
				detallepedidocompraimporAux.setid_unidad(this.detallepedidocompraimpor.getid_unidad());	
				detallepedidocompraimporAux.setid_ejercicio(this.detallepedidocompraimpor.getid_ejercicio());	
				detallepedidocompraimporAux.setid_periodo(this.detallepedidocompraimpor.getid_periodo());	
				detallepedidocompraimporAux.setid_arancel(this.detallepedidocompraimpor.getid_arancel());	
				detallepedidocompraimporAux.setcantidad_pedido(this.detallepedidocompraimpor.getcantidad_pedido());	
				detallepedidocompraimporAux.setcantidad_entra(this.detallepedidocompraimpor.getcantidad_entra());	
				detallepedidocompraimporAux.setcantidad_pendiente(this.detallepedidocompraimpor.getcantidad_pendiente());	
				detallepedidocompraimporAux.setporcentaje(this.detallepedidocompraimpor.getporcentaje());	
				detallepedidocompraimporAux.setpeso(this.detallepedidocompraimpor.getpeso());	
				detallepedidocompraimporAux.setprecio(this.detallepedidocompraimpor.getprecio());	
				detallepedidocompraimporAux.setlote(this.detallepedidocompraimpor.getlote());	
				detallepedidocompraimporAux.setporcentaje_arancel(this.detallepedidocompraimpor.getporcentaje_arancel());	
				detallepedidocompraimporAux.setcantidad_unidad_auxiliar(this.detallepedidocompraimpor.getcantidad_unidad_auxiliar());	
				detallepedidocompraimporAux.setprecio_unidad_auxiliar(this.detallepedidocompraimpor.getprecio_unidad_auxiliar());	
				detallepedidocompraimporAux.setfob(this.detallepedidocompraimpor.getfob());	
				detallepedidocompraimporAux.setfob_exw(this.detallepedidocompraimpor.getfob_exw());	
				detallepedidocompraimporAux.settotal(this.detallepedidocompraimpor.gettotal());	
				detallepedidocompraimporAux.setdescripcion(this.detallepedidocompraimpor.getdescripcion());	
				detallepedidocompraimporAux.setid_centro_costo(this.detallepedidocompraimpor.getid_centro_costo());	
				detallepedidocompraimporAux.setid_anio(this.detallepedidocompraimpor.getid_anio());	
				detallepedidocompraimporAux.setid_mes(this.detallepedidocompraimpor.getid_mes());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallepedidocompraimporAux,detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallepedidocompraimporAux,detallepedidocompraimpors);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.saveDetallePedidoCompraImpors();//WithConnection
						//detallepedidocompraimporLogic.getSetVersionRowDetallePedidoCompraImpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detallepedidocompraimpor,detallepedidocompraimporAux);
					
					this.refrescarForeignKeysDescripcionesDetallePedidoCompraImpor();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallepedidocompraimporLogic.saveDetallePedidoCompraImporRelaciones(detallepedidocompraimporAux);//WithConnection
								//detallepedidocompraimporLogic.getSetVersionRowDetallePedidoCompraImpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detallepedidocompraimpor,detallepedidocompraimporAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detallepedidocompraimporAux,detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detallepedidocompraimporAux,detallepedidocompraimpors);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detallepedidocompraimpor,detallepedidocompraimporAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detallepedidocompraimporAux=new  DetallePedidoCompraImpor();
				
				detallepedidocompraimporAux.setIsNew(false);
				detallepedidocompraimporAux.setIsChanged(false);
				
				detallepedidocompraimporAux.setIsDeleted(true);
				
				detallepedidocompraimporAux.setId(this.detallepedidocompraimpor.getId());	
				detallepedidocompraimporAux.setVersionRow(this.detallepedidocompraimpor.getVersionRow());	
				detallepedidocompraimporAux.setid_pedido_compra_impor(this.detallepedidocompraimpor.getid_pedido_compra_impor());	
				detallepedidocompraimporAux.setid_empresa(this.detallepedidocompraimpor.getid_empresa());	
				detallepedidocompraimporAux.setid_sucursal(this.detallepedidocompraimpor.getid_sucursal());	
				detallepedidocompraimporAux.setid_bodega(this.detallepedidocompraimpor.getid_bodega());	
				detallepedidocompraimporAux.setid_producto(this.detallepedidocompraimpor.getid_producto());	
				detallepedidocompraimporAux.setid_unidad(this.detallepedidocompraimpor.getid_unidad());	
				detallepedidocompraimporAux.setid_ejercicio(this.detallepedidocompraimpor.getid_ejercicio());	
				detallepedidocompraimporAux.setid_periodo(this.detallepedidocompraimpor.getid_periodo());	
				detallepedidocompraimporAux.setid_arancel(this.detallepedidocompraimpor.getid_arancel());	
				detallepedidocompraimporAux.setcantidad_pedido(this.detallepedidocompraimpor.getcantidad_pedido());	
				detallepedidocompraimporAux.setcantidad_entra(this.detallepedidocompraimpor.getcantidad_entra());	
				detallepedidocompraimporAux.setcantidad_pendiente(this.detallepedidocompraimpor.getcantidad_pendiente());	
				detallepedidocompraimporAux.setporcentaje(this.detallepedidocompraimpor.getporcentaje());	
				detallepedidocompraimporAux.setpeso(this.detallepedidocompraimpor.getpeso());	
				detallepedidocompraimporAux.setprecio(this.detallepedidocompraimpor.getprecio());	
				detallepedidocompraimporAux.setlote(this.detallepedidocompraimpor.getlote());	
				detallepedidocompraimporAux.setporcentaje_arancel(this.detallepedidocompraimpor.getporcentaje_arancel());	
				detallepedidocompraimporAux.setcantidad_unidad_auxiliar(this.detallepedidocompraimpor.getcantidad_unidad_auxiliar());	
				detallepedidocompraimporAux.setprecio_unidad_auxiliar(this.detallepedidocompraimpor.getprecio_unidad_auxiliar());	
				detallepedidocompraimporAux.setfob(this.detallepedidocompraimpor.getfob());	
				detallepedidocompraimporAux.setfob_exw(this.detallepedidocompraimpor.getfob_exw());	
				detallepedidocompraimporAux.settotal(this.detallepedidocompraimpor.gettotal());	
				detallepedidocompraimporAux.setdescripcion(this.detallepedidocompraimpor.getdescripcion());	
				detallepedidocompraimporAux.setid_centro_costo(this.detallepedidocompraimpor.getid_centro_costo());	
				detallepedidocompraimporAux.setid_anio(this.detallepedidocompraimpor.getid_anio());	
				detallepedidocompraimporAux.setid_mes(this.detallepedidocompraimpor.getid_mes());	
				
				if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detallepedidocompraimporAux.getId()>=0) {	
						this.detallepedidocompraimporsEliminados.add(detallepedidocompraimporAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detallepedidocompraimporAux,detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallepedidocompraimporAux,detallepedidocompraimpors);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.saveDetallePedidoCompraImpors();//WithConnection
						//detallepedidocompraimporLogic.getSetVersionRowDetallePedidoCompraImpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detallepedidocompraimporLogic.saveDetallePedidoCompraImporRelaciones(detallepedidocompraimporAux);//WithConnection
								//detallepedidocompraimporLogic.getSetVersionRowDetallePedidoCompraImpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detallepedidocompraimporAux,detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detallepedidocompraimporAux,detallepedidocompraimpors);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(this.detallepedidocompraimporsEliminados);
					
					detallepedidocompraimporLogic.saveDetallePedidoCompraImpors();//WithConnection
					//detallepedidocompraimporLogic.getSetVersionRowDetallePedidoCompraImpors();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetallePedidoCompraImpor();
				
				this.detallepedidocompraimporsEliminados= new ArrayList<DetallePedidoCompraImpor>();		
			}
			
			if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetallePedidoCompraImporConstantesFunciones.getTotalesListaDetallePedidoCompraImpor(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetallePedidoCompraImporConstantesFunciones.getTotalesListaDetallePedidoCompraImpor(this.detallepedidocompraimpors);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Pedido Compra GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detallepedidocompraimpor=detallepedidocompraimporAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetallePedidoCompraImpor();
      	}
		
	}	
	
	public void actualizarRelaciones(DetallePedidoCompraImpor detallepedidocompraimporLocal) throws Exception {
		
		if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetallePedidoCompraImpor detallepedidocompraimporLocal) throws Exception {	
		if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(PedidoCompraImporDetalleFormJInternalFrame.class)) {
				PedidoCompraImporBeanSwingJInternalFrame pedidocompraimporBeanSwingJInternalFrameLocal=(PedidoCompraImporBeanSwingJInternalFrame) ((PedidoCompraImporDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				pedidocompraimporBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPedidoCompraImpor(pedidocompraimporBeanSwingJInternalFrameLocal.getpedidocompraimpor(),true);
				pedidocompraimporBeanSwingJInternalFrameLocal.actualizarLista(pedidocompraimporBeanSwingJInternalFrameLocal.pedidocompraimpor,this.pedidocompraimporsForeignKey);

				pedidocompraimporBeanSwingJInternalFrameLocal.actualizarRelaciones(pedidocompraimporBeanSwingJInternalFrameLocal.pedidocompraimpor);

				detallepedidocompraimporLocal.setPedidoCompraImpor(pedidocompraimporBeanSwingJInternalFrameLocal.pedidocompraimpor);

				this.addItemDefectoCombosForeignKeyPedidoCompraImpor();
				this.cargarCombosFramePedidoCompraImporsForeignKey("Formulario");
				this.setActualPedidoCompraImporForeignKey(pedidocompraimporBeanSwingJInternalFrameLocal.pedidocompraimpor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detallepedidocompraimporLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detallepedidocompraimporLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detallepedidocompraimporLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detallepedidocompraimporLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detallepedidocompraimporLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detallepedidocompraimporLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detallepedidocompraimporLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ArancelDetalleFormJInternalFrame.class)) {
				ArancelBeanSwingJInternalFrame arancelBeanSwingJInternalFrameLocal=(ArancelBeanSwingJInternalFrame) ((ArancelDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				arancelBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoArancel(arancelBeanSwingJInternalFrameLocal.getarancel(),true);
				arancelBeanSwingJInternalFrameLocal.actualizarLista(arancelBeanSwingJInternalFrameLocal.arancel,this.arancelsForeignKey);

				arancelBeanSwingJInternalFrameLocal.actualizarRelaciones(arancelBeanSwingJInternalFrameLocal.arancel);

				detallepedidocompraimporLocal.setArancel(arancelBeanSwingJInternalFrameLocal.arancel);

				this.addItemDefectoCombosForeignKeyArancel();
				this.cargarCombosFrameArancelsForeignKey("Formulario");
				this.setActualArancelForeignKey(arancelBeanSwingJInternalFrameLocal.arancel.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				detallepedidocompraimporLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detallepedidocompraimporLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detallepedidocompraimporLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetallePedidoCompraImporActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detallepedidocompraimporValidator.getInvalidValues(this.detallepedidocompraimpor);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetallePedidoCompraImpor detallepedidocompraimpor,List<DetallePedidoCompraImpor> detallepedidocompraimpors) throws Exception {
		try	{		
			DetallePedidoCompraImporConstantesFunciones.actualizarLista(detallepedidocompraimpor,detallepedidocompraimpors,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetallePedidoCompraImpor detallepedidocompraimpor,List<DetallePedidoCompraImpor> detallepedidocompraimpors) throws Exception {
		try	{			
			DetallePedidoCompraImporConstantesFunciones.actualizarSelectedLista(detallepedidocompraimpor,detallepedidocompraimpors);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetallePedidoCompraImpor> detallepedidocompraimporsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detallepedidocompraimporsLocal=this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detallepedidocompraimporsLocal=this.detallepedidocompraimpors;
			}
			//ARCHITECTURE
		
			for(DetallePedidoCompraImpor detallepedidocompraimporLocal:detallepedidocompraimporsLocal) {
				if(this.permiteMantenimiento(detallepedidocompraimporLocal) && detallepedidocompraimporLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetallePedidoCompraImporConstantesFunciones.getDetallePedidoCompraImporLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDPEDIDOCOMPRAIMPOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_pedido_compra_imporDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_empresaDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_sucursalDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_bodegaDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_productoDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_unidadDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_ejercicioDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_periodoDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDARANCEL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_arancelDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.CANTIDADPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_pedidoDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.CANTIDADENTRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_entraDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.CANTIDADPENDIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_pendienteDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelporcentajeDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.PESO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelpesoDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelprecioDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.LOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelloteDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.PORCENTAJEARANCEL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelporcentaje_arancelDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.CANTIDADUNIDADAUXILIAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_unidad_auxiliarDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.PRECIOUNIDADAUXILIAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelprecio_unidad_auxiliarDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.FOB)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelfobDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.FOBEXW)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelfob_exwDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabeltotalDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabeldescripcionDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_centro_costoDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_anioDetallePedidoCompraImpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetallePedidoCompraImporConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_mesDetallePedidoCompraImpor,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_pedido_compra_imporDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_empresaDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_sucursalDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_bodegaDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_productoDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_unidadDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_ejercicioDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_periodoDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_arancelDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_pedidoDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_entraDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_pendienteDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelporcentajeDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelpesoDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelprecioDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelloteDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelporcentaje_arancelDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_unidad_auxiliarDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelprecio_unidad_auxiliarDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelfobDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelfob_exwDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabeltotalDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabeldescripcionDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_centro_costoDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_anioDetallePedidoCompraImpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelid_mesDetallePedidoCompraImpor,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetallePedidoCompraImpor--;	
		
		
		this.detallepedidocompraimporAux=new DetallePedidoCompraImpor();
		
		this.detallepedidocompraimporAux.setId(this.iIdNuevoDetallePedidoCompraImpor);
		this.detallepedidocompraimporAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().add(this.detallepedidocompraimporAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detallepedidocompraimpors.add(this.detallepedidocompraimporAux);
		}
		//ARCHITECTURE
		
		this.detallepedidocompraimpor=this.detallepedidocompraimporAux;
		
		if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetallePedidoCompraImpor(this.detallepedidocompraimpor);
			this.setVariablesObjetoActualToFormularioForeignKeyDetallePedidoCompraImpor(this.detallepedidocompraimpor);
		}
				
		//this.setDefaultControlesDetallePedidoCompraImpor();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetallePedidoCompraImpor();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetallePedidoCompraImpor();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetallePedidoCompraImpor();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimporBean,this.detallepedidocompraimpor,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
			classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detallepedidocompraimporReturnGeneral=detallepedidocompraimporLogic.procesarEventosDetallePedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.detallepedidocompraimpor,this.detallepedidocompraimporParameterGeneral,this.isEsNuevoDetallePedidoCompraImpor,classes);//this.detallepedidocompraimporLogic.getDetallePedidoCompraImpor()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral,this.detallepedidocompraimporBean,false);
		
		if(this.detallepedidocompraimporReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor());
		}
		
		if(this.detallepedidocompraimporReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor(),classes);//this.detallepedidocompraimporBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetallePedidoCompraImpor();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetallePedidoCompraImpor();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.RecargarFormDetallePedidoCompraImpor(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
						
			if(detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetallePedidoCompraImpor();
			}
			
			this.actualizarVisualTableDatosDetallePedidoCompraImpor();
			
			this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoDetallePedidoCompraImpor(), this.getIndiceNuevoDetallePedidoCompraImpor());
			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
						
			this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetallePedidoCompraImpor(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarcantidad_pedidoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarcantidad_entraDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarcantidad_pendienteDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarporcentajeDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarpesoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarprecioDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarloteDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarporcentaje_arancelDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarcantidad_unidad_auxiliarDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarprecio_unidad_auxiliarDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarfobDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarfob_exwDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activartotalDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activardescripcionDetallePedidoCompraImpor);	
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_pedido_compra_imporDetallePedidoCompraImpor);//
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_empresaDetallePedidoCompraImpor);//
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_sucursalDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_bodegaDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_productoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_unidadDetallePedidoCompraImpor);//
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_ejercicioDetallePedidoCompraImpor);//
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_periodoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_arancelDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_centro_costoDetallePedidoCompraImpor);//
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_anioDetallePedidoCompraImpor);//
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setEnabled(isHabilitar && this.detallepedidocompraimporConstantesFunciones.activarid_mesDetallePedidoCompraImpor);
	};
	
	public void setDefaultControlesDetallePedidoCompraImpor() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetallePedidoCompraImpor(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detallepedidocompraimporSessionBean.setConGuardarRelaciones(true);			
			this.detallepedidocompraimporSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.setVisible(true);
			
					
		} else {
			//this.detallepedidocompraimporSessionBean.setConGuardarRelaciones(false);			
			this.detallepedidocompraimporSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetallePedidoCompraImpor() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
				if(detallepedidocompraimporAux.getId().equals(this.iIdNuevoDetallePedidoCompraImpor)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimpors) {
				if(detallepedidocompraimporAux.getId().equals(this.iIdNuevoDetallePedidoCompraImpor)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
				if(detallepedidocompraimporAux.getId().equals(detallepedidocompraimpor.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimpors) {
				if(detallepedidocompraimporAux.getId().equals(detallepedidocompraimpor.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimporOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
				if(detallepedidocompraimporAux.getDetallePedidoCompraImporOriginal().getId().equals(detallepedidocompraimporOriginal.getId())) {
					existe=true;
					detallepedidocompraimporOriginal.setId(detallepedidocompraimporAux.getId());
					detallepedidocompraimporOriginal.setVersionRow(detallepedidocompraimporAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimpors) {
				if(detallepedidocompraimporAux.getDetallePedidoCompraImporOriginal().getId().equals(detallepedidocompraimporOriginal.getId())) {
					existe=true;
					detallepedidocompraimporOriginal.setId(detallepedidocompraimporAux.getId());
					detallepedidocompraimporOriginal.setVersionRow(detallepedidocompraimporAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetallePedidoCompraImpor(Boolean esParaCancelar) throws Exception {
		detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
		detallepedidocompraimporAux=new DetallePedidoCompraImpor();
		
		if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
					if(detallepedidocompraimporAux.getId()<0) {
						detallepedidocompraimporsAux.add(detallepedidocompraimporAux);
					}		
				}
				this.iIdNuevoDetallePedidoCompraImpor=0L;
				this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().removeAll(detallepedidocompraimporsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimpors) {
					if(detallepedidocompraimporAux.getId()<0) {
						detallepedidocompraimporsAux.add(detallepedidocompraimporAux);
					}		
				}
				this.iIdNuevoDetallePedidoCompraImpor=0L;
				this.detallepedidocompraimpors.removeAll(detallepedidocompraimporsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetallePedidoCompraImpor 
					&& this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()>0
					) {
					detallepedidocompraimporAux=this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().get(this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size() - 1);
				
					if(detallepedidocompraimporAux.getId()<0) {
						this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().remove(detallepedidocompraimporAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetallePedidoCompraImpor && this.detallepedidocompraimpors.size()>0) {
					detallepedidocompraimporAux=this.detallepedidocompraimpors.get(this.detallepedidocompraimpors.size() - 1);
				
					if(detallepedidocompraimporAux.getId()<0) {
						this.detallepedidocompraimpors.remove(detallepedidocompraimporAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetallePedidoCompraImpor(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detallepedidocompraimpor.getId()<0) {
				this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().remove(this.detallepedidocompraimpor);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detallepedidocompraimpor.getId()<0) {
				this.detallepedidocompraimpors.remove(this.detallepedidocompraimpor);
			}
		}			
	}
	
	public void setEstadosInicialesDetallePedidoCompraImpor(List<DetallePedidoCompraImpor> detallepedidocompraimporsAux) throws Exception {
		DetallePedidoCompraImporConstantesFunciones.setEstadosInicialesDetallePedidoCompraImpor(detallepedidocompraimporsAux);
	}
	
	public void setEstadosInicialesDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimporAux) throws Exception {
		DetallePedidoCompraImporConstantesFunciones.setEstadosInicialesDetallePedidoCompraImpor(detallepedidocompraimporAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetallePedidoCompraImporActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetallePedidoCompraImporActual()) {
				if(!this.isEsNuevoDetallePedidoCompraImpor) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetallePedidoCompraImpor=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetallePedidoCompraImporActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Pedido Compra ?", "MANTENIMIENTO DE Detalle Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetallePedidoCompraImpor detallepedidocompraimpor) throws Exception {
		DetallePedidoCompraImporConstantesFunciones.seleccionarAsignar(this.detallepedidocompraimpor,detallepedidocompraimpor);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetallePedidoCompraImpor=this.isPermisoActualizarOriginalDetallePedidoCompraImpor;
			
			
			this.seleccionarAsignar(detallepedidocompraimpor);
			
			

			idProductoActual=detallepedidocompraimpor.getid_producto();
			this.seleccionarProductoActual();

			idCentroCostoActual=detallepedidocompraimpor.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetallePedidoCompraImporConstantesFunciones.quitarEspaciosDetallePedidoCompraImpor(this.detallepedidocompraimpor,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detallepedidocompraimporSessionBean.setsFuncionBusquedaRapida(this.detallepedidocompraimporSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetallePedidoCompraImpor) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetallePedidoCompraImpor(esParaCancelar);				
				this.cancelarNuevoDetallePedidoCompraImpor(esParaCancelar);								
			}
			
			this.detallepedidocompraimpor=new DetallePedidoCompraImpor();
			
			this.inicializarDetallePedidoCompraImpor();
			
			this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetallePedidoCompraImpor() throws Exception {
		try {
			DetallePedidoCompraImporConstantesFunciones.inicializarDetallePedidoCompraImpor(this.detallepedidocompraimpor);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetallePedidoCompraImpors(String sAccionBusqueda,List<DetallePedidoCompraImpor> detallepedidocompraimporsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetallePedidoCompraImpor"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetallePedidoCompraImporMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetallePedidoCompraImporMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetallePedidoCompraImpor"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Pedido Compras");		
		parameters.put("busquedapor", DetallePedidoCompraImporConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetallePedidoCompraImpor=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetallePedidoCompraImporConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetallePedidoCompraImporConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetallePedidoCompraImpor=new JRBeanArrayDataSource(DetallePedidoCompraImporJInternalFrame.TraerDetallePedidoCompraImporBeans(detallepedidocompraimporsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetallePedidoCompraImpor);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetallePedidoCompraImporConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetallePedidoCompraImporConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetallePedidoCompraImporBean.TraerDetallePedidoCompraImporBeans(detallepedidocompraimporsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetallePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,detallepedidocompraimporsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetallePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,detallepedidocompraimporsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetallePedidoCompraImporActionPerformed(null);
					//this.generarExcelReporteDetallePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,detallepedidocompraimporsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetallePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,detallepedidocompraimporsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetallePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,detallepedidocompraimporsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetallePedidoCompraImpors(sAccionBusqueda,sTipoArchivoReporte,detallepedidocompraimporsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetallePedidoCompraImpors(String sAccionBusqueda,String sTipoArchivoReporte,List<DetallePedidoCompraImpor> detallepedidocompraimporsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallepedidocompraimpor";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetallePedidoCompraImpors");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetallePedidoCompraImpor("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetallePedidoCompraImpor detallepedidocompraimpor : detallepedidocompraimporsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetallePedidoCompraImporConstantesFunciones.generarExcelReporteDataDetallePedidoCompraImpor("NORMAL",row,workbook,detallepedidocompraimpor,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetallePedidoCompraImpor(String sTipo,Row row,Workbook workbook) {
		
		DetallePedidoCompraImporConstantesFunciones.generarExcelReporteHeaderDetallePedidoCompraImpor(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetallePedidoCompraImpors(String sAccionBusqueda,String sTipoArchivoReporte,List<DetallePedidoCompraImpor> detallepedidocompraimporsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallepedidocompraimpor_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetallePedidoCompraImpors");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetallePedidoCompraImpor detallepedidocompraimpor : detallepedidocompraimporsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.getDetallePedidoCompraImporDescripcion(detallepedidocompraimpor));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getpedidocompraimpor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getarancel_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getcantidad_pedido());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getcantidad_entra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getcantidad_pendiente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getporcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_PESO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PESO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getpeso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getlote());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getporcentaje_arancel());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getcantidad_unidad_auxiliar());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getprecio_unidad_auxiliar());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_FOB))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_FOB);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getfob());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getfob_exw());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detallepedidocompraimpor.getmes_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetallePedidoCompraImpors(String sAccionBusqueda,String sTipoArchivoReporte,List<DetallePedidoCompraImpor> detallepedidocompraimporsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetallePedidoCompraImpor> detallepedidocompraimporsRespaldo=null;
		
		classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detallepedidocompraimporLogic.setDatosCliente(this.datosCliente);
		this.detallepedidocompraimporLogic.setDatosDeep(this.datosDeep);
		this.detallepedidocompraimporLogic.setIsConDeep(true);
		
		detallepedidocompraimporsRespaldo=this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors();
		
		this.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(detallepedidocompraimporsParaReportes);	
		this.detallepedidocompraimporLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detallepedidocompraimporsParaReportes=this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors();
		this.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(detallepedidocompraimporsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallepedidocompraimpor_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetallePedidoCompraImpors");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetallePedidoCompraImpor("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetallePedidoCompraImpor detallepedidocompraimpor : detallepedidocompraimporsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetallePedidoCompraImpor("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetallePedidoCompraImporConstantesFunciones.generarExcelReporteDataDetallePedidoCompraImpor("NORMAL",row,workbook,detallepedidocompraimpor,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.getDetallePedidoCompraImporDescripcion(detallepedidocompraimpor));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetallePedidoCompraImpor() throws Exception {		
		this.startProcessDetallePedidoCompraImpor(true);
	}
	
	public void startProcessDetallePedidoCompraImpor(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetallePedidoCompraImpor ,this.jPanelParametrosReportesDetallePedidoCompraImpor, this.jScrollPanelDatosDetallePedidoCompraImpor,this.jPanelPaginacionDetallePedidoCompraImpor, this.jScrollPanelDatosEdicionDetallePedidoCompraImpor, this.jPanelAccionesDetallePedidoCompraImpor,this.jPanelAccionesFormularioDetallePedidoCompraImpor,this.jmenuBarDetallePedidoCompraImpor,this.jmenuBarDetalleDetallePedidoCompraImpor,this.jTtoolBarDetallePedidoCompraImpor,this.jTtoolBarDetalleDetallePedidoCompraImpor);		
		
		final JTabbedPane jTabbedPaneBusquedasDetallePedidoCompraImpor=this.jTabbedPaneBusquedasDetallePedidoCompraImpor; 
		
		final JPanel jPanelParametrosReportesDetallePedidoCompraImpor=this.jPanelParametrosReportesDetallePedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosDetallePedidoCompraImpor=this.jScrollPanelDatosDetallePedidoCompraImpor;
		final JTable jTableDatosDetallePedidoCompraImpor=this.jTableDatosDetallePedidoCompraImpor;		
		final JPanel jPanelPaginacionDetallePedidoCompraImpor=this.jPanelPaginacionDetallePedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosEdicionDetallePedidoCompraImpor=this.jScrollPanelDatosEdicionDetallePedidoCompraImpor;
		final JPanel jPanelAccionesDetallePedidoCompraImpor=this.jPanelAccionesDetallePedidoCompraImpor;
		
		JPanel jPanelCamposAuxiliarDetallePedidoCompraImpor=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetallePedidoCompraImpor=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			jPanelCamposAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelCamposDetallePedidoCompraImpor;
			jPanelAccionesFormularioAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelAccionesFormularioDetallePedidoCompraImpor;
		}
		
		final JPanel jPanelCamposDetallePedidoCompraImpor=jPanelCamposAuxiliarDetallePedidoCompraImpor;
		final JPanel jPanelAccionesFormularioDetallePedidoCompraImpor=jPanelAccionesFormularioAuxiliarDetallePedidoCompraImpor;
		
		
		final JMenuBar jmenuBarDetallePedidoCompraImpor=this.jmenuBarDetallePedidoCompraImpor;
		final JToolBar jTtoolBarDetallePedidoCompraImpor=this.jTtoolBarDetallePedidoCompraImpor;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetallePedidoCompraImpor=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetallePedidoCompraImpor=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			jmenuBarDetalleAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jmenuBarDetalleDetallePedidoCompraImpor;
			jTtoolBarDetalleAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTtoolBarDetalleDetallePedidoCompraImpor;
		}
		
		final JMenuBar jmenuBarDetalleDetallePedidoCompraImpor=jmenuBarDetalleAuxiliarDetallePedidoCompraImpor;
		final JToolBar jTtoolBarDetalleDetallePedidoCompraImpor=jTtoolBarDetalleAuxiliarDetallePedidoCompraImpor;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetallePedidoCompraImpor;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetallePedidoCompraImpor;
			processRunnable.jTableDatos=jTableDatosDetallePedidoCompraImpor;
			processRunnable.jPanelCampos=jPanelCamposDetallePedidoCompraImpor;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetallePedidoCompraImpor;
			processRunnable.jPanelAcciones=jPanelAccionesDetallePedidoCompraImpor;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetallePedidoCompraImpor;
			
			
			processRunnable.jmenuBar=jmenuBarDetallePedidoCompraImpor;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetallePedidoCompraImpor;
			processRunnable.jTtoolBar=jTtoolBarDetallePedidoCompraImpor;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetallePedidoCompraImpor;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetallePedidoCompraImpor ,jPanelParametrosReportesDetallePedidoCompraImpor,jTableDatosDetallePedidoCompraImpor, /*jScrollPanelDatosDetallePedidoCompraImpor,*/jPanelCamposDetallePedidoCompraImpor,jPanelPaginacionDetallePedidoCompraImpor, /*jScrollPanelDatosEdicionDetallePedidoCompraImpor,*/ jPanelAccionesDetallePedidoCompraImpor,jPanelAccionesFormularioDetallePedidoCompraImpor,jmenuBarDetallePedidoCompraImpor,jmenuBarDetalleDetallePedidoCompraImpor,jTtoolBarDetallePedidoCompraImpor,jTtoolBarDetalleDetallePedidoCompraImpor);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetallePedidoCompraImpor ,jPanelParametrosReportesDetallePedidoCompraImpor, jScrollPanelDatosDetallePedidoCompraImpor,jPanelPaginacionDetallePedidoCompraImpor, jScrollPanelDatosEdicionDetallePedidoCompraImpor, jPanelAccionesDetallePedidoCompraImpor,jPanelAccionesFormularioDetallePedidoCompraImpor,jmenuBarDetallePedidoCompraImpor,jmenuBarDetalleDetallePedidoCompraImpor,jTtoolBarDetallePedidoCompraImpor,jTtoolBarDetalleDetallePedidoCompraImpor);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetallePedidoCompraImpor() {// throws Exception 
		this.finishProcessDetallePedidoCompraImpor(true);
	}
	
	public void finishProcessDetallePedidoCompraImpor(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetallePedidoCompraImpor ,this.jPanelParametrosReportesDetallePedidoCompraImpor, this.jScrollPanelDatosDetallePedidoCompraImpor,this.jPanelPaginacionDetallePedidoCompraImpor, this.jScrollPanelDatosEdicionDetallePedidoCompraImpor, this.jPanelAccionesDetallePedidoCompraImpor,this.jPanelAccionesFormularioDetallePedidoCompraImpor,this.jmenuBarDetallePedidoCompraImpor,this.jmenuBarDetalleDetallePedidoCompraImpor,this.jTtoolBarDetallePedidoCompraImpor,this.jTtoolBarDetalleDetallePedidoCompraImpor);		
		
		final JTabbedPane jTabbedPaneBusquedasDetallePedidoCompraImpor=this.jTabbedPaneBusquedasDetallePedidoCompraImpor; 
		
		final JPanel jPanelParametrosReportesDetallePedidoCompraImpor=this.jPanelParametrosReportesDetallePedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosDetallePedidoCompraImpor=this.jScrollPanelDatosDetallePedidoCompraImpor;
		final JTable jTableDatosDetallePedidoCompraImpor=this.jTableDatosDetallePedidoCompraImpor;		
		final JPanel jPanelPaginacionDetallePedidoCompraImpor=this.jPanelPaginacionDetallePedidoCompraImpor;
		//final JScrollPane jScrollPanelDatosEdicionDetallePedidoCompraImpor=this.jScrollPanelDatosEdicionDetallePedidoCompraImpor;
		final JPanel jPanelAccionesDetallePedidoCompraImpor=this.jPanelAccionesDetallePedidoCompraImpor;
		
		JPanel jPanelCamposAuxiliarDetallePedidoCompraImpor=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetallePedidoCompraImpor=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			jPanelCamposAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelCamposDetallePedidoCompraImpor;
			jPanelAccionesFormularioAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelAccionesFormularioDetallePedidoCompraImpor;
		}
		
		final JPanel jPanelCamposDetallePedidoCompraImpor=jPanelCamposAuxiliarDetallePedidoCompraImpor;
		final JPanel jPanelAccionesFormularioDetallePedidoCompraImpor=jPanelAccionesFormularioAuxiliarDetallePedidoCompraImpor;
		
		
		final JMenuBar jmenuBarDetallePedidoCompraImpor=this.jmenuBarDetallePedidoCompraImpor;		
		final JToolBar jTtoolBarDetallePedidoCompraImpor=this.jTtoolBarDetallePedidoCompraImpor;
				
		JMenuBar jmenuBarDetalleAuxiliarDetallePedidoCompraImpor=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetallePedidoCompraImpor=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			jmenuBarDetalleAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jmenuBarDetalleDetallePedidoCompraImpor;
			jTtoolBarDetalleAuxiliarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTtoolBarDetalleDetallePedidoCompraImpor;		
		}
		
		final JMenuBar jmenuBarDetalleDetallePedidoCompraImpor=jmenuBarDetalleAuxiliarDetallePedidoCompraImpor;
		final JToolBar jTtoolBarDetalleDetallePedidoCompraImpor=jTtoolBarDetalleAuxiliarDetallePedidoCompraImpor;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetallePedidoCompraImpor;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetallePedidoCompraImpor;
			processRunnable.jTableDatos=jTableDatosDetallePedidoCompraImpor;
			processRunnable.jPanelCampos=jPanelCamposDetallePedidoCompraImpor;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetallePedidoCompraImpor;
			processRunnable.jPanelAcciones=jPanelAccionesDetallePedidoCompraImpor;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetallePedidoCompraImpor;
			
			
			processRunnable.jmenuBar=jmenuBarDetallePedidoCompraImpor;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetallePedidoCompraImpor;
			processRunnable.jTtoolBar=jTtoolBarDetallePedidoCompraImpor;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetallePedidoCompraImpor;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetallePedidoCompraImpor ,jPanelParametrosReportesDetallePedidoCompraImpor, jTableDatosDetallePedidoCompraImpor,/*jScrollPanelDatosDetallePedidoCompraImpor,*/jPanelCamposDetallePedidoCompraImpor,jPanelPaginacionDetallePedidoCompraImpor, /*jScrollPanelDatosEdicionDetallePedidoCompraImpor,*/ jPanelAccionesDetallePedidoCompraImpor,jPanelAccionesFormularioDetallePedidoCompraImpor,jmenuBarDetallePedidoCompraImpor,jmenuBarDetalleDetallePedidoCompraImpor,jTtoolBarDetallePedidoCompraImpor,jTtoolBarDetalleDetallePedidoCompraImpor));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetallePedidoCompraImpor(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetallePedidoCompraImpor(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetallePedidoCompraImpor(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetallePedidoCompraImpor(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePedidoCompraImpor,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetallePedidoCompraImpor,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetallePedidoCompraImpor(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePedidoCompraImpor,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetallePedidoCompraImpor,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detallepedidocompraimporConstantesFunciones.getsFinalQueryDetallePedidoCompraImpor();
		String  finalQueryPaginacionTodos=this.detallepedidocompraimporConstantesFunciones.getsFinalQueryDetallePedidoCompraImpor();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetallePedidoCompraImporConstantesFunciones.getArrayColumnasGlobalesNoDetallePedidoCompraImpor(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetallePedidoCompraImporConstantesFunciones.getArrayColumnasGlobalesDetallePedidoCompraImpor(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetallePedidoCompraImporConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detallepedidocompraimporsEliminados= new ArrayList<DetallePedidoCompraImpor>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetallePedidoCompraImpor();
		
				///*DetallePedidoCompraImporSessionBean*/this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			
			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetallePedidoCompraImporConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetallePedidoCompraImporConstantesFunciones.getClassesForeignKeysOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detallepedidocompraimpor."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detallepedidocompraimporsAux= new ArrayList<DetallePedidoCompraImpor>();
			
				
			detallepedidocompraimporLogic.setDatosCliente(this.datosCliente);
			detallepedidocompraimporLogic.setDatosDeep(this.datosDeep);
			detallepedidocompraimporLogic.setIsConDeep(true);
			
			
			detallepedidocompraimporLogic.getDetallePedidoCompraImporDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detallepedidocompraimporLogic.getTodosDetallePedidoCompraImpors(finalQueryGlobal,pagination);
					
					//detallepedidocompraimporLogic.getTodosDetallePedidoCompraImporsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null|| detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallepedidocompraimporsAux= new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux= new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallepedidocompraimporLogic.getTodosDetallePedidoCompraImpors(finalQueryGlobal+"",this.pagination);												
							
							//detallepedidocompraimporLogic.getTodosDetallePedidoCompraImporsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporLogic.getDetallePedidoCompraImpors() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());					
							detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetallePedidoCompraImpor=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetallePedidoCompraImpor=this.idActual;
				
				} else if(this.idDetallePedidoCompraImporActual!=null && this.idDetallePedidoCompraImporActual!=0L) {
					idDetallePedidoCompraImpor=idDetallePedidoCompraImporActual;
				}
				
					
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndicePorId(idDetallePedidoCompraImpor);
				
				this.detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detallepedidocompraimporLogic.getEntity(idDetallePedidoCompraImpor);
					
					//detallepedidocompraimporLogic.getEntityWithConnection(idDetallePedidoCompraImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
					detallepedidocompraimporLogic.getDetallePedidoCompraImpors().add(detallepedidocompraimporLogic.getDetallePedidoCompraImpor());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
					this.detallepedidocompraimpors.add(detallepedidocompraimpor);
				}
				
				if(detallepedidocompraimporLogic.getDetallePedidoCompraImpor()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdArancel")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdArancel(id_arancelFK_IdArancel);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdArancel(finalQueryGlobal,pagination,id_arancelFK_IdArancel);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdArancel(id_arancelFK_IdArancel);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdArancel(id_arancelFK_IdArancel);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdArancel(finalQueryGlobal,pagination,id_arancelFK_IdArancel);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdArancel(id_arancelFK_IdArancel);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdArancel(id_arancelFK_IdArancel);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdArancel",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdArancel",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdBodega",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdBodega",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdCentroCosto",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdCentroCosto",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdEjercicio",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdEjercicio",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdEmpresa",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdEmpresa",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPedidoCompraImpor")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPedidoCompraImpor(id_pedido_compra_imporFK_IdPedidoCompraImpor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdPedidoCompraImpor(finalQueryGlobal,pagination,id_pedido_compra_imporFK_IdPedidoCompraImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPedidoCompraImpor(id_pedido_compra_imporFK_IdPedidoCompraImpor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPedidoCompraImpor(id_pedido_compra_imporFK_IdPedidoCompraImpor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdPedidoCompraImpor(finalQueryGlobal,pagination,id_pedido_compra_imporFK_IdPedidoCompraImpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPedidoCompraImpor(id_pedido_compra_imporFK_IdPedidoCompraImpor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPedidoCompraImpor(id_pedido_compra_imporFK_IdPedidoCompraImpor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdPedidoCompraImpor",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdPedidoCompraImpor",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdPeriodo",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdPeriodo",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdProducto",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdProducto",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdSucursal",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdSucursal",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors()==null||detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detallepedidocompraimpors==null|| detallepedidocompraimpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
						detallepedidocompraimporsAux.addAll(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporsAux=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimporsAux.addAll(detallepedidocompraimpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetallePedidoCompraImporConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetallePedidoCompraImpors("FK_IdUnidad",detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetallePedidoCompraImpors("FK_IdUnidad",detallepedidocompraimpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporLogic.setDetallePedidoCompraImpors(new ArrayList<DetallePedidoCompraImpor>());
						detallepedidocompraimporLogic.getDetallePedidoCompraImpors().addAll(detallepedidocompraimporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimpors=new ArrayList<DetallePedidoCompraImpor>();
							detallepedidocompraimpors.addAll(detallepedidocompraimporsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetallePedidoCompraImpor();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetallePedidoCompraImporConstantesFunciones.getTotalesListaDetallePedidoCompraImpor(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetallePedidoCompraImporConstantesFunciones.getTotalesListaDetallePedidoCompraImpor(this.detallepedidocompraimpors);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetallePedidoCompraImpor();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallepedidocompraimpors.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detallepedidocompraimpors.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetallePedidoCompraImpor detallepedidocompraimpor) {
		Boolean permite=true;
		
		if(this.detallepedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetallePedidoCompraImporConstantesFunciones.getTotalesListaDetallePedidoCompraImpor(detallepedidocompraimporLogic.getDetallePedidoCompraImpors());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetallePedidoCompraImporConstantesFunciones.getTotalesListaDetallePedidoCompraImpor(this.detallepedidocompraimpors);
		}
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetallePedidoCompraImporConstantesFunciones.getOrderByListaDetallePedidoCompraImpor();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetallePedidoCompraImporConstantesFunciones.getOrderByListaDetallePedidoCompraImpor();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
				if(detallepedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					detallepedidocompraimporTotales=detallepedidocompraimpor;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetallePedidoCompraImpor detallepedidocompraimpor:this.detallepedidocompraimpors) {
				if(detallepedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					detallepedidocompraimporTotales=detallepedidocompraimpor;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detallepedidocompraimporAux=new DetallePedidoCompraImpor();
			this.detallepedidocompraimporAux.setsType(Constantes2.S_TOTALES);
			this.detallepedidocompraimporAux.setIsNew(false);
			this.detallepedidocompraimporAux.setIsChanged(false);
			this.detallepedidocompraimporAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetallePedidoCompraImporConstantesFunciones.TotalizarValoresFilaDetallePedidoCompraImpor(this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.detallepedidocompraimporAux);
				
				this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().add(this.detallepedidocompraimporAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetallePedidoCompraImporConstantesFunciones.TotalizarValoresFilaDetallePedidoCompraImpor(this.detallepedidocompraimpors,this.detallepedidocompraimporAux);
				
				this.detallepedidocompraimpors.add(this.detallepedidocompraimporAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detallepedidocompraimporTotales=new DetallePedidoCompraImpor();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().remove(detallepedidocompraimporTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detallepedidocompraimpors.remove(detallepedidocompraimporTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detallepedidocompraimporTotales=new DetallePedidoCompraImpor();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
				if(detallepedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					detallepedidocompraimporTotales=detallepedidocompraimpor;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetallePedidoCompraImporConstantesFunciones.TotalizarValoresFilaDetallePedidoCompraImpor(this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),detallepedidocompraimporTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetallePedidoCompraImpor detallepedidocompraimpor:this.detallepedidocompraimpors) {
				if(detallepedidocompraimpor.getsType().equals(Constantes2.S_TOTALES)) {
					detallepedidocompraimporTotales=detallepedidocompraimpor;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetallePedidoCompraImporConstantesFunciones.TotalizarValoresFilaDetallePedidoCompraImpor(this.detallepedidocompraimpors,detallepedidocompraimporTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetallePedidoCompraImporsFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdArancel()throws Exception {
		try {
			sAccionBusqueda="FK_IdArancel";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdPedidoCompraImpor()throws Exception {
		try {
			sAccionBusqueda="FK_IdPedidoCompraImpor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetallePedidoCompraImporsFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetallePedidoCompraImporsFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdArancel(String sFinalQuery,Long id_arancel)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdArancel(sFinalQuery,this.pagination,id_arancel);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdPedidoCompraImpor(String sFinalQuery,Long id_pedido_compra_impor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdPedidoCompraImpor(sFinalQuery,this.pagination,id_pedido_compra_impor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetallePedidoCompraImporsFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLogic.getDetallePedidoCompraImporsFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetallePedidoCompraImpor() {
		this.isPermisoTodoDetallePedidoCompraImpor=false;
		this.isPermisoNuevoDetallePedidoCompraImpor=false;
		this.isPermisoActualizarDetallePedidoCompraImpor=false;
		this.isPermisoActualizarOriginalDetallePedidoCompraImpor=false;
		this.isPermisoEliminarDetallePedidoCompraImpor=false;
		this.isPermisoGuardarCambiosDetallePedidoCompraImpor=false;
		this.isPermisoConsultaDetallePedidoCompraImpor=false;
		this.isPermisoBusquedaDetallePedidoCompraImpor=false;
		this.isPermisoReporteDetallePedidoCompraImpor=false;		
		this.isPermisoOrdenDetallePedidoCompraImpor=false;		
		this.isPermisoPaginacionMedioDetallePedidoCompraImpor=false;		
		this.isPermisoPaginacionAltoDetallePedidoCompraImpor=false;
		this.isPermisoPaginacionTodoDetallePedidoCompraImpor=false;
		this.isPermisoCopiarDetallePedidoCompraImpor=false;		
		this.isPermisoVerFormDetallePedidoCompraImpor=false;		
		this.isPermisoDuplicarDetallePedidoCompraImpor=false;		
		this.isPermisoOrdenDetallePedidoCompraImpor=false;		
	}
	
	public void setPermisosUsuarioDetallePedidoCompraImpor(Boolean isPermiso) {
		this.isPermisoTodoDetallePedidoCompraImpor=isPermiso;
		this.isPermisoNuevoDetallePedidoCompraImpor=isPermiso;
		this.isPermisoActualizarDetallePedidoCompraImpor=isPermiso;
		this.isPermisoActualizarOriginalDetallePedidoCompraImpor=isPermiso;
		this.isPermisoEliminarDetallePedidoCompraImpor=isPermiso;
		this.isPermisoGuardarCambiosDetallePedidoCompraImpor=isPermiso;
		this.isPermisoConsultaDetallePedidoCompraImpor=isPermiso;
		this.isPermisoBusquedaDetallePedidoCompraImpor=isPermiso;
		this.isPermisoReporteDetallePedidoCompraImpor=isPermiso;
		this.isPermisoOrdenDetallePedidoCompraImpor=isPermiso;		
		this.isPermisoPaginacionMedioDetallePedidoCompraImpor=isPermiso;		
		this.isPermisoPaginacionAltoDetallePedidoCompraImpor=isPermiso;		
		this.isPermisoPaginacionTodoDetallePedidoCompraImpor=isPermiso;		
		this.isPermisoCopiarDetallePedidoCompraImpor=isPermiso;		
		this.isPermisoVerFormDetallePedidoCompraImpor=isPermiso;		
		this.isPermisoDuplicarDetallePedidoCompraImpor=isPermiso;
		this.isPermisoOrdenDetallePedidoCompraImpor=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetallePedidoCompraImpor(Boolean isPermiso) {
		//this.isPermisoTodoDetallePedidoCompraImpor=isPermiso;
		this.isPermisoNuevoDetallePedidoCompraImpor=isPermiso;
		this.isPermisoActualizarDetallePedidoCompraImpor=isPermiso;
		this.isPermisoActualizarOriginalDetallePedidoCompraImpor=isPermiso;
		this.isPermisoEliminarDetallePedidoCompraImpor=isPermiso;
		this.isPermisoGuardarCambiosDetallePedidoCompraImpor=isPermiso;
		//this.isPermisoConsultaDetallePedidoCompraImpor=isPermiso;
		//this.isPermisoBusquedaDetallePedidoCompraImpor=isPermiso;
		//this.isPermisoReporteDetallePedidoCompraImpor=isPermiso;
		//this.isPermisoOrdenDetallePedidoCompraImpor=isPermiso;		
		//this.isPermisoPaginacionMedioDetallePedidoCompraImpor=isPermiso;		
		//this.isPermisoPaginacionAltoDetallePedidoCompraImpor=isPermiso;		
		//this.isPermisoPaginacionTodoDetallePedidoCompraImpor=isPermiso;		
		//this.isPermisoCopiarDetallePedidoCompraImpor=isPermiso;		
		//this.isPermisoDuplicarDetallePedidoCompraImpor=isPermiso;
		//this.isPermisoOrdenDetallePedidoCompraImpor=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetallePedidoCompraImporClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetallePedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetallePedidoCompraImporClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetallePedidoCompraImporClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetallePedidoCompraImporClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetallePedidoCompraImporClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetallePedidoCompraImpor() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetallePedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetallePedidoCompraImpor=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetallePedidoCompraImpor=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetallePedidoCompraImpor=this.isPermisoActualizarDetallePedidoCompraImpor;
			this.isPermisoEliminarDetallePedidoCompraImpor=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetallePedidoCompraImpor=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetallePedidoCompraImpor=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetallePedidoCompraImpor=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetallePedidoCompraImpor=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetallePedidoCompraImpor=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetallePedidoCompraImpor=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetallePedidoCompraImpor=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetallePedidoCompraImpor=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetallePedidoCompraImpor=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetallePedidoCompraImpor=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetallePedidoCompraImpor=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetallePedidoCompraImpor=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetallePedidoCompraImpor=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetallePedidoCompraImpor.setToolTipText(this.jTableDatosDetallePedidoCompraImpor.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetallePedidoCompraImpor(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetallePedidoCompraImpor(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetallePedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetallePedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetallePedidoCompraImpor() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetallePedidoCompraImporListas()throws Exception {
		try	{						
			
				this.pedidocompraimporsForeignKey=new ArrayList();
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.arancelsForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetallePedidoCompraImporListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetallePedidoCompraImporJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetallePedidoCompraImporListas(false);
			} else {
			
				this.cargarCombosForeignKeyPedidoCompraImporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyArancelListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyPedidoCompraImporListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.pedidocompraimporsForeignKey==null||this.pedidocompraimporsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PedidoCompraImporConstantesFunciones.getArrayColumnasGlobalesPedidoCompraImpor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PedidoCompraImporConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PedidoCompraImporConstantesFunciones.SFINALQUERY;

				this.cargarCombosPedidoCompraImporsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyArancelListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.arancelsForeignKey==null||this.arancelsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ArancelConstantesFunciones.getArrayColumnasGlobalesArancel(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ArancelConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ArancelConstantesFunciones.SFINALQUERY;

				this.cargarCombosArancelsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetallePedidoCompraImporListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetallePedidoCompraImporParameterReturnGeneral detallepedidocompraimporReturnGeneral=new DetallePedidoCompraImporParameterReturnGeneral();
						
			


				String finalQueryGlobalPedidoCompraImpor="";

				if(((this.pedidocompraimporsForeignKey==null||this.pedidocompraimporsForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_pedido_compra_imporDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_pedido_compra_imporDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPedidoCompraImpor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PedidoCompraImporConstantesFunciones.getArrayColumnasGlobalesPedidoCompraImpor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPedidoCompraImpor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PedidoCompraImporConstantesFunciones.TABLENAME);

						finalQueryGlobalPedidoCompraImpor=Funciones.GetFinalQueryAppend(finalQueryGlobalPedidoCompraImpor, "");
						finalQueryGlobalPedidoCompraImpor+=PedidoCompraImporConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPedidoCompraImporsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPedidoCompraImpor=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidPedidoCompraImporActual();
					}
				} else {
					finalQueryGlobalPedidoCompraImpor="NONE";
				}


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_empresaDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_empresaDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_sucursalDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_sucursalDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_bodegaDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_bodegaDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_productoDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_productoDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_unidadDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_unidadDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_ejercicioDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_ejercicioDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_periodoDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_periodoDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalArancel="";

				if(((this.arancelsForeignKey==null||this.arancelsForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_arancelDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_arancelDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionArancel()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ArancelConstantesFunciones.getArrayColumnasGlobalesArancel(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalArancel=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ArancelConstantesFunciones.TABLENAME);

						finalQueryGlobalArancel=Funciones.GetFinalQueryAppend(finalQueryGlobalArancel, "");
						finalQueryGlobalArancel+=ArancelConstantesFunciones.SFINALQUERY;

						//this.cargarCombosArancelsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalArancel=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidArancelActual();
					}
				} else {
					finalQueryGlobalArancel="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_centro_costoDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_centro_costoDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_anioDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_anioDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detallepedidocompraimporConstantesFunciones.cargarid_mesDetallePedidoCompraImpor)
					 || (this.esRecargarFks && this.detallepedidocompraimporConstantesFunciones.cargarid_mesDetallePedidoCompraImpor)) {

					if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detallepedidocompraimporSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detallepedidocompraimporReturnGeneral=detallepedidocompraimporLogic.cargarCombosLoteForeignKeyDetallePedidoCompraImpor(finalQueryGlobalPedidoCompraImpor,finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalArancel,finalQueryGlobalCentroCosto,finalQueryGlobalAnio,finalQueryGlobalMes);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalPedidoCompraImpor.equals("NONE")) {
				this.pedidocompraimporsForeignKey=detallepedidocompraimporReturnGeneral.getpedidocompraimporsForeignKey();
			}

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detallepedidocompraimporReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detallepedidocompraimporReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detallepedidocompraimporReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detallepedidocompraimporReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detallepedidocompraimporReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detallepedidocompraimporReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detallepedidocompraimporReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalArancel.equals("NONE")) {
				this.arancelsForeignKey=detallepedidocompraimporReturnGeneral.getarancelsForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=detallepedidocompraimporReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detallepedidocompraimporReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detallepedidocompraimporReturnGeneral.getmessForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetallePedidoCompraImpor()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyPedidoCompraImpor();
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyArancel();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyPedidoCompraImpor()throws Exception {
		try {
			if(this.detallepedidocompraimporSessionBean==null) {
				this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPedidoCompraImpor()) {
				PedidoCompraImpor pedidocompraimpor=new PedidoCompraImpor();
				PedidoCompraImporConstantesFunciones.setPedidoCompraImporDescripcion(pedidocompraimpor,Constantes.SMENSAJE_ESCOJA_OPCION);
				pedidocompraimpor.setId(null);

				if(!PedidoCompraImporConstantesFunciones.ExisteEnLista(this.pedidocompraimporsForeignKey,pedidocompraimpor,true)) {

					this.pedidocompraimporsForeignKey.add(0,pedidocompraimpor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyArancel()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionArancel()) {
				Arancel arancel=new Arancel();
				ArancelConstantesFunciones.setArancelDescripcion(arancel,Constantes.SMENSAJE_ESCOJA_OPCION);
				arancel.setId(null);

				if(!ArancelConstantesFunciones.ExisteEnLista(this.arancelsForeignKey,arancel,true)) {

					this.arancelsForeignKey.add(0,arancel);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detallepedidocompraimporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetallePedidoCompraImpor()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetallePedidoCompraImpor(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detallepedidocompraimpor.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetallePedidoCompraImpor"));
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetallePedidoCompraImpor"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetallePedidoCompraImpor"));
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetallePedidoCompraImpor"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor"));

						this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor"));

						this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.addItemListener(new ComboBoxItemListener(this,"id_productoDetallePedidoCompraImpor"));
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetallePedidoCompraImpor"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.addActionListener(new ComboBoxActionListener(this,"id_productoDetallePedidoCompraImpor"));
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetallePedidoCompraImpor"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor"));

						this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor"));

						this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetallePedidoCompraImpor()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetallePedidoCompraImpor();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor)throws Exception {	
		try {
			
			this.setActualPedidoCompraImporForeignKey(detallepedidocompraimpor.getid_pedido_compra_impor(),false,"Formulario");
			this.setActualBodegaForeignKey(detallepedidocompraimpor.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(detallepedidocompraimpor.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(detallepedidocompraimpor.getid_unidad(),false,"Formulario");
			this.setActualArancelForeignKey(detallepedidocompraimpor.getid_arancel(),false,"Formulario");
			this.setActualCentroCostoForeignKey(detallepedidocompraimpor.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detallepedidocompraimpor.getProducto()!=null && !sTipoEvento.equals("id_productoDetallePedidoCompraImpor")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detallepedidocompraimpor.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				if(detallepedidocompraimpor.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoDetallePedidoCompraImpor")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(detallepedidocompraimpor.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetallePedidoCompraImpor()throws Exception {	
		try {
			
			this.setActualPedidoCompraImporForeignKey(this.detallepedidocompraimporConstantesFunciones.getid_pedido_compra_impor(),false,"Formulario");
			this.setActualBodegaForeignKey(this.detallepedidocompraimporConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.detallepedidocompraimporConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detallepedidocompraimporConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualArancelForeignKey(this.detallepedidocompraimporConstantesFunciones.getid_arancel(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.detallepedidocompraimporConstantesFunciones.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetallePedidoCompraImpor()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetallePedidoCompraImpor()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetallePedidoCompraImpor()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetallePedidoCompraImpor()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetallePedidoCompraImpor()throws Exception {
		try {
			

			this.cargarCombosFramePedidoCompraImporsForeignKey("Todos");
			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameArancelsForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetallePedidoCompraImpor(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFramePedidoCompraImporsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameArancelsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetallePedidoCompraImpor()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	







	public void recargarFormDetallePedidoCompraImporBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetallePedidoCompraImporid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormDetallePedidoCompraImporProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetallePedidoCompraImporid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}














	
	



	public void recargarFormDetallePedidoCompraImporid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detallepedidocompraimpor,jComboBoxGenericoProducto);
			}

			if(this.detallepedidocompraimpor.getid_bodega()!=null && this.detallepedidocompraimpor.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detallepedidocompraimpor.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detallepedidocompraimpor.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetallePedidoCompraImporid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detallepedidocompraimpor,jComboBoxGenericoUnidad);
			}

			if(this.detallepedidocompraimpor.getid_producto()!=null && this.detallepedidocompraimpor.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detallepedidocompraimpor.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detallepedidocompraimpor.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetallePedidoCompraImporBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetallePedidoCompraImporBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetallePedidoCompraImporBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean(); 
		this.detallepedidocompraimporConstantesFunciones=new DetallePedidoCompraImporConstantesFunciones(); 
		this.detallepedidocompraimporBean=new DetallePedidoCompraImpor();//(this.detallepedidocompraimporConstantesFunciones); 		
		this.detallepedidocompraimporReturnGeneral=new DetallePedidoCompraImporParameterReturnGeneral(); 
		
		this.detallepedidocompraimporSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detallepedidocompraimporSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetallePedidoCompraImporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetallePedidoCompraImporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetallePedidoCompraImporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetallePedidoCompraImpor(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detallepedidocompraimporConstantesFunciones=new DetallePedidoCompraImporConstantesFunciones(); 
			this.detallepedidocompraimporBean=new DetallePedidoCompraImpor();//this.detallepedidocompraimporConstantesFunciones); 			
			this.detallepedidocompraimporReturnGeneral=new DetallePedidoCompraImporParameterReturnGeneral(); 
		
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Pedido Compra Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detallepedidocompraimpor=new DetallePedidoCompraImpor();
			this.detallepedidocompraimpors = new ArrayList<DetallePedidoCompraImpor>();
			this.detallepedidocompraimporsAux = new ArrayList<DetallePedidoCompraImpor>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic=new DetallePedidoCompraImporLogic();
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			//this.detallepedidocompraimporSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detallepedidocompraimporSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetallePedidoCompraImpor);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor);	
					}
					
					if(this.jInternalFrameImportacionDetallePedidoCompraImpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetallePedidoCompraImpor);							
					}
					
				}
				
				if(this.jInternalFrameTotalesDetallePedidoCompraImpor!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetallePedidoCompraImpor);
				}
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetallePedidoCompraImpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetallePedidoCompraImpor);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetallePedidoCompraImpor);
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setVisible(false);
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor);
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setVisible(false);
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetallePedidoCompraImpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetallePedidoCompraImpor);
					this.jInternalFrameImportacionDetallePedidoCompraImpor.setVisible(false);
					this.jInternalFrameImportacionDetallePedidoCompraImpor.setSelected(false);
				}
				
				
			}
			
			if(this.jInternalFrameTotalesDetallePedidoCompraImpor!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetallePedidoCompraImpor);
				this.jInternalFrameTotalesDetallePedidoCompraImpor.setVisible(false);
				this.jInternalFrameTotalesDetallePedidoCompraImpor.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetallePedidoCompraImpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetallePedidoCompraImpor);
					this.jInternalFrameOrderByDetallePedidoCompraImpor.setVisible(false);
					this.jInternalFrameOrderByDetallePedidoCompraImpor.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetallePedidoCompraImporActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetallePedidoCompraImporConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detallepedidocompraimporReturnGeneral=new DetallePedidoCompraImporParameterReturnGeneral();
			
			this.detallepedidocompraimporParameterGeneral=new DetallePedidoCompraImporParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detallepedidocompraimporLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetallePedidoCompraImporJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),this.detallepedidocompraimporSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),this.detallepedidocompraimporSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaDuplicarDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaCopiarDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaVerFormDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdArancel=true;
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPedidoCompraImpor=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetallePedidoCompraImpor();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetallePedidoCompraImpor(false);
			
			this.setPermisosUsuarioDetallePedidoCompraImpor();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado() 
				|| (this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado() && this.detallepedidocompraimporSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetallePedidoCompraImporClasesRelacionadas();
			}
			
			if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetallePedidoCompraImporClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetallePedidoCompraImpor();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetallePedidoCompraImpor();
			}
			
			if(!this.isPermisoBusquedaDetallePedidoCompraImpor) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetallePedidoCompraImpor,this.isPermisoPaginacionMedioDetallePedidoCompraImpor,this.isPermisoPaginacionTodoDetallePedidoCompraImpor);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetallePedidoCompraImporConstantesFunciones.getTiposSeleccionarDetallePedidoCompraImpor());
				
				this.tiposColumnasSelect=DetallePedidoCompraImporConstantesFunciones.getTiposSeleccionarDetallePedidoCompraImpor(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetallePedidoCompraImpor();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetallePedidoCompraImpor(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetallePedidoCompraImpor(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetallePedidoCompraImpor() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.pedidocompraimporLogic=new PedidoCompraImporLogic();
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.arancelLogic=new ArancelLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detallepedidocompraimporImplementable= (DetallePedidoCompraImporImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetallePedidoCompraImporConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detallepedidocompraimporImplementableHome= (DetallePedidoCompraImporImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetallePedidoCompraImporConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detallepedidocompraimpors= new ArrayList<DetallePedidoCompraImpor>();
			this.detallepedidocompraimporsEliminados= new ArrayList<DetallePedidoCompraImpor>();
						
			this.isEsNuevoDetallePedidoCompraImpor=false;
			this.esParaAccionDesdeFormularioDetallePedidoCompraImpor=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.pedidocompraimporsForeignKey=new ArrayList<PedidoCompraImpor>() ;
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.arancelsForeignKey=new ArrayList<Arancel>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetallePedidoCompraImpor(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetallePedidoCompraImpor();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetallePedidoCompraImporConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetallePedidoCompraImpor(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetallePedidoCompraImpor();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetallePedidoCompraImpor();
			}
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetallePedidoCompraImpor(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetallePedidoCompraImpor: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetallePedidoCompraImpor() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetallePedidoCompraImpor")) {
				iIndex=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetallePedidoCompraImpor();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetallePedidoCompraImpor(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetallePedidoCompraImpor(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetallePedidoCompraImpor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetallePedidoCompraImporListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetallePedidoCompraImpor();
		
		this.cargarCombosFrameForeignKeyDetallePedidoCompraImpor();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetallePedidoCompraImpor();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetallePedidoCompraImpor();
		}
	}
	
	

	public void cargarCombosForeignKeyPedidoCompraImpor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPedidoCompraImporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPedidoCompraImpor();
				this.cargarCombosFramePedidoCompraImporsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPedidoCompraImpor(this.pedidocompraimporsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyArancel(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyArancelListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyArancel();
				this.cargarCombosFrameArancelsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaArancel(this.arancelsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetallePedidoCompraImporActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			
			if(jTableDatosDetallePedidoCompraImpor.getRowCount()>=1) {
				jTableDatosDetallePedidoCompraImpor.removeRowSelectionInterval(0, jTableDatosDetallePedidoCompraImpor.getRowCount()-1);						
			}
			
			this.isEsNuevoDetallePedidoCompraImpor=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetallePedidoCompraImpor(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetallePedidoCompraImpor(true);			
			//this.detallepedidocompraimpor=new DetallePedidoCompraImpor();
			//this.detallepedidocompraimpor.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor() ;
			
			if(DetallePedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetallePedidoCompraImpor(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detallepedidocompraimpor);	
			this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);				
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetallePedidoCompraImpor: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetallePedidoCompraImporActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetallePedidoCompraImpor.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetallePedidoCompraImpor.getSelectedRows().length;			
			}
			
			detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetallePedidoCompraImpor--;			
				//DetallePedidoCompraImpor detallepedidocompraimporAux= new DetallePedidoCompraImpor();			
				//detallepedidocompraimporAux.setId(this.iIdNuevoDetallePedidoCompraImpor);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetallePedidoCompraImpor detallepedidocompraimporOrigen=new DetallePedidoCompraImpor();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetallePedidoCompraImpor detallepedidocompraimporOrigen : detallepedidocompraimporsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detallepedidocompraimporOrigen =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detallepedidocompraimporOrigen =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetallePedidoCompraImpor();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detallepedidocompraimpor.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetallePedidoCompraImpor(detallepedidocompraimporOrigen,this.detallepedidocompraimpor,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().add(this.detallepedidocompraimporAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpors.add(this.detallepedidocompraimporAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
				
				this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoDetallePedidoCompraImpor(), this.getIndiceNuevoDetallePedidoCompraImpor());
				
				int iLastRow =  this.jTableDatosDetallePedidoCompraImpor.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetallePedidoCompraImpor.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetallePedidoCompraImpor.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();									
		
			DetallePedidoCompraImpor detallepedidocompraimporOrigen=new DetallePedidoCompraImpor();
			DetallePedidoCompraImpor detallepedidocompraimporDestino=new DetallePedidoCompraImpor();
				
			detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetallePedidoCompraImpor.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detallepedidocompraimporsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetallePedidoCompraImpor.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporOrigen =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallepedidocompraimporOrigen =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detallepedidocompraimporDestino =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detallepedidocompraimporDestino =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detallepedidocompraimporOrigen =detallepedidocompraimporsSeleccionados.get(0);
				detallepedidocompraimporDestino =detallepedidocompraimporsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetallePedidoCompraImpor(detallepedidocompraimporOrigen,detallepedidocompraimporDestino,true,false);
				
				detallepedidocompraimporDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detallepedidocompraimporDestino,detallepedidocompraimporLogic.getDetallePedidoCompraImpors());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detallepedidocompraimporDestino,detallepedidocompraimpors);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
				
				//this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoDetallePedidoCompraImpor(), this.getIndiceNuevoDetallePedidoCompraImpor());
				
				int iLastRow =  this.jTableDatosDetallePedidoCompraImpor.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetallePedidoCompraImpor.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetallePedidoCompraImpor.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetallePedidoCompraImpor.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(!isVisible);
			this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(!isVisible);
			this.jPanelAccionesDetallePedidoCompraImpor.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetallePedidoCompraImpor();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetallePedidoCompraImpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetallePedidoCompraImpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetallePedidoCompraImpor();
			
			this.abrirFrameTotalesDetallePedidoCompraImpor();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetallePedidoCompraImpor();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetallePedidoCompraImpor();
			
			this.abrirFrameOrderByDetallePedidoCompraImpor();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetallePedidoCompraImpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetallePedidoCompraImpor(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetallePedidoCompraImpor);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.isMaximum()) {
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setSize(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.iWidthFormulario,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetallePedidoCompraImpor.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetallePedidoCompraImpor.isMaximum()) {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jContentPaneDetalleDetallePedidoCompraImpor.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jContentPaneDetalleDetallePedidoCompraImpor.getWidth(),DetallePedidoCompraImporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jContentPaneDetalleDetallePedidoCompraImpor.getWidth(),DetallePedidoCompraImporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jContentPaneDetalleDetallePedidoCompraImpor.getWidth(),DetallePedidoCompraImporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setVisible(true);
	        this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetallePedidoCompraImpor==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetallePedidoCompraImpor=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetallePedidoCompraImpor,false,this);
				} else {
					this.jInternalFrameOrderByDetallePedidoCompraImpor=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetallePedidoCompraImpor,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetallePedidoCompraImpor);
				this.jInternalFrameOrderByDetallePedidoCompraImpor.setVisible(false);
				this.jInternalFrameOrderByDetallePedidoCompraImpor.setSelected(false);
				
				this.jInternalFrameOrderByDetallePedidoCompraImpor.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetallePedidoCompraImpor"));
				
				this.inicializarActualizarBindingTablaOrderByDetallePedidoCompraImpor();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetallePedidoCompraImpor==null) {
				
				this.jInternalFrameImportacionDetallePedidoCompraImpor=new ImportacionJInternalFrame(DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetallePedidoCompraImpor);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetallePedidoCompraImpor);
				this.jInternalFrameImportacionDetallePedidoCompraImpor.setVisible(false);
				this.jInternalFrameImportacionDetallePedidoCompraImpor.setSelected(false);


				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetallePedidoCompraImpor"));
				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetallePedidoCompraImpor"));
				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetallePedidoCompraImpor"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor==null) {
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor=new ReporteDinamicoJInternalFrame(DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor);
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setVisible(false);
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetallePedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetallePedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetallePedidoCompraImpor"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetallePedidoCompraImpor();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	public void abrirInicializarFrameTotalesDetallePedidoCompraImpor() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetallePedidoCompraImpor==null) {
				this.jInternalFrameTotalesDetallePedidoCompraImpor=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetallePedidoCompraImpor,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetallePedidoCompraImpor);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetallePedidoCompraImpor);
				this.jInternalFrameTotalesDetallePedidoCompraImpor.setVisible(false);
				this.jInternalFrameTotalesDetallePedidoCompraImpor.setSelected(false);


				this.jInternalFrameTotalesDetallePedidoCompraImpor.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetallePedidoCompraImpor"));
								
				this.inicializarActualizarBindingTablaTotalesDetallePedidoCompraImpor();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		
					
	public void cerrarFrameDetalleDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetallePedidoCompraImpor);
			
	       	this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setVisible(false);
	        this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.dispose();
			//this.jInternalFrameDetalleFormDetallePedidoCompraImpor=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetallePedidoCompraImpor() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetallePedidoCompraImpor.setVisible(true);
	        this.jInternalFrameImportacionDetallePedidoCompraImpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	public void abrirFrameTotalesDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetallePedidoCompraImpor.setVisible(true);
	        this.jInternalFrameTotalesDetallePedidoCompraImpor.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetallePedidoCompraImpor() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetallePedidoCompraImpor.setVisible(false);
	        this.jInternalFrameTotalesDetallePedidoCompraImpor.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	
	public void abrirFrameOrderByDetallePedidoCompraImpor() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetallePedidoCompraImpor.setVisible(true);
	        this.jInternalFrameOrderByDetallePedidoCompraImpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetallePedidoCompraImpor() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetallePedidoCompraImpor.setVisible(false);
	        this.jInternalFrameOrderByDetallePedidoCompraImpor.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetallePedidoCompraImpor() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetallePedidoCompraImpor() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetallePedidoCompraImpor.setVisible(false);
	        this.jInternalFrameImportacionDetallePedidoCompraImpor.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetallePedidoCompraImpor(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetallePedidoCompraImpor(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetallePedidoCompraImpor(true);
			//this.isEsNuevoDetallePedidoCompraImpor=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(false) ;
			
			if(detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetallePedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetallePedidoCompraImpor(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetallePedidoCompraImporActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetallePedidoCompraImpor(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetallePedidoCompraImpor(true);
			//this.isEsNuevoDetallePedidoCompraImpor=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detallepedidocompraimpor.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(false) ;
			
			if(DetallePedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetallePedidoCompraImpor(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detallepedidocompraimporConstantesFunciones.cargarid_productoDetallePedidoCompraImpor) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.detallepedidocompraimporConstantesFunciones.cargarid_centro_costoDetallePedidoCompraImpor) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	
	
	public void recargarComboTablaPedidoCompraImpor(List<PedidoCompraImpor> pedidocompraimporsForeignKey)throws Exception{
		TableColumn tableColumnPedidoCompraImpor=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR));
		TableCellEditor tableCellEditorPedidoCompraImpor =tableColumnPedidoCompraImpor.getCellEditor();

		PedidoCompraImporTableCell pedidocompraimporTableCellFk=(PedidoCompraImporTableCell)tableCellEditorPedidoCompraImpor;

		if(pedidocompraimporTableCellFk!=null) {
			pedidocompraimporTableCellFk.setpedidocompraimporsForeignKey(pedidocompraimporsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//pedidocompraimporTableCellFk.setRowActual(intSelectedRow);
			//pedidocompraimporTableCellFk.setpedidocompraimporsForeignKeyActual(pedidocompraimporsForeignKey);
		//}


		if(pedidocompraimporTableCellFk!=null) {
			pedidocompraimporTableCellFk.RecargarPedidoCompraImporsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaArancel(List<Arancel> arancelsForeignKey)throws Exception{
		TableColumn tableColumnArancel=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL));
		TableCellEditor tableCellEditorArancel =tableColumnArancel.getCellEditor();

		ArancelTableCell arancelTableCellFk=(ArancelTableCell)tableCellEditorArancel;

		if(arancelTableCellFk!=null) {
			arancelTableCellFk.setarancelsForeignKey(arancelsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//arancelTableCellFk.setRowActual(intSelectedRow);
			//arancelTableCellFk.setarancelsForeignKeyActual(arancelsForeignKey);
		//}


		if(arancelTableCellFk!=null) {
			arancelTableCellFk.RecargarArancelsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetallePedidoCompraImpor(false);
			
			//if(!this.isEsNuevoDetallePedidoCompraImpor) {								
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				
			}
			
			if(this.permiteMantenimiento(this.detallepedidocompraimpor)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetallePedidoCompraImpor=true;
					this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
					this.isEsNuevoDetallePedidoCompraImpor=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetallePedidoCompraImpor=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetallePedidoCompraImpor=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(false);
				
				this.habilitarDeshabilitarControlesDetallePedidoCompraImpor(false);
			
												
				
				if(DetallePedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetallePedidoCompraImpor();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,detallepedidocompraimporSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detallepedidocompraimporSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detallepedidocompraimpor.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				this.detallepedidocompraimpor.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				this.detallepedidocompraimpor.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detallepedidocompraimpor)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetallePedidoCompraImporModel) this.jTableDatosDetallePedidoCompraImpor.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetallePedidoCompraImpor=true;
				this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
				this.isEsNuevoDetallePedidoCompraImpor=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(false);
				
				this.habilitarDeshabilitarControlesDetallePedidoCompraImpor(false);
				
				
				
				if(DetallePedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetallePedidoCompraImpor();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetallePedidoCompraImpor.getRowCount()>=1) {
				jTableDatosDetallePedidoCompraImpor.removeRowSelectionInterval(0, jTableDatosDetallePedidoCompraImpor.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetallePedidoCompraImpor(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(false) ;
			
			this.isEsNuevoDetallePedidoCompraImpor=false;
			
			if(DetallePedidoCompraImporJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetallePedidoCompraImpor();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				
				//SI ES MANUAL
				if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetallePedidoCompraImpor();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetallePedidoCompraImpor--;			
			//DetallePedidoCompraImpor detallepedidocompraimporAux= new DetallePedidoCompraImpor();			
			//detallepedidocompraimporAux.setId(this.iIdNuevoDetallePedidoCompraImpor);
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetallePedidoCompraImpor();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
			
			this.detallepedidocompraimpor.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().add(this.detallepedidocompraimporAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detallepedidocompraimpors.add(this.detallepedidocompraimporAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
			
			this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(this.getIndiceNuevoDetallePedidoCompraImpor(), this.getIndiceNuevoDetallePedidoCompraImpor());
			
			int iLastRow =  this.jTableDatosDetallePedidoCompraImpor.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetallePedidoCompraImpor.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetallePedidoCompraImpor.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetallePedidoCompraImpor();
			}
			
			//this.abrirFrameTreeDetallePedidoCompraImpor();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle Pedido CompraS ?", "MANTENIMIENTO DE Detalle Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetallePedidoCompraImpor.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetallePedidoCompraImpor();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detallepedidocompraimporReturnGeneral=detallepedidocompraimporLogic.procesarImportacionDetallePedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detallepedidocompraimporParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetallePedidoCompraImporReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetallePedidoCompraImpor.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetallePedidoCompraImpor.setFileImportacion(this.jInternalFrameImportacionDetallePedidoCompraImpor.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetallePedidoCompraImpor.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetallePedidoCompraImpor.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		

		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetallePedidoCompraImporBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetallePedidoCompraImporBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PedidoCompraImpor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PedidoCompraImpor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PedidoCompraImpor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PedidoCompraImpor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Arancel_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Arancel_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Arancel_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Arancel_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadEntra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadEntra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadEntra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadEntra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadPendiente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadPendiente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadPendiente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadPendiente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PESO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_so_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_so_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_so_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_so_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_te_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_te_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_te_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_te_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeArancel_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeArancel_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeArancel_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeArancel_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadUnidadAuxiliar_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadUnidadAuxiliar_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadUnidadAuxiliar_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadUnidadAuxiliar_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecioUnidadAuxiliar_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecioUnidadAuxiliar_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecioUnidadAuxiliar_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecioUnidadAuxiliar_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOB:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_b_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_b_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_b_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_b_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bExw_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bExw_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bExw_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bExw_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR:
					sNombreCampoCategoria="id_pedido_compra_impor";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL:
					sNombreCampoCategoria="id_arancel";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO:
					sNombreCampoCategoria="cantidad_pedido";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA:
					sNombreCampoCategoria="cantidad_entra";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					sNombreCampoCategoria="cantidad_pendiente";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoria="porcentaje";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PESO:
					sNombreCampoCategoria="peso";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE:
					sNombreCampoCategoria="lote";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL:
					sNombreCampoCategoria="porcentaje_arancel";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR:
					sNombreCampoCategoria="cantidad_unidad_auxiliar";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR:
					sNombreCampoCategoria="precio_unidad_auxiliar";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOB:
					sNombreCampoCategoria="fob";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW:
					sNombreCampoCategoria="fob_exw";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR:
					sNombreCampoCategoriaValor="id_pedido_compra_impor";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL:
					sNombreCampoCategoriaValor="id_arancel";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO:
					sNombreCampoCategoriaValor="cantidad_pedido";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA:
					sNombreCampoCategoriaValor="cantidad_entra";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					sNombreCampoCategoriaValor="cantidad_pendiente";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoriaValor="porcentaje";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PESO:
					sNombreCampoCategoriaValor="peso";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE:
					sNombreCampoCategoriaValor="lote";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL:
					sNombreCampoCategoriaValor="porcentaje_arancel";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR:
					sNombreCampoCategoriaValor="cantidad_unidad_auxiliar";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR:
					sNombreCampoCategoriaValor="precio_unidad_auxiliar";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOB:
					sNombreCampoCategoriaValor="fob";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW:
					sNombreCampoCategoriaValor="fob_exw";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pedo Compra Impor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pedido_compra_impor");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Arancel",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_arancel");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantad Pedo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_pedido");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantad Entra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_entra");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantad Pendiente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_pendiente");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PESO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Peso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"peso");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lote");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje Arancel",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_arancel");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantad Unad Auxiliar",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_unidad_auxiliar");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Unad Auxiliar",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio_unidad_auxiliar");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOB:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fob",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fob");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fob Exw",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fob_exw");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallepedidocompraimpor";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetallePedidoCompraImpors");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getpedidocompraimpor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getarancel_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getcantidad_pedido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getcantidad_entra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getcantidad_pendiente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getporcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PESO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PESO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getpeso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getlote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getporcentaje_arancel());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getcantidad_unidad_auxiliar());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getprecio_unidad_auxiliar());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOB:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_FOB);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getfob());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getfob_exw());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetallePedidoCompraImpor detallepedidocompraimpor:detallepedidocompraimporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detallepedidocompraimpor.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetallePedidoCompraImpor(row);				
			//	iRow++;
			//}				
			
			//for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetallePedidoCompraImpor(detallepedidocompraimporAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetallePedidoCompraImpor();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetallePedidoCompraImpor();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
			
			//SI ES MANUAL
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetallePedidoCompraImpor();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetallePedidoCompraImpor() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetallePedidoCompraImpor.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetallePedidoCompraImpor.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetallePedidoCompraImpor.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetallePedidoCompraImpor.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetallePedidoCompraImpor.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetallePedidoCompraImpor.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetallePedidoCompraImpor.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetallePedidoCompraImpor(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetallePedidoCompraImpor(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetallePedidoCompraImpor(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetallePedidoCompraImpor(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetallePedidoCompraImpor(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetallePedidoCompraImpor(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetallePedidoCompraImpor() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetallePedidoCompraImpor();
		
		this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetallePedidoCompraImpor();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetallePedidoCompraImpor() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetallePedidoCompraImpor(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetallePedidoCompraImpor(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetallePedidoCompraImpor.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetallePedidoCompraImpor.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetallePedidoCompraImpor.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jCheckBoxPostAccionNuevoDetallePedidoCompraImpor.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jCheckBoxPostAccionSinCerrarDetallePedidoCompraImpor.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jCheckBoxPostAccionSinMensajeDetallePedidoCompraImpor.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetallePedidoCompraImpor.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetallePedidoCompraImpor.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetallePedidoCompraImpor.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jCheckBoxPostAccionNuevoDetallePedidoCompraImpor.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jCheckBoxPostAccionSinCerrarDetallePedidoCompraImpor.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jCheckBoxPostAccionSinMensajeDetallePedidoCompraImpor.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetallePedidoCompraImpor.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetallePedidoCompraImpor.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetallePedidoCompraImpor.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetallePedidoCompraImpor(Boolean esInicializar) throws Exception {
		try	{	
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetallePedidoCompraImpor(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetallePedidoCompraImpor() throws Exception {
		try	{
			if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetallePedidoCompraImpor();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetallePedidoCompraImpor() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetallePedidoCompraImpor() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetallePedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetallePedidoCompraImpor.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetallePedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetallePedidoCompraImpor.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetallePedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetallePedidoCompraImpor.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetallePedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetallePedidoCompraImpor.addItem(reporte);
			}
			
			
			if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetallePedidoCompraImpor.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetallePedidoCompraImpor.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetallePedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetallePedidoCompraImpor.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetallePedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetallePedidoCompraImpor.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetallePedidoCompraImpor.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetallePedidoCompraImpor.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetallePedidoCompraImpor.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetallePedidoCompraImpor();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetallePedidoCompraImpor() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetallePedidoCompraImporConstantesFunciones.getTiposSeleccionarDetallePedidoCompraImpor(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetallePedidoCompraImporConstantesFunciones.getTiposSeleccionarDetallePedidoCompraImpor(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetallePedidoCompraImporConstantesFunciones.getTiposSeleccionarDetallePedidoCompraImpor(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetallePedidoCompraImpor()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.getSelectedItem()!=null){this.id_arancelFK_IdArancel=((Arancel)this.jComboBoxid_arancelFK_IdArancelDetallePedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoDetallePedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.getSelectedItem()!=null){this.id_pedido_compra_imporFK_IdPedidoCompraImpor=((PedidoCompraImpor)this.jComboBoxid_pedido_compra_imporFK_IdPedidoCompraImporDetallePedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetallePedidoCompraImpor.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetallePedidoCompraImpor(Boolean esInicializar) throws Exception {				
		if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetallePedidoCompraImpor();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetallePedidoCompraImpor() throws Exception {
		this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetallePedidoCompraImpor() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetallePedidoCompraImporOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImporOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	public void inicializarActualizarBindingTablaTotalesDetallePedidoCompraImpor() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetallePedidoCompraImpor(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detallepedidocompraimpors.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetallePedidoCompraImpor.setModel(new DetallePedidoCompraImporModel(this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetallePedidoCompraImpor.setModel(new DetallePedidoCompraImporModel(this.detallepedidocompraimpors,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetallePedidoCompraImpor!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetallePedidoCompraImpor.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
			}
							
			
			
			if(this.jInternalFrameOrderByDetallePedidoCompraImpor!=null && this.jInternalFrameOrderByDetallePedidoCompraImpor.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetallePedidoCompraImpor();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,detallepedidocompraimporConstantesFunciones.resaltarSeleccionarDetallePedidoCompraImpor,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetallePedidoCompraImporConstantesFunciones.SCLASSWEBTITULO,detallepedidocompraimporConstantesFunciones.resaltarSeleccionarDetallePedidoCompraImpor,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_ID));

		if(this.detallepedidocompraimporConstantesFunciones.mostraridDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltaridDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activaridDetallePedidoCompraImpor,iSizeTabla,this,true,"idDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltaridDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activaridDetallePedidoCompraImpor,this,true,"idDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_pedido_compra_imporDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PedidoCompraImporTableCell(this.pedidocompraimporsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_pedido_compra_imporDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_pedido_compra_imporDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new PedidoCompraImporTableCell(this.pedidocompraimporsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_pedido_compra_imporDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_pedido_compra_imporDetallePedidoCompraImpor,true,"id_pedido_compra_imporDetallePedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_empresaDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_empresaDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_empresaDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_empresaDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_empresaDetallePedidoCompraImpor,false,"id_empresaDetallePedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_sucursalDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_sucursalDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_sucursalDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_sucursalDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_sucursalDetallePedidoCompraImpor,false,"id_sucursalDetallePedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_bodegaDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_bodegaDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_bodegaDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_bodegaDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_bodegaDetallePedidoCompraImpor,true,"id_bodegaDetallePedidoCompraImpor","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_productoDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_productoDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_productoDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_productoDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_productoDetallePedidoCompraImpor,true,"id_productoDetallePedidoCompraImpor","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_unidadDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_unidadDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_unidadDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_unidadDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_unidadDetallePedidoCompraImpor,true,"id_unidadDetallePedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_ejercicioDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_ejercicioDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_ejercicioDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_ejercicioDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_ejercicioDetallePedidoCompraImpor,false,"id_ejercicioDetallePedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_periodoDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_periodoDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_periodoDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_periodoDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_periodoDetallePedidoCompraImpor,false,"id_periodoDetallePedidoCompraImpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_arancelDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ArancelTableCell(this.arancelsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_arancelDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_arancelDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new ArancelTableCell(this.arancelsForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_arancelDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_arancelDetallePedidoCompraImpor,true,"id_arancelDetallePedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_pedidoDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pedidoDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_pedidoDetallePedidoCompraImpor,iSizeTabla,this,true,"cantidad_pedidoDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pedidoDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_pedidoDetallePedidoCompraImpor,this,true,"cantidad_pedidoDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_entraDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_entraDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_entraDetallePedidoCompraImpor,iSizeTabla,this,true,"cantidad_entraDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_entraDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_entraDetallePedidoCompraImpor,this,true,"cantidad_entraDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_pendienteDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pendienteDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_pendienteDetallePedidoCompraImpor,iSizeTabla,this,true,"cantidad_pendienteDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pendienteDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_pendienteDetallePedidoCompraImpor,this,true,"cantidad_pendienteDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarporcentajeDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarporcentajeDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarporcentajeDetallePedidoCompraImpor,iSizeTabla,this,true,"porcentajeDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarporcentajeDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarporcentajeDetallePedidoCompraImpor,this,true,"porcentajeDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_PESO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarpesoDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_PESO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarpesoDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarpesoDetallePedidoCompraImpor,iSizeTabla,this,true,"pesoDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarpesoDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarpesoDetallePedidoCompraImpor,this,true,"pesoDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarprecioDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarprecioDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarprecioDetallePedidoCompraImpor,iSizeTabla,this,true,"precioDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarprecioDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarprecioDetallePedidoCompraImpor,this,true,"precioDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarloteDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarloteDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarloteDetallePedidoCompraImpor,iSizeTabla,this,true,"loteDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarloteDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarloteDetallePedidoCompraImpor,this,true,"loteDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarporcentaje_arancelDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarporcentaje_arancelDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarporcentaje_arancelDetallePedidoCompraImpor,iSizeTabla,this,true,"porcentaje_arancelDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarporcentaje_arancelDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarporcentaje_arancelDetallePedidoCompraImpor,this,true,"porcentaje_arancelDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_unidad_auxiliarDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_unidad_auxiliarDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_unidad_auxiliarDetallePedidoCompraImpor,iSizeTabla,this,true,"cantidad_unidad_auxiliarDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_unidad_auxiliarDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarcantidad_unidad_auxiliarDetallePedidoCompraImpor,this,true,"cantidad_unidad_auxiliarDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarprecio_unidad_auxiliarDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarprecio_unidad_auxiliarDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarprecio_unidad_auxiliarDetallePedidoCompraImpor,iSizeTabla,this,true,"precio_unidad_auxiliarDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarprecio_unidad_auxiliarDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarprecio_unidad_auxiliarDetallePedidoCompraImpor,this,true,"precio_unidad_auxiliarDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_FOB));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarfobDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_FOB,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarfobDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarfobDetallePedidoCompraImpor,iSizeTabla,this,true,"fobDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarfobDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarfobDetallePedidoCompraImpor,this,true,"fobDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarfob_exwDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarfob_exwDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarfob_exwDetallePedidoCompraImpor,iSizeTabla,this,true,"fob_exwDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltarfob_exwDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activarfob_exwDetallePedidoCompraImpor,this,true,"fob_exwDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL));

		if(this.detallepedidocompraimporConstantesFunciones.mostrartotalDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detallepedidocompraimporConstantesFunciones.resaltartotalDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activartotalDetallePedidoCompraImpor,iSizeTabla,this,true,"totalDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltartotalDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activartotalDetallePedidoCompraImpor,this,true,"totalDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detallepedidocompraimporConstantesFunciones.mostrardescripcionDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detallepedidocompraimporConstantesFunciones.resaltardescripcionDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activardescripcionDetallePedidoCompraImpor,iSizeTabla,this,true,"descripcionDetallePedidoCompraImpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detallepedidocompraimporConstantesFunciones.resaltardescripcionDetallePedidoCompraImpor,this.detallepedidocompraimporConstantesFunciones.activardescripcionDetallePedidoCompraImpor,this,true,"descripcionDetallePedidoCompraImpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_centro_costoDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_centro_costoDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_centro_costoDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_centro_costoDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_centro_costoDetallePedidoCompraImpor,true,"id_centro_costoDetallePedidoCompraImpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_anioDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_anioDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_anioDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_anioDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_anioDetallePedidoCompraImpor,true,"id_anioDetallePedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES));

		if(this.detallepedidocompraimporConstantesFunciones.mostrarid_mesDetallePedidoCompraImpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_mesDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_mesDetallePedidoCompraImpor,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detallepedidocompraimporConstantesFunciones.resaltarid_mesDetallePedidoCompraImpor,this,this.detallepedidocompraimporConstantesFunciones.activarid_mesDetallePedidoCompraImpor,true,"id_mesDetallePedidoCompraImpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetallePedidoCompraImporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetallePedidoCompraImpor.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetallePedidoCompraImpor.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetallePedidoCompraImpor.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetallePedidoCompraImpor.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetallePedidoCompraImpor.moveColumn(this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetallePedidoCompraImpor.moveColumn(this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetallePedidoCompraImpor.moveColumn(this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetallePedidoCompraImpor.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetallePedidoCompraImpor.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetallePedidoCompraImpor,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetallePedidoCompraImpor.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetallePedidoCompraImpor.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetallePedidoCompraImpor.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detallepedidocompraimporLogic.getDetallePedidoCompraImpors().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detallepedidocompraimpors.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetallePedidoCompraImpor.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetallePedidoCompraImpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetallePedidoCompraImpor();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetallePedidoCompraImpor=false;
					
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetallePedidoCompraImpor.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detallepedidocompraimpor.getsType().equals("DUPLICADO")
				   || this.detallepedidocompraimpor.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetallePedidoCompraImpor=true;
				
				} else {
					this.isEsNuevoDetallePedidoCompraImpor=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					if(this.detallepedidocompraimpor.getId()>=0 && !this.detallepedidocompraimpor.getIsNew()) {						
						this.isEsNuevoDetallePedidoCompraImpor=false;
						
					} else {
						this.isEsNuevoDetallePedidoCompraImpor=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetallePedidoCompraImpor(esRelaciones);						
				
				this.seleccionarDetallePedidoCompraImpor(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detallepedidocompraimpor.getId()<0) {
					this.isEsNuevoDetallePedidoCompraImpor=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetallePedidoCompraImpor(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetallePedidoCompraImpor(evt,rowIndex);
				}	
				
				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetallePedidoCompraImpor: " + this.dDif); 
					}
				}								
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetallePedidoCompraImpor(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detallepedidocompraimpor)) {
					if(this.detallepedidocompraimpor.getId()>0) {
						this.detallepedidocompraimpor.setIsDeleted(true);
						
						this.detallepedidocompraimporsEliminados.add(this.detallepedidocompraimpor);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().remove(this.detallepedidocompraimpor);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpors.remove(this.detallepedidocompraimpor);				
					}
					
					
					((DetallePedidoCompraImporModel) this.jTableDatosDetallePedidoCompraImpor.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetallePedidoCompraImpor(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetallePedidoCompraImpor) {
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetallePedidoCompraImpor.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}
				
				//ARCHITECTURE
				try {
					

					//PedidoCompraImpor
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_pedido_compra_imporDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_pedido_compra_imporDetallePedidoCompraImpor) {
						//this.cargarCombosPedidoCompraImporsForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_pedido_compra_impor());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.pedidocompraimporsForeignKey=new ArrayList<PedidoCompraImpor>();

						if(detallepedidocompraimpor.getPedidoCompraImpor()!=null) {
							this.pedidocompraimporsForeignKey.add(detallepedidocompraimpor.getPedidoCompraImpor());
						}

						this.addItemDefectoCombosForeignKeyPedidoCompraImpor();
						this.cargarCombosFramePedidoCompraImporsForeignKey("Todos");
					}
					this.setActualPedidoCompraImporForeignKey(this.detallepedidocompraimpor.getid_pedido_compra_impor(),false,"Formulario");

					//Empresa
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_empresaDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_empresaDetallePedidoCompraImpor) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_empresa());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detallepedidocompraimpor.getEmpresa()!=null) {
							this.empresasForeignKey.add(detallepedidocompraimpor.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detallepedidocompraimpor.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_sucursalDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_sucursalDetallePedidoCompraImpor) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_sucursal());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detallepedidocompraimpor.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detallepedidocompraimpor.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detallepedidocompraimpor.getid_sucursal(),false,"Formulario");

					//Bodega
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_bodegaDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_bodegaDetallePedidoCompraImpor) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_bodega());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detallepedidocompraimpor.getBodega()!=null) {
							this.bodegasForeignKey.add(detallepedidocompraimpor.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detallepedidocompraimpor.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_productoDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_productoDetallePedidoCompraImpor) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_producto());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detallepedidocompraimpor.getProducto()!=null) {
							this.productosForeignKey.add(detallepedidocompraimpor.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detallepedidocompraimpor.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_unidadDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_unidadDetallePedidoCompraImpor) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_unidad());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detallepedidocompraimpor.getUnidad()!=null) {
							this.unidadsForeignKey.add(detallepedidocompraimpor.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detallepedidocompraimpor.getid_unidad(),false,"Formulario");

					//Ejercicio
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_ejercicioDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_ejercicioDetallePedidoCompraImpor) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_ejercicio());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detallepedidocompraimpor.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detallepedidocompraimpor.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detallepedidocompraimpor.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_periodoDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_periodoDetallePedidoCompraImpor) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_periodo());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detallepedidocompraimpor.getPeriodo()!=null) {
							this.periodosForeignKey.add(detallepedidocompraimpor.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detallepedidocompraimpor.getid_periodo(),false,"Formulario");

					//Arancel
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_arancelDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_arancelDetallePedidoCompraImpor) {
						//this.cargarCombosArancelsForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_arancel());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.arancelsForeignKey=new ArrayList<Arancel>();

						if(detallepedidocompraimpor.getArancel()!=null) {
							this.arancelsForeignKey.add(detallepedidocompraimpor.getArancel());
						}

						this.addItemDefectoCombosForeignKeyArancel();
						this.cargarCombosFrameArancelsForeignKey("Todos");
					}
					this.setActualArancelForeignKey(this.detallepedidocompraimpor.getid_arancel(),false,"Formulario");

					//CentroCosto
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_centro_costoDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_centro_costoDetallePedidoCompraImpor) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_centro_costo());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(detallepedidocompraimpor.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(detallepedidocompraimpor.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.detallepedidocompraimpor.getid_centro_costo(),false,"Formulario");

					//Anio
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_anioDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_anioDetallePedidoCompraImpor) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_anio());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detallepedidocompraimpor.getAnio()!=null) {
							this.aniosForeignKey.add(detallepedidocompraimpor.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detallepedidocompraimpor.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detallepedidocompraimporConstantesFunciones.cargarid_mesDetallePedidoCompraImpor || this.detallepedidocompraimporConstantesFunciones.event_dependid_mesDetallePedidoCompraImpor) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detallepedidocompraimpor.getid_mes());
									//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detallepedidocompraimpor.getMes()!=null) {
							this.messForeignKey.add(detallepedidocompraimpor.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detallepedidocompraimpor.getid_mes(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetallePedidoCompraImpor("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetallePedidoCompraImpor(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetallePedidoCompraImpor(detallepedidocompraimpor,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetallePedidoCompraImpor(detallepedidocompraimpor);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetallePedidoCompraImpor(detallepedidocompraimpor,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetallePedidoCompraImpor(detallepedidocompraimpor);
	}
	
	public void setVariablesObjetoActualToFormularioDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getId().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_pedido().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_entra().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_pendiente().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getporcentaje().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getpeso().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getprecio().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getlote());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getporcentaje_arancel().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_unidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getprecio_unidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getfob().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getfob_exw().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.setText(detallepedidocompraimpor.gettotal().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetallePedidoCompraImpor detallepedidocompraimporLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detallepedidocompraimporLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetallePedidoCompraImpor detallepedidocompraimporLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detallepedidocompraimporLocal=this.detallepedidocompraimpor;
			} else {
				detallepedidocompraimporLocal=this.detallepedidocompraimporAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detallepedidocompraimporLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetallePedidoCompraImpor(detallepedidocompraimporLocal,true);
					
					if(detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detallepedidocompraimporLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detallepedidocompraimporLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(detallepedidocompraimpor,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(detallepedidocompraimpor);
	}
	
	public void setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(detallepedidocompraimpor,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.getText()==null || this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.getText()=="" || this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.getText()=="Id") {
				this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.setText("0");
			}

			if(conColumnasBase) {detallepedidocompraimpor.setId(Long.parseLong(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelIdDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setcantidad_pedido(Integer.parseInt(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_pedidoDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setcantidad_entra(Integer.parseInt(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_entraDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setcantidad_pendiente(Integer.parseInt(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_pendienteDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setporcentaje(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelporcentajeDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setpeso(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_PESO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelpesoDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelprecioDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setlote(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelloteDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setporcentaje_arancel(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelporcentaje_arancelDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setcantidad_unidad_auxiliar(Integer.parseInt(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelcantidad_unidad_auxiliarDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setprecio_unidad_auxiliar(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelprecio_unidad_auxiliarDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setfob(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_FOB+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelfobDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setfob_exw(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelfob_exwDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.settotal(Double.parseDouble(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabeltotalDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detallepedidocompraimpor.setdescripcion(this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabeldescripcionDetallePedidoCompraImpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimporBean,DetallePedidoCompraImpor detallepedidocompraimpor,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimporOrigen,DetallePedidoCompraImpor detallepedidocompraimpor,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getId()!=null && !detallepedidocompraimporOrigen.getId().equals(0L))) {detallepedidocompraimpor.setId(detallepedidocompraimporOrigen.getId());}}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getcantidad_pedido()!=null && !detallepedidocompraimporOrigen.getcantidad_pedido().equals(0))) {detallepedidocompraimpor.setcantidad_pedido(detallepedidocompraimporOrigen.getcantidad_pedido());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getcantidad_entra()!=null && !detallepedidocompraimporOrigen.getcantidad_entra().equals(0))) {detallepedidocompraimpor.setcantidad_entra(detallepedidocompraimporOrigen.getcantidad_entra());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getcantidad_pendiente()!=null && !detallepedidocompraimporOrigen.getcantidad_pendiente().equals(0))) {detallepedidocompraimpor.setcantidad_pendiente(detallepedidocompraimporOrigen.getcantidad_pendiente());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getporcentaje()!=null && !detallepedidocompraimporOrigen.getporcentaje().equals(0.0))) {detallepedidocompraimpor.setporcentaje(detallepedidocompraimporOrigen.getporcentaje());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getpeso()!=null && !detallepedidocompraimporOrigen.getpeso().equals(0.0))) {detallepedidocompraimpor.setpeso(detallepedidocompraimporOrigen.getpeso());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getprecio()!=null && !detallepedidocompraimporOrigen.getprecio().equals(0.0))) {detallepedidocompraimpor.setprecio(detallepedidocompraimporOrigen.getprecio());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getlote()!=null && !detallepedidocompraimporOrigen.getlote().equals(""))) {detallepedidocompraimpor.setlote(detallepedidocompraimporOrigen.getlote());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getporcentaje_arancel()!=null && !detallepedidocompraimporOrigen.getporcentaje_arancel().equals(0.0))) {detallepedidocompraimpor.setporcentaje_arancel(detallepedidocompraimporOrigen.getporcentaje_arancel());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getcantidad_unidad_auxiliar()!=null && !detallepedidocompraimporOrigen.getcantidad_unidad_auxiliar().equals(0))) {detallepedidocompraimpor.setcantidad_unidad_auxiliar(detallepedidocompraimporOrigen.getcantidad_unidad_auxiliar());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getprecio_unidad_auxiliar()!=null && !detallepedidocompraimporOrigen.getprecio_unidad_auxiliar().equals(0.0))) {detallepedidocompraimpor.setprecio_unidad_auxiliar(detallepedidocompraimporOrigen.getprecio_unidad_auxiliar());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getfob()!=null && !detallepedidocompraimporOrigen.getfob().equals(0.0))) {detallepedidocompraimpor.setfob(detallepedidocompraimporOrigen.getfob());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getfob_exw()!=null && !detallepedidocompraimporOrigen.getfob_exw().equals(0.0))) {detallepedidocompraimpor.setfob_exw(detallepedidocompraimporOrigen.getfob_exw());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.gettotal()!=null && !detallepedidocompraimporOrigen.gettotal().equals(0.0))) {detallepedidocompraimpor.settotal(detallepedidocompraimporOrigen.gettotal());}
			if(conDefault || (!conDefault && detallepedidocompraimporOrigen.getdescripcion()!=null && !detallepedidocompraimporOrigen.getdescripcion().equals(""))) {detallepedidocompraimpor.setdescripcion(detallepedidocompraimporOrigen.getdescripcion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getId().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_pedido().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_entra().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_pendiente().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getporcentaje().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getpeso().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getprecio().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getlote());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getporcentaje_arancel().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getcantidad_unidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getprecio_unidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getfob().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getfob_exw().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.setText(detallepedidocompraimpor.gettotal().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.setText(detallepedidocompraimpor.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetallePedidoCompraImpor(DetallePedidoCompraImporBean detallepedidocompraimporBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getId().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getcantidad_pedido().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getcantidad_entra().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getcantidad_pendiente().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getporcentaje().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getpeso().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getprecio().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getlote());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getporcentaje_arancel().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getcantidad_unidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getprecio_unidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getfob().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getfob_exw().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.gettotal().toString());
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.setText(detallepedidocompraimporBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetallePedidoCompraImpor(DetallePedidoCompraImporParameterReturnGeneral detallepedidocompraimporReturnGeneral,DetallePedidoCompraImporBean detallepedidocompraimporBean,Boolean conDefault) throws Exception { 
		try {
			DetallePedidoCompraImpor detallepedidocompraimporLocal=new DetallePedidoCompraImpor();
			
			detallepedidocompraimporLocal=detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detallepedidocompraimporLocal.getId()!=null && !detallepedidocompraimporLocal.getId().equals(0L))) {detallepedidocompraimporBean.setId(detallepedidocompraimporLocal.getId());}}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getcantidad_pedido()!=null && !detallepedidocompraimporLocal.getcantidad_pedido().equals(0))) {detallepedidocompraimporBean.setcantidad_pedido(detallepedidocompraimporLocal.getcantidad_pedido());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getcantidad_entra()!=null && !detallepedidocompraimporLocal.getcantidad_entra().equals(0))) {detallepedidocompraimporBean.setcantidad_entra(detallepedidocompraimporLocal.getcantidad_entra());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getcantidad_pendiente()!=null && !detallepedidocompraimporLocal.getcantidad_pendiente().equals(0))) {detallepedidocompraimporBean.setcantidad_pendiente(detallepedidocompraimporLocal.getcantidad_pendiente());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getporcentaje()!=null && !detallepedidocompraimporLocal.getporcentaje().equals(0.0))) {detallepedidocompraimporBean.setporcentaje(detallepedidocompraimporLocal.getporcentaje());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getpeso()!=null && !detallepedidocompraimporLocal.getpeso().equals(0.0))) {detallepedidocompraimporBean.setpeso(detallepedidocompraimporLocal.getpeso());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getprecio()!=null && !detallepedidocompraimporLocal.getprecio().equals(0.0))) {detallepedidocompraimporBean.setprecio(detallepedidocompraimporLocal.getprecio());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getlote()!=null && !detallepedidocompraimporLocal.getlote().equals(""))) {detallepedidocompraimporBean.setlote(detallepedidocompraimporLocal.getlote());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getporcentaje_arancel()!=null && !detallepedidocompraimporLocal.getporcentaje_arancel().equals(0.0))) {detallepedidocompraimporBean.setporcentaje_arancel(detallepedidocompraimporLocal.getporcentaje_arancel());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getcantidad_unidad_auxiliar()!=null && !detallepedidocompraimporLocal.getcantidad_unidad_auxiliar().equals(0))) {detallepedidocompraimporBean.setcantidad_unidad_auxiliar(detallepedidocompraimporLocal.getcantidad_unidad_auxiliar());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getprecio_unidad_auxiliar()!=null && !detallepedidocompraimporLocal.getprecio_unidad_auxiliar().equals(0.0))) {detallepedidocompraimporBean.setprecio_unidad_auxiliar(detallepedidocompraimporLocal.getprecio_unidad_auxiliar());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getfob()!=null && !detallepedidocompraimporLocal.getfob().equals(0.0))) {detallepedidocompraimporBean.setfob(detallepedidocompraimporLocal.getfob());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getfob_exw()!=null && !detallepedidocompraimporLocal.getfob_exw().equals(0.0))) {detallepedidocompraimporBean.setfob_exw(detallepedidocompraimporLocal.getfob_exw());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.gettotal()!=null && !detallepedidocompraimporLocal.gettotal().equals(0.0))) {detallepedidocompraimporBean.settotal(detallepedidocompraimporLocal.gettotal());}
			if(conDefault || (!conDefault && detallepedidocompraimporLocal.getdescripcion()!=null && !detallepedidocompraimporLocal.getdescripcion().equals(""))) {detallepedidocompraimporBean.setdescripcion(detallepedidocompraimporLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetallePedidoCompraImporGenerico(Long idDetallePedidoCompraImporSeleccionado,JComboBox jComboBoxDetallePedidoCompraImpor,List<DetallePedidoCompraImpor> detallepedidocompraimporsLocal)throws Exception {
		try {
			DetallePedidoCompraImpor  detallepedidocompraimporTemp=null;

			for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporsLocal) {
				if(detallepedidocompraimporAux.getId()!=null && detallepedidocompraimporAux.getId().equals(idDetallePedidoCompraImporSeleccionado)) {
					detallepedidocompraimporTemp=detallepedidocompraimporAux;
					break;
				}
			}

			jComboBoxDetallePedidoCompraImpor.setSelectedItem(detallepedidocompraimporTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetallePedidoCompraImporGenerico(JComboBox jComboBoxDetallePedidoCompraImpor,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetallePedidoCompraImpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetallePedidoCompraImpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetallePedidoCompraImpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetallePedidoCompraImpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetallePedidoCompraImpor.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetallePedidoCompraImpor.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetallePedidoCompraImpor.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetallePedidoCompraImpor.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetallePedidoCompraImpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetallePedidoCompraImpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallepedidocompraimpor=(DetallePedidoCompraImpor) detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallepedidocompraimpor =(DetallePedidoCompraImpor) detallepedidocompraimpors.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("PedidoCompraImpor")) {
			//sDescripcion=this.getActualPedidoCompraImporForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getpedidocompraimpor_descripcion();
			} else {
				//sDescripcion=this.getActualPedidoCompraImporForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getpedidocompraimpor_descripcion();
			}
		}

		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detallepedidocompraimpor.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detallepedidocompraimpor.getunidad_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Arancel")) {
			//sDescripcion=this.getActualArancelForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getarancel_descripcion();
			} else {
				//sDescripcion=this.getActualArancelForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getarancel_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detallepedidocompraimpor.getIsNew() && !detallepedidocompraimpor.getIsChanged() && !detallepedidocompraimpor.getIsDeleted()) {
				sDescripcion=detallepedidocompraimpor.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detallepedidocompraimpor.getmes_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetallePedidoCompraImpor detallepedidocompraimporRow=new DetallePedidoCompraImpor();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallepedidocompraimporRow=(DetallePedidoCompraImpor) detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detallepedidocompraimporRow=(DetallePedidoCompraImpor) detallepedidocompraimpors.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor));			
			this.jButtonDuplicarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaDuplicarDetallePedidoCompraImpor && this.isPermisoDuplicarDetallePedidoCompraImpor));			
			this.jButtonCopiarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaCopiarDetallePedidoCompraImpor && this.isPermisoCopiarDetallePedidoCompraImpor));
			this.jButtonVerFormDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaVerFormDetallePedidoCompraImpor && this.isPermisoVerFormDetallePedidoCompraImpor));
			
			this.jButtonAbrirOrderByDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor && this.isPermisoOrdenDetallePedidoCompraImpor));			
			
			this.jButtonNuevoRelacionesDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor));			
			this.jButtonNuevoGuardarCambiosDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaModificarDetallePedidoCompraImpor && this.isPermisoActualizarDetallePedidoCompraImpor));	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor && this.isPermisoActualizarDetallePedidoCompraImpor));	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor && this.isPermisoEliminarDetallePedidoCompraImpor));
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarDetallePedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor);							
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor));						
			this.jButtonDuplicarToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaDuplicarDetallePedidoCompraImpor && this.isPermisoDuplicarDetallePedidoCompraImpor));						
			this.jButtonCopiarToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaCopiarDetallePedidoCompraImpor && this.isPermisoCopiarDetallePedidoCompraImpor));			
			this.jButtonVerFormToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaVerFormDetallePedidoCompraImpor && this.isPermisoVerFormDetallePedidoCompraImpor));			
			this.jButtonAbrirOrderByToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor && this.isPermisoOrdenDetallePedidoCompraImpor));
			this.jButtonNuevoRelacionesToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor));			
			this.jButtonNuevoGuardarCambiosToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));			
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaModificarDetallePedidoCompraImpor && this.isPermisoActualizarDetallePedidoCompraImpor));	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor  && this.isPermisoActualizarDetallePedidoCompraImpor));	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor && this.isPermisoEliminarDetallePedidoCompraImpor));
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarToolBarDetallePedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor);				
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor));			
			this.jMenuItemDuplicarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaDuplicarDetallePedidoCompraImpor && this.isPermisoDuplicarDetallePedidoCompraImpor));			
			this.jMenuItemCopiarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaCopiarDetallePedidoCompraImpor && this.isPermisoCopiarDetallePedidoCompraImpor));			
			this.jMenuItemVerFormDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaVerFormDetallePedidoCompraImpor && this.isPermisoVerFormDetallePedidoCompraImpor));			
			this.jMenuItemAbrirOrderByDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor && this.isPermisoOrdenDetallePedidoCompraImpor));			
			//this.jMenuItemMostrarOcultarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor && this.isPermisoOrdenDetallePedidoCompraImpor));
			this.jMenuItemDetalleAbrirOrderByDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor && this.isPermisoOrdenDetallePedidoCompraImpor));			
			//this.jMenuItemDetalleMostrarOcultarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor && this.isPermisoOrdenDetallePedidoCompraImpor));			
			this.jMenuItemNuevoRelacionesDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor));			
			this.jMenuItemNuevoGuardarCambiosDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor && this.isPermisoNuevoDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));									
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemModificarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaModificarDetallePedidoCompraImpor && this.isPermisoActualizarDetallePedidoCompraImpor));	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemActualizarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor && this.isPermisoActualizarDetallePedidoCompraImpor));	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemEliminarDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor && this.isPermisoEliminarDetallePedidoCompraImpor));
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemCancelarDetallePedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor);				
			}
			
			this.jMenuItemGuardarCambiosDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));						
			this.jMenuItemGuardarCambiosTablaDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=this.jButtonNuevoDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaDuplicarDetallePedidoCompraImpor=this.jButtonDuplicarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCopiarDetallePedidoCompraImpor=this.jButtonCopiarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaVerFormDetallePedidoCompraImpor=this.jButtonVerFormDetallePedidoCompraImpor.isVisible();
			
			this.isVisibilidadCeldaOrdenDetallePedidoCompraImpor=this.jButtonAbrirOrderByDetallePedidoCompraImpor.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=this.jButtonNuevoRelacionesDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=this.jButtonModificarDetallePedidoCompraImpor.isVisible();
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=this.jButtonGuardarCambiosTablaDetallePedidoCompraImpor.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=this.jButtonNuevoToolBarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=this.jButtonNuevoRelacionesToolBarDetallePedidoCompraImpor.isVisible();
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarToolBarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarToolBarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarToolBarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarToolBarDetallePedidoCompraImpor.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=this.jButtonGuardarCambiosToolBarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=this.jButtonGuardarCambiosTablaToolBarDetallePedidoCompraImpor.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=this.jMenuItemNuevoDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=this.jMenuItemNuevoRelacionesDetallePedidoCompraImpor.isVisible();
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemModificarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemActualizarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemEliminarDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemCancelarDetallePedidoCompraImpor.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=this.jMenuItemGuardarCambiosDetallePedidoCompraImpor.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=this.jMenuItemGuardarCambiosTablaDetallePedidoCompraImpor.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetallePedidoCompraImpor(Boolean esInicializar) {
		if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
				//if(this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetallePedidoCompraImpor();
			}
			
			this.inicializarActualizarBindingBotonesManualDetallePedidoCompraImpor(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetallePedidoCompraImpor() {
		this.jButtonNuevoDetallePedidoCompraImpor.setVisible(this.isPermisoNuevoDetallePedidoCompraImpor);			
		this.jButtonDuplicarDetallePedidoCompraImpor.setVisible(this.isPermisoDuplicarDetallePedidoCompraImpor);			
		this.jButtonCopiarDetallePedidoCompraImpor.setVisible(this.isPermisoCopiarDetallePedidoCompraImpor);			
		this.jButtonVerFormDetallePedidoCompraImpor.setVisible(this.isPermisoVerFormDetallePedidoCompraImpor);			
		
		this.jButtonAbrirOrderByDetallePedidoCompraImpor.setVisible(this.isPermisoOrdenDetallePedidoCompraImpor);					
		
		this.jButtonNuevoRelacionesDetallePedidoCompraImpor.setVisible(this.isPermisoNuevoDetallePedidoCompraImpor);			
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarDetallePedidoCompraImpor.setVisible(this.isPermisoActualizarDetallePedidoCompraImpor);	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarDetallePedidoCompraImpor.setVisible(this.isPermisoActualizarDetallePedidoCompraImpor);	
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarDetallePedidoCompraImpor.setVisible(this.isPermisoEliminarDetallePedidoCompraImpor);
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarDetallePedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor);						
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.setVisible(this.isPermisoGuardarCambiosDetallePedidoCompraImpor);							
		}
		
		this.jButtonGuardarCambiosTablaDetallePedidoCompraImpor.setVisible(this.isPermisoActualizarDetallePedidoCompraImpor);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetallePedidoCompraImpor() {
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarDetallePedidoCompraImpor.setVisible(this.isPermisoActualizarDetallePedidoCompraImpor);	
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarDetallePedidoCompraImpor.setVisible(this.isPermisoActualizarDetallePedidoCompraImpor);	
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarDetallePedidoCompraImpor.setVisible(this.isPermisoEliminarDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarDetallePedidoCompraImpor.setVisible(this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor);							
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.setVisible((this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor && this.isPermisoGuardarCambiosDetallePedidoCompraImpor));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetallePedidoCompraImpor() {
		if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetallePedidoCompraImpor();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetallePedidoCompraImpor() {
	}
	
	public void jTableDatosDetallePedidoCompraImporListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetallePedidoCompraImpor(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detallepedidocompraimpor.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_pedido_compra_imporDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopedidocompraimpor=true;

			idTienePermisopedidocompraimpor=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(PedidoCompraImporConstantesFunciones.CLASSNAME);

			if(idTienePermisopedidocompraimpor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.pedidocompraimporBeanSwingJInternalFrame=new PedidoCompraImporBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.pedidocompraimporBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.pedidocompraimporBeanSwingJInternalFrame.getPedidoCompraImporLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_pedido_compra_impor()!=null) {
					this.pedidocompraimporBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.pedidocompraimporBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_pedido_compra_impor());
					this.pedidocompraimporBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.pedidocompraimporBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.pedidocompraimporBeanSwingJInternalFrame.inicializarActualizarBindingTablaPedidoCompraImpor();
				}

				JInternalFrameBase jinternalFrame =this.pedidocompraimporBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderpedidocompraimpor=(TitledBorder)this.pedidocompraimporBeanSwingJInternalFrame.jScrollPanelDatosPedidoCompraImpor.getBorder();

				titledBorderpedidocompraimpor.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Pedido Compra");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_pedido_compra_imporDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_pedido_compra_impor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pedido_compra_impor = "+this.detallepedidocompraimpor.getid_pedido_compra_impor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detallepedidocompraimpor.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detallepedidocompraimpor.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detallepedidocompraimpor.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetallePedidoCompraImporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetallePedidoCompraImpor=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detallepedidocompraimpor.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detallepedidocompraimpor.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detallepedidocompraimpor.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detallepedidocompraimpor.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_arancelDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoarancel=true;

			idTienePermisoarancel=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(ArancelConstantesFunciones.CLASSNAME);

			if(idTienePermisoarancel) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.arancelBeanSwingJInternalFrame=new ArancelBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.arancelBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.arancelBeanSwingJInternalFrame.getArancelLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_arancel()!=null) {
					this.arancelBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.arancelBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_arancel());
					this.arancelBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.arancelBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.arancelBeanSwingJInternalFrame.inicializarActualizarBindingTablaArancel();
				}

				JInternalFrameBase jinternalFrame =this.arancelBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderarancel=(TitledBorder)this.arancelBeanSwingJInternalFrame.jScrollPanelDatosArancel.getBorder();

				titledBorderarancel.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Arancel");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_arancelDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_arancel()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_arancel = "+this.detallepedidocompraimpor.getid_arancel().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_pedidoDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getcantidad_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_pedido = "+this.detallepedidocompraimpor.getcantidad_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_entraDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getcantidad_entra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_entra = "+this.detallepedidocompraimpor.getcantidad_entra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_pendienteDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getcantidad_pendiente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_pendiente = "+this.detallepedidocompraimpor.getcantidad_pendiente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentajeDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getporcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje = "+this.detallepedidocompraimpor.getporcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpesoDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getpeso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where peso = "+this.detallepedidocompraimpor.getpeso().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.detallepedidocompraimpor.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonloteDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getlote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lote like '%"+this.detallepedidocompraimpor.getlote()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_arancelDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getporcentaje_arancel()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_arancel = "+this.detallepedidocompraimpor.getporcentaje_arancel().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_unidad_auxiliarDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getcantidad_unidad_auxiliar()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_unidad_auxiliar = "+this.detallepedidocompraimpor.getcantidad_unidad_auxiliar().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecio_unidad_auxiliarDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getprecio_unidad_auxiliar()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio_unidad_auxiliar = "+this.detallepedidocompraimpor.getprecio_unidad_auxiliar().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfobDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getfob()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fob = "+this.detallepedidocompraimpor.getfob().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfob_exwDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getfob_exw()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fob_exw = "+this.detallepedidocompraimpor.getfob_exw().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.detallepedidocompraimpor.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detallepedidocompraimpor.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoDetallePedidoCompraImporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetallePedidoCompraImpor=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.detallepedidocompraimpor.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detallepedidocompraimpor.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetallePedidoCompraImporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetallePedidoCompraImpor(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetallePedidoCompraImpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetallePedidoCompraImpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detallepedidocompraimporLogic.getConnexion());

				if(this.detallepedidocompraimpor.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detallepedidocompraimpor.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetallePedidoCompraImpor=(TitledBorder)this.jScrollPanelDatosDetallePedidoCompraImpor.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetallePedidoCompraImpor.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetallePedidoCompraImporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.getdetallepedidocompraimpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detallepedidocompraimpor==null) {
						this.detallepedidocompraimpor = new DetallePedidoCompraImpor();
					}

					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);
				}

				if(this.detallepedidocompraimpor.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detallepedidocompraimpor.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdAnio();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdArancelDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdArancel();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdBodega();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdCentroCosto();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdEjercicio();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdEmpresa();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdMes();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPedidoCompraImporDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdPedidoCompraImpor();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdPeriodo();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdProducto();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdSucursal();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadDetallePedidoCompraImporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);

			this.getDetallePedidoCompraImporsFK_IdUnidad();

			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);

			//if(DetallePedidoCompraImporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detallepedidocompraimporLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetallePedidoCompraImpor() {
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.dispose();
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
			this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.dispose();
			this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor=null;
		}
		
		if(this.jInternalFrameImportacionDetallePedidoCompraImpor!=null) {
			this.jInternalFrameImportacionDetallePedidoCompraImpor.setVisible(false);	    			
			this.jInternalFrameImportacionDetallePedidoCompraImpor.dispose();
			this.jInternalFrameImportacionDetallePedidoCompraImpor=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetallePedidoCompraImpor();
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetallePedidoCompraImpor")) {
				jButtonDuplicarDetallePedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetallePedidoCompraImpor")) {
				jButtonCopiarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetallePedidoCompraImpor")) {
				jButtonVerFormDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetallePedidoCompraImpor")) {
				jButtonDuplicarDetallePedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetallePedidoCompraImpor")) {
				jButtonDuplicarDetallePedidoCompraImporActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetallePedidoCompraImpor")) {
				jButtonModificarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetallePedidoCompraImpor")) {
				jButtonModificarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetallePedidoCompraImpor")) {
				jButtonModificarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetallePedidoCompraImpor")) {
				jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetallePedidoCompraImpor")) {
				jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetallePedidoCompraImpor")) {
				jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetallePedidoCompraImpor")) {
				jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetallePedidoCompraImpor")) {
				jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetallePedidoCompraImpor")) {
				jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetallePedidoCompraImpor")) {
				jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetallePedidoCompraImpor")) {
				jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetallePedidoCompraImpor")) {
				jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetallePedidoCompraImpor")) {
				jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetallePedidoCompraImpor")) {
				jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetallePedidoCompraImpor")) {
				jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetallePedidoCompraImpor")) {
				jButtonMostrarOcultarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetallePedidoCompraImpor")) {
				jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetallePedidoCompraImpor")) {
				jButtonCopiarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetallePedidoCompraImpor")) {
				jButtonVerFormDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetallePedidoCompraImpor")) {
				jButtonCopiarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetallePedidoCompraImpor")) {
				jButtonVerFormDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetallePedidoCompraImpor")) {
				jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetallePedidoCompraImpor")) {
				jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetallePedidoCompraImpor")) {
				jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetallePedidoCompraImpor")) {
				jButtonAnterioresDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetallePedidoCompraImpor")) {
				jButtonAnterioresDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetallePedidoCompraImpor")) {
				jButtonAnterioresDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetallePedidoCompraImpor")) {
				jButtonSiguientesDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetallePedidoCompraImpor")) {
				jButtonSiguientesDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetallePedidoCompraImpor")) {
				jButtonSiguientesDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetallePedidoCompraImpor") || sTipo.equals("MenuItemDetalleAbrirOrderByDetallePedidoCompraImpor")) {
				jButtonAbrirOrderByDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetallePedidoCompraImpor") || sTipo.equals("MenuItemDetalleMostrarOcultarDetallePedidoCompraImpor")) {
				jButtonMostrarOcultarDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetallePedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetallePedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetallePedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetallePedidoCompraImpor")) {
				jButtonCerrarReporteDinamicoDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetallePedidoCompraImpor")) {
				jButtonGenerarReporteDinamicoDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetallePedidoCompraImpor")) {
				
				jButtonGenerarExcelReporteDinamicoDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetallePedidoCompraImpor")) {
				jButtonCerrarImportacionDetallePedidoCompraImporActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetallePedidoCompraImpor")) {
				
				jButtonGenerarImportacionDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetallePedidoCompraImpor")) {
				
				jButtonAbrirImportacionDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetallePedidoCompraImpor")) {
				jComboBoxTiposAccionesDetallePedidoCompraImporActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetallePedidoCompraImpor")) {
				jComboBoxTiposRelacionesDetallePedidoCompraImporActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetallePedidoCompraImpor")) {
				jComboBoxTiposAccionesDetallePedidoCompraImporActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetallePedidoCompraImpor")) {
				
				jComboBoxTiposSeleccionarDetallePedidoCompraImporActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetallePedidoCompraImpor")) {
				jTextFieldValorCampoGeneralDetallePedidoCompraImporActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetallePedidoCompraImpor")) {
				jButtonAbrirTotalesDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetallePedidoCompraImpor")) {
				jButtonCerrarTotalesDetallePedidoCompraImporActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetallePedidoCompraImpor")) {
				jButtonAbrirOrderByDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetallePedidoCompraImpor")) {
				jButtonAbrirOrderByDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetallePedidoCompraImpor")) {
				jButtonCerrarOrderByDetallePedidoCompraImporActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetallePedidoCompraImporBusqueda")) {
				this.jButtonidDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pedido_compra_imporDetallePedidoCompraImporUpdate")) {
				this.jButtonid_pedido_compra_imporDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pedido_compra_imporDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_pedido_compra_imporDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetallePedidoCompraImporUpdate")) {
				this.jButtonid_empresaDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_empresaDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetallePedidoCompraImporUpdate")) {
				this.jButtonid_sucursalDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_sucursalDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetallePedidoCompraImporUpdate")) {
				this.jButtonid_bodegaDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_bodegaDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetallePedidoCompraImpor")) {
				this.jButtonid_productoDetallePedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetallePedidoCompraImporUpdate")) {
				this.jButtonid_productoDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_productoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetallePedidoCompraImporUpdate")) {
				this.jButtonid_unidadDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_unidadDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetallePedidoCompraImporUpdate")) {
				this.jButtonid_ejercicioDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_ejercicioDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetallePedidoCompraImporUpdate")) {
				this.jButtonid_periodoDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_periodoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_arancelDetallePedidoCompraImporUpdate")) {
				this.jButtonid_arancelDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_arancelDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_arancelDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pedidoDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_pedidoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_entraDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_entraDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pendienteDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_pendienteDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeDetallePedidoCompraImporBusqueda")) {
				this.jButtonporcentajeDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pesoDetallePedidoCompraImporBusqueda")) {
				this.jButtonpesoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetallePedidoCompraImporBusqueda")) {
				this.jButtonprecioDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("loteDetallePedidoCompraImporBusqueda")) {
				this.jButtonloteDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_arancelDetallePedidoCompraImporBusqueda")) {
				this.jButtonporcentaje_arancelDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_unidad_auxiliarDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_unidad_auxiliarDetallePedidoCompraImporBusqueda")) {
				this.jButtonprecio_unidad_auxiliarDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fobDetallePedidoCompraImporBusqueda")) {
				this.jButtonfobDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fob_exwDetallePedidoCompraImporBusqueda")) {
				this.jButtonfob_exwDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetallePedidoCompraImporBusqueda")) {
				this.jButtontotalDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetallePedidoCompraImporBusqueda")) {
				this.jButtondescripcionDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImpor")) {
				this.jButtonid_centro_costoDetallePedidoCompraImporActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImporArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImporUpdate")) {
				this.jButtonid_centro_costoDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_centro_costoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetallePedidoCompraImporUpdate")) {
				this.jButtonid_anioDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_anioDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetallePedidoCompraImporUpdate")) {
				this.jButtonid_mesDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_mesDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImpor")) {
				this.jButtonid_centro_costoDetallePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("id_productoDetallePedidoCompraImpor")) {
				this.jButtonid_productoDetallePedidoCompraImporActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdArancelDetallePedidoCompraImpor")) {
				this.jButtonFK_IdArancelDetallePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBodegaDetallePedidoCompraImpor")) {
				this.jButtonFK_IdBodegaDetallePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoDetallePedidoCompraImpor")) {
				this.jButtonFK_IdCentroCostoDetallePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPedidoCompraImporDetallePedidoCompraImpor")) {
				this.jButtonFK_IdPedidoCompraImporDetallePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoDetallePedidoCompraImpor")) {
				this.jButtonFK_IdProductoDetallePedidoCompraImporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadDetallePedidoCompraImpor")) {
				this.jButtonFK_IdUnidadDetallePedidoCompraImporActionPerformed(evt);
			}
			
			;
			
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetallePedidoCompraImpor();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				


				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetallePedidoCompraImpor detallepedidocompraimporLocal=null;
			
			if(!this.getEsControlTabla()) {
				detallepedidocompraimporLocal=this.detallepedidocompraimpor;
			} else {
				detallepedidocompraimporLocal=this.detallepedidocompraimporAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
							
				
				


				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetallePedidoCompraImporActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
								
						
				


				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
								
				
				


				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
							
				
				


				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
								
				
				


				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetallePedidoCompraImporActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetallePedidoCompraImpor")) {
					jCheckBoxSeleccionarTodosDetallePedidoCompraImporItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetallePedidoCompraImpor")) {
					jCheckBoxSeleccionadosDetallePedidoCompraImporItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetallePedidoCompraImpor")) {
					
				}
				
				


				
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
												
				
				


				
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetallePedidoCompraImporActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaDetallePedidoCompraImpor")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor;
				}

				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					//classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetallePedidoCompraImpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor,"FK_IdBodega");
				//recargarFormDetallePedidoCompraImporBodega(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetallePedidoCompraImpor")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor;
				}

				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					//classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetallePedidoCompraImpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor,"FK_IdProducto");
				//recargarFormDetallePedidoCompraImporProducto(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor,"FK_IdProducto");
			}
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetallePedidoCompraImpor")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor;
				}

				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					//classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetallePedidoCompraImpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor,"FK_IdBodega");
				//recargarFormDetallePedidoCompraImporBodega(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetallePedidoCompraImpor")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor;
				}

				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					//classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetallePedidoCompraImpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor,"FK_IdProducto");
				//recargarFormDetallePedidoCompraImporProducto(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor,"FK_IdProducto");
			}
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detallepedidocompraimpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detallepedidocompraimpor);
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetallePedidoCompraImpor")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor;
				}

				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					//classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetallePedidoCompraImpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor,"FK_IdBodega");
				//recargarFormDetallePedidoCompraImporBodega(jComboBoxid_bodegaFK_IdBodegaDetallePedidoCompraImpor,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetallePedidoCompraImpor")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor;
				}

				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					//classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetallePedidoCompraImpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor,"FK_IdProducto");
				//recargarFormDetallePedidoCompraImporProducto(jComboBoxid_productoFK_IdProductoDetallePedidoCompraImpor,"FK_IdProducto");
			}
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetallePedidoCompraImpor.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetallePedidoCompraImpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetallePedidoCompraImporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detallepedidocompraimporAnterior =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetallePedidoCompraImpor")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetallePedidoCompraImporListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetallePedidoCompraImpor.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detallepedidocompraimpor =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detallepedidocompraimpor);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetallePedidoCompraImpor")) {
				
				}
				
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetallePedidoCompraImpor")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetallePedidoCompraImpor.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetallePedidoCompraImpor")) {
			
			}
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetallePedidoCompraImpor();
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			if(sTipo.equals("NuevoDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetallePedidoCompraImpor")) {
				jButtonDuplicarDetallePedidoCompraImporActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetallePedidoCompraImpor")) {
				jButtonCopiarDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetallePedidoCompraImpor")) {
				jButtonVerFormDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetallePedidoCompraImpor")) {
				jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetallePedidoCompraImpor")) {
				jButtonModificarDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetallePedidoCompraImpor")) {
				jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetallePedidoCompraImpor")) {
				jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetallePedidoCompraImpor")) {
				jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetallePedidoCompraImpor")) {
				jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetallePedidoCompraImpor")) {
				jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetallePedidoCompraImpor")) {
				jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetallePedidoCompraImpor")) {
				jButtonAbrirOrderByDetallePedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetallePedidoCompraImpor")) {
				jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetallePedidoCompraImpor")) {
				jButtonAnterioresDetallePedidoCompraImporActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetallePedidoCompraImpor")) {
				jButtonSiguientesDetallePedidoCompraImporActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetallePedidoCompraImporBusqueda")) {
				this.jButtonidDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_pedido_compra_imporDetallePedidoCompraImporUpdate")) {
				this.jButtonid_pedido_compra_imporDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_pedido_compra_imporDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_pedido_compra_imporDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetallePedidoCompraImporUpdate")) {
				this.jButtonid_empresaDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_empresaDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetallePedidoCompraImporUpdate")) {
				this.jButtonid_sucursalDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_sucursalDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetallePedidoCompraImporUpdate")) {
				this.jButtonid_bodegaDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_bodegaDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetallePedidoCompraImpor")) {
				this.jButtonid_productoDetallePedidoCompraImporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetallePedidoCompraImporUpdate")) {
				this.jButtonid_productoDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_productoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetallePedidoCompraImporUpdate")) {
				this.jButtonid_unidadDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_unidadDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetallePedidoCompraImporUpdate")) {
				this.jButtonid_ejercicioDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_ejercicioDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetallePedidoCompraImporUpdate")) {
				this.jButtonid_periodoDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_periodoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_arancelDetallePedidoCompraImporUpdate")) {
				this.jButtonid_arancelDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_arancelDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_arancelDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pedidoDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_pedidoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_entraDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_entraDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_pendienteDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_pendienteDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeDetallePedidoCompraImporBusqueda")) {
				this.jButtonporcentajeDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("pesoDetallePedidoCompraImporBusqueda")) {
				this.jButtonpesoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetallePedidoCompraImporBusqueda")) {
				this.jButtonprecioDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("loteDetallePedidoCompraImporBusqueda")) {
				this.jButtonloteDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_arancelDetallePedidoCompraImporBusqueda")) {
				this.jButtonporcentaje_arancelDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda")) {
				this.jButtoncantidad_unidad_auxiliarDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precio_unidad_auxiliarDetallePedidoCompraImporBusqueda")) {
				this.jButtonprecio_unidad_auxiliarDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fobDetallePedidoCompraImporBusqueda")) {
				this.jButtonfobDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fob_exwDetallePedidoCompraImporBusqueda")) {
				this.jButtonfob_exwDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetallePedidoCompraImporBusqueda")) {
				this.jButtontotalDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetallePedidoCompraImporBusqueda")) {
				this.jButtondescripcionDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImpor")) {
				this.jButtonid_centro_costoDetallePedidoCompraImporActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImporArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImporUpdate")) {
				this.jButtonid_centro_costoDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_centro_costoDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetallePedidoCompraImporUpdate")) {
				this.jButtonid_anioDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_anioDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetallePedidoCompraImporUpdate")) {
				this.jButtonid_mesDetallePedidoCompraImporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetallePedidoCompraImporBusqueda")) {
				this.jButtonid_mesDetallePedidoCompraImporBusquedaActionPerformed(evt);
			}
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetallePedidoCompraImpor();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetallePedidoCompraImpor")) {
				closingInternalFrameDetallePedidoCompraImpor();
				
			} else if(sTipo.equals("jButtonCancelarDetallePedidoCompraImpor")) {
				JInternalFrameBase jInternalFrameDetalleFormDetallePedidoCompraImpor = (JInternalFrameBase)evt.getSource();
	            	
	            DetallePedidoCompraImporBeanSwingJInternalFrame jInternalFrameParent=(DetallePedidoCompraImporBeanSwingJInternalFrame)jInternalFrameDetalleFormDetallePedidoCompraImpor.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetallePedidoCompraImporActionPerformed(null);
			}
			
			DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detallepedidocompraimpor,new Object(),this.detallepedidocompraimporParameterGeneral,this.detallepedidocompraimporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetallePedidoCompraImpor(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetallePedidoCompraImpor(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetallePedidoCompraImpor(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detallepedidocompraimpor)) {
			if(!esControlTabla) {
				if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);			
				}
				
				if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallepedidocompraimporReturnGeneral=detallepedidocompraimporLogic.procesarEventosDetallePedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.detallepedidocompraimpor,this.detallepedidocompraimporParameterGeneral,this.isEsNuevoDetallePedidoCompraImpor,classes);//this.detallepedidocompraimporLogic.getDetallePedidoCompraImpor()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral,this.detallepedidocompraimporBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetallePedidoCompraImpor(classes,this.detallepedidocompraimporReturnGeneral,this.detallepedidocompraimporBean,false);
					}
						
					if(this.detallepedidocompraimporReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor());	
					}
						
					if(this.detallepedidocompraimporReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor(),classes);//this.detallepedidocompraimporBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetallePedidoCompraImpor(this.detallepedidocompraimpor,classes);//this.detallepedidocompraimporBean);									
				}
			
				if(DetallePedidoCompraImporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetallePedidoCompraImpor(this.detallepedidocompraimpor,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetallePedidoCompraImpor(this.detallepedidocompraimpor);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detallepedidocompraimporAnterior!=null) {
						this.detallepedidocompraimpor=this.detallepedidocompraimporAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detallepedidocompraimporReturnGeneral=detallepedidocompraimporLogic.procesarEventosDetallePedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.detallepedidocompraimpor,this.detallepedidocompraimporParameterGeneral,this.isEsNuevoDetallePedidoCompraImpor,classes);//this.detallepedidocompraimporLogic.getDetallePedidoCompraImpor()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detallepedidocompraimporSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor(),detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor(),this.detallepedidocompraimpors);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetallePedidoCompraImpor.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetallePedidoCompraImpor.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetallePedidoCompraImpor();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetallePedidoCompraImpor() throws Exception {
		
		DetallePedidoCompraImporModel detallepedidocompraimporModel=(DetallePedidoCompraImporModel)this.jTableDatosDetallePedidoCompraImpor.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detallepedidocompraimporModel.detallepedidocompraimpors=this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detallepedidocompraimporModel.detallepedidocompraimpors=this.detallepedidocompraimpors;
		}
		
		
		((DetallePedidoCompraImporModel) this.jTableDatosDetallePedidoCompraImpor.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetallePedidoCompraImpor() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetallepedidocompraimporAnterior(),this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetallepedidocompraimporAnterior(),this.detallepedidocompraimpors);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetallePedidoCompraImpor();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallepedidocompraimpor,new Object(),generalEntityParameterGeneral,this.detallepedidocompraimporReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsOfDetallePedidoCompraImpor(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetallePedidoCompraImporConstantesFunciones.getClassesRelationshipsFromStringsOfDetallePedidoCompraImpor(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetallePedidoCompraImpor(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detallepedidocompraimpor,new Object(),generalEntityParameterGeneral,this.detallepedidocompraimporReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetallePedidoCompraImpor(DetallePedidoCompraImporBean detallepedidocompraimporBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetallePedidoCompraImpor(ArrayList<Classe> classes,DetallePedidoCompraImporReturnGeneral detallepedidocompraimporReturnGeneral,DetallePedidoCompraImporBean detallepedidocompraimporBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detallepedidocompraimpor)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor = new DetallePedidoCompraImporDetalleFormJInternalFrame(jDesktopPane,this.detallepedidocompraimporSessionBean.getConGuardarRelaciones(),this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setVisible(false);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.detallepedidocompraimporLogic=this.detallepedidocompraimporLogic;
		
		this.cargarCombosFrameForeignKeyDetallePedidoCompraImpor("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetallePedidoCompraImpor();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetallePedidoCompraImpor();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetallePedidoCompraImpor("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetallePedidoCompraImpor();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetallePedidoCompraImpor"));
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarDetallePedidoCompraImpor"));

		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarToolBarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetallePedidoCompraImpor"));
					
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemModificarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetallePedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"ActualizarDetallePedidoCompraImpor"));
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarToolBarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetallePedidoCompraImpor"));
						
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemActualizarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetallePedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarDetallePedidoCompraImpor"));
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetallePedidoCompraImpor"));
								
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemEliminarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetallePedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarDetallePedidoCompraImpor"));
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetallePedidoCompraImpor"));
					
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemCancelarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetallePedidoCompraImpor"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemDetalleCerrarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetallePedidoCompraImpor"));		
		
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetallePedidoCompraImpor"));
		
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetallePedidoCompraImpor"));
		
		
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetallePedidoCompraImpor"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonidDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"idDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_pedido_compra_imporDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_pedido_compra_imporDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_pedido_compra_imporDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_pedido_compra_imporDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_empresaDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_empresaDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_sucursalDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_sucursalDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_bodegaDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_bodegaDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetallePedidoCompraImporBusqueda"));
		//jButtonid_productoDetallePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetallePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_unidadDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_unidadDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_ejercicioDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_ejercicioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_periodoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_periodoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_arancelDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_arancelDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_arancelDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_arancelDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_pedidoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidoDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_entraDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_entraDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_pendienteDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pendienteDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonporcentajeDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonpesoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"pesoDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonprecioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"precioDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonloteDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"loteDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonporcentaje_arancelDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_arancelDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonprecio_unidad_auxiliarDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"precio_unidad_auxiliarDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonfobDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fobDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonfob_exwDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fob_exwDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtontotalDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"totalDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtondescripcionDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetallePedidoCompraImporBusqueda"));
		//jButtonid_centro_costoDetallePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetallePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImpor"));
		//jButtonid_centro_costoDetallePedidoCompraImporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_anioDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_anioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_mesDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_mesDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetallePedidoCompraImporBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetallePedidoCompraImpor"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetallePedidoCompraImpor"));
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetallePedidoCompraImpor"));
		}
		
		this.jTableDatosDetallePedidoCompraImpor.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetallePedidoCompraImpor"));
		
		this.jTableDatosDetallePedidoCompraImpor.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetallePedidoCompraImpor"));
		
		this.jButtonNuevoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"NuevoDetallePedidoCompraImpor"));
		
		this.jButtonDuplicarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"DuplicarDetallePedidoCompraImpor"));
		
		this.jButtonCopiarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"CopiarDetallePedidoCompraImpor"));
		
		this.jButtonVerFormDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"VerFormDetallePedidoCompraImpor"));
		
		
		this.jButtonNuevoToolBarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetallePedidoCompraImpor"));
			
		this.jButtonDuplicarToolBarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetallePedidoCompraImpor"));
			
		this.jMenuItemNuevoDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetallePedidoCompraImpor"));
			
		this.jMenuItemDuplicarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetallePedidoCompraImpor"));		
		
		
		this.jButtonNuevoRelacionesDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetallePedidoCompraImpor"));
		
		
		this.jButtonNuevoRelacionesToolBarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetallePedidoCompraImpor"));
			
		this.jMenuItemNuevoRelacionesDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetallePedidoCompraImpor"));		
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarDetallePedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonModificarToolBarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetallePedidoCompraImpor"));
			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemModificarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetallePedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"ActualizarDetallePedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonActualizarToolBarDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetallePedidoCompraImpor"));
				
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemActualizarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetallePedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarDetallePedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonEliminarToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetallePedidoCompraImpor"));
						
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemEliminarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetallePedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarDetallePedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonCancelarToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetallePedidoCompraImpor"));
			
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemCancelarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetallePedidoCompraImpor"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetallePedidoCompraImpor"));		
		
		
		this.jButtonCerrarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CerrarDetallePedidoCompraImpor"));
		
		
		this.jButtonCerrarToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetallePedidoCompraImpor"));
			
		this.jMenuItemCerrarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetallePedidoCompraImpor"));
			
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jMenuItemDetalleCerrarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetallePedidoCompraImpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetallePedidoCompraImpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetallePedidoCompraImpor"));
		}
		
		this.jButtonCopiarToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetallePedidoCompraImpor"));
			
		this.jButtonVerFormToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetallePedidoCompraImpor"));
		
		this.jMenuItemGuardarCambiosDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetallePedidoCompraImpor"));
			
		this.jMenuItemCopiarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetallePedidoCompraImpor"));		
		
		this.jMenuItemVerFormDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetallePedidoCompraImpor"));		
		
		
		this.jButtonGuardarCambiosTablaDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetallePedidoCompraImpor"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetallePedidoCompraImpor"));
			
		this.jMenuItemGuardarCambiosTablaDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetallePedidoCompraImpor"));		
		
		
		
		this.jButtonRecargarInformacionDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetallePedidoCompraImpor"));
					
		this.jButtonRecargarInformacionToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetallePedidoCompraImpor"));
		
		this.jMenuItemRecargarInformacionDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetallePedidoCompraImpor"));		
		
		
		
		this.jButtonAnterioresDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AnterioresDetallePedidoCompraImpor"));
		
		
		this.jButtonAnterioresToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetallePedidoCompraImpor"));
		
		this.jMenuItemAnterioresDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetallePedidoCompraImpor"));		
		
		
		this.jButtonSiguientesDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"SiguientesDetallePedidoCompraImpor"));
		
		
		this.jButtonSiguientesToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetallePedidoCompraImpor"));
			
		this.jMenuItemSiguientesDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetallePedidoCompraImpor"));
			
		this.jMenuItemAbrirOrderByDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetallePedidoCompraImpor"));
			
		this.jMenuItemMostrarOcultarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetallePedidoCompraImpor"));
			
		this.jMenuItemDetalleAbrirOrderByDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetallePedidoCompraImpor"));
			
		this.jMenuItemDetalleMostarOcultarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetallePedidoCompraImpor"));		
		
		
		this.jButtonNuevoGuardarCambiosDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetallePedidoCompraImpor"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetallePedidoCompraImpor"));
			
		this.jMenuItemNuevoGuardarCambiosDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetallePedidoCompraImpor"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetallePedidoCompraImpor.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetallePedidoCompraImpor"));

		this.jCheckBoxSeleccionadosDetallePedidoCompraImpor.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetallePedidoCompraImpor"));
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetallePedidoCompraImpor"));
		}
		
		
		this.jComboBoxTiposRelacionesDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetallePedidoCompraImpor"));
			
		this.jComboBoxTiposAccionesDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposAccionesDetallePedidoCompraImpor"));
					
		this.jComboBoxTiposSeleccionarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetallePedidoCompraImpor"));
			
		this.jTextFieldValorCampoGeneralDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetallePedidoCompraImpor"));		
		
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonidDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"idDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_pedido_compra_imporDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_pedido_compra_imporDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_pedido_compra_imporDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_pedido_compra_imporDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_empresaDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_empresaDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_sucursalDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_sucursalDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_bodegaDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_bodegaDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetallePedidoCompraImporBusqueda"));
		//jButtonid_productoDetallePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetallePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_unidadDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_unidadDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_ejercicioDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_ejercicioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_periodoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_periodoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_arancelDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_arancelDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_arancelDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_arancelDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_pedidoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidoDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_entraDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_entraDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_pendienteDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pendienteDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonporcentajeDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonpesoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"pesoDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonprecioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"precioDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonloteDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"loteDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonporcentaje_arancelDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_arancelDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonprecio_unidad_auxiliarDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"precio_unidad_auxiliarDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonfobDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fobDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonfob_exwDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fob_exwDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtontotalDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"totalDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtondescripcionDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetallePedidoCompraImporBusqueda"));
		//jButtonid_centro_costoDetallePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetallePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImpor"));
		//jButtonid_centro_costoDetallePedidoCompraImporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_anioDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_anioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_mesDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_mesDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetallePedidoCompraImporBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdArancelDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdArancelDetallePedidoCompraImpor"));

			this.jButtonFK_IdBodegaDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetallePedidoCompraImpor"));

			this.jButtonFK_IdCentroCostoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetallePedidoCompraImpor"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImpor"));

			this.jButtonFK_IdPedidoCompraImporDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPedidoCompraImporDetallePedidoCompraImpor"));

			this.jButtonFK_IdProductoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetallePedidoCompraImpor"));

			this.jButtonBuscarFK_IdProductoid_productoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImpor"));

			this.jButtonFK_IdUnidadDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetallePedidoCompraImpor"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor!=null) {
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetallePedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetallePedidoCompraImpor"));
				this.jInternalFrameReporteDinamicoDetallePedidoCompraImpor.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetallePedidoCompraImpor"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetallePedidoCompraImpor"));				
			//this.jButtonGenerarReporteDinamicoDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetallePedidoCompraImpor"));
			//this.jButtonGenerarExcelReporteDinamicoDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetallePedidoCompraImpor"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetallePedidoCompraImpor!=null) {
				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetallePedidoCompraImpor"));
				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetallePedidoCompraImpor"));
				this.jInternalFrameImportacionDetallePedidoCompraImpor.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetallePedidoCompraImpor"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetallePedidoCompraImpor"));
			
			this.jButtonAbrirOrderByToolBarDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetallePedidoCompraImpor"));			
			
			if(this.jInternalFrameOrderByDetallePedidoCompraImpor!=null) {
				this.jInternalFrameOrderByDetallePedidoCompraImpor.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetallePedidoCompraImpor"));				
			}
			
			
		}
		
		this.jButtonAbrirTotalesDetallePedidoCompraImpor.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetallePedidoCompraImpor"));
		
		if(this.jInternalFrameTotalesDetallePedidoCompraImpor!=null) {
			this.jInternalFrameTotalesDetallePedidoCompraImpor.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetallePedidoCompraImpor"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTabbedPaneRelacionesDetallePedidoCompraImpor.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetallePedidoCompraImpor"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetallePedidoCompraImpor();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetallePedidoCompraImpor = (JInternalFrameBase)event.getSource();
	            	
	            DetallePedidoCompraImporBeanSwingJInternalFrame jInternalFrameParent=(DetallePedidoCompraImporBeanSwingJInternalFrame)jInternalFrameDetalleFormDetallePedidoCompraImpor.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetallePedidoCompraImporActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetallePedidoCompraImpor.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetallePedidoCompraImporListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetallePedidoCompraImpor.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetallePedidoCompraImpor.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetallePedidoCompraImpor";
		inputMap = this.jButtonNuevoDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetallePedidoCompraImpor";
		inputMap = this.jButtonNuevoRelacionesDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetallePedidoCompraImporActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetallePedidoCompraImpor";
		inputMap = this.jButtonModificarDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetallePedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetallePedidoCompraImpor";
		inputMap = this.jButtonActualizarDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetallePedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetallePedidoCompraImpor";
		inputMap = this.jButtonEliminarDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetallePedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetallePedidoCompraImpor";
		inputMap = this.jButtonCancelarDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetallePedidoCompraImpor";
		inputMap = this.jButtonCerrarDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetallePedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetallePedidoCompraImpor";
		inputMap = this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonGuardarCambiosDetallePedidoCompraImpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetallePedidoCompraImpor.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetallePedidoCompraImporItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetallePedidoCompraImpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetallePedidoCompraImporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetallePedidoCompraImpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetallePedidoCompraImporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetallePedidoCompraImpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetallePedidoCompraImporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonidDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"idDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_pedido_compra_imporDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_pedido_compra_imporDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_pedido_compra_imporDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_pedido_compra_imporDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_empresaDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_empresaDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_sucursalDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_sucursalDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_bodegaDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_bodegaDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetallePedidoCompraImporBusqueda"));
		//jButtonid_productoDetallePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetallePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_unidadDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_unidadDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_ejercicioDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_ejercicioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_periodoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_periodoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_arancelDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_arancelDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_arancelDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_arancelDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_pedidoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pedidoDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_entraDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_entraDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_pendienteDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_pendienteDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonporcentajeDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonpesoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"pesoDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonprecioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"precioDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonloteDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"loteDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonporcentaje_arancelDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_arancelDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtoncantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_unidad_auxiliarDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonprecio_unidad_auxiliarDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"precio_unidad_auxiliarDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonfobDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fobDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonfob_exwDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"fob_exwDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtontotalDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"totalDetallePedidoCompraImporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtondescripcionDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetallePedidoCompraImporBusqueda"));
		//jButtonid_centro_costoDetallePedidoCompraImpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetallePedidoCompraImporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImpor"));
		//jButtonid_centro_costoDetallePedidoCompraImporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_anioDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_anioDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetallePedidoCompraImporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_mesDetallePedidoCompraImporUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetallePedidoCompraImporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_mesDetallePedidoCompraImporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetallePedidoCompraImporBusqueda"));
		
		
		this.jButtonFK_IdArancelDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdArancelDetallePedidoCompraImpor"));

		this.jButtonFK_IdBodegaDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetallePedidoCompraImpor"));

		this.jButtonFK_IdCentroCostoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetallePedidoCompraImpor"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_centro_costoDetallePedidoCompraImpor"));

		this.jButtonFK_IdPedidoCompraImporDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdPedidoCompraImporDetallePedidoCompraImpor"));

		this.jButtonFK_IdProductoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetallePedidoCompraImpor"));

		this.jButtonBuscarFK_IdProductoid_productoDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"id_productoDetallePedidoCompraImpor"));

		this.jButtonFK_IdUnidadDetallePedidoCompraImpor.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetallePedidoCompraImpor"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetallePedidoCompraImpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetallePedidoCompraImporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetallePedidoCompraImporActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetallePedidoCompraImpor.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetallePedidoCompraImpor(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
					detallepedidocompraimporAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimpors) {
					detallepedidocompraimporAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetallePedidoCompraImporItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
						detallepedidocompraimporAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimpors) {
						detallepedidocompraimporAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimpors) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetallePedidoCompraImpor.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetallePedidoCompraImpor.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetallePedidoCompraImporItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetallePedidoCompraImpor.getSelectedRows();
			
			DetallePedidoCompraImpor detallepedidocompraimporLocal=new DetallePedidoCompraImpor();
			
			//this.seleccionarTodosDetallePedidoCompraImpor(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallepedidocompraimporLocal =(DetallePedidoCompraImpor) this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors().toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detallepedidocompraimporLocal =(DetallePedidoCompraImpor) this.detallepedidocompraimpors.toArray()[this.jTableDatosDetallePedidoCompraImpor.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detallepedidocompraimporLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
						detallepedidocompraimporAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimpors) {
						detallepedidocompraimporAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetallePedidoCompraImpor.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetallePedidoCompraImpor.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetallePedidoCompraImpor,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetallePedidoCompraImporItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetallePedidoCompraImporParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetallePedidoCompraImporActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetallePedidoCompraImpor.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
				
						if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_pedido(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_entra(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_pendiente(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							detallepedidocompraimporAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PESO)) {
							existe=true;
							detallepedidocompraimporAux.setpeso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detallepedidocompraimporAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE)) {
							existe=true;
							detallepedidocompraimporAux.setlote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL)) {
							existe=true;
							detallepedidocompraimporAux.setporcentaje_arancel(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_unidad_auxiliar(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR)) {
							existe=true;
							detallepedidocompraimporAux.setprecio_unidad_auxiliar(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_FOB)) {
							existe=true;
							detallepedidocompraimporAux.setfob(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW)) {
							existe=true;
							detallepedidocompraimporAux.setfob_exw(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detallepedidocompraimporAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detallepedidocompraimporAux.setdescripcion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimpors) {
					
						if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_pedido(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_entra(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_pendiente(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							detallepedidocompraimporAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PESO)) {
							existe=true;
							detallepedidocompraimporAux.setpeso(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detallepedidocompraimporAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE)) {
							existe=true;
							detallepedidocompraimporAux.setlote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL)) {
							existe=true;
							detallepedidocompraimporAux.setporcentaje_arancel(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR)) {
							existe=true;
							detallepedidocompraimporAux.setcantidad_unidad_auxiliar(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR)) {
							existe=true;
							detallepedidocompraimporAux.setprecio_unidad_auxiliar(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_FOB)) {
							existe=true;
							detallepedidocompraimporAux.setfob(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW)) {
							existe=true;
							detallepedidocompraimporAux.setfob_exw(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detallepedidocompraimporAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detallepedidocompraimporAux.setdescripcion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetallePedidoCompraImporActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetallePedidoCompraImpor=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetallePedidoCompraImpor.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetallePedidoCompraImpor) {				
					conSplash=true;//false;										
					
					//this.startProcessDetallePedidoCompraImpor(conSplash);
				
					this.generarReporteDetallePedidoCompraImporsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetallePedidoCompraImporsSeleccionados();
				//this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetallePedidoCompraImporsSeleccionados(false);
				//this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetallePedidoCompraImporsSeleccionados(true);
				//this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetallePedidoCompraImpor();
				
				this.exportarDetallePedidoCompraImporsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetallePedidoCompraImpors();
				//this.importarDetallePedidoCompraImpors();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetallePedidoCompraImpor();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetallePedidoCompraImporsSeleccionados();
				//this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetallePedidoCompraImpor();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetallePedidoCompraImpor)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetallePedidoCompraImpor(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.setSelectedIndex(0);					
				}	
			} 			
			else if(DetallePedidoCompraImporBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetallePedidoCompraImpor) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetallePedidoCompraImpor(conSplash);
					
						//this.actualizarParametrosGeneralDetallePedidoCompraImpor();
						
						this.generarReporteProcesoAccionDetallePedidoCompraImporsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle Pedido CompraS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Pedido Compra", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetallePedidoCompraImpor();
				
						this.actualizarParametrosGeneralDetallePedidoCompraImpor();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detallepedidocompraimporReturnGeneral=detallepedidocompraimporLogic.procesarAccionDetallePedidoCompraImporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors(),this.detallepedidocompraimporParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetallePedidoCompraImporReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetallePedidoCompraImpor();
					
					DetallePedidoCompraImporBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetallePedidoCompraImporReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetallePedidoCompraImpor.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxTiposAccionesFormularioDetallePedidoCompraImpor.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetallePedidoCompraImpor(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetallePedidoCompraImporActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetallePedidoCompraImpor();
			
			if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
			DetallePedidoCompraImpor detallepedidocompraimpor=new DetallePedidoCompraImpor();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetallePedidoCompraImpor.getSelectedItem();
			
			
			
			
			detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
			//this.sTipoAccion;
			
			if(detallepedidocompraimporsSeleccionados.size()==1) {
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporsSeleccionados) {
					detallepedidocompraimpor=detallepedidocompraimporAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetallePedidoCompraImpor();
			
      		//this.finishProcessDetallePedidoCompraImpor(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetallePedidoCompraImporReturnGeneral() throws Exception {
		if(this.detallepedidocompraimporReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detallepedidocompraimporReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detallepedidocompraimporReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detallepedidocompraimporReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detallepedidocompraimporReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detallepedidocompraimporReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
		}
		
		if(this.detallepedidocompraimporReturnGeneral.getConRetornoLista() || this.detallepedidocompraimporReturnGeneral.getConRetornoObjeto()) {
			if(this.detallepedidocompraimporReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallepedidocompraimporLogic.setDetallePedidoCompraImpors(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpors());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detallepedidocompraimporReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detallepedidocompraimporLogic.setDetallePedidoCompraImpor(this.detallepedidocompraimporReturnGeneral.getDetallePedidoCompraImpor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetallePedidoCompraImpor(false);
		}
	}
	
	public void actualizarParametrosGeneralDetallePedidoCompraImpor() throws Exception {
		
		
	}
	
	public ArrayList<DetallePedidoCompraImpor> getDetallePedidoCompraImporsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetallePedidoCompraImpor) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporLogic.getDetallePedidoCompraImpors()) {
					if(detallepedidocompraimporAux.getIsSelected()) {
						detallepedidocompraimporsSeleccionados.add(detallepedidocompraimporAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetallePedidoCompraImpor detallepedidocompraimporAux:this.detallepedidocompraimpors) {
					if(detallepedidocompraimporAux.getIsSelected()) {
						detallepedidocompraimporsSeleccionados.add(detallepedidocompraimporAux);				
					}
				}
			}
			
			if(detallepedidocompraimporsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detallepedidocompraimporsSeleccionados.addAll(this.detallepedidocompraimporLogic.getDetallePedidoCompraImpors());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detallepedidocompraimporsSeleccionados.addAll(this.detallepedidocompraimpors);				
					}
				}
			}
		} else {
			detallepedidocompraimporsSeleccionados.add(this.detallepedidocompraimpor);
		}
		
		return detallepedidocompraimporsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetallePedidoCompraImporsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetallePedidoCompraImporsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetallePedidoCompraImporsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetallePedidoCompraImporsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetallePedidoCompraImporsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Pedido Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetallePedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporsSeleccionados);
		
	}	
	
	public void generarReporteNormalDetallePedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetallePedidoCompraImporsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetallePedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetallePedidoCompraImpor();
		
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetallePedidoCompraImpor();
		
		
		//this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporsSeleccionados ,detallepedidocompraimporImplementable,detallepedidocompraimporImplementableHome);
	}
	
	public void mostrarImportacionDetallePedidoCompraImpors() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetallePedidoCompraImpor();
		
		this.abrirFrameImportacionDetallePedidoCompraImpor();		
		
			
		//this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporsSeleccionados ,detallepedidocompraimporImplementable,detallepedidocompraimporImplementableHome);
	}
	
	public void importarDetallePedidoCompraImpors() throws Exception {		
	
	}
	
	public void exportarDetallePedidoCompraImporsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetallePedidoCompraImporsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetallePedidoCompraImporsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetallePedidoCompraImporsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Pedido Compra",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetallePedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallepedidocompraimpor."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetallePedidoCompraImpor(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetallePedidoCompraImpor(detallepedidocompraimporAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detallepedidocompraimporAux.setsDetalleGeneralEntityReporte(detallepedidocompraimporAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetallePedidoCompraImpor(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_PESO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_FOB;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detallepedidocompraimpor.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getpedidocompraimpor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getarancel_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getcantidad_pedido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getcantidad_entra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getcantidad_pendiente().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getporcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getpeso().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getlote();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getporcentaje_arancel().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getcantidad_unidad_auxiliar().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getprecio_unidad_auxiliar().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getfob().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getfob_exw().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detallepedidocompraimpor.getmes_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetallePedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallepedidocompraimpor.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetallePedidoCompraImpors");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetallePedidoCompraImpor(row);				
				iRow++;
			}				
			
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetallePedidoCompraImpor(detallepedidocompraimporAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetallePedidoCompraImporsSeleccionados() throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();		
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detallepedidocompraimpor.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detallepedidocompraimpors");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detallepedidocompraimpor");
			//elementRoot.appendChild(element);
		
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporsSeleccionados) {
				element = document.createElement("detallepedidocompraimpor");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetallePedidoCompraImpor(detallepedidocompraimporAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Pedido Compra",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetallePedidoCompraImpor(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PESO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PORCENTAJEARANCEL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_PRECIOUNIDADAUXILIAR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_FOB);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_FOBEXW);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getpedidocompraimpor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getarancel_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getcantidad_pedido());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getcantidad_entra());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getcantidad_pendiente());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getporcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getpeso());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getlote());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getporcentaje_arancel());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getcantidad_unidad_auxiliar());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getprecio_unidad_auxiliar());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getfob());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getfob_exw());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detallepedidocompraimpor.getmes_descripcion());				
	}
	
	public void setFilaDatosExportarXmlDetallePedidoCompraImpor(DetallePedidoCompraImpor detallepedidocompraimpor,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetallePedidoCompraImporConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detallepedidocompraimpor.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetallePedidoCompraImporConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detallepedidocompraimpor.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementpedidocompraimpor_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDPEDIDOCOMPRAIMPOR);
		elementpedidocompraimpor_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getpedidocompraimpor_descripcion()));
		element.appendChild(elementpedidocompraimpor_descripcion);

		Element elementempresa_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementbodega_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementarancel_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDARANCEL);
		elementarancel_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getarancel_descripcion()));
		element.appendChild(elementarancel_descripcion);

		Element elementcantidad_pedido = document.createElement(DetallePedidoCompraImporConstantesFunciones.CANTIDADPEDIDO);
		elementcantidad_pedido.appendChild(document.createTextNode(detallepedidocompraimpor.getcantidad_pedido().toString().trim()));
		element.appendChild(elementcantidad_pedido);

		Element elementcantidad_entra = document.createElement(DetallePedidoCompraImporConstantesFunciones.CANTIDADENTRA);
		elementcantidad_entra.appendChild(document.createTextNode(detallepedidocompraimpor.getcantidad_entra().toString().trim()));
		element.appendChild(elementcantidad_entra);

		Element elementcantidad_pendiente = document.createElement(DetallePedidoCompraImporConstantesFunciones.CANTIDADPENDIENTE);
		elementcantidad_pendiente.appendChild(document.createTextNode(detallepedidocompraimpor.getcantidad_pendiente().toString().trim()));
		element.appendChild(elementcantidad_pendiente);

		Element elementporcentaje = document.createElement(DetallePedidoCompraImporConstantesFunciones.PORCENTAJE);
		elementporcentaje.appendChild(document.createTextNode(detallepedidocompraimpor.getporcentaje().toString().trim()));
		element.appendChild(elementporcentaje);

		Element elementpeso = document.createElement(DetallePedidoCompraImporConstantesFunciones.PESO);
		elementpeso.appendChild(document.createTextNode(detallepedidocompraimpor.getpeso().toString().trim()));
		element.appendChild(elementpeso);

		Element elementprecio = document.createElement(DetallePedidoCompraImporConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(detallepedidocompraimpor.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementlote = document.createElement(DetallePedidoCompraImporConstantesFunciones.LOTE);
		elementlote.appendChild(document.createTextNode(detallepedidocompraimpor.getlote().trim()));
		element.appendChild(elementlote);

		Element elementporcentaje_arancel = document.createElement(DetallePedidoCompraImporConstantesFunciones.PORCENTAJEARANCEL);
		elementporcentaje_arancel.appendChild(document.createTextNode(detallepedidocompraimpor.getporcentaje_arancel().toString().trim()));
		element.appendChild(elementporcentaje_arancel);

		Element elementcantidad_unidad_auxiliar = document.createElement(DetallePedidoCompraImporConstantesFunciones.CANTIDADUNIDADAUXILIAR);
		elementcantidad_unidad_auxiliar.appendChild(document.createTextNode(detallepedidocompraimpor.getcantidad_unidad_auxiliar().toString().trim()));
		element.appendChild(elementcantidad_unidad_auxiliar);

		Element elementprecio_unidad_auxiliar = document.createElement(DetallePedidoCompraImporConstantesFunciones.PRECIOUNIDADAUXILIAR);
		elementprecio_unidad_auxiliar.appendChild(document.createTextNode(detallepedidocompraimpor.getprecio_unidad_auxiliar().toString().trim()));
		element.appendChild(elementprecio_unidad_auxiliar);

		Element elementfob = document.createElement(DetallePedidoCompraImporConstantesFunciones.FOB);
		elementfob.appendChild(document.createTextNode(detallepedidocompraimpor.getfob().toString().trim()));
		element.appendChild(elementfob);

		Element elementfob_exw = document.createElement(DetallePedidoCompraImporConstantesFunciones.FOBEXW);
		elementfob_exw.appendChild(document.createTextNode(detallepedidocompraimpor.getfob_exw().toString().trim()));
		element.appendChild(elementfob_exw);

		Element elementtotal = document.createElement(DetallePedidoCompraImporConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(detallepedidocompraimpor.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementdescripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcentrocosto_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementanio_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetallePedidoCompraImporConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detallepedidocompraimpor.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);
	}
	
	public void generarReporteGroupGenericoDetallePedidoCompraImporsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados=new ArrayList<DetallePedidoCompraImpor>();
		
		detallepedidocompraimporsSeleccionados=this.getDetallePedidoCompraImporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetallePedidoCompraImpor(detallepedidocompraimporsSeleccionados);
		
		this.generarReporteDetallePedidoCompraImpors("Todos",detallepedidocompraimporsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetallePedidoCompraImpor(ArrayList<DetallePedidoCompraImpor> detallepedidocompraimporsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetallePedidoCompraImpor detallepedidocompraimporAux:detallepedidocompraimporsSeleccionados) {
				detallepedidocompraimporAux.setsDetalleGeneralEntityReporte(detallepedidocompraimporAux.toString());
			
				if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPEDIDOCOMPRAIMPOR)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getpedidocompraimpor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDARANCEL)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getarancel_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPEDIDO)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getcantidad_pedido().toString());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADENTRA)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getcantidad_entra().toString());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADPENDIENTE)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getcantidad_pendiente().toString());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_LOTE)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getlote());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_CANTIDADUNIDADAUXILIAR)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getcantidad_unidad_auxiliar().toString());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetallePedidoCompraImporConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detallepedidocompraimporAux.setsDescripcionGeneralEntityReporte1(detallepedidocompraimporAux.getmes_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetallePedidoCompraImporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetallePedidoCompraImpor(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=true;
				this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=true;
				this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=true;
			}
			
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				} else {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=true;
				} else {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				} else {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaModificarDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaCancelarDetallePedidoCompraImpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				} else {
					this.isVisibilidadCeldaGuardarDetallePedidoCompraImpor=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetallePedidoCompraImporJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=true;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=true;
		} else {
			this.actualizarEstadoPanelsDetallePedidoCompraImpor(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetallePedidoCompraImpor=false;
			//this.isVisibilidadCeldaVerFormDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaDuplicarDetallePedidoCompraImpor=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
		} else {
			this.isVisibilidadCeldaNuevoDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaGuardarCambiosDetallePedidoCompraImpor=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			if(!detallepedidocompraimporSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;												
			}
			
			this.jButtonCerrarDetallePedidoCompraImpor.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetallePedidoCompraImpor=false;
		}
		
		if(!this.permiteMantenimiento(this.detallepedidocompraimpor)) {
			this.isVisibilidadCeldaActualizarDetallePedidoCompraImpor=false;
			this.isVisibilidadCeldaEliminarDetallePedidoCompraImpor=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetallePedidoCompraImpor() {
	}
	
	public void actualizarEstadoPanelsDetallePedidoCompraImpor(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionDetallePedidoCompraImpor.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetallePedidoCompraImpor!=null) {
				this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionDetallePedidoCompraImpor.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosDetallePedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetallePedidoCompraImpor!=null) {
				this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionDetallePedidoCompraImpor.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosDetallePedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetallePedidoCompraImpor!=null) {
				this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionDetallePedidoCompraImpor.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosDetallePedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetallePedidoCompraImpor!=null) {
				this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionDetallePedidoCompraImpor.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetallePedidoCompraImpor!=null) {
				this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionDetallePedidoCompraImpor.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetallePedidoCompraImpor!=null) {
				this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosEdicionDetallePedidoCompraImpor.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetallePedidoCompraImpor!=null) {
				this.jScrollPanelDatosDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetallePedidoCompraImpor!=null) {
				this.jPanelPaginacionDetallePedidoCompraImpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
					this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detallepedidocompraimporSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor!=null) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetallePedidoCompraImpor!=null) {
				this.jPanelParametrosReportesDetallePedidoCompraImpor.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaPedidoCompraImpor(Boolean isParaPedidoCompraImpor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPedidoCompraImporNegation=!isParaPedidoCompraImpor;

			this.isVisibilidadFK_IdArancel=isParaPedidoCompraImporNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaPedidoCompraImporNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaPedidoCompraImporNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaPedidoCompraImpor;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaPedidoCompraImporNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaPedidoCompraImporNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdArancel=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdArancel=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdArancel=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdArancel=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdArancel=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdArancel=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdArancel=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaArancel(Boolean isParaArancel){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaArancelNegation=!isParaArancel;

			this.isVisibilidadFK_IdArancel=isParaArancel;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaArancelNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdArancel=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdArancel=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdArancel=isParaMesNegation;
			if(!this.isVisibilidadFK_IdArancel) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdArancelDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdBodega=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdBodegaDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdCentroCostoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdPedidoCompraImpor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdPedidoCompraImpor) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdProducto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdProductoDetallePedidoCompraImpor);}

			this.isVisibilidadFK_IdUnidad=isParaMesNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(jPanelFK_IdUnidadDetallePedidoCompraImpor);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetallePedidoCompraImporParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detallepedidocompraimporSessionBean==null) {
				detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detallepedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detallepedidocompraimporFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetallePedidoCompraImpor(true);
			//productoSessionBean.setlidDetallePedidoCompraImporActual(this.idDetallePedidoCompraImporActual);

			detallepedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetallePedidoCompraImpor(true);
			detallepedidocompraimporSessionBean.setlIdDetallePedidoCompraImporActualForeignKey(this.idDetallePedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetallePedidoCompraImporParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(detallepedidocompraimporSessionBean==null) {
				detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(detallepedidocompraimporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.detallepedidocompraimporFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(DetallePedidoCompraImporConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionDetallePedidoCompraImpor(true);
			//centrocostoSessionBean.setlidDetallePedidoCompraImporActual(this.idDetallePedidoCompraImporActual);

			detallepedidocompraimporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetallePedidoCompraImpor(true);
			detallepedidocompraimporSessionBean.setlIdDetallePedidoCompraImporActualForeignKey(this.idDetallePedidoCompraImporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetallePedidoCompraImporSessionBean detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
		
		if(this.detallepedidocompraimporSessionBean==null) {
			this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
		}
		
		this.detallepedidocompraimporSessionBean.setsUltimaBusquedaDetallePedidoCompraImpor(this.getsAccionBusqueda());
		this.detallepedidocompraimporSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detallepedidocompraimporSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdArancel")) {
			detallepedidocompraimporSessionBean.setid_arancel(this.getid_arancelFK_IdArancel());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detallepedidocompraimporSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			detallepedidocompraimporSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detallepedidocompraimporSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detallepedidocompraimporSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPedidoCompraImpor")) {
			detallepedidocompraimporSessionBean.setid_pedido_compra_impor(this.getid_pedido_compra_imporFK_IdPedidoCompraImpor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detallepedidocompraimporSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detallepedidocompraimporSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detallepedidocompraimporSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detallepedidocompraimporSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetallePedidoCompraImporSessionBean detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
		
		if(this.detallepedidocompraimporSessionBean==null) {
			this.detallepedidocompraimporSessionBean=new DetallePedidoCompraImporSessionBean();
		}
		
		if(this.detallepedidocompraimporSessionBean.getsUltimaBusquedaDetallePedidoCompraImpor()!=null&&!this.detallepedidocompraimporSessionBean.getsUltimaBusquedaDetallePedidoCompraImpor().equals("")) {
			this.setsAccionBusqueda(detallepedidocompraimporSessionBean.getsUltimaBusquedaDetallePedidoCompraImpor());
			this.setiNumeroPaginacion(detallepedidocompraimporSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detallepedidocompraimporSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdArancel")) {
				this.setid_arancelFK_IdArancel(detallepedidocompraimporSessionBean.getid_arancel());
				detallepedidocompraimporSessionBean.setid_arancel(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detallepedidocompraimporSessionBean.getid_bodega());
				detallepedidocompraimporSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(detallepedidocompraimporSessionBean.getid_centro_costo());
				detallepedidocompraimporSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detallepedidocompraimporSessionBean.getid_ejercicio());
				detallepedidocompraimporSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detallepedidocompraimporSessionBean.getid_empresa());
				detallepedidocompraimporSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPedidoCompraImpor")) {
				this.setid_pedido_compra_imporFK_IdPedidoCompraImpor(detallepedidocompraimporSessionBean.getid_pedido_compra_impor());
				detallepedidocompraimporSessionBean.setid_pedido_compra_impor(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detallepedidocompraimporSessionBean.getid_periodo());
				detallepedidocompraimporSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detallepedidocompraimporSessionBean.getid_producto());
				detallepedidocompraimporSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detallepedidocompraimporSessionBean.getid_sucursal());
				detallepedidocompraimporSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detallepedidocompraimporSessionBean.getid_unidad());
				detallepedidocompraimporSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detallepedidocompraimporSessionBean.setsUltimaBusquedaDetallePedidoCompraImpor("");
		this.detallepedidocompraimporSessionBean.setiNumeroPaginacion(DetallePedidoCompraImporConstantesFunciones.INUMEROPAGINACION);
		this.detallepedidocompraimporSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetallePedidoCompraImpor(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetallePedidoCompraImpor() {
		this.updateBorderResaltarBusquedasFormularioDetallePedidoCompraImpor();
		this.updateVisibilidadBusquedasFormularioDetallePedidoCompraImpor();
		this.updateHabilitarBusquedasFormularioDetallePedidoCompraImpor();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetallePedidoCompraImpor() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponents().length>0) {
	

		if(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdArancelDetallePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdArancelDetallePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdArancelDetallePedidoCompraImpor);
			}
		}

		if(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdBodegaDetallePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdBodegaDetallePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdBodegaDetallePedidoCompraImpor);
			}
		}

		if(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdCentroCostoDetallePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdCentroCostoDetallePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdCentroCostoDetallePedidoCompraImpor);
			}
		}

		if(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdPedidoCompraImporDetallePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdPedidoCompraImporDetallePedidoCompraImpor);
			}
		}

		if(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdProductoDetallePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdProductoDetallePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdProductoDetallePedidoCompraImpor);
			}
		}

		if(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdUnidadDetallePedidoCompraImpor!=null) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdUnidadDetallePedidoCompraImpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdUnidadDetallePedidoCompraImpor);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetallePedidoCompraImpor() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdArancelDetallePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdArancelDetallePedidoCompraImpor);
			if(!this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdArancelDetallePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdBodegaDetallePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdBodegaDetallePedidoCompraImpor);
			if(!this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdBodegaDetallePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdCentroCostoDetallePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdCentroCostoDetallePedidoCompraImpor);
			if(!this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdCentroCostoDetallePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdPedidoCompraImporDetallePedidoCompraImpor);
			if(!this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdPedidoCompraImporDetallePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdProductoDetallePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdProductoDetallePedidoCompraImpor);
			if(!this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdProductoDetallePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdUnidadDetallePedidoCompraImpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdUnidadDetallePedidoCompraImpor);
			if(!this.detallepedidocompraimporConstantesFunciones.mostrarFK_IdUnidadDetallePedidoCompraImpor && index>-1) {
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetallePedidoCompraImpor() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdArancelDetallePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarFK_IdArancelDetallePedidoCompraImpor);
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setEnabledAt(index,this.detallepedidocompraimporConstantesFunciones.activarFK_IdArancelDetallePedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdBodegaDetallePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarFK_IdBodegaDetallePedidoCompraImpor);
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setEnabledAt(index,this.detallepedidocompraimporConstantesFunciones.activarFK_IdBodegaDetallePedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdCentroCostoDetallePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarFK_IdCentroCostoDetallePedidoCompraImpor);
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setEnabledAt(index,this.detallepedidocompraimporConstantesFunciones.activarFK_IdCentroCostoDetallePedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarFK_IdPedidoCompraImporDetallePedidoCompraImpor);
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setEnabledAt(index,this.detallepedidocompraimporConstantesFunciones.activarFK_IdPedidoCompraImporDetallePedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdProductoDetallePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarFK_IdProductoDetallePedidoCompraImpor);
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setEnabledAt(index,this.detallepedidocompraimporConstantesFunciones.activarFK_IdProductoDetallePedidoCompraImpor);
			}

			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdUnidadDetallePedidoCompraImpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarFK_IdUnidadDetallePedidoCompraImpor);
				this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setEnabledAt(index,this.detallepedidocompraimporConstantesFunciones.activarFK_IdUnidadDetallePedidoCompraImpor);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetallePedidoCompraImpor(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdArancel")) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdArancelDetallePedidoCompraImpor);

			this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);

			this.detallepedidocompraimporConstantesFunciones.setResaltarFK_IdArancelDetallePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdArancelDetallePedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdBodegaDetallePedidoCompraImpor);

			this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);

			this.detallepedidocompraimporConstantesFunciones.setResaltarFK_IdBodegaDetallePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdBodegaDetallePedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdCentroCostoDetallePedidoCompraImpor);

			this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);

			this.detallepedidocompraimporConstantesFunciones.setResaltarFK_IdCentroCostoDetallePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdCentroCostoDetallePedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPedidoCompraImpor")) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdPedidoCompraImporDetallePedidoCompraImpor);

			this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);

			this.detallepedidocompraimporConstantesFunciones.setResaltarFK_IdPedidoCompraImporDetallePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdPedidoCompraImporDetallePedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdProductoDetallePedidoCompraImpor);

			this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);

			this.detallepedidocompraimporConstantesFunciones.setResaltarFK_IdProductoDetallePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdProductoDetallePedidoCompraImpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetallePedidoCompraImpor.indexOfComponent(this.jPanelFK_IdUnidadDetallePedidoCompraImpor);

			this.jTabbedPaneBusquedasDetallePedidoCompraImpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetallePedidoCompraImpor.getComponent(index);

			this.detallepedidocompraimporConstantesFunciones.setResaltarFK_IdUnidadDetallePedidoCompraImpor(resaltar);

			jPanel.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarFK_IdUnidadDetallePedidoCompraImpor);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetallePedidoCompraImpor.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetallePedidoCompraImpor() throws Exception {

		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetallePedidoCompraImpor();
		this.updateVisibilidadResaltarControlesFormularioDetallePedidoCompraImpor();
		this.updateHabilitarResaltarControlesFormularioDetallePedidoCompraImpor();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetallePedidoCompraImpor() throws Exception {
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detallepedidocompraimporConstantesFunciones.resaltaridDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltaridDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_pedido_compra_imporDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_pedido_compra_imporDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_empresaDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_empresaDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_sucursalDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_sucursalDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_bodegaDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_bodegaDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_productoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_productoDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_unidadDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_unidadDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_ejercicioDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_ejercicioDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_periodoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_periodoDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_arancelDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_arancelDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pedidoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pedidoDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_entraDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_entraDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pendienteDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_pendienteDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarporcentajeDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarporcentajeDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarpesoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarpesoDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarprecioDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarprecioDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarloteDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarloteDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarporcentaje_arancelDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarporcentaje_arancelDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_unidad_auxiliarDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarcantidad_unidad_auxiliarDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarprecio_unidad_auxiliarDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarprecio_unidad_auxiliarDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarfobDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarfobDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarfob_exwDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarfob_exwDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltartotalDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltartotalDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltardescripcionDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltardescripcionDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_centro_costoDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_centro_costoDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_anioDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_anioDetallePedidoCompraImpor);}
		if(this.detallepedidocompraimporConstantesFunciones.resaltarid_mesDetallePedidoCompraImpor!=null && this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setBorder(this.detallepedidocompraimporConstantesFunciones.resaltarid_mesDetallePedidoCompraImpor);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetallePedidoCompraImpor() throws Exception {		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
	
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostraridDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelidDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostraridDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_pedido_compra_imporDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_pedido_compra_imporDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_pedido_compra_imporDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_empresaDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_empresaDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_empresaDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_sucursalDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_sucursalDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_sucursalDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_bodegaDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_bodegaDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_bodegaDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_productoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_productoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_productoDetallePedidoCompraImpor);
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_productoDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_unidadDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_unidadDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_unidadDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_ejercicioDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_ejercicioDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_ejercicioDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_periodoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_periodoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_periodoDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_arancelDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_arancelDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_arancelDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_pedidoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelcantidad_pedidoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_pedidoDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_entraDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelcantidad_entraDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_entraDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_pendienteDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelcantidad_pendienteDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_pendienteDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarporcentajeDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelporcentajeDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarporcentajeDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarpesoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelpesoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarpesoDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarprecioDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelprecioDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarprecioDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarloteDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelloteDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarloteDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarporcentaje_arancelDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelporcentaje_arancelDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarporcentaje_arancelDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_unidad_auxiliarDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelcantidad_unidad_auxiliarDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarcantidad_unidad_auxiliarDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarprecio_unidad_auxiliarDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelprecio_unidad_auxiliarDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarprecio_unidad_auxiliarDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarfobDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelfobDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarfobDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarfob_exwDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelfob_exwDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarfob_exwDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrartotalDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPaneltotalDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrartotalDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrardescripcionDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPaneldescripcionDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrardescripcionDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_centro_costoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_centro_costoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_centro_costoDetallePedidoCompraImpor);
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_centro_costoDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_anioDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_anioDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_anioDetallePedidoCompraImpor);
		//this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_mesDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jPanelid_mesDetallePedidoCompraImpor.setVisible(this.detallepedidocompraimporConstantesFunciones.mostrarid_mesDetallePedidoCompraImpor);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetallePedidoCompraImpor() throws Exception {
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetallePedidoCompraImpor!=null) {
	
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jLabelidDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activaridDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_pedido_compra_imporDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_pedido_compra_imporDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_empresaDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_empresaDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_sucursalDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_sucursalDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_bodegaDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_bodegaDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_productoDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_productoDetallePedidoCompraImpor);
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_productoDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_productoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_unidadDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_unidadDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_ejercicioDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_ejercicioDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_periodoDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_periodoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_arancelDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_arancelDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pedidoDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarcantidad_pedidoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_entraDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarcantidad_entraDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_pendienteDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarcantidad_pendienteDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentajeDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarporcentajeDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldpesoDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarpesoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecioDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarprecioDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldloteDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarloteDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldporcentaje_arancelDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarporcentaje_arancelDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldcantidad_unidad_auxiliarDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarcantidad_unidad_auxiliarDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldprecio_unidad_auxiliarDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarprecio_unidad_auxiliarDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfobDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarfobDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldfob_exwDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarfob_exwDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextFieldtotalDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activartotalDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jTextAreadescripcionDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activardescripcionDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_centro_costoDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_centro_costoDetallePedidoCompraImpor);
			this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jButtonid_centro_costoDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_centro_costoDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_anioDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_anioDetallePedidoCompraImpor);
		this.jInternalFrameDetalleFormDetallePedidoCompraImpor.jComboBoxid_mesDetallePedidoCompraImpor.setEnabled(this.detallepedidocompraimporConstantesFunciones.activarid_mesDetallePedidoCompraImpor);
		}
	}
	
		
}